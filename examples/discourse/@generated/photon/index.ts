import { DMMF, DMMFClass, deepGet, deepSet, makeDocument, Engine, debugLib, transformDocument } from './runtime'

const debug = debugLib('photon')

/**
 * Utility Types
 */


export type Enumerable<T> = T | Array<T>

export type MergeTruthyValues<R extends object, S extends object> = {
  [key in keyof S | keyof R]: key extends false
    ? never
    : key extends keyof S
    ? S[key] extends false
      ? never
      : S[key]
    : key extends keyof R
    ? R[key]
    : never
}

export type CleanupNever<T> = { [key in keyof T]: T[key] extends never ? never : key }[keyof T]

type AtLeastOne<T, Keys extends keyof T = keyof T> =
    Pick<T, Exclude<keyof T, Keys>>
    & {
        [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>
    }[Keys]

type OnlyOne<T, Keys extends keyof T = keyof T> =
    Pick<T, Exclude<keyof T, Keys>>
    & {
        [K in Keys]-?:
            Required<Pick<T, K>>
            & Partial<Record<Exclude<Keys, K>, undefined>>
    }[Keys]

/**
 * Subset
 * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
 */
export type Subset<T, U> = { [key in keyof T]: key extends keyof U ? T[key] : never }

class PhotonFetcher {
  private url?: string
  constructor(private readonly engine: Engine, private readonly debug = false) {}
  async request<T>(query: string, path: string[] = [], rootField?: string, typeName?: string): Promise<T> {
    debug(query)
    const result = await this.engine.request(query, typeName)
    debug(result)
    return this.unpack(result, path, rootField)
  }
  protected unpack(result: any, path: string[], rootField?: string) {
    const getPath: string[] = []
    if (rootField) {
      getPath.push(rootField)
    }
    getPath.push(...path.filter(p => p !== 'select'))
    return deepGet(result, getPath)
  }
}


/**
 * Client
**/




export type Fetcher = (input: {
  query: string
  typeName?: string
}) => Promise<{ data?: any; error?: any; errors?: any }>

export interface PhotonOptions {
  debugEngine?: boolean
  debug?: boolean
  fetcher?: Fetcher
}

export class Photon {
  private fetcher: PhotonFetcher
  private readonly dmmf: DMMFClass
  private readonly engine: Engine
  constructor(options: PhotonOptions = {}) {
    const useDebug = options.debug || false
    if (useDebug) {
      debugLib.enable('photon')
    }
    const debugEngine = options.debugEngine || false
    this.engine = new Engine({

      prismaYmlPath: "/Users/tim/code/photon-js/packages/photon/examples/discourse/prisma.yml",
      debug: debugEngine,
      datamodel: "model ApiKey {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  createdById Int? @map(\"created_by_id\")\n  hidden Boolean\n  key String\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\") @unique\n  @@map(\"api_keys\")\n}\n\nmodel ApplicationRequest {\n  id Int @id\n  count Int\n  date DateTime\n  reqType Int @map(\"req_type\")\n  @@map(\"application_requests\")\n}\n\nmodel ArInternalMetadatum {\n  key String @default(cuid()) @id\n  createdAt DateTime @map(\"created_at\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"ar_internal_metadata\")\n}\n\nmodel Badge {\n  id Int @id\n  allowTitle Boolean @map(\"allow_title\")\n  autoRevoke Boolean @map(\"auto_revoke\")\n  badgeGroupingId Int @map(\"badge_grouping_id\")\n  badgeTypeId Int @map(\"badge_type_id\")\n  createdAt DateTime @map(\"created_at\")\n  description String?\n  enabled Boolean\n  grantCount Int @map(\"grant_count\")\n  icon String?\n  image String?\n  listable Boolean?\n  longDescription String? @map(\"long_description\")\n  multipleGrant Boolean @map(\"multiple_grant\")\n  name String @unique\n  query String?\n  showPosts Boolean @map(\"show_posts\")\n  system Boolean\n  targetPosts Boolean? @map(\"target_posts\")\n  trigger Int?\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"badges\")\n}\n\nmodel BadgeGrouping {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  description String?\n  name String\n  position Int\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"badge_groupings\")\n}\n\nmodel BadgeType {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  name String @unique\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"badge_types\")\n}\n\nmodel Category {\n  id Int @id\n  allowBadges Boolean @map(\"allow_badges\")\n  allTopicsWiki Boolean @map(\"all_topics_wiki\")\n  autoCloseBasedOnLastPost Boolean? @map(\"auto_close_based_on_last_post\")\n  autoCloseHours Float? @map(\"auto_close_hours\")\n  color String\n  containsMessages Boolean? @map(\"contains_messages\")\n  createdAt DateTime @map(\"created_at\")\n  defaultTopPeriod String? @map(\"default_top_period\")\n  defaultView String? @map(\"default_view\")\n  description String?\n  emailIn String? @map(\"email_in\") @unique\n  emailInAllowStrangers Boolean? @map(\"email_in_allow_strangers\")\n  latestPostId Int? @map(\"latest_post_id\")\n  latestTopicId Int? @map(\"latest_topic_id\")\n  mailinglistMirror Boolean @map(\"mailinglist_mirror\")\n  minimumRequiredTags Int? @map(\"minimum_required_tags\")\n  name String @unique\n  nameLower String @map(\"name_lower\")\n  navigateToFirstPostAfterRead Boolean @map(\"navigate_to_first_post_after_read\")\n  numFeaturedTopics Int? @map(\"num_featured_topics\")\n  parentCategoryId Int? @map(\"parent_category_id\")\n  position Int?\n  postCount Int @map(\"post_count\")\n  postsDay Int? @map(\"posts_day\")\n  postsMonth Int? @map(\"posts_month\")\n  postsWeek Int? @map(\"posts_week\")\n  postsYear Int? @map(\"posts_year\")\n  readRestricted Boolean @map(\"read_restricted\")\n  showSubcategoryList Boolean? @map(\"show_subcategory_list\")\n  slug String\n  sortAscending Boolean? @map(\"sort_ascending\")\n  sortOrder String? @map(\"sort_order\")\n  subcategoryListStyle String? @map(\"subcategory_list_style\")\n  suppressFromLatest Boolean? @map(\"suppress_from_latest\")\n  textColor String @map(\"text_color\")\n  topicCount Int @map(\"topic_count\")\n  topicFeaturedLinkAllowed Boolean? @map(\"topic_featured_link_allowed\")\n  topicId Int? @map(\"topic_id\")\n  topicsDay Int? @map(\"topics_day\")\n  topicsMonth Int? @map(\"topics_month\")\n  topicsWeek Int? @map(\"topics_week\")\n  topicsYear Int? @map(\"topics_year\")\n  topicTemplate String? @map(\"topic_template\")\n  updatedAt DateTime @map(\"updated_at\")\n  uploadedBackgroundId Int? @map(\"uploaded_background_id\")\n  uploadedLogoId Int? @map(\"uploaded_logo_id\")\n  userId Int @map(\"user_id\")\n  @@map(\"categories\")\n}\n\nmodel CategoryCustomField {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime @map(\"created_at\")\n  name String\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"category_custom_fields\")\n}\n\nmodel CategoryFeaturedTopic {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime @map(\"created_at\")\n  rank Int\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"category_featured_topics\")\n}\n\nmodel CategoryGroup {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  permissionType Int? @map(\"permission_type\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"category_groups\")\n}\n\nmodel CategorySearchDatum {\n  category_id Int @id\n  locale String?\n  rawData String? @map(\"raw_data\")\n  version Int?\n  @@map(\"category_search_data\")\n}\n\nmodel CategoryTag {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime? @map(\"created_at\")\n  tagId Int @map(\"tag_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"category_tags\")\n}\n\nmodel CategoryTagGroup {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime? @map(\"created_at\")\n  tagGroupId Int @map(\"tag_group_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"category_tag_groups\")\n}\n\nmodel CategoryTagStat {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  tagId Int @map(\"tag_id\")\n  topicCount Int @map(\"topic_count\")\n  @@map(\"category_tag_stats\")\n}\n\nmodel CategoryUser {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  notificationLevel Int @map(\"notification_level\")\n  userId Int @map(\"user_id\")\n  @@map(\"category_users\")\n}\n\nmodel ChildTheme {\n  id Int @id\n  childThemeId Int? @map(\"child_theme_id\")\n  createdAt DateTime? @map(\"created_at\")\n  parentThemeId Int? @map(\"parent_theme_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"child_themes\")\n}\n\nmodel ColorScheme {\n  id Int @id\n  baseSchemeId String? @map(\"base_scheme_id\")\n  createdAt DateTime @map(\"created_at\")\n  name String\n  themeId Int? @map(\"theme_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  version Int\n  viaWizard Boolean @map(\"via_wizard\")\n  @@map(\"color_schemes\")\n}\n\nmodel ColorSchemeColor {\n  id Int @id\n  colorSchemeId Int @map(\"color_scheme_id\")\n  createdAt DateTime @map(\"created_at\")\n  hex String\n  name String\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"color_scheme_colors\")\n}\n\nmodel CustomEmoji {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  name String @unique\n  updatedAt DateTime @map(\"updated_at\")\n  uploadId Int @map(\"upload_id\")\n  @@map(\"custom_emojis\")\n}\n\nmodel Developer {\n  id Int @id\n  userId Int @map(\"user_id\")\n  @@map(\"developers\")\n}\n\nmodel DirectoryItem {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  daysVisited Int @map(\"days_visited\")\n  likesGiven Int @map(\"likes_given\")\n  likesReceived Int @map(\"likes_received\")\n  periodType Int @map(\"period_type\")\n  postCount Int @map(\"post_count\")\n  postsRead Int @map(\"posts_read\")\n  topicCount Int @map(\"topic_count\")\n  topicsEntered Int @map(\"topics_entered\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"directory_items\")\n}\n\nmodel Draft {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  data String\n  draftKey String @map(\"draft_key\")\n  revisions Int\n  sequence Int\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"drafts\")\n}\n\nmodel DraftSequence {\n  id Int @id\n  draftKey String @map(\"draft_key\")\n  sequence Int\n  userId Int @map(\"user_id\")\n  @@map(\"draft_sequences\")\n}\n\nmodel EmailChangeRequest {\n  id Int @id\n  changeState Int @map(\"change_state\")\n  createdAt DateTime @map(\"created_at\")\n  newEmail String @map(\"new_email\")\n  newEmailTokenId Int? @map(\"new_email_token_id\")\n  oldEmail String @map(\"old_email\")\n  oldEmailTokenId Int? @map(\"old_email_token_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"email_change_requests\")\n}\n\nmodel EmailLog {\n  id Int @id\n  bounced Boolean\n  bounceKey String? @map(\"bounce_key\") @default(uuid())\n  createdAt DateTime @map(\"created_at\")\n  emailType String @map(\"email_type\")\n  messageId String? @map(\"message_id\")\n  postId Int? @map(\"post_id\")\n  toAddress String @map(\"to_address\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"email_logs\")\n}\n\nmodel EmailToken {\n  id Int @id\n  confirmed Boolean\n  createdAt DateTime @map(\"created_at\")\n  email String\n  expired Boolean\n  token String @unique\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"email_tokens\")\n}\n\nmodel EmbeddableHost {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  className String? @map(\"class_name\")\n  createdAt DateTime? @map(\"created_at\")\n  host String\n  pathWhitelist String? @map(\"path_whitelist\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"embeddable_hosts\")\n}\n\nmodel FacebookUserInfo {\n  id Int @id\n  aboutMe String? @map(\"about_me\")\n  avatarUrl String? @map(\"avatar_url\")\n  createdAt DateTime @map(\"created_at\")\n  email String?\n  facebookUserId Int @map(\"facebook_user_id\") @unique\n  firstName String? @map(\"first_name\")\n  gender String?\n  lastName String? @map(\"last_name\")\n  link String?\n  location String?\n  name String?\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\") @unique\n  username String?\n  website String?\n  @@map(\"facebook_user_infos\")\n}\n\nmodel GithubUserInfo {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  githubUserId Int @map(\"github_user_id\") @unique\n  screenName String @map(\"screen_name\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\") @unique\n  @@map(\"github_user_infos\")\n}\n\nmodel GoogleUserInfo {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  email String?\n  firstName String? @map(\"first_name\")\n  gender String?\n  googleUserId String @map(\"google_user_id\") @unique\n  lastName String? @map(\"last_name\")\n  link String?\n  name String?\n  picture String?\n  profileLink String? @map(\"profile_link\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\") @unique\n  @@map(\"google_user_infos\")\n}\n\nmodel Group {\n  id Int @id\n  allowMembershipRequests Boolean @map(\"allow_membership_requests\")\n  automatic Boolean\n  automaticMembershipEmailDomains String? @map(\"automatic_membership_email_domains\")\n  automaticMembershipRetroactive Boolean? @map(\"automatic_membership_retroactive\")\n  bioCooked String? @map(\"bio_cooked\")\n  bioRaw String? @map(\"bio_raw\")\n  createdAt DateTime @map(\"created_at\")\n  defaultNotificationLevel Int @map(\"default_notification_level\")\n  flairBgColor String? @map(\"flair_bg_color\")\n  flairColor String? @map(\"flair_color\")\n  flairUrl String? @map(\"flair_url\")\n  fullName String? @map(\"full_name\")\n  grantTrustLevel Int? @map(\"grant_trust_level\")\n  hasMessages Boolean @map(\"has_messages\")\n  incomingEmail String? @map(\"incoming_email\") @unique\n  membershipRequestTemplate String? @map(\"membership_request_template\")\n  mentionableLevel Int? @map(\"mentionable_level\")\n  messageableLevel Int? @map(\"messageable_level\")\n  name String @unique\n  primaryGroup Boolean @map(\"primary_group\")\n  publicAdmission Boolean @map(\"public_admission\")\n  publicExit Boolean @map(\"public_exit\")\n  title String?\n  updatedAt DateTime @map(\"updated_at\")\n  userCount Int @map(\"user_count\")\n  visibilityLevel Int @map(\"visibility_level\")\n  @@map(\"groups\")\n}\n\nmodel GroupArchivedMessage {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"group_archived_messages\")\n}\n\nmodel GroupCustomField {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  name String\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"group_custom_fields\")\n}\n\nmodel GroupHistory {\n  id Int @id\n  actingUserId Int @map(\"acting_user_id\")\n  action Int\n  createdAt DateTime @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  newValue String? @map(\"new_value\")\n  prevValue String? @map(\"prev_value\")\n  subject String?\n  targetUserId Int? @map(\"target_user_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"group_histories\")\n}\n\nmodel GroupMention {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  groupId Int? @map(\"group_id\")\n  postId Int? @map(\"post_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"group_mentions\")\n}\n\nmodel GroupUser {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  notificationLevel Int @map(\"notification_level\")\n  owner Boolean\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"group_users\")\n}\n\nmodel IncomingDomain {\n  id Int @id\n  https Boolean\n  name String\n  port Int\n  @@map(\"incoming_domains\")\n}\n\nmodel IncomingEmail {\n  id Int @id\n  ccAddresses String? @map(\"cc_addresses\")\n  createdAt DateTime @map(\"created_at\")\n  error String?\n  fromAddress String? @map(\"from_address\")\n  isAutoGenerated Boolean? @map(\"is_auto_generated\")\n  isBounce Boolean @map(\"is_bounce\")\n  messageId String? @map(\"message_id\")\n  postId Int? @map(\"post_id\")\n  raw String?\n  rejectionMessage String? @map(\"rejection_message\")\n  subject String?\n  toAddresses String? @map(\"to_addresses\")\n  topicId Int? @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"incoming_emails\")\n}\n\nmodel IncomingLink {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  currentUserId Int? @map(\"current_user_id\")\n  incomingRefererId Int? @map(\"incoming_referer_id\")\n  postId Int @map(\"post_id\")\n  userId Int? @map(\"user_id\")\n  @@map(\"incoming_links\")\n}\n\nmodel IncomingReferer {\n  id Int @id\n  incomingDomainId Int @map(\"incoming_domain_id\")\n  path String\n  @@map(\"incoming_referers\")\n}\n\nmodel InstagramUserInfo {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  instagramUserId Int? @map(\"instagram_user_id\")\n  screenName String? @map(\"screen_name\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"instagram_user_infos\")\n}\n\nmodel Invite {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  customMessage String? @map(\"custom_message\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  email String?\n  invalidatedAt DateTime? @map(\"invalidated_at\")\n  invitedById Int @map(\"invited_by_id\")\n  inviteKey String @map(\"invite_key\") @unique\n  moderator Boolean\n  redeemedAt DateTime? @map(\"redeemed_at\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"invites\")\n}\n\nmodel InvitedGroup {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  groupId Int? @map(\"group_id\")\n  inviteId Int? @map(\"invite_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"invited_groups\")\n}\n\nmodel JavascriptCach {\n  id Int @id\n  content String\n  createdAt DateTime @map(\"created_at\")\n  digest String?\n  themeFieldId Int @map(\"theme_field_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"javascript_caches\")\n}\n\nmodel MessageBus {\n  id Int @id\n  context String?\n  createdAt DateTime @map(\"created_at\")\n  data String?\n  name String?\n  @@map(\"message_bus\")\n}\n\nmodel MutedUser {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  mutedUserId Int @map(\"muted_user_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"muted_users\")\n}\n\nmodel Notification {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  data String\n  notificationType Int @map(\"notification_type\")\n  postActionId Int? @map(\"post_action_id\")\n  postNumber Int? @map(\"post_number\")\n  read Boolean\n  topicId Int? @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"notifications\")\n}\n\nmodel Oauth2UserInfo {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  email String?\n  name String?\n  provider String\n  uid String\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"oauth2_user_infos\")\n}\n\nmodel OnceoffLog {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  jobName String? @map(\"job_name\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"onceoff_logs\")\n}\n\nmodel OptimizedImage {\n  id Int @id\n  extension String\n  filesize Int?\n  height Int\n  sha1 String\n  uploadId Int @map(\"upload_id\")\n  url String\n  width Int\n  @@map(\"optimized_images\")\n}\n\nmodel Permalink {\n  id Int @id\n  categoryId Int? @map(\"category_id\")\n  createdAt DateTime? @map(\"created_at\")\n  externalUrl String? @map(\"external_url\")\n  postId Int? @map(\"post_id\")\n  topicId Int? @map(\"topic_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  url String @unique\n  @@map(\"permalinks\")\n}\n\nmodel PluginStoreRow {\n  id Int @id\n  key String\n  pluginName String @map(\"plugin_name\")\n  typeName String @map(\"type_name\")\n  value String?\n  @@map(\"plugin_store_rows\")\n}\n\nmodel Post {\n  id Int @id\n  actionCode String? @map(\"action_code\")\n  avgTime Int? @map(\"avg_time\")\n  bakedAt DateTime? @map(\"baked_at\")\n  bakedVersion Int? @map(\"baked_version\")\n  bookmarkCount Int @map(\"bookmark_count\")\n  cooked String\n  cookMethod Int @map(\"cook_method\")\n  createdAt DateTime @map(\"created_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  editReason String? @map(\"edit_reason\")\n  hidden Boolean\n  hiddenAt DateTime? @map(\"hidden_at\")\n  hiddenReasonId Int? @map(\"hidden_reason_id\")\n  illegalCount Int @map(\"illegal_count\")\n  imageUrl String? @map(\"image_url\")\n  inappropriateCount Int @map(\"inappropriate_count\")\n  incomingLinkCount Int @map(\"incoming_link_count\")\n  lastEditorId Int? @map(\"last_editor_id\")\n  lastVersionAt DateTime @map(\"last_version_at\")\n  likeCount Int @map(\"like_count\")\n  likeScore Int @map(\"like_score\")\n  lockedById Int? @map(\"locked_by_id\")\n  notifyModeratorsCount Int @map(\"notify_moderators_count\")\n  notifyUserCount Int @map(\"notify_user_count\")\n  offTopicCount Int @map(\"off_topic_count\")\n  percentRank Float? @map(\"percent_rank\")\n  postNumber Int @map(\"post_number\")\n  postType Int @map(\"post_type\")\n  publicVersion Int @map(\"public_version\")\n  quoteCount Int @map(\"quote_count\")\n  raw String\n  rawEmail String? @map(\"raw_email\")\n  reads Int\n  replyCount Int @map(\"reply_count\")\n  replyQuoted Boolean @map(\"reply_quoted\")\n  replyToPostNumber Int? @map(\"reply_to_post_number\")\n  replyToUserId Int? @map(\"reply_to_user_id\")\n  score Float?\n  selfEdits Int @map(\"self_edits\")\n  sortOrder Int? @map(\"sort_order\")\n  spamCount Int @map(\"spam_count\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userDeleted Boolean @map(\"user_deleted\")\n  userId Int? @map(\"user_id\")\n  version Int\n  viaEmail Boolean @map(\"via_email\")\n  wiki Boolean\n  wordCount Int? @map(\"word_count\")\n  @@map(\"posts\")\n}\n\nmodel PostAction {\n  id Int @id\n  agreedAt DateTime? @map(\"agreed_at\")\n  agreedById Int? @map(\"agreed_by_id\")\n  createdAt DateTime @map(\"created_at\")\n  deferredAt DateTime? @map(\"deferred_at\")\n  deferredById Int? @map(\"deferred_by_id\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  disagreedAt DateTime? @map(\"disagreed_at\")\n  disagreedById Int? @map(\"disagreed_by_id\")\n  postActionTypeId Int @map(\"post_action_type_id\")\n  postId Int @map(\"post_id\")\n  relatedPostId Int? @map(\"related_post_id\")\n  staffTookAction Boolean @map(\"staff_took_action\")\n  targetsTopic Boolean @map(\"targets_topic\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"post_actions\")\n}\n\nmodel PostActionType {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  icon String?\n  isFlag Boolean @map(\"is_flag\")\n  nameKey String @map(\"name_key\")\n  position Int\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"post_action_types\")\n}\n\nmodel PostCustomField {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  name String\n  postId Int @map(\"post_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"post_custom_fields\")\n}\n\nmodel PostDetail {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  extra String?\n  key String?\n  postId Int? @map(\"post_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"post_details\")\n}\n\nmodel PostReplyKey {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  postId Int @map(\"post_id\")\n  replyKey String @map(\"reply_key\") @default(uuid()) @unique\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"post_reply_keys\")\n}\n\nmodel PostRevision {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  hidden Boolean\n  modifications String?\n  number Int?\n  postId Int? @map(\"post_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"post_revisions\")\n}\n\nmodel PostSearchDatum {\n  post_id Int @id\n  locale String?\n  rawData String? @map(\"raw_data\")\n  version Int?\n  @@map(\"post_search_data\")\n}\n\nmodel PostStat {\n  id Int @id\n  composerOpenDurationMsecs Int? @map(\"composer_open_duration_msecs\")\n  createdAt DateTime? @map(\"created_at\")\n  draftsSaved Int? @map(\"drafts_saved\")\n  postId Int? @map(\"post_id\")\n  typingDurationMsecs Int? @map(\"typing_duration_msecs\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"post_stats\")\n}\n\nmodel PostUpload {\n  id Int @id\n  postId Int @map(\"post_id\")\n  uploadId Int @map(\"upload_id\")\n  @@map(\"post_uploads\")\n}\n\nmodel PushSubscription {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  data String\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"push_subscriptions\")\n}\n\nmodel QueuedPost {\n  id Int @id\n  approvedAt DateTime? @map(\"approved_at\")\n  approvedById Int? @map(\"approved_by_id\")\n  createdAt DateTime? @map(\"created_at\")\n  queue String\n  raw String\n  rejectedAt DateTime? @map(\"rejected_at\")\n  rejectedById Int? @map(\"rejected_by_id\")\n  state Int\n  topicId Int? @map(\"topic_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"queued_posts\")\n}\n\nmodel QuotedPost {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  postId Int @map(\"post_id\")\n  quotedPostId Int @map(\"quoted_post_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"quoted_posts\")\n}\n\nmodel RemoteTheme {\n  id Int @id\n  aboutUrl String? @map(\"about_url\")\n  branch String?\n  commitsBehind Int? @map(\"commits_behind\")\n  createdAt DateTime? @map(\"created_at\")\n  lastErrorText String? @map(\"last_error_text\")\n  licenseUrl String? @map(\"license_url\")\n  localVersion String? @map(\"local_version\")\n  privateKey String? @map(\"private_key\")\n  remoteUpdatedAt DateTime? @map(\"remote_updated_at\")\n  remoteUrl String @map(\"remote_url\")\n  remoteVersion String? @map(\"remote_version\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"remote_themes\")\n}\n\nmodel SchedulerStat {\n  id Int @id\n  durationMs Int? @map(\"duration_ms\")\n  error String?\n  hostname String\n  liveSlotsFinish Int? @map(\"live_slots_finish\")\n  liveSlotsStart Int? @map(\"live_slots_start\")\n  name String\n  pid Int\n  startedAt DateTime @map(\"started_at\")\n  success Boolean?\n  @@map(\"scheduler_stats\")\n}\n\nmodel SchemaMigration {\n  version String @default(cuid()) @id @unique\n  @@map(\"schema_migrations\")\n}\n\nmodel SchemaMigrationDetail {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  direction String?\n  duration Int?\n  gitVersion String? @map(\"git_version\")\n  hostname String?\n  name String?\n  railsVersion String? @map(\"rails_version\")\n  version String\n  @@map(\"schema_migration_details\")\n}\n\nmodel ScreenedEmail {\n  id Int @id\n  actionType Int @map(\"action_type\")\n  createdAt DateTime @map(\"created_at\")\n  email String @unique\n  lastMatchAt DateTime? @map(\"last_match_at\")\n  matchCount Int @map(\"match_count\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"screened_emails\")\n}\n\nmodel ScreenedIpAddress {\n  id Int @id\n  actionType Int @map(\"action_type\")\n  createdAt DateTime @map(\"created_at\")\n  lastMatchAt DateTime? @map(\"last_match_at\")\n  matchCount Int @map(\"match_count\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"screened_ip_addresses\")\n}\n\nmodel ScreenedUrl {\n  id Int @id\n  actionType Int @map(\"action_type\")\n  createdAt DateTime @map(\"created_at\")\n  domain String\n  lastMatchAt DateTime? @map(\"last_match_at\")\n  matchCount Int @map(\"match_count\")\n  updatedAt DateTime @map(\"updated_at\")\n  url String @unique\n  @@map(\"screened_urls\")\n}\n\nmodel SearchLog {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  searchResultId Int? @map(\"search_result_id\")\n  searchResultType Int? @map(\"search_result_type\")\n  searchType Int @map(\"search_type\")\n  term String\n  userId Int? @map(\"user_id\")\n  @@map(\"search_logs\")\n}\n\nmodel SharedDraft {\n  id Int @id\n  categoryId Int @map(\"category_id\")\n  createdAt DateTime @map(\"created_at\")\n  topicId Int @map(\"topic_id\") @unique\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"shared_drafts\")\n}\n\nmodel SingleSignOnRecord {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  externalAvatarUrl String? @map(\"external_avatar_url\")\n  externalCardBackgroundUrl String? @map(\"external_card_background_url\")\n  externalEmail String? @map(\"external_email\")\n  externalId String @map(\"external_id\") @unique\n  externalName String? @map(\"external_name\")\n  externalProfileBackgroundUrl String? @map(\"external_profile_background_url\")\n  externalUsername String? @map(\"external_username\")\n  lastPayload String @map(\"last_payload\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"single_sign_on_records\")\n}\n\nmodel SiteSetting {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  dataType Int @map(\"data_type\")\n  name String\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"site_settings\")\n}\n\nmodel SkippedEmailLog {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  customReason String? @map(\"custom_reason\")\n  emailType String @map(\"email_type\")\n  postId Int? @map(\"post_id\")\n  reasonType Int @map(\"reason_type\")\n  toAddress String @map(\"to_address\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"skipped_email_logs\")\n}\n\nmodel StylesheetCache {\n  id Int @id\n  content String\n  createdAt DateTime? @map(\"created_at\")\n  digest String\n  sourceMap String? @map(\"source_map\")\n  target String\n  themeId Int @map(\"theme_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"stylesheet_cache\")\n}\n\nmodel Tag {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  name String @unique\n  pmTopicCount Int @map(\"pm_topic_count\")\n  topicCount Int @map(\"topic_count\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"tags\")\n}\n\nmodel TagGroup {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  name String\n  onePerTopic Boolean? @map(\"one_per_topic\")\n  parentTagId Int? @map(\"parent_tag_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"tag_groups\")\n}\n\nmodel TagGroupMembership {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  tagGroupId Int @map(\"tag_group_id\")\n  tagId Int @map(\"tag_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"tag_group_memberships\")\n}\n\nmodel TagGroupPermission {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  groupId Int @map(\"group_id\")\n  permissionType Int @map(\"permission_type\")\n  tagGroupId Int @map(\"tag_group_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"tag_group_permissions\")\n}\n\nmodel TagSearchDatum {\n  tag_id Int @id\n  locale String?\n  rawData String? @map(\"raw_data\")\n  version Int?\n  @@map(\"tag_search_data\")\n}\n\nmodel TagUser {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  notificationLevel Int @map(\"notification_level\")\n  tagId Int @map(\"tag_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"tag_users\")\n}\n\nmodel Theme {\n  id Int @id\n  colorSchemeId Int? @map(\"color_scheme_id\")\n  compilerVersion Int @map(\"compiler_version\")\n  component Boolean\n  createdAt DateTime @map(\"created_at\")\n  hidden Boolean\n  name String\n  remoteThemeId Int? @map(\"remote_theme_id\") @unique\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  userSelectable Boolean @map(\"user_selectable\")\n  @@map(\"themes\")\n}\n\nmodel ThemeField {\n  id Int @id\n  compilerVersion Int @map(\"compiler_version\")\n  createdAt DateTime? @map(\"created_at\")\n  error String?\n  name String\n  targetId Int @map(\"target_id\")\n  themeId Int @map(\"theme_id\")\n  typeId Int @map(\"type_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  uploadId Int? @map(\"upload_id\")\n  value String\n  valueBaked String? @map(\"value_baked\")\n  @@map(\"theme_fields\")\n}\n\nmodel ThemeSetting {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  dataType Int @map(\"data_type\")\n  name String\n  themeId Int @map(\"theme_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"theme_settings\")\n}\n\nmodel TopTopic {\n  id Int @id\n  allScore Float? @map(\"all_score\")\n  dailyLikesCount Int @map(\"daily_likes_count\")\n  dailyOpLikesCount Int @map(\"daily_op_likes_count\")\n  dailyPostsCount Int @map(\"daily_posts_count\")\n  dailyScore Float? @map(\"daily_score\")\n  dailyViewsCount Int @map(\"daily_views_count\")\n  monthlyLikesCount Int @map(\"monthly_likes_count\")\n  monthlyOpLikesCount Int @map(\"monthly_op_likes_count\")\n  monthlyPostsCount Int @map(\"monthly_posts_count\")\n  monthlyScore Float? @map(\"monthly_score\")\n  monthlyViewsCount Int @map(\"monthly_views_count\")\n  quarterlyLikesCount Int @map(\"quarterly_likes_count\")\n  quarterlyOpLikesCount Int @map(\"quarterly_op_likes_count\")\n  quarterlyPostsCount Int @map(\"quarterly_posts_count\")\n  quarterlyScore Float? @map(\"quarterly_score\")\n  quarterlyViewsCount Int @map(\"quarterly_views_count\")\n  topicId Int? @map(\"topic_id\") @unique\n  weeklyLikesCount Int @map(\"weekly_likes_count\")\n  weeklyOpLikesCount Int @map(\"weekly_op_likes_count\")\n  weeklyPostsCount Int @map(\"weekly_posts_count\")\n  weeklyScore Float? @map(\"weekly_score\")\n  weeklyViewsCount Int @map(\"weekly_views_count\")\n  yearlyLikesCount Int @map(\"yearly_likes_count\")\n  yearlyOpLikesCount Int @map(\"yearly_op_likes_count\")\n  yearlyPostsCount Int @map(\"yearly_posts_count\")\n  yearlyScore Float? @map(\"yearly_score\")\n  yearlyViewsCount Int @map(\"yearly_views_count\")\n  @@map(\"top_topics\")\n}\n\nmodel Topic {\n  id Int @id\n  archetype String\n  archived Boolean\n  avgTime Int? @map(\"avg_time\")\n  bumpedAt DateTime @map(\"bumped_at\")\n  categoryId Int? @map(\"category_id\")\n  closed Boolean\n  createdAt DateTime @map(\"created_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  excerpt String?\n  fancyTitle String? @map(\"fancy_title\")\n  featuredLink String? @map(\"featured_link\")\n  featuredUser1Id Int? @map(\"featured_user1_id\")\n  featuredUser2Id Int? @map(\"featured_user2_id\")\n  featuredUser3Id Int? @map(\"featured_user3_id\")\n  featuredUser4Id Int? @map(\"featured_user4_id\")\n  hasSummary Boolean @map(\"has_summary\")\n  highestPostNumber Int @map(\"highest_post_number\")\n  highestStaffPostNumber Int @map(\"highest_staff_post_number\")\n  imageUrl String? @map(\"image_url\")\n  incomingLinkCount Int @map(\"incoming_link_count\")\n  lastPostedAt DateTime? @map(\"last_posted_at\")\n  lastPostUserId Int @map(\"last_post_user_id\")\n  likeCount Int @map(\"like_count\")\n  moderatorPostsCount Int @map(\"moderator_posts_count\")\n  notifyModeratorsCount Int @map(\"notify_moderators_count\")\n  participantCount Int? @map(\"participant_count\")\n  percentRank Float @map(\"percent_rank\")\n  pinnedAt DateTime? @map(\"pinned_at\")\n  pinnedGlobally Boolean @map(\"pinned_globally\")\n  pinnedUntil DateTime? @map(\"pinned_until\")\n  postsCount Int @map(\"posts_count\")\n  replyCount Int @map(\"reply_count\")\n  score Float?\n  slug String?\n  spamCount Int @map(\"spam_count\")\n  subtype String?\n  title String\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  views Int\n  visible Boolean\n  wordCount Int? @map(\"word_count\")\n  @@map(\"topics\")\n}\n\nmodel TopicAllowedGroup {\n  id Int @id\n  groupId Int @map(\"group_id\")\n  topicId Int @map(\"topic_id\")\n  @@map(\"topic_allowed_groups\")\n}\n\nmodel TopicAllowedUser {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"topic_allowed_users\")\n}\n\nmodel TopicCustomField {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  name String\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String?\n  @@map(\"topic_custom_fields\")\n}\n\nmodel TopicEmbed {\n  id Int @id\n  contentSha1 String? @map(\"content_sha1\")\n  createdAt DateTime @map(\"created_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  embedUrl String @map(\"embed_url\") @unique\n  postId Int @map(\"post_id\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"topic_embeds\")\n}\n\nmodel TopicInvite {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  inviteId Int @map(\"invite_id\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"topic_invites\")\n}\n\nmodel TopicLink {\n  id Int @id\n  clicks Int\n  crawledAt DateTime? @map(\"crawled_at\")\n  createdAt DateTime @map(\"created_at\")\n  domain String\n  extension String?\n  internal Boolean\n  linkPostId Int? @map(\"link_post_id\")\n  linkTopicId Int? @map(\"link_topic_id\")\n  postId Int? @map(\"post_id\")\n  quote Boolean\n  reflection Boolean?\n  title String?\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  url String\n  userId Int @map(\"user_id\")\n  @@map(\"topic_links\")\n}\n\nmodel TopicLinkClick {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  topicLinkId Int @map(\"topic_link_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int? @map(\"user_id\")\n  @@map(\"topic_link_clicks\")\n}\n\nmodel TopicSearchDatum {\n  topic_id Int @id\n  locale String\n  rawData String? @map(\"raw_data\")\n  version Int?\n  @@map(\"topic_search_data\")\n}\n\nmodel TopicTag {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  tagId Int @map(\"tag_id\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"topic_tags\")\n}\n\nmodel TopicTimer {\n  id Int @id\n  basedOnLastPost Boolean @map(\"based_on_last_post\")\n  categoryId Int? @map(\"category_id\")\n  createdAt DateTime? @map(\"created_at\")\n  deletedAt DateTime? @map(\"deleted_at\")\n  deletedById Int? @map(\"deleted_by_id\")\n  executeAt DateTime @map(\"execute_at\")\n  publicType Boolean? @map(\"public_type\")\n  statusType Int @map(\"status_type\")\n  topicId Int @map(\"topic_id\") @unique\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"topic_timers\")\n}\n\nmodel TopicUser {\n  id Int @id\n  bookmarked Boolean?\n  clearedPinnedAt DateTime? @map(\"cleared_pinned_at\")\n  firstVisitedAt DateTime? @map(\"first_visited_at\")\n  highestSeenPostNumber Int? @map(\"highest_seen_post_number\")\n  lastEmailedPostNumber Int? @map(\"last_emailed_post_number\")\n  lastReadPostNumber Int? @map(\"last_read_post_number\")\n  lastVisitedAt DateTime? @map(\"last_visited_at\")\n  liked Boolean?\n  notificationLevel Int @map(\"notification_level\")\n  notificationsChangedAt DateTime? @map(\"notifications_changed_at\")\n  notificationsReasonId Int? @map(\"notifications_reason_id\")\n  posted Boolean\n  topicId Int @map(\"topic_id\")\n  totalMsecsViewed Int @map(\"total_msecs_viewed\")\n  userId Int @map(\"user_id\")\n  @@map(\"topic_users\")\n}\n\nmodel TranslationOverride {\n  id Int @id\n  compiledJs String? @map(\"compiled_js\")\n  createdAt DateTime @map(\"created_at\")\n  locale String\n  translationKey String @map(\"translation_key\")\n  updatedAt DateTime @map(\"updated_at\")\n  value String\n  @@map(\"translation_overrides\")\n}\n\nmodel TwitterUserInfo {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  email String?\n  screenName String @map(\"screen_name\")\n  twitterUserId Int @map(\"twitter_user_id\") @unique\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\") @unique\n  @@map(\"twitter_user_infos\")\n}\n\nmodel UnsubscribeKey {\n  key String @default(cuid()) @id\n  createdAt DateTime? @map(\"created_at\")\n  postId Int? @map(\"post_id\")\n  topicId Int? @map(\"topic_id\")\n  unsubscribeKeyType String? @map(\"unsubscribe_key_type\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"unsubscribe_keys\")\n}\n\nmodel Upload {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  extension String?\n  filesize Int\n  height Int?\n  origin String?\n  originalFilename String @map(\"original_filename\")\n  retainHours Int? @map(\"retain_hours\")\n  sha1 String? @unique\n  thumbnailHeight Int? @map(\"thumbnail_height\")\n  thumbnailWidth Int? @map(\"thumbnail_width\")\n  updatedAt DateTime @map(\"updated_at\")\n  url String\n  userId Int @map(\"user_id\")\n  width Int?\n  @@map(\"uploads\")\n}\n\nmodel User {\n  id Int @id\n  active Boolean\n  admin Boolean\n  approved Boolean\n  approvedAt DateTime? @map(\"approved_at\")\n  approvedById Int? @map(\"approved_by_id\")\n  createdAt DateTime @map(\"created_at\")\n  dateOfBirth DateTime? @map(\"date_of_birth\")\n  firstSeenAt DateTime? @map(\"first_seen_at\")\n  flagLevel Int @map(\"flag_level\")\n  groupLockedTrustLevel Int? @map(\"group_locked_trust_level\")\n  lastEmailedAt DateTime? @map(\"last_emailed_at\")\n  lastPostedAt DateTime? @map(\"last_posted_at\")\n  lastSeenAt DateTime? @map(\"last_seen_at\")\n  locale String?\n  manualLockedTrustLevel Int? @map(\"manual_locked_trust_level\")\n  moderator Boolean?\n  name String?\n  passwordHash String? @map(\"password_hash\")\n  previousVisitAt DateTime? @map(\"previous_visit_at\")\n  primaryGroupId Int? @map(\"primary_group_id\")\n  salt String?\n  seenNotificationId Int @map(\"seen_notification_id\")\n  silencedTill DateTime? @map(\"silenced_till\")\n  staged Boolean\n  suspendedAt DateTime? @map(\"suspended_at\")\n  suspendedTill DateTime? @map(\"suspended_till\")\n  title String?\n  trustLevel Int @map(\"trust_level\")\n  updatedAt DateTime @map(\"updated_at\")\n  uploadedAvatarId Int? @map(\"uploaded_avatar_id\")\n  username String @unique\n  usernameLower String @map(\"username_lower\") @unique\n  views Int\n  @@map(\"users\")\n}\n\nmodel UserAction {\n  id Int @id\n  actingUserId Int? @map(\"acting_user_id\")\n  actionType Int @map(\"action_type\")\n  createdAt DateTime @map(\"created_at\")\n  queuedPostId Int? @map(\"queued_post_id\")\n  targetPostId Int? @map(\"target_post_id\")\n  targetTopicId Int? @map(\"target_topic_id\")\n  targetUserId Int? @map(\"target_user_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_actions\")\n}\n\nmodel UserApiKey {\n  id Int @id\n  applicationName String @map(\"application_name\")\n  clientId String @map(\"client_id\") @unique\n  createdAt DateTime? @map(\"created_at\")\n  key String @unique\n  lastUsedAt DateTime @map(\"last_used_at\")\n  pushUrl String? @map(\"push_url\")\n  revokedAt DateTime? @map(\"revoked_at\")\n  scopes String\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_api_keys\")\n}\n\nmodel UserArchivedMessage {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  topicId Int @map(\"topic_id\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_archived_messages\")\n}\n\nmodel UserAuthToken {\n  id Int @id\n  authToken String @map(\"auth_token\") @unique\n  authTokenSeen Boolean @map(\"auth_token_seen\")\n  createdAt DateTime? @map(\"created_at\")\n  prevAuthToken String @map(\"prev_auth_token\") @unique\n  rotatedAt DateTime @map(\"rotated_at\")\n  seenAt DateTime? @map(\"seen_at\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userAgent String? @map(\"user_agent\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_auth_tokens\")\n}\n\nmodel UserAuthTokenLog {\n  id Int @id\n  action String\n  authToken String? @map(\"auth_token\")\n  createdAt DateTime? @map(\"created_at\")\n  path String?\n  userAgent String? @map(\"user_agent\")\n  userAuthTokenId Int? @map(\"user_auth_token_id\")\n  userId Int? @map(\"user_id\")\n  @@map(\"user_auth_token_logs\")\n}\n\nmodel UserAvatar {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  customUploadId Int? @map(\"custom_upload_id\")\n  gravatarUploadId Int? @map(\"gravatar_upload_id\")\n  lastGravatarDownloadAttempt DateTime? @map(\"last_gravatar_download_attempt\")\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_avatars\")\n}\n\nmodel UserBadge {\n  id Int @id\n  badgeId Int @map(\"badge_id\")\n  grantedAt DateTime @map(\"granted_at\")\n  grantedById Int @map(\"granted_by_id\")\n  notificationId Int? @map(\"notification_id\")\n  postId Int? @map(\"post_id\")\n  seq Int\n  userId Int @map(\"user_id\")\n  @@map(\"user_badges\")\n}\n\nmodel UserCustomField {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  name String\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  value String?\n  @@map(\"user_custom_fields\")\n}\n\nmodel UserEmail {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  email String\n  primary Boolean\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_emails\")\n}\n\nmodel UserExport {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  fileName String @map(\"file_name\")\n  updatedAt DateTime? @map(\"updated_at\")\n  uploadId Int? @map(\"upload_id\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_exports\")\n}\n\nmodel UserField {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  description String\n  editable Boolean\n  externalName String? @map(\"external_name\")\n  externalType String? @map(\"external_type\")\n  fieldType String @map(\"field_type\")\n  name String\n  position Int?\n  required Boolean\n  showOnProfile Boolean @map(\"show_on_profile\")\n  showOnUserCard Boolean @map(\"show_on_user_card\")\n  updatedAt DateTime? @map(\"updated_at\")\n  @@map(\"user_fields\")\n}\n\nmodel UserFieldOption {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  updatedAt DateTime? @map(\"updated_at\")\n  userFieldId Int @map(\"user_field_id\")\n  value String\n  @@map(\"user_field_options\")\n}\n\nmodel UserHistory {\n  id Int @id\n  actingUserId Int? @map(\"acting_user_id\")\n  action Int\n  adminOnly Boolean? @map(\"admin_only\")\n  categoryId Int? @map(\"category_id\")\n  context String?\n  createdAt DateTime @map(\"created_at\")\n  customType String? @map(\"custom_type\")\n  details String?\n  email String?\n  ipAddress String? @map(\"ip_address\")\n  newValue String? @map(\"new_value\")\n  postId Int? @map(\"post_id\")\n  previousValue String? @map(\"previous_value\")\n  subject String?\n  targetUserId Int? @map(\"target_user_id\")\n  topicId Int? @map(\"topic_id\")\n  updatedAt DateTime @map(\"updated_at\")\n  @@map(\"user_histories\")\n}\n\nmodel UserOpenId {\n  id Int @id\n  active Boolean\n  createdAt DateTime @map(\"created_at\")\n  email String\n  updatedAt DateTime @map(\"updated_at\")\n  url String\n  userId Int @map(\"user_id\")\n  @@map(\"user_open_ids\")\n}\n\nmodel UserOption {\n  user_id Int @id @unique\n  allowPrivateMessages Boolean @map(\"allow_private_messages\")\n  automaticallyUnpinTopics Boolean @map(\"automatically_unpin_topics\")\n  autoTrackTopicsAfterMsecs Int? @map(\"auto_track_topics_after_msecs\")\n  digestAfterMinutes Int? @map(\"digest_after_minutes\")\n  disableJumpReply Boolean @map(\"disable_jump_reply\")\n  dynamicFavicon Boolean @map(\"dynamic_favicon\")\n  emailAlways Boolean @map(\"email_always\")\n  emailDigests Boolean? @map(\"email_digests\")\n  emailDirect Boolean @map(\"email_direct\")\n  emailInReplyTo Boolean @map(\"email_in_reply_to\")\n  emailPreviousReplies Int @map(\"email_previous_replies\")\n  emailPrivateMessages Boolean @map(\"email_private_messages\")\n  enableQuoting Boolean @map(\"enable_quoting\")\n  externalLinksInNewTab Boolean @map(\"external_links_in_new_tab\")\n  hideProfileAndPresence Boolean @map(\"hide_profile_and_presence\")\n  homepageId Int? @map(\"homepage_id\")\n  includeTl0InDigests Boolean? @map(\"include_tl0_in_digests\")\n  lastRedirectedToTopAt DateTime? @map(\"last_redirected_to_top_at\")\n  likeNotificationFrequency Int @map(\"like_notification_frequency\")\n  mailingListMode Boolean @map(\"mailing_list_mode\")\n  mailingListModeFrequency Int @map(\"mailing_list_mode_frequency\")\n  newTopicDurationMinutes Int? @map(\"new_topic_duration_minutes\")\n  notificationLevelWhenReplying Int? @map(\"notification_level_when_replying\")\n  themeIds Int @map(\"theme_ids\")\n  themeKeySeq Int @map(\"theme_key_seq\")\n  @@map(\"user_options\")\n}\n\nmodel UserProfile {\n  user_id Int @id\n  badgeGrantedTitle Boolean? @map(\"badge_granted_title\")\n  bioCooked String? @map(\"bio_cooked\")\n  bioCookedVersion Int? @map(\"bio_cooked_version\")\n  bioRaw String? @map(\"bio_raw\")\n  cardBackground String? @map(\"card_background\")\n  dismissedBannerKey Int? @map(\"dismissed_banner_key\")\n  location String?\n  profileBackground String? @map(\"profile_background\")\n  views Int\n  website String?\n  @@map(\"user_profiles\")\n}\n\nmodel UserProfileView {\n  id Int @id\n  userId Int? @map(\"user_id\")\n  userProfileId Int @map(\"user_profile_id\")\n  viewedAt DateTime @map(\"viewed_at\")\n  @@map(\"user_profile_views\")\n}\n\nmodel UserSearchDatum {\n  user_id Int @id\n  locale String?\n  rawData String? @map(\"raw_data\")\n  version Int?\n  @@map(\"user_search_data\")\n}\n\nmodel UserSecondFactor {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  data String\n  enabled Boolean\n  lastUsed DateTime? @map(\"last_used\")\n  method Int\n  updatedAt DateTime @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_second_factors\")\n}\n\nmodel UserStat {\n  user_id Int @id\n  bounceScore Float @map(\"bounce_score\")\n  daysVisited Int @map(\"days_visited\")\n  firstPostCreatedAt DateTime? @map(\"first_post_created_at\")\n  likesGiven Int @map(\"likes_given\")\n  likesReceived Int @map(\"likes_received\")\n  newSince DateTime @map(\"new_since\")\n  postCount Int @map(\"post_count\")\n  postsReadCount Int @map(\"posts_read_count\")\n  readFaq DateTime? @map(\"read_faq\")\n  resetBounceScoreAfter DateTime? @map(\"reset_bounce_score_after\")\n  timeRead Int @map(\"time_read\")\n  topicCount Int @map(\"topic_count\")\n  topicReplyCount Int @map(\"topic_reply_count\")\n  topicsEntered Int @map(\"topics_entered\")\n  @@map(\"user_stats\")\n}\n\nmodel UserUpload {\n  id Int @id\n  createdAt DateTime @map(\"created_at\")\n  uploadId Int @map(\"upload_id\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_uploads\")\n}\n\nmodel UserVisit {\n  id Int @id\n  mobile Boolean?\n  postsRead Int? @map(\"posts_read\")\n  timeRead Int @map(\"time_read\")\n  userId Int @map(\"user_id\")\n  visitedAt DateTime @map(\"visited_at\")\n  @@map(\"user_visits\")\n}\n\nmodel UserWarning {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  createdById Int @map(\"created_by_id\")\n  topicId Int @map(\"topic_id\") @unique\n  updatedAt DateTime? @map(\"updated_at\")\n  userId Int @map(\"user_id\")\n  @@map(\"user_warnings\")\n}\n\nmodel WatchedWord {\n  id Int @id\n  action Int\n  createdAt DateTime? @map(\"created_at\")\n  updatedAt DateTime? @map(\"updated_at\")\n  word String\n  @@map(\"watched_words\")\n}\n\nmodel WebCrawlerRequest {\n  id Int @id\n  count Int\n  date DateTime\n  userAgent String @map(\"user_agent\")\n  @@map(\"web_crawler_requests\")\n}\n\nmodel WebHook {\n  id Int @id\n  active Boolean\n  contentType Int @map(\"content_type\")\n  createdAt DateTime? @map(\"created_at\")\n  lastDeliveryStatus Int @map(\"last_delivery_status\")\n  payloadUrl String @map(\"payload_url\")\n  secret String?\n  status Int\n  updatedAt DateTime? @map(\"updated_at\")\n  verifyCertificate Boolean @map(\"verify_certificate\")\n  wildcardWebHook Boolean @map(\"wildcard_web_hook\")\n  @@map(\"web_hooks\")\n}\n\nmodel WebHookEvent {\n  id Int @id\n  createdAt DateTime? @map(\"created_at\")\n  duration Int?\n  headers String?\n  payload String?\n  responseBody String? @map(\"response_body\")\n  responseHeaders String? @map(\"response_headers\")\n  status Int?\n  updatedAt DateTime? @map(\"updated_at\")\n  webHookId Int @map(\"web_hook_id\")\n  @@map(\"web_hook_events\")\n}\n\nmodel WebHookEventType {\n  id Int @id\n  name String\n  @@map(\"web_hook_event_types\")\n}",
      prismaConfig: "databases:\n  default:\n    connector: postgres-native\n    host: discourse.cptcxgmtr5l1.eu-west-2.rds.amazonaws.com\n    port: 5432\n    user: discourse\n    password: mYDHgdJKcXnBPa73jUxQ\n    database: discourse\n    rawAccess: true\n    schema: public\n",

    })
    this.dmmf = new DMMFClass(dmmf)
    this.fetcher = new PhotonFetcher(this.engine)
  }
  async connect() {
    // TODO: Provide autoConnect: false option so that this is even needed
    await this.engine.startPromise
  }
  async close() {
    this.engine.stop()
  }
  private _query?: QueryDelegate
  get query(): QueryDelegate {
    return this._query ? this._query: (this._query = QueryDelegate(this.dmmf, this.fetcher))
  }
  private _apiKeys?: ApiKeyDelegate
  get apiKeys(): ApiKeyDelegate {
    this.connect()
    return this._apiKeys? this._apiKeys : (this._apiKeys = ApiKeyDelegate(this.dmmf, this.fetcher))
  }
  private _applicationRequests?: ApplicationRequestDelegate
  get applicationRequests(): ApplicationRequestDelegate {
    this.connect()
    return this._applicationRequests? this._applicationRequests : (this._applicationRequests = ApplicationRequestDelegate(this.dmmf, this.fetcher))
  }
  private _arInternalMetadata?: ArInternalMetadatumDelegate
  get arInternalMetadata(): ArInternalMetadatumDelegate {
    this.connect()
    return this._arInternalMetadata? this._arInternalMetadata : (this._arInternalMetadata = ArInternalMetadatumDelegate(this.dmmf, this.fetcher))
  }
  private _badges?: BadgeDelegate
  get badges(): BadgeDelegate {
    this.connect()
    return this._badges? this._badges : (this._badges = BadgeDelegate(this.dmmf, this.fetcher))
  }
  private _badgeGroupings?: BadgeGroupingDelegate
  get badgeGroupings(): BadgeGroupingDelegate {
    this.connect()
    return this._badgeGroupings? this._badgeGroupings : (this._badgeGroupings = BadgeGroupingDelegate(this.dmmf, this.fetcher))
  }
  private _badgeTypes?: BadgeTypeDelegate
  get badgeTypes(): BadgeTypeDelegate {
    this.connect()
    return this._badgeTypes? this._badgeTypes : (this._badgeTypes = BadgeTypeDelegate(this.dmmf, this.fetcher))
  }
  private _categories?: CategoryDelegate
  get categories(): CategoryDelegate {
    this.connect()
    return this._categories? this._categories : (this._categories = CategoryDelegate(this.dmmf, this.fetcher))
  }
  private _categoryCustomFields?: CategoryCustomFieldDelegate
  get categoryCustomFields(): CategoryCustomFieldDelegate {
    this.connect()
    return this._categoryCustomFields? this._categoryCustomFields : (this._categoryCustomFields = CategoryCustomFieldDelegate(this.dmmf, this.fetcher))
  }
  private _categoryFeaturedTopics?: CategoryFeaturedTopicDelegate
  get categoryFeaturedTopics(): CategoryFeaturedTopicDelegate {
    this.connect()
    return this._categoryFeaturedTopics? this._categoryFeaturedTopics : (this._categoryFeaturedTopics = CategoryFeaturedTopicDelegate(this.dmmf, this.fetcher))
  }
  private _categoryGroups?: CategoryGroupDelegate
  get categoryGroups(): CategoryGroupDelegate {
    this.connect()
    return this._categoryGroups? this._categoryGroups : (this._categoryGroups = CategoryGroupDelegate(this.dmmf, this.fetcher))
  }
  private _categorySearchData?: CategorySearchDatumDelegate
  get categorySearchData(): CategorySearchDatumDelegate {
    this.connect()
    return this._categorySearchData? this._categorySearchData : (this._categorySearchData = CategorySearchDatumDelegate(this.dmmf, this.fetcher))
  }
  private _categoryTags?: CategoryTagDelegate
  get categoryTags(): CategoryTagDelegate {
    this.connect()
    return this._categoryTags? this._categoryTags : (this._categoryTags = CategoryTagDelegate(this.dmmf, this.fetcher))
  }
  private _categoryTagGroups?: CategoryTagGroupDelegate
  get categoryTagGroups(): CategoryTagGroupDelegate {
    this.connect()
    return this._categoryTagGroups? this._categoryTagGroups : (this._categoryTagGroups = CategoryTagGroupDelegate(this.dmmf, this.fetcher))
  }
  private _categoryTagStats?: CategoryTagStatDelegate
  get categoryTagStats(): CategoryTagStatDelegate {
    this.connect()
    return this._categoryTagStats? this._categoryTagStats : (this._categoryTagStats = CategoryTagStatDelegate(this.dmmf, this.fetcher))
  }
  private _categoryUsers?: CategoryUserDelegate
  get categoryUsers(): CategoryUserDelegate {
    this.connect()
    return this._categoryUsers? this._categoryUsers : (this._categoryUsers = CategoryUserDelegate(this.dmmf, this.fetcher))
  }
  private _childThemes?: ChildThemeDelegate
  get childThemes(): ChildThemeDelegate {
    this.connect()
    return this._childThemes? this._childThemes : (this._childThemes = ChildThemeDelegate(this.dmmf, this.fetcher))
  }
  private _colorSchemes?: ColorSchemeDelegate
  get colorSchemes(): ColorSchemeDelegate {
    this.connect()
    return this._colorSchemes? this._colorSchemes : (this._colorSchemes = ColorSchemeDelegate(this.dmmf, this.fetcher))
  }
  private _colorSchemeColors?: ColorSchemeColorDelegate
  get colorSchemeColors(): ColorSchemeColorDelegate {
    this.connect()
    return this._colorSchemeColors? this._colorSchemeColors : (this._colorSchemeColors = ColorSchemeColorDelegate(this.dmmf, this.fetcher))
  }
  private _customEmojis?: CustomEmojiDelegate
  get customEmojis(): CustomEmojiDelegate {
    this.connect()
    return this._customEmojis? this._customEmojis : (this._customEmojis = CustomEmojiDelegate(this.dmmf, this.fetcher))
  }
  private _developers?: DeveloperDelegate
  get developers(): DeveloperDelegate {
    this.connect()
    return this._developers? this._developers : (this._developers = DeveloperDelegate(this.dmmf, this.fetcher))
  }
  private _directoryItems?: DirectoryItemDelegate
  get directoryItems(): DirectoryItemDelegate {
    this.connect()
    return this._directoryItems? this._directoryItems : (this._directoryItems = DirectoryItemDelegate(this.dmmf, this.fetcher))
  }
  private _drafts?: DraftDelegate
  get drafts(): DraftDelegate {
    this.connect()
    return this._drafts? this._drafts : (this._drafts = DraftDelegate(this.dmmf, this.fetcher))
  }
  private _draftSequences?: DraftSequenceDelegate
  get draftSequences(): DraftSequenceDelegate {
    this.connect()
    return this._draftSequences? this._draftSequences : (this._draftSequences = DraftSequenceDelegate(this.dmmf, this.fetcher))
  }
  private _emailChangeRequests?: EmailChangeRequestDelegate
  get emailChangeRequests(): EmailChangeRequestDelegate {
    this.connect()
    return this._emailChangeRequests? this._emailChangeRequests : (this._emailChangeRequests = EmailChangeRequestDelegate(this.dmmf, this.fetcher))
  }
  private _emailLogs?: EmailLogDelegate
  get emailLogs(): EmailLogDelegate {
    this.connect()
    return this._emailLogs? this._emailLogs : (this._emailLogs = EmailLogDelegate(this.dmmf, this.fetcher))
  }
  private _emailTokens?: EmailTokenDelegate
  get emailTokens(): EmailTokenDelegate {
    this.connect()
    return this._emailTokens? this._emailTokens : (this._emailTokens = EmailTokenDelegate(this.dmmf, this.fetcher))
  }
  private _embeddableHosts?: EmbeddableHostDelegate
  get embeddableHosts(): EmbeddableHostDelegate {
    this.connect()
    return this._embeddableHosts? this._embeddableHosts : (this._embeddableHosts = EmbeddableHostDelegate(this.dmmf, this.fetcher))
  }
  private _facebookUserInfoes?: FacebookUserInfoDelegate
  get facebookUserInfoes(): FacebookUserInfoDelegate {
    this.connect()
    return this._facebookUserInfoes? this._facebookUserInfoes : (this._facebookUserInfoes = FacebookUserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _githubUserInfoes?: GithubUserInfoDelegate
  get githubUserInfoes(): GithubUserInfoDelegate {
    this.connect()
    return this._githubUserInfoes? this._githubUserInfoes : (this._githubUserInfoes = GithubUserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _googleUserInfoes?: GoogleUserInfoDelegate
  get googleUserInfoes(): GoogleUserInfoDelegate {
    this.connect()
    return this._googleUserInfoes? this._googleUserInfoes : (this._googleUserInfoes = GoogleUserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _groups?: GroupDelegate
  get groups(): GroupDelegate {
    this.connect()
    return this._groups? this._groups : (this._groups = GroupDelegate(this.dmmf, this.fetcher))
  }
  private _groupArchivedMessages?: GroupArchivedMessageDelegate
  get groupArchivedMessages(): GroupArchivedMessageDelegate {
    this.connect()
    return this._groupArchivedMessages? this._groupArchivedMessages : (this._groupArchivedMessages = GroupArchivedMessageDelegate(this.dmmf, this.fetcher))
  }
  private _groupCustomFields?: GroupCustomFieldDelegate
  get groupCustomFields(): GroupCustomFieldDelegate {
    this.connect()
    return this._groupCustomFields? this._groupCustomFields : (this._groupCustomFields = GroupCustomFieldDelegate(this.dmmf, this.fetcher))
  }
  private _groupHistories?: GroupHistoryDelegate
  get groupHistories(): GroupHistoryDelegate {
    this.connect()
    return this._groupHistories? this._groupHistories : (this._groupHistories = GroupHistoryDelegate(this.dmmf, this.fetcher))
  }
  private _groupMentions?: GroupMentionDelegate
  get groupMentions(): GroupMentionDelegate {
    this.connect()
    return this._groupMentions? this._groupMentions : (this._groupMentions = GroupMentionDelegate(this.dmmf, this.fetcher))
  }
  private _groupUsers?: GroupUserDelegate
  get groupUsers(): GroupUserDelegate {
    this.connect()
    return this._groupUsers? this._groupUsers : (this._groupUsers = GroupUserDelegate(this.dmmf, this.fetcher))
  }
  private _incomingDomains?: IncomingDomainDelegate
  get incomingDomains(): IncomingDomainDelegate {
    this.connect()
    return this._incomingDomains? this._incomingDomains : (this._incomingDomains = IncomingDomainDelegate(this.dmmf, this.fetcher))
  }
  private _incomingEmails?: IncomingEmailDelegate
  get incomingEmails(): IncomingEmailDelegate {
    this.connect()
    return this._incomingEmails? this._incomingEmails : (this._incomingEmails = IncomingEmailDelegate(this.dmmf, this.fetcher))
  }
  private _incomingLinks?: IncomingLinkDelegate
  get incomingLinks(): IncomingLinkDelegate {
    this.connect()
    return this._incomingLinks? this._incomingLinks : (this._incomingLinks = IncomingLinkDelegate(this.dmmf, this.fetcher))
  }
  private _incomingReferers?: IncomingRefererDelegate
  get incomingReferers(): IncomingRefererDelegate {
    this.connect()
    return this._incomingReferers? this._incomingReferers : (this._incomingReferers = IncomingRefererDelegate(this.dmmf, this.fetcher))
  }
  private _instagramUserInfoes?: InstagramUserInfoDelegate
  get instagramUserInfoes(): InstagramUserInfoDelegate {
    this.connect()
    return this._instagramUserInfoes? this._instagramUserInfoes : (this._instagramUserInfoes = InstagramUserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _invites?: InviteDelegate
  get invites(): InviteDelegate {
    this.connect()
    return this._invites? this._invites : (this._invites = InviteDelegate(this.dmmf, this.fetcher))
  }
  private _invitedGroups?: InvitedGroupDelegate
  get invitedGroups(): InvitedGroupDelegate {
    this.connect()
    return this._invitedGroups? this._invitedGroups : (this._invitedGroups = InvitedGroupDelegate(this.dmmf, this.fetcher))
  }
  private _javascriptCaches?: JavascriptCachDelegate
  get javascriptCaches(): JavascriptCachDelegate {
    this.connect()
    return this._javascriptCaches? this._javascriptCaches : (this._javascriptCaches = JavascriptCachDelegate(this.dmmf, this.fetcher))
  }
  private _messageBuses?: MessageBusDelegate
  get messageBuses(): MessageBusDelegate {
    this.connect()
    return this._messageBuses? this._messageBuses : (this._messageBuses = MessageBusDelegate(this.dmmf, this.fetcher))
  }
  private _mutedUsers?: MutedUserDelegate
  get mutedUsers(): MutedUserDelegate {
    this.connect()
    return this._mutedUsers? this._mutedUsers : (this._mutedUsers = MutedUserDelegate(this.dmmf, this.fetcher))
  }
  private _notifications?: NotificationDelegate
  get notifications(): NotificationDelegate {
    this.connect()
    return this._notifications? this._notifications : (this._notifications = NotificationDelegate(this.dmmf, this.fetcher))
  }
  private _oauth2UserInfoes?: Oauth2UserInfoDelegate
  get oauth2UserInfoes(): Oauth2UserInfoDelegate {
    this.connect()
    return this._oauth2UserInfoes? this._oauth2UserInfoes : (this._oauth2UserInfoes = Oauth2UserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _onceoffLogs?: OnceoffLogDelegate
  get onceoffLogs(): OnceoffLogDelegate {
    this.connect()
    return this._onceoffLogs? this._onceoffLogs : (this._onceoffLogs = OnceoffLogDelegate(this.dmmf, this.fetcher))
  }
  private _optimizedImages?: OptimizedImageDelegate
  get optimizedImages(): OptimizedImageDelegate {
    this.connect()
    return this._optimizedImages? this._optimizedImages : (this._optimizedImages = OptimizedImageDelegate(this.dmmf, this.fetcher))
  }
  private _permalinks?: PermalinkDelegate
  get permalinks(): PermalinkDelegate {
    this.connect()
    return this._permalinks? this._permalinks : (this._permalinks = PermalinkDelegate(this.dmmf, this.fetcher))
  }
  private _pluginStoreRows?: PluginStoreRowDelegate
  get pluginStoreRows(): PluginStoreRowDelegate {
    this.connect()
    return this._pluginStoreRows? this._pluginStoreRows : (this._pluginStoreRows = PluginStoreRowDelegate(this.dmmf, this.fetcher))
  }
  private _posts?: PostDelegate
  get posts(): PostDelegate {
    this.connect()
    return this._posts? this._posts : (this._posts = PostDelegate(this.dmmf, this.fetcher))
  }
  private _postActions?: PostActionDelegate
  get postActions(): PostActionDelegate {
    this.connect()
    return this._postActions? this._postActions : (this._postActions = PostActionDelegate(this.dmmf, this.fetcher))
  }
  private _postActionTypes?: PostActionTypeDelegate
  get postActionTypes(): PostActionTypeDelegate {
    this.connect()
    return this._postActionTypes? this._postActionTypes : (this._postActionTypes = PostActionTypeDelegate(this.dmmf, this.fetcher))
  }
  private _postCustomFields?: PostCustomFieldDelegate
  get postCustomFields(): PostCustomFieldDelegate {
    this.connect()
    return this._postCustomFields? this._postCustomFields : (this._postCustomFields = PostCustomFieldDelegate(this.dmmf, this.fetcher))
  }
  private _postDetails?: PostDetailDelegate
  get postDetails(): PostDetailDelegate {
    this.connect()
    return this._postDetails? this._postDetails : (this._postDetails = PostDetailDelegate(this.dmmf, this.fetcher))
  }
  private _postReplyKeys?: PostReplyKeyDelegate
  get postReplyKeys(): PostReplyKeyDelegate {
    this.connect()
    return this._postReplyKeys? this._postReplyKeys : (this._postReplyKeys = PostReplyKeyDelegate(this.dmmf, this.fetcher))
  }
  private _postRevisions?: PostRevisionDelegate
  get postRevisions(): PostRevisionDelegate {
    this.connect()
    return this._postRevisions? this._postRevisions : (this._postRevisions = PostRevisionDelegate(this.dmmf, this.fetcher))
  }
  private _postSearchData?: PostSearchDatumDelegate
  get postSearchData(): PostSearchDatumDelegate {
    this.connect()
    return this._postSearchData? this._postSearchData : (this._postSearchData = PostSearchDatumDelegate(this.dmmf, this.fetcher))
  }
  private _postStats?: PostStatDelegate
  get postStats(): PostStatDelegate {
    this.connect()
    return this._postStats? this._postStats : (this._postStats = PostStatDelegate(this.dmmf, this.fetcher))
  }
  private _postUploads?: PostUploadDelegate
  get postUploads(): PostUploadDelegate {
    this.connect()
    return this._postUploads? this._postUploads : (this._postUploads = PostUploadDelegate(this.dmmf, this.fetcher))
  }
  private _pushSubscriptions?: PushSubscriptionDelegate
  get pushSubscriptions(): PushSubscriptionDelegate {
    this.connect()
    return this._pushSubscriptions? this._pushSubscriptions : (this._pushSubscriptions = PushSubscriptionDelegate(this.dmmf, this.fetcher))
  }
  private _queuedPosts?: QueuedPostDelegate
  get queuedPosts(): QueuedPostDelegate {
    this.connect()
    return this._queuedPosts? this._queuedPosts : (this._queuedPosts = QueuedPostDelegate(this.dmmf, this.fetcher))
  }
  private _quotedPosts?: QuotedPostDelegate
  get quotedPosts(): QuotedPostDelegate {
    this.connect()
    return this._quotedPosts? this._quotedPosts : (this._quotedPosts = QuotedPostDelegate(this.dmmf, this.fetcher))
  }
  private _remoteThemes?: RemoteThemeDelegate
  get remoteThemes(): RemoteThemeDelegate {
    this.connect()
    return this._remoteThemes? this._remoteThemes : (this._remoteThemes = RemoteThemeDelegate(this.dmmf, this.fetcher))
  }
  private _schedulerStats?: SchedulerStatDelegate
  get schedulerStats(): SchedulerStatDelegate {
    this.connect()
    return this._schedulerStats? this._schedulerStats : (this._schedulerStats = SchedulerStatDelegate(this.dmmf, this.fetcher))
  }
  private _schemaMigrations?: SchemaMigrationDelegate
  get schemaMigrations(): SchemaMigrationDelegate {
    this.connect()
    return this._schemaMigrations? this._schemaMigrations : (this._schemaMigrations = SchemaMigrationDelegate(this.dmmf, this.fetcher))
  }
  private _schemaMigrationDetails?: SchemaMigrationDetailDelegate
  get schemaMigrationDetails(): SchemaMigrationDetailDelegate {
    this.connect()
    return this._schemaMigrationDetails? this._schemaMigrationDetails : (this._schemaMigrationDetails = SchemaMigrationDetailDelegate(this.dmmf, this.fetcher))
  }
  private _screenedEmails?: ScreenedEmailDelegate
  get screenedEmails(): ScreenedEmailDelegate {
    this.connect()
    return this._screenedEmails? this._screenedEmails : (this._screenedEmails = ScreenedEmailDelegate(this.dmmf, this.fetcher))
  }
  private _screenedIpAddresses?: ScreenedIpAddressDelegate
  get screenedIpAddresses(): ScreenedIpAddressDelegate {
    this.connect()
    return this._screenedIpAddresses? this._screenedIpAddresses : (this._screenedIpAddresses = ScreenedIpAddressDelegate(this.dmmf, this.fetcher))
  }
  private _screenedUrls?: ScreenedUrlDelegate
  get screenedUrls(): ScreenedUrlDelegate {
    this.connect()
    return this._screenedUrls? this._screenedUrls : (this._screenedUrls = ScreenedUrlDelegate(this.dmmf, this.fetcher))
  }
  private _searchLogs?: SearchLogDelegate
  get searchLogs(): SearchLogDelegate {
    this.connect()
    return this._searchLogs? this._searchLogs : (this._searchLogs = SearchLogDelegate(this.dmmf, this.fetcher))
  }
  private _sharedDrafts?: SharedDraftDelegate
  get sharedDrafts(): SharedDraftDelegate {
    this.connect()
    return this._sharedDrafts? this._sharedDrafts : (this._sharedDrafts = SharedDraftDelegate(this.dmmf, this.fetcher))
  }
  private _singleSignOnRecords?: SingleSignOnRecordDelegate
  get singleSignOnRecords(): SingleSignOnRecordDelegate {
    this.connect()
    return this._singleSignOnRecords? this._singleSignOnRecords : (this._singleSignOnRecords = SingleSignOnRecordDelegate(this.dmmf, this.fetcher))
  }
  private _siteSettings?: SiteSettingDelegate
  get siteSettings(): SiteSettingDelegate {
    this.connect()
    return this._siteSettings? this._siteSettings : (this._siteSettings = SiteSettingDelegate(this.dmmf, this.fetcher))
  }
  private _skippedEmailLogs?: SkippedEmailLogDelegate
  get skippedEmailLogs(): SkippedEmailLogDelegate {
    this.connect()
    return this._skippedEmailLogs? this._skippedEmailLogs : (this._skippedEmailLogs = SkippedEmailLogDelegate(this.dmmf, this.fetcher))
  }
  private _stylesheetCaches?: StylesheetCacheDelegate
  get stylesheetCaches(): StylesheetCacheDelegate {
    this.connect()
    return this._stylesheetCaches? this._stylesheetCaches : (this._stylesheetCaches = StylesheetCacheDelegate(this.dmmf, this.fetcher))
  }
  private _tags?: TagDelegate
  get tags(): TagDelegate {
    this.connect()
    return this._tags? this._tags : (this._tags = TagDelegate(this.dmmf, this.fetcher))
  }
  private _tagGroups?: TagGroupDelegate
  get tagGroups(): TagGroupDelegate {
    this.connect()
    return this._tagGroups? this._tagGroups : (this._tagGroups = TagGroupDelegate(this.dmmf, this.fetcher))
  }
  private _tagGroupMemberships?: TagGroupMembershipDelegate
  get tagGroupMemberships(): TagGroupMembershipDelegate {
    this.connect()
    return this._tagGroupMemberships? this._tagGroupMemberships : (this._tagGroupMemberships = TagGroupMembershipDelegate(this.dmmf, this.fetcher))
  }
  private _tagGroupPermissions?: TagGroupPermissionDelegate
  get tagGroupPermissions(): TagGroupPermissionDelegate {
    this.connect()
    return this._tagGroupPermissions? this._tagGroupPermissions : (this._tagGroupPermissions = TagGroupPermissionDelegate(this.dmmf, this.fetcher))
  }
  private _tagSearchData?: TagSearchDatumDelegate
  get tagSearchData(): TagSearchDatumDelegate {
    this.connect()
    return this._tagSearchData? this._tagSearchData : (this._tagSearchData = TagSearchDatumDelegate(this.dmmf, this.fetcher))
  }
  private _tagUsers?: TagUserDelegate
  get tagUsers(): TagUserDelegate {
    this.connect()
    return this._tagUsers? this._tagUsers : (this._tagUsers = TagUserDelegate(this.dmmf, this.fetcher))
  }
  private _themes?: ThemeDelegate
  get themes(): ThemeDelegate {
    this.connect()
    return this._themes? this._themes : (this._themes = ThemeDelegate(this.dmmf, this.fetcher))
  }
  private _themeFields?: ThemeFieldDelegate
  get themeFields(): ThemeFieldDelegate {
    this.connect()
    return this._themeFields? this._themeFields : (this._themeFields = ThemeFieldDelegate(this.dmmf, this.fetcher))
  }
  private _themeSettings?: ThemeSettingDelegate
  get themeSettings(): ThemeSettingDelegate {
    this.connect()
    return this._themeSettings? this._themeSettings : (this._themeSettings = ThemeSettingDelegate(this.dmmf, this.fetcher))
  }
  private _topTopics?: TopTopicDelegate
  get topTopics(): TopTopicDelegate {
    this.connect()
    return this._topTopics? this._topTopics : (this._topTopics = TopTopicDelegate(this.dmmf, this.fetcher))
  }
  private _topics?: TopicDelegate
  get topics(): TopicDelegate {
    this.connect()
    return this._topics? this._topics : (this._topics = TopicDelegate(this.dmmf, this.fetcher))
  }
  private _topicAllowedGroups?: TopicAllowedGroupDelegate
  get topicAllowedGroups(): TopicAllowedGroupDelegate {
    this.connect()
    return this._topicAllowedGroups? this._topicAllowedGroups : (this._topicAllowedGroups = TopicAllowedGroupDelegate(this.dmmf, this.fetcher))
  }
  private _topicAllowedUsers?: TopicAllowedUserDelegate
  get topicAllowedUsers(): TopicAllowedUserDelegate {
    this.connect()
    return this._topicAllowedUsers? this._topicAllowedUsers : (this._topicAllowedUsers = TopicAllowedUserDelegate(this.dmmf, this.fetcher))
  }
  private _topicCustomFields?: TopicCustomFieldDelegate
  get topicCustomFields(): TopicCustomFieldDelegate {
    this.connect()
    return this._topicCustomFields? this._topicCustomFields : (this._topicCustomFields = TopicCustomFieldDelegate(this.dmmf, this.fetcher))
  }
  private _topicEmbeds?: TopicEmbedDelegate
  get topicEmbeds(): TopicEmbedDelegate {
    this.connect()
    return this._topicEmbeds? this._topicEmbeds : (this._topicEmbeds = TopicEmbedDelegate(this.dmmf, this.fetcher))
  }
  private _topicInvites?: TopicInviteDelegate
  get topicInvites(): TopicInviteDelegate {
    this.connect()
    return this._topicInvites? this._topicInvites : (this._topicInvites = TopicInviteDelegate(this.dmmf, this.fetcher))
  }
  private _topicLinks?: TopicLinkDelegate
  get topicLinks(): TopicLinkDelegate {
    this.connect()
    return this._topicLinks? this._topicLinks : (this._topicLinks = TopicLinkDelegate(this.dmmf, this.fetcher))
  }
  private _topicLinkClicks?: TopicLinkClickDelegate
  get topicLinkClicks(): TopicLinkClickDelegate {
    this.connect()
    return this._topicLinkClicks? this._topicLinkClicks : (this._topicLinkClicks = TopicLinkClickDelegate(this.dmmf, this.fetcher))
  }
  private _topicSearchData?: TopicSearchDatumDelegate
  get topicSearchData(): TopicSearchDatumDelegate {
    this.connect()
    return this._topicSearchData? this._topicSearchData : (this._topicSearchData = TopicSearchDatumDelegate(this.dmmf, this.fetcher))
  }
  private _topicTags?: TopicTagDelegate
  get topicTags(): TopicTagDelegate {
    this.connect()
    return this._topicTags? this._topicTags : (this._topicTags = TopicTagDelegate(this.dmmf, this.fetcher))
  }
  private _topicTimers?: TopicTimerDelegate
  get topicTimers(): TopicTimerDelegate {
    this.connect()
    return this._topicTimers? this._topicTimers : (this._topicTimers = TopicTimerDelegate(this.dmmf, this.fetcher))
  }
  private _topicUsers?: TopicUserDelegate
  get topicUsers(): TopicUserDelegate {
    this.connect()
    return this._topicUsers? this._topicUsers : (this._topicUsers = TopicUserDelegate(this.dmmf, this.fetcher))
  }
  private _translationOverrides?: TranslationOverrideDelegate
  get translationOverrides(): TranslationOverrideDelegate {
    this.connect()
    return this._translationOverrides? this._translationOverrides : (this._translationOverrides = TranslationOverrideDelegate(this.dmmf, this.fetcher))
  }
  private _twitterUserInfoes?: TwitterUserInfoDelegate
  get twitterUserInfoes(): TwitterUserInfoDelegate {
    this.connect()
    return this._twitterUserInfoes? this._twitterUserInfoes : (this._twitterUserInfoes = TwitterUserInfoDelegate(this.dmmf, this.fetcher))
  }
  private _unsubscribeKeys?: UnsubscribeKeyDelegate
  get unsubscribeKeys(): UnsubscribeKeyDelegate {
    this.connect()
    return this._unsubscribeKeys? this._unsubscribeKeys : (this._unsubscribeKeys = UnsubscribeKeyDelegate(this.dmmf, this.fetcher))
  }
  private _uploads?: UploadDelegate
  get uploads(): UploadDelegate {
    this.connect()
    return this._uploads? this._uploads : (this._uploads = UploadDelegate(this.dmmf, this.fetcher))
  }
  private _users?: UserDelegate
  get users(): UserDelegate {
    this.connect()
    return this._users? this._users : (this._users = UserDelegate(this.dmmf, this.fetcher))
  }
  private _userActions?: UserActionDelegate
  get userActions(): UserActionDelegate {
    this.connect()
    return this._userActions? this._userActions : (this._userActions = UserActionDelegate(this.dmmf, this.fetcher))
  }
  private _userApiKeys?: UserApiKeyDelegate
  get userApiKeys(): UserApiKeyDelegate {
    this.connect()
    return this._userApiKeys? this._userApiKeys : (this._userApiKeys = UserApiKeyDelegate(this.dmmf, this.fetcher))
  }
  private _userArchivedMessages?: UserArchivedMessageDelegate
  get userArchivedMessages(): UserArchivedMessageDelegate {
    this.connect()
    return this._userArchivedMessages? this._userArchivedMessages : (this._userArchivedMessages = UserArchivedMessageDelegate(this.dmmf, this.fetcher))
  }
  private _userAuthTokens?: UserAuthTokenDelegate
  get userAuthTokens(): UserAuthTokenDelegate {
    this.connect()
    return this._userAuthTokens? this._userAuthTokens : (this._userAuthTokens = UserAuthTokenDelegate(this.dmmf, this.fetcher))
  }
  private _userAuthTokenLogs?: UserAuthTokenLogDelegate
  get userAuthTokenLogs(): UserAuthTokenLogDelegate {
    this.connect()
    return this._userAuthTokenLogs? this._userAuthTokenLogs : (this._userAuthTokenLogs = UserAuthTokenLogDelegate(this.dmmf, this.fetcher))
  }
  private _userAvatars?: UserAvatarDelegate
  get userAvatars(): UserAvatarDelegate {
    this.connect()
    return this._userAvatars? this._userAvatars : (this._userAvatars = UserAvatarDelegate(this.dmmf, this.fetcher))
  }
  private _userBadges?: UserBadgeDelegate
  get userBadges(): UserBadgeDelegate {
    this.connect()
    return this._userBadges? this._userBadges : (this._userBadges = UserBadgeDelegate(this.dmmf, this.fetcher))
  }
  private _userCustomFields?: UserCustomFieldDelegate
  get userCustomFields(): UserCustomFieldDelegate {
    this.connect()
    return this._userCustomFields? this._userCustomFields : (this._userCustomFields = UserCustomFieldDelegate(this.dmmf, this.fetcher))
  }
  private _userEmails?: UserEmailDelegate
  get userEmails(): UserEmailDelegate {
    this.connect()
    return this._userEmails? this._userEmails : (this._userEmails = UserEmailDelegate(this.dmmf, this.fetcher))
  }
  private _userExports?: UserExportDelegate
  get userExports(): UserExportDelegate {
    this.connect()
    return this._userExports? this._userExports : (this._userExports = UserExportDelegate(this.dmmf, this.fetcher))
  }
  private _userFields?: UserFieldDelegate
  get userFields(): UserFieldDelegate {
    this.connect()
    return this._userFields? this._userFields : (this._userFields = UserFieldDelegate(this.dmmf, this.fetcher))
  }
  private _userFieldOptions?: UserFieldOptionDelegate
  get userFieldOptions(): UserFieldOptionDelegate {
    this.connect()
    return this._userFieldOptions? this._userFieldOptions : (this._userFieldOptions = UserFieldOptionDelegate(this.dmmf, this.fetcher))
  }
  private _userHistories?: UserHistoryDelegate
  get userHistories(): UserHistoryDelegate {
    this.connect()
    return this._userHistories? this._userHistories : (this._userHistories = UserHistoryDelegate(this.dmmf, this.fetcher))
  }
  private _userOpenIds?: UserOpenIdDelegate
  get userOpenIds(): UserOpenIdDelegate {
    this.connect()
    return this._userOpenIds? this._userOpenIds : (this._userOpenIds = UserOpenIdDelegate(this.dmmf, this.fetcher))
  }
  private _userOptions?: UserOptionDelegate
  get userOptions(): UserOptionDelegate {
    this.connect()
    return this._userOptions? this._userOptions : (this._userOptions = UserOptionDelegate(this.dmmf, this.fetcher))
  }
  private _userProfiles?: UserProfileDelegate
  get userProfiles(): UserProfileDelegate {
    this.connect()
    return this._userProfiles? this._userProfiles : (this._userProfiles = UserProfileDelegate(this.dmmf, this.fetcher))
  }
  private _userProfileViews?: UserProfileViewDelegate
  get userProfileViews(): UserProfileViewDelegate {
    this.connect()
    return this._userProfileViews? this._userProfileViews : (this._userProfileViews = UserProfileViewDelegate(this.dmmf, this.fetcher))
  }
  private _userSearchData?: UserSearchDatumDelegate
  get userSearchData(): UserSearchDatumDelegate {
    this.connect()
    return this._userSearchData? this._userSearchData : (this._userSearchData = UserSearchDatumDelegate(this.dmmf, this.fetcher))
  }
  private _userSecondFactors?: UserSecondFactorDelegate
  get userSecondFactors(): UserSecondFactorDelegate {
    this.connect()
    return this._userSecondFactors? this._userSecondFactors : (this._userSecondFactors = UserSecondFactorDelegate(this.dmmf, this.fetcher))
  }
  private _userStats?: UserStatDelegate
  get userStats(): UserStatDelegate {
    this.connect()
    return this._userStats? this._userStats : (this._userStats = UserStatDelegate(this.dmmf, this.fetcher))
  }
  private _userUploads?: UserUploadDelegate
  get userUploads(): UserUploadDelegate {
    this.connect()
    return this._userUploads? this._userUploads : (this._userUploads = UserUploadDelegate(this.dmmf, this.fetcher))
  }
  private _userVisits?: UserVisitDelegate
  get userVisits(): UserVisitDelegate {
    this.connect()
    return this._userVisits? this._userVisits : (this._userVisits = UserVisitDelegate(this.dmmf, this.fetcher))
  }
  private _userWarnings?: UserWarningDelegate
  get userWarnings(): UserWarningDelegate {
    this.connect()
    return this._userWarnings? this._userWarnings : (this._userWarnings = UserWarningDelegate(this.dmmf, this.fetcher))
  }
  private _watchedWords?: WatchedWordDelegate
  get watchedWords(): WatchedWordDelegate {
    this.connect()
    return this._watchedWords? this._watchedWords : (this._watchedWords = WatchedWordDelegate(this.dmmf, this.fetcher))
  }
  private _webCrawlerRequests?: WebCrawlerRequestDelegate
  get webCrawlerRequests(): WebCrawlerRequestDelegate {
    this.connect()
    return this._webCrawlerRequests? this._webCrawlerRequests : (this._webCrawlerRequests = WebCrawlerRequestDelegate(this.dmmf, this.fetcher))
  }
  private _webHooks?: WebHookDelegate
  get webHooks(): WebHookDelegate {
    this.connect()
    return this._webHooks? this._webHooks : (this._webHooks = WebHookDelegate(this.dmmf, this.fetcher))
  }
  private _webHookEvents?: WebHookEventDelegate
  get webHookEvents(): WebHookEventDelegate {
    this.connect()
    return this._webHookEvents? this._webHookEvents : (this._webHookEvents = WebHookEventDelegate(this.dmmf, this.fetcher))
  }
  private _webHookEventTypes?: WebHookEventTypeDelegate
  get webHookEventTypes(): WebHookEventTypeDelegate {
    this.connect()
    return this._webHookEventTypes? this._webHookEventTypes : (this._webHookEventTypes = WebHookEventTypeDelegate(this.dmmf, this.fetcher))
  }
}


/**
 * Query
 */

export type QueryArgs = {
  apiKey?: FindOneApiKeyArgs
  apiKeys?: FindManyApiKeyArgs
  applicationRequest?: FindOneApplicationRequestArgs
  applicationRequests?: FindManyApplicationRequestArgs
  arInternalMetadata?: FindManyArInternalMetadatumArgs
  badge?: FindOneBadgeArgs
  badges?: FindManyBadgeArgs
  badgeGrouping?: FindOneBadgeGroupingArgs
  badgeGroupings?: FindManyBadgeGroupingArgs
  badgeType?: FindOneBadgeTypeArgs
  badgeTypes?: FindManyBadgeTypeArgs
  category?: FindOneCategoryArgs
  categories?: FindManyCategoryArgs
  categoryCustomField?: FindOneCategoryCustomFieldArgs
  categoryCustomFields?: FindManyCategoryCustomFieldArgs
  categoryFeaturedTopic?: FindOneCategoryFeaturedTopicArgs
  categoryFeaturedTopics?: FindManyCategoryFeaturedTopicArgs
  categoryGroup?: FindOneCategoryGroupArgs
  categoryGroups?: FindManyCategoryGroupArgs
  categorySearchData?: FindManyCategorySearchDatumArgs
  categoryTag?: FindOneCategoryTagArgs
  categoryTags?: FindManyCategoryTagArgs
  categoryTagGroup?: FindOneCategoryTagGroupArgs
  categoryTagGroups?: FindManyCategoryTagGroupArgs
  categoryTagStat?: FindOneCategoryTagStatArgs
  categoryTagStats?: FindManyCategoryTagStatArgs
  categoryUser?: FindOneCategoryUserArgs
  categoryUsers?: FindManyCategoryUserArgs
  childTheme?: FindOneChildThemeArgs
  childThemes?: FindManyChildThemeArgs
  colorScheme?: FindOneColorSchemeArgs
  colorSchemes?: FindManyColorSchemeArgs
  colorSchemeColor?: FindOneColorSchemeColorArgs
  colorSchemeColors?: FindManyColorSchemeColorArgs
  customEmoji?: FindOneCustomEmojiArgs
  customEmojis?: FindManyCustomEmojiArgs
  developer?: FindOneDeveloperArgs
  developers?: FindManyDeveloperArgs
  directoryItem?: FindOneDirectoryItemArgs
  directoryItems?: FindManyDirectoryItemArgs
  draft?: FindOneDraftArgs
  drafts?: FindManyDraftArgs
  draftSequence?: FindOneDraftSequenceArgs
  draftSequences?: FindManyDraftSequenceArgs
  emailChangeRequest?: FindOneEmailChangeRequestArgs
  emailChangeRequests?: FindManyEmailChangeRequestArgs
  emailLog?: FindOneEmailLogArgs
  emailLogs?: FindManyEmailLogArgs
  emailToken?: FindOneEmailTokenArgs
  emailTokens?: FindManyEmailTokenArgs
  embeddableHost?: FindOneEmbeddableHostArgs
  embeddableHosts?: FindManyEmbeddableHostArgs
  facebookUserInfo?: FindOneFacebookUserInfoArgs
  facebookUserInfoes?: FindManyFacebookUserInfoArgs
  githubUserInfo?: FindOneGithubUserInfoArgs
  githubUserInfoes?: FindManyGithubUserInfoArgs
  googleUserInfo?: FindOneGoogleUserInfoArgs
  googleUserInfoes?: FindManyGoogleUserInfoArgs
  group?: FindOneGroupArgs
  groups?: FindManyGroupArgs
  groupArchivedMessage?: FindOneGroupArchivedMessageArgs
  groupArchivedMessages?: FindManyGroupArchivedMessageArgs
  groupCustomField?: FindOneGroupCustomFieldArgs
  groupCustomFields?: FindManyGroupCustomFieldArgs
  groupHistory?: FindOneGroupHistoryArgs
  groupHistories?: FindManyGroupHistoryArgs
  groupMention?: FindOneGroupMentionArgs
  groupMentions?: FindManyGroupMentionArgs
  groupUser?: FindOneGroupUserArgs
  groupUsers?: FindManyGroupUserArgs
  incomingDomain?: FindOneIncomingDomainArgs
  incomingDomains?: FindManyIncomingDomainArgs
  incomingEmail?: FindOneIncomingEmailArgs
  incomingEmails?: FindManyIncomingEmailArgs
  incomingLink?: FindOneIncomingLinkArgs
  incomingLinks?: FindManyIncomingLinkArgs
  incomingReferer?: FindOneIncomingRefererArgs
  incomingReferers?: FindManyIncomingRefererArgs
  instagramUserInfo?: FindOneInstagramUserInfoArgs
  instagramUserInfoes?: FindManyInstagramUserInfoArgs
  invite?: FindOneInviteArgs
  invites?: FindManyInviteArgs
  invitedGroup?: FindOneInvitedGroupArgs
  invitedGroups?: FindManyInvitedGroupArgs
  javascriptCach?: FindOneJavascriptCachArgs
  javascriptCaches?: FindManyJavascriptCachArgs
  messageBus?: FindOneMessageBusArgs
  messageBuses?: FindManyMessageBusArgs
  mutedUser?: FindOneMutedUserArgs
  mutedUsers?: FindManyMutedUserArgs
  notification?: FindOneNotificationArgs
  notifications?: FindManyNotificationArgs
  oauth2UserInfo?: FindOneOauth2UserInfoArgs
  oauth2UserInfoes?: FindManyOauth2UserInfoArgs
  onceoffLog?: FindOneOnceoffLogArgs
  onceoffLogs?: FindManyOnceoffLogArgs
  optimizedImage?: FindOneOptimizedImageArgs
  optimizedImages?: FindManyOptimizedImageArgs
  permalink?: FindOnePermalinkArgs
  permalinks?: FindManyPermalinkArgs
  pluginStoreRow?: FindOnePluginStoreRowArgs
  pluginStoreRows?: FindManyPluginStoreRowArgs
  post?: FindOnePostArgs
  posts?: FindManyPostArgs
  postAction?: FindOnePostActionArgs
  postActions?: FindManyPostActionArgs
  postActionType?: FindOnePostActionTypeArgs
  postActionTypes?: FindManyPostActionTypeArgs
  postCustomField?: FindOnePostCustomFieldArgs
  postCustomFields?: FindManyPostCustomFieldArgs
  postDetail?: FindOnePostDetailArgs
  postDetails?: FindManyPostDetailArgs
  postReplyKey?: FindOnePostReplyKeyArgs
  postReplyKeys?: FindManyPostReplyKeyArgs
  postRevision?: FindOnePostRevisionArgs
  postRevisions?: FindManyPostRevisionArgs
  postSearchData?: FindManyPostSearchDatumArgs
  postStat?: FindOnePostStatArgs
  postStats?: FindManyPostStatArgs
  postUpload?: FindOnePostUploadArgs
  postUploads?: FindManyPostUploadArgs
  pushSubscription?: FindOnePushSubscriptionArgs
  pushSubscriptions?: FindManyPushSubscriptionArgs
  queuedPost?: FindOneQueuedPostArgs
  queuedPosts?: FindManyQueuedPostArgs
  quotedPost?: FindOneQuotedPostArgs
  quotedPosts?: FindManyQuotedPostArgs
  remoteTheme?: FindOneRemoteThemeArgs
  remoteThemes?: FindManyRemoteThemeArgs
  schedulerStat?: FindOneSchedulerStatArgs
  schedulerStats?: FindManySchedulerStatArgs
  schemaMigration?: FindOneSchemaMigrationArgs
  schemaMigrations?: FindManySchemaMigrationArgs
  schemaMigrationDetail?: FindOneSchemaMigrationDetailArgs
  schemaMigrationDetails?: FindManySchemaMigrationDetailArgs
  screenedEmail?: FindOneScreenedEmailArgs
  screenedEmails?: FindManyScreenedEmailArgs
  screenedIpAddress?: FindOneScreenedIpAddressArgs
  screenedIpAddresses?: FindManyScreenedIpAddressArgs
  screenedUrl?: FindOneScreenedUrlArgs
  screenedUrls?: FindManyScreenedUrlArgs
  searchLog?: FindOneSearchLogArgs
  searchLogs?: FindManySearchLogArgs
  sharedDraft?: FindOneSharedDraftArgs
  sharedDrafts?: FindManySharedDraftArgs
  singleSignOnRecord?: FindOneSingleSignOnRecordArgs
  singleSignOnRecords?: FindManySingleSignOnRecordArgs
  siteSetting?: FindOneSiteSettingArgs
  siteSettings?: FindManySiteSettingArgs
  skippedEmailLog?: FindOneSkippedEmailLogArgs
  skippedEmailLogs?: FindManySkippedEmailLogArgs
  stylesheetCache?: FindOneStylesheetCacheArgs
  stylesheetCaches?: FindManyStylesheetCacheArgs
  tag?: FindOneTagArgs
  tags?: FindManyTagArgs
  tagGroup?: FindOneTagGroupArgs
  tagGroups?: FindManyTagGroupArgs
  tagGroupMembership?: FindOneTagGroupMembershipArgs
  tagGroupMemberships?: FindManyTagGroupMembershipArgs
  tagGroupPermission?: FindOneTagGroupPermissionArgs
  tagGroupPermissions?: FindManyTagGroupPermissionArgs
  tagSearchData?: FindManyTagSearchDatumArgs
  tagUser?: FindOneTagUserArgs
  tagUsers?: FindManyTagUserArgs
  theme?: FindOneThemeArgs
  themes?: FindManyThemeArgs
  themeField?: FindOneThemeFieldArgs
  themeFields?: FindManyThemeFieldArgs
  themeSetting?: FindOneThemeSettingArgs
  themeSettings?: FindManyThemeSettingArgs
  topTopic?: FindOneTopTopicArgs
  topTopics?: FindManyTopTopicArgs
  topic?: FindOneTopicArgs
  topics?: FindManyTopicArgs
  topicAllowedGroup?: FindOneTopicAllowedGroupArgs
  topicAllowedGroups?: FindManyTopicAllowedGroupArgs
  topicAllowedUser?: FindOneTopicAllowedUserArgs
  topicAllowedUsers?: FindManyTopicAllowedUserArgs
  topicCustomField?: FindOneTopicCustomFieldArgs
  topicCustomFields?: FindManyTopicCustomFieldArgs
  topicEmbed?: FindOneTopicEmbedArgs
  topicEmbeds?: FindManyTopicEmbedArgs
  topicInvite?: FindOneTopicInviteArgs
  topicInvites?: FindManyTopicInviteArgs
  topicLink?: FindOneTopicLinkArgs
  topicLinks?: FindManyTopicLinkArgs
  topicLinkClick?: FindOneTopicLinkClickArgs
  topicLinkClicks?: FindManyTopicLinkClickArgs
  topicSearchData?: FindManyTopicSearchDatumArgs
  topicTag?: FindOneTopicTagArgs
  topicTags?: FindManyTopicTagArgs
  topicTimer?: FindOneTopicTimerArgs
  topicTimers?: FindManyTopicTimerArgs
  topicUser?: FindOneTopicUserArgs
  topicUsers?: FindManyTopicUserArgs
  translationOverride?: FindOneTranslationOverrideArgs
  translationOverrides?: FindManyTranslationOverrideArgs
  twitterUserInfo?: FindOneTwitterUserInfoArgs
  twitterUserInfoes?: FindManyTwitterUserInfoArgs
  unsubscribeKeys?: FindManyUnsubscribeKeyArgs
  upload?: FindOneUploadArgs
  uploads?: FindManyUploadArgs
  user?: FindOneUserArgs
  users?: FindManyUserArgs
  userAction?: FindOneUserActionArgs
  userActions?: FindManyUserActionArgs
  userApiKey?: FindOneUserApiKeyArgs
  userApiKeys?: FindManyUserApiKeyArgs
  userArchivedMessage?: FindOneUserArchivedMessageArgs
  userArchivedMessages?: FindManyUserArchivedMessageArgs
  userAuthToken?: FindOneUserAuthTokenArgs
  userAuthTokens?: FindManyUserAuthTokenArgs
  userAuthTokenLog?: FindOneUserAuthTokenLogArgs
  userAuthTokenLogs?: FindManyUserAuthTokenLogArgs
  userAvatar?: FindOneUserAvatarArgs
  userAvatars?: FindManyUserAvatarArgs
  userBadge?: FindOneUserBadgeArgs
  userBadges?: FindManyUserBadgeArgs
  userCustomField?: FindOneUserCustomFieldArgs
  userCustomFields?: FindManyUserCustomFieldArgs
  userEmail?: FindOneUserEmailArgs
  userEmails?: FindManyUserEmailArgs
  userExport?: FindOneUserExportArgs
  userExports?: FindManyUserExportArgs
  userField?: FindOneUserFieldArgs
  userFields?: FindManyUserFieldArgs
  userFieldOption?: FindOneUserFieldOptionArgs
  userFieldOptions?: FindManyUserFieldOptionArgs
  userHistory?: FindOneUserHistoryArgs
  userHistories?: FindManyUserHistoryArgs
  userOpenId?: FindOneUserOpenIdArgs
  userOpenIds?: FindManyUserOpenIdArgs
  userOption?: FindOneUserOptionArgs
  userOptions?: FindManyUserOptionArgs
  userProfiles?: FindManyUserProfileArgs
  userProfileView?: FindOneUserProfileViewArgs
  userProfileViews?: FindManyUserProfileViewArgs
  userSearchData?: FindManyUserSearchDatumArgs
  userSecondFactor?: FindOneUserSecondFactorArgs
  userSecondFactors?: FindManyUserSecondFactorArgs
  userStats?: FindManyUserStatArgs
  userUpload?: FindOneUserUploadArgs
  userUploads?: FindManyUserUploadArgs
  userVisit?: FindOneUserVisitArgs
  userVisits?: FindManyUserVisitArgs
  userWarning?: FindOneUserWarningArgs
  userWarnings?: FindManyUserWarningArgs
  watchedWord?: FindOneWatchedWordArgs
  watchedWords?: FindManyWatchedWordArgs
  webCrawlerRequest?: FindOneWebCrawlerRequestArgs
  webCrawlerRequests?: FindManyWebCrawlerRequestArgs
  webHook?: FindOneWebHookArgs
  webHooks?: FindManyWebHookArgs
  webHookEvent?: FindOneWebHookEventArgs
  webHookEvents?: FindManyWebHookEventArgs
  webHookEventType?: FindOneWebHookEventTypeArgs
  webHookEventTypes?: FindManyWebHookEventTypeArgs
}

type QueryGetPayload<S extends QueryArgs> = S extends QueryArgs
  ? {
      [P in keyof S]
        : P extends 'apiKeys'
        ? Array<ApiKeyGetPayload<ExtractFindManyApiKeyArgsSelect<S[P]>>>
        : P extends 'apiKey'
        ? ApiKeyGetPayload<ExtractFindOneApiKeyArgsSelect<S[P]>>
        : P extends 'applicationRequests'
        ? Array<ApplicationRequestGetPayload<ExtractFindManyApplicationRequestArgsSelect<S[P]>>>
        : P extends 'applicationRequest'
        ? ApplicationRequestGetPayload<ExtractFindOneApplicationRequestArgsSelect<S[P]>>
        : P extends 'arInternalMetadata'
        ? Array<ArInternalMetadatumGetPayload<ExtractFindManyArInternalMetadatumArgsSelect<S[P]>>>
        : P extends 'badges'
        ? Array<BadgeGetPayload<ExtractFindManyBadgeArgsSelect<S[P]>>>
        : P extends 'badge'
        ? BadgeGetPayload<ExtractFindOneBadgeArgsSelect<S[P]>>
        : P extends 'badgeGroupings'
        ? Array<BadgeGroupingGetPayload<ExtractFindManyBadgeGroupingArgsSelect<S[P]>>>
        : P extends 'badgeGrouping'
        ? BadgeGroupingGetPayload<ExtractFindOneBadgeGroupingArgsSelect<S[P]>>
        : P extends 'badgeTypes'
        ? Array<BadgeTypeGetPayload<ExtractFindManyBadgeTypeArgsSelect<S[P]>>>
        : P extends 'badgeType'
        ? BadgeTypeGetPayload<ExtractFindOneBadgeTypeArgsSelect<S[P]>>
        : P extends 'categories'
        ? Array<CategoryGetPayload<ExtractFindManyCategoryArgsSelect<S[P]>>>
        : P extends 'category'
        ? CategoryGetPayload<ExtractFindOneCategoryArgsSelect<S[P]>>
        : P extends 'categoryCustomFields'
        ? Array<CategoryCustomFieldGetPayload<ExtractFindManyCategoryCustomFieldArgsSelect<S[P]>>>
        : P extends 'categoryCustomField'
        ? CategoryCustomFieldGetPayload<ExtractFindOneCategoryCustomFieldArgsSelect<S[P]>>
        : P extends 'categoryFeaturedTopics'
        ? Array<CategoryFeaturedTopicGetPayload<ExtractFindManyCategoryFeaturedTopicArgsSelect<S[P]>>>
        : P extends 'categoryFeaturedTopic'
        ? CategoryFeaturedTopicGetPayload<ExtractFindOneCategoryFeaturedTopicArgsSelect<S[P]>>
        : P extends 'categoryGroups'
        ? Array<CategoryGroupGetPayload<ExtractFindManyCategoryGroupArgsSelect<S[P]>>>
        : P extends 'categoryGroup'
        ? CategoryGroupGetPayload<ExtractFindOneCategoryGroupArgsSelect<S[P]>>
        : P extends 'categorySearchData'
        ? Array<CategorySearchDatumGetPayload<ExtractFindManyCategorySearchDatumArgsSelect<S[P]>>>
        : P extends 'categoryTags'
        ? Array<CategoryTagGetPayload<ExtractFindManyCategoryTagArgsSelect<S[P]>>>
        : P extends 'categoryTag'
        ? CategoryTagGetPayload<ExtractFindOneCategoryTagArgsSelect<S[P]>>
        : P extends 'categoryTagGroups'
        ? Array<CategoryTagGroupGetPayload<ExtractFindManyCategoryTagGroupArgsSelect<S[P]>>>
        : P extends 'categoryTagGroup'
        ? CategoryTagGroupGetPayload<ExtractFindOneCategoryTagGroupArgsSelect<S[P]>>
        : P extends 'categoryTagStats'
        ? Array<CategoryTagStatGetPayload<ExtractFindManyCategoryTagStatArgsSelect<S[P]>>>
        : P extends 'categoryTagStat'
        ? CategoryTagStatGetPayload<ExtractFindOneCategoryTagStatArgsSelect<S[P]>>
        : P extends 'categoryUsers'
        ? Array<CategoryUserGetPayload<ExtractFindManyCategoryUserArgsSelect<S[P]>>>
        : P extends 'categoryUser'
        ? CategoryUserGetPayload<ExtractFindOneCategoryUserArgsSelect<S[P]>>
        : P extends 'childThemes'
        ? Array<ChildThemeGetPayload<ExtractFindManyChildThemeArgsSelect<S[P]>>>
        : P extends 'childTheme'
        ? ChildThemeGetPayload<ExtractFindOneChildThemeArgsSelect<S[P]>>
        : P extends 'colorSchemes'
        ? Array<ColorSchemeGetPayload<ExtractFindManyColorSchemeArgsSelect<S[P]>>>
        : P extends 'colorScheme'
        ? ColorSchemeGetPayload<ExtractFindOneColorSchemeArgsSelect<S[P]>>
        : P extends 'colorSchemeColors'
        ? Array<ColorSchemeColorGetPayload<ExtractFindManyColorSchemeColorArgsSelect<S[P]>>>
        : P extends 'colorSchemeColor'
        ? ColorSchemeColorGetPayload<ExtractFindOneColorSchemeColorArgsSelect<S[P]>>
        : P extends 'customEmojis'
        ? Array<CustomEmojiGetPayload<ExtractFindManyCustomEmojiArgsSelect<S[P]>>>
        : P extends 'customEmoji'
        ? CustomEmojiGetPayload<ExtractFindOneCustomEmojiArgsSelect<S[P]>>
        : P extends 'developers'
        ? Array<DeveloperGetPayload<ExtractFindManyDeveloperArgsSelect<S[P]>>>
        : P extends 'developer'
        ? DeveloperGetPayload<ExtractFindOneDeveloperArgsSelect<S[P]>>
        : P extends 'directoryItems'
        ? Array<DirectoryItemGetPayload<ExtractFindManyDirectoryItemArgsSelect<S[P]>>>
        : P extends 'directoryItem'
        ? DirectoryItemGetPayload<ExtractFindOneDirectoryItemArgsSelect<S[P]>>
        : P extends 'drafts'
        ? Array<DraftGetPayload<ExtractFindManyDraftArgsSelect<S[P]>>>
        : P extends 'draft'
        ? DraftGetPayload<ExtractFindOneDraftArgsSelect<S[P]>>
        : P extends 'draftSequences'
        ? Array<DraftSequenceGetPayload<ExtractFindManyDraftSequenceArgsSelect<S[P]>>>
        : P extends 'draftSequence'
        ? DraftSequenceGetPayload<ExtractFindOneDraftSequenceArgsSelect<S[P]>>
        : P extends 'emailChangeRequests'
        ? Array<EmailChangeRequestGetPayload<ExtractFindManyEmailChangeRequestArgsSelect<S[P]>>>
        : P extends 'emailChangeRequest'
        ? EmailChangeRequestGetPayload<ExtractFindOneEmailChangeRequestArgsSelect<S[P]>>
        : P extends 'emailLogs'
        ? Array<EmailLogGetPayload<ExtractFindManyEmailLogArgsSelect<S[P]>>>
        : P extends 'emailLog'
        ? EmailLogGetPayload<ExtractFindOneEmailLogArgsSelect<S[P]>>
        : P extends 'emailTokens'
        ? Array<EmailTokenGetPayload<ExtractFindManyEmailTokenArgsSelect<S[P]>>>
        : P extends 'emailToken'
        ? EmailTokenGetPayload<ExtractFindOneEmailTokenArgsSelect<S[P]>>
        : P extends 'embeddableHosts'
        ? Array<EmbeddableHostGetPayload<ExtractFindManyEmbeddableHostArgsSelect<S[P]>>>
        : P extends 'embeddableHost'
        ? EmbeddableHostGetPayload<ExtractFindOneEmbeddableHostArgsSelect<S[P]>>
        : P extends 'facebookUserInfoes'
        ? Array<FacebookUserInfoGetPayload<ExtractFindManyFacebookUserInfoArgsSelect<S[P]>>>
        : P extends 'facebookUserInfo'
        ? FacebookUserInfoGetPayload<ExtractFindOneFacebookUserInfoArgsSelect<S[P]>>
        : P extends 'githubUserInfoes'
        ? Array<GithubUserInfoGetPayload<ExtractFindManyGithubUserInfoArgsSelect<S[P]>>>
        : P extends 'githubUserInfo'
        ? GithubUserInfoGetPayload<ExtractFindOneGithubUserInfoArgsSelect<S[P]>>
        : P extends 'googleUserInfoes'
        ? Array<GoogleUserInfoGetPayload<ExtractFindManyGoogleUserInfoArgsSelect<S[P]>>>
        : P extends 'googleUserInfo'
        ? GoogleUserInfoGetPayload<ExtractFindOneGoogleUserInfoArgsSelect<S[P]>>
        : P extends 'groups'
        ? Array<GroupGetPayload<ExtractFindManyGroupArgsSelect<S[P]>>>
        : P extends 'group'
        ? GroupGetPayload<ExtractFindOneGroupArgsSelect<S[P]>>
        : P extends 'groupArchivedMessages'
        ? Array<GroupArchivedMessageGetPayload<ExtractFindManyGroupArchivedMessageArgsSelect<S[P]>>>
        : P extends 'groupArchivedMessage'
        ? GroupArchivedMessageGetPayload<ExtractFindOneGroupArchivedMessageArgsSelect<S[P]>>
        : P extends 'groupCustomFields'
        ? Array<GroupCustomFieldGetPayload<ExtractFindManyGroupCustomFieldArgsSelect<S[P]>>>
        : P extends 'groupCustomField'
        ? GroupCustomFieldGetPayload<ExtractFindOneGroupCustomFieldArgsSelect<S[P]>>
        : P extends 'groupHistories'
        ? Array<GroupHistoryGetPayload<ExtractFindManyGroupHistoryArgsSelect<S[P]>>>
        : P extends 'groupHistory'
        ? GroupHistoryGetPayload<ExtractFindOneGroupHistoryArgsSelect<S[P]>>
        : P extends 'groupMentions'
        ? Array<GroupMentionGetPayload<ExtractFindManyGroupMentionArgsSelect<S[P]>>>
        : P extends 'groupMention'
        ? GroupMentionGetPayload<ExtractFindOneGroupMentionArgsSelect<S[P]>>
        : P extends 'groupUsers'
        ? Array<GroupUserGetPayload<ExtractFindManyGroupUserArgsSelect<S[P]>>>
        : P extends 'groupUser'
        ? GroupUserGetPayload<ExtractFindOneGroupUserArgsSelect<S[P]>>
        : P extends 'incomingDomains'
        ? Array<IncomingDomainGetPayload<ExtractFindManyIncomingDomainArgsSelect<S[P]>>>
        : P extends 'incomingDomain'
        ? IncomingDomainGetPayload<ExtractFindOneIncomingDomainArgsSelect<S[P]>>
        : P extends 'incomingEmails'
        ? Array<IncomingEmailGetPayload<ExtractFindManyIncomingEmailArgsSelect<S[P]>>>
        : P extends 'incomingEmail'
        ? IncomingEmailGetPayload<ExtractFindOneIncomingEmailArgsSelect<S[P]>>
        : P extends 'incomingLinks'
        ? Array<IncomingLinkGetPayload<ExtractFindManyIncomingLinkArgsSelect<S[P]>>>
        : P extends 'incomingLink'
        ? IncomingLinkGetPayload<ExtractFindOneIncomingLinkArgsSelect<S[P]>>
        : P extends 'incomingReferers'
        ? Array<IncomingRefererGetPayload<ExtractFindManyIncomingRefererArgsSelect<S[P]>>>
        : P extends 'incomingReferer'
        ? IncomingRefererGetPayload<ExtractFindOneIncomingRefererArgsSelect<S[P]>>
        : P extends 'instagramUserInfoes'
        ? Array<InstagramUserInfoGetPayload<ExtractFindManyInstagramUserInfoArgsSelect<S[P]>>>
        : P extends 'instagramUserInfo'
        ? InstagramUserInfoGetPayload<ExtractFindOneInstagramUserInfoArgsSelect<S[P]>>
        : P extends 'invites'
        ? Array<InviteGetPayload<ExtractFindManyInviteArgsSelect<S[P]>>>
        : P extends 'invite'
        ? InviteGetPayload<ExtractFindOneInviteArgsSelect<S[P]>>
        : P extends 'invitedGroups'
        ? Array<InvitedGroupGetPayload<ExtractFindManyInvitedGroupArgsSelect<S[P]>>>
        : P extends 'invitedGroup'
        ? InvitedGroupGetPayload<ExtractFindOneInvitedGroupArgsSelect<S[P]>>
        : P extends 'javascriptCaches'
        ? Array<JavascriptCachGetPayload<ExtractFindManyJavascriptCachArgsSelect<S[P]>>>
        : P extends 'javascriptCach'
        ? JavascriptCachGetPayload<ExtractFindOneJavascriptCachArgsSelect<S[P]>>
        : P extends 'messageBuses'
        ? Array<MessageBusGetPayload<ExtractFindManyMessageBusArgsSelect<S[P]>>>
        : P extends 'messageBus'
        ? MessageBusGetPayload<ExtractFindOneMessageBusArgsSelect<S[P]>>
        : P extends 'mutedUsers'
        ? Array<MutedUserGetPayload<ExtractFindManyMutedUserArgsSelect<S[P]>>>
        : P extends 'mutedUser'
        ? MutedUserGetPayload<ExtractFindOneMutedUserArgsSelect<S[P]>>
        : P extends 'notifications'
        ? Array<NotificationGetPayload<ExtractFindManyNotificationArgsSelect<S[P]>>>
        : P extends 'notification'
        ? NotificationGetPayload<ExtractFindOneNotificationArgsSelect<S[P]>>
        : P extends 'oauth2UserInfoes'
        ? Array<Oauth2UserInfoGetPayload<ExtractFindManyOauth2UserInfoArgsSelect<S[P]>>>
        : P extends 'oauth2UserInfo'
        ? Oauth2UserInfoGetPayload<ExtractFindOneOauth2UserInfoArgsSelect<S[P]>>
        : P extends 'onceoffLogs'
        ? Array<OnceoffLogGetPayload<ExtractFindManyOnceoffLogArgsSelect<S[P]>>>
        : P extends 'onceoffLog'
        ? OnceoffLogGetPayload<ExtractFindOneOnceoffLogArgsSelect<S[P]>>
        : P extends 'optimizedImages'
        ? Array<OptimizedImageGetPayload<ExtractFindManyOptimizedImageArgsSelect<S[P]>>>
        : P extends 'optimizedImage'
        ? OptimizedImageGetPayload<ExtractFindOneOptimizedImageArgsSelect<S[P]>>
        : P extends 'permalinks'
        ? Array<PermalinkGetPayload<ExtractFindManyPermalinkArgsSelect<S[P]>>>
        : P extends 'permalink'
        ? PermalinkGetPayload<ExtractFindOnePermalinkArgsSelect<S[P]>>
        : P extends 'pluginStoreRows'
        ? Array<PluginStoreRowGetPayload<ExtractFindManyPluginStoreRowArgsSelect<S[P]>>>
        : P extends 'pluginStoreRow'
        ? PluginStoreRowGetPayload<ExtractFindOnePluginStoreRowArgsSelect<S[P]>>
        : P extends 'posts'
        ? Array<PostGetPayload<ExtractFindManyPostArgsSelect<S[P]>>>
        : P extends 'post'
        ? PostGetPayload<ExtractFindOnePostArgsSelect<S[P]>>
        : P extends 'postActions'
        ? Array<PostActionGetPayload<ExtractFindManyPostActionArgsSelect<S[P]>>>
        : P extends 'postAction'
        ? PostActionGetPayload<ExtractFindOnePostActionArgsSelect<S[P]>>
        : P extends 'postActionTypes'
        ? Array<PostActionTypeGetPayload<ExtractFindManyPostActionTypeArgsSelect<S[P]>>>
        : P extends 'postActionType'
        ? PostActionTypeGetPayload<ExtractFindOnePostActionTypeArgsSelect<S[P]>>
        : P extends 'postCustomFields'
        ? Array<PostCustomFieldGetPayload<ExtractFindManyPostCustomFieldArgsSelect<S[P]>>>
        : P extends 'postCustomField'
        ? PostCustomFieldGetPayload<ExtractFindOnePostCustomFieldArgsSelect<S[P]>>
        : P extends 'postDetails'
        ? Array<PostDetailGetPayload<ExtractFindManyPostDetailArgsSelect<S[P]>>>
        : P extends 'postDetail'
        ? PostDetailGetPayload<ExtractFindOnePostDetailArgsSelect<S[P]>>
        : P extends 'postReplyKeys'
        ? Array<PostReplyKeyGetPayload<ExtractFindManyPostReplyKeyArgsSelect<S[P]>>>
        : P extends 'postReplyKey'
        ? PostReplyKeyGetPayload<ExtractFindOnePostReplyKeyArgsSelect<S[P]>>
        : P extends 'postRevisions'
        ? Array<PostRevisionGetPayload<ExtractFindManyPostRevisionArgsSelect<S[P]>>>
        : P extends 'postRevision'
        ? PostRevisionGetPayload<ExtractFindOnePostRevisionArgsSelect<S[P]>>
        : P extends 'postSearchData'
        ? Array<PostSearchDatumGetPayload<ExtractFindManyPostSearchDatumArgsSelect<S[P]>>>
        : P extends 'postStats'
        ? Array<PostStatGetPayload<ExtractFindManyPostStatArgsSelect<S[P]>>>
        : P extends 'postStat'
        ? PostStatGetPayload<ExtractFindOnePostStatArgsSelect<S[P]>>
        : P extends 'postUploads'
        ? Array<PostUploadGetPayload<ExtractFindManyPostUploadArgsSelect<S[P]>>>
        : P extends 'postUpload'
        ? PostUploadGetPayload<ExtractFindOnePostUploadArgsSelect<S[P]>>
        : P extends 'pushSubscriptions'
        ? Array<PushSubscriptionGetPayload<ExtractFindManyPushSubscriptionArgsSelect<S[P]>>>
        : P extends 'pushSubscription'
        ? PushSubscriptionGetPayload<ExtractFindOnePushSubscriptionArgsSelect<S[P]>>
        : P extends 'queuedPosts'
        ? Array<QueuedPostGetPayload<ExtractFindManyQueuedPostArgsSelect<S[P]>>>
        : P extends 'queuedPost'
        ? QueuedPostGetPayload<ExtractFindOneQueuedPostArgsSelect<S[P]>>
        : P extends 'quotedPosts'
        ? Array<QuotedPostGetPayload<ExtractFindManyQuotedPostArgsSelect<S[P]>>>
        : P extends 'quotedPost'
        ? QuotedPostGetPayload<ExtractFindOneQuotedPostArgsSelect<S[P]>>
        : P extends 'remoteThemes'
        ? Array<RemoteThemeGetPayload<ExtractFindManyRemoteThemeArgsSelect<S[P]>>>
        : P extends 'remoteTheme'
        ? RemoteThemeGetPayload<ExtractFindOneRemoteThemeArgsSelect<S[P]>>
        : P extends 'schedulerStats'
        ? Array<SchedulerStatGetPayload<ExtractFindManySchedulerStatArgsSelect<S[P]>>>
        : P extends 'schedulerStat'
        ? SchedulerStatGetPayload<ExtractFindOneSchedulerStatArgsSelect<S[P]>>
        : P extends 'schemaMigrations'
        ? Array<SchemaMigrationGetPayload<ExtractFindManySchemaMigrationArgsSelect<S[P]>>>
        : P extends 'schemaMigration'
        ? SchemaMigrationGetPayload<ExtractFindOneSchemaMigrationArgsSelect<S[P]>>
        : P extends 'schemaMigrationDetails'
        ? Array<SchemaMigrationDetailGetPayload<ExtractFindManySchemaMigrationDetailArgsSelect<S[P]>>>
        : P extends 'schemaMigrationDetail'
        ? SchemaMigrationDetailGetPayload<ExtractFindOneSchemaMigrationDetailArgsSelect<S[P]>>
        : P extends 'screenedEmails'
        ? Array<ScreenedEmailGetPayload<ExtractFindManyScreenedEmailArgsSelect<S[P]>>>
        : P extends 'screenedEmail'
        ? ScreenedEmailGetPayload<ExtractFindOneScreenedEmailArgsSelect<S[P]>>
        : P extends 'screenedIpAddresses'
        ? Array<ScreenedIpAddressGetPayload<ExtractFindManyScreenedIpAddressArgsSelect<S[P]>>>
        : P extends 'screenedIpAddress'
        ? ScreenedIpAddressGetPayload<ExtractFindOneScreenedIpAddressArgsSelect<S[P]>>
        : P extends 'screenedUrls'
        ? Array<ScreenedUrlGetPayload<ExtractFindManyScreenedUrlArgsSelect<S[P]>>>
        : P extends 'screenedUrl'
        ? ScreenedUrlGetPayload<ExtractFindOneScreenedUrlArgsSelect<S[P]>>
        : P extends 'searchLogs'
        ? Array<SearchLogGetPayload<ExtractFindManySearchLogArgsSelect<S[P]>>>
        : P extends 'searchLog'
        ? SearchLogGetPayload<ExtractFindOneSearchLogArgsSelect<S[P]>>
        : P extends 'sharedDrafts'
        ? Array<SharedDraftGetPayload<ExtractFindManySharedDraftArgsSelect<S[P]>>>
        : P extends 'sharedDraft'
        ? SharedDraftGetPayload<ExtractFindOneSharedDraftArgsSelect<S[P]>>
        : P extends 'singleSignOnRecords'
        ? Array<SingleSignOnRecordGetPayload<ExtractFindManySingleSignOnRecordArgsSelect<S[P]>>>
        : P extends 'singleSignOnRecord'
        ? SingleSignOnRecordGetPayload<ExtractFindOneSingleSignOnRecordArgsSelect<S[P]>>
        : P extends 'siteSettings'
        ? Array<SiteSettingGetPayload<ExtractFindManySiteSettingArgsSelect<S[P]>>>
        : P extends 'siteSetting'
        ? SiteSettingGetPayload<ExtractFindOneSiteSettingArgsSelect<S[P]>>
        : P extends 'skippedEmailLogs'
        ? Array<SkippedEmailLogGetPayload<ExtractFindManySkippedEmailLogArgsSelect<S[P]>>>
        : P extends 'skippedEmailLog'
        ? SkippedEmailLogGetPayload<ExtractFindOneSkippedEmailLogArgsSelect<S[P]>>
        : P extends 'stylesheetCaches'
        ? Array<StylesheetCacheGetPayload<ExtractFindManyStylesheetCacheArgsSelect<S[P]>>>
        : P extends 'stylesheetCache'
        ? StylesheetCacheGetPayload<ExtractFindOneStylesheetCacheArgsSelect<S[P]>>
        : P extends 'tags'
        ? Array<TagGetPayload<ExtractFindManyTagArgsSelect<S[P]>>>
        : P extends 'tag'
        ? TagGetPayload<ExtractFindOneTagArgsSelect<S[P]>>
        : P extends 'tagGroups'
        ? Array<TagGroupGetPayload<ExtractFindManyTagGroupArgsSelect<S[P]>>>
        : P extends 'tagGroup'
        ? TagGroupGetPayload<ExtractFindOneTagGroupArgsSelect<S[P]>>
        : P extends 'tagGroupMemberships'
        ? Array<TagGroupMembershipGetPayload<ExtractFindManyTagGroupMembershipArgsSelect<S[P]>>>
        : P extends 'tagGroupMembership'
        ? TagGroupMembershipGetPayload<ExtractFindOneTagGroupMembershipArgsSelect<S[P]>>
        : P extends 'tagGroupPermissions'
        ? Array<TagGroupPermissionGetPayload<ExtractFindManyTagGroupPermissionArgsSelect<S[P]>>>
        : P extends 'tagGroupPermission'
        ? TagGroupPermissionGetPayload<ExtractFindOneTagGroupPermissionArgsSelect<S[P]>>
        : P extends 'tagSearchData'
        ? Array<TagSearchDatumGetPayload<ExtractFindManyTagSearchDatumArgsSelect<S[P]>>>
        : P extends 'tagUsers'
        ? Array<TagUserGetPayload<ExtractFindManyTagUserArgsSelect<S[P]>>>
        : P extends 'tagUser'
        ? TagUserGetPayload<ExtractFindOneTagUserArgsSelect<S[P]>>
        : P extends 'themes'
        ? Array<ThemeGetPayload<ExtractFindManyThemeArgsSelect<S[P]>>>
        : P extends 'theme'
        ? ThemeGetPayload<ExtractFindOneThemeArgsSelect<S[P]>>
        : P extends 'themeFields'
        ? Array<ThemeFieldGetPayload<ExtractFindManyThemeFieldArgsSelect<S[P]>>>
        : P extends 'themeField'
        ? ThemeFieldGetPayload<ExtractFindOneThemeFieldArgsSelect<S[P]>>
        : P extends 'themeSettings'
        ? Array<ThemeSettingGetPayload<ExtractFindManyThemeSettingArgsSelect<S[P]>>>
        : P extends 'themeSetting'
        ? ThemeSettingGetPayload<ExtractFindOneThemeSettingArgsSelect<S[P]>>
        : P extends 'topTopics'
        ? Array<TopTopicGetPayload<ExtractFindManyTopTopicArgsSelect<S[P]>>>
        : P extends 'topTopic'
        ? TopTopicGetPayload<ExtractFindOneTopTopicArgsSelect<S[P]>>
        : P extends 'topics'
        ? Array<TopicGetPayload<ExtractFindManyTopicArgsSelect<S[P]>>>
        : P extends 'topic'
        ? TopicGetPayload<ExtractFindOneTopicArgsSelect<S[P]>>
        : P extends 'topicAllowedGroups'
        ? Array<TopicAllowedGroupGetPayload<ExtractFindManyTopicAllowedGroupArgsSelect<S[P]>>>
        : P extends 'topicAllowedGroup'
        ? TopicAllowedGroupGetPayload<ExtractFindOneTopicAllowedGroupArgsSelect<S[P]>>
        : P extends 'topicAllowedUsers'
        ? Array<TopicAllowedUserGetPayload<ExtractFindManyTopicAllowedUserArgsSelect<S[P]>>>
        : P extends 'topicAllowedUser'
        ? TopicAllowedUserGetPayload<ExtractFindOneTopicAllowedUserArgsSelect<S[P]>>
        : P extends 'topicCustomFields'
        ? Array<TopicCustomFieldGetPayload<ExtractFindManyTopicCustomFieldArgsSelect<S[P]>>>
        : P extends 'topicCustomField'
        ? TopicCustomFieldGetPayload<ExtractFindOneTopicCustomFieldArgsSelect<S[P]>>
        : P extends 'topicEmbeds'
        ? Array<TopicEmbedGetPayload<ExtractFindManyTopicEmbedArgsSelect<S[P]>>>
        : P extends 'topicEmbed'
        ? TopicEmbedGetPayload<ExtractFindOneTopicEmbedArgsSelect<S[P]>>
        : P extends 'topicInvites'
        ? Array<TopicInviteGetPayload<ExtractFindManyTopicInviteArgsSelect<S[P]>>>
        : P extends 'topicInvite'
        ? TopicInviteGetPayload<ExtractFindOneTopicInviteArgsSelect<S[P]>>
        : P extends 'topicLinks'
        ? Array<TopicLinkGetPayload<ExtractFindManyTopicLinkArgsSelect<S[P]>>>
        : P extends 'topicLink'
        ? TopicLinkGetPayload<ExtractFindOneTopicLinkArgsSelect<S[P]>>
        : P extends 'topicLinkClicks'
        ? Array<TopicLinkClickGetPayload<ExtractFindManyTopicLinkClickArgsSelect<S[P]>>>
        : P extends 'topicLinkClick'
        ? TopicLinkClickGetPayload<ExtractFindOneTopicLinkClickArgsSelect<S[P]>>
        : P extends 'topicSearchData'
        ? Array<TopicSearchDatumGetPayload<ExtractFindManyTopicSearchDatumArgsSelect<S[P]>>>
        : P extends 'topicTags'
        ? Array<TopicTagGetPayload<ExtractFindManyTopicTagArgsSelect<S[P]>>>
        : P extends 'topicTag'
        ? TopicTagGetPayload<ExtractFindOneTopicTagArgsSelect<S[P]>>
        : P extends 'topicTimers'
        ? Array<TopicTimerGetPayload<ExtractFindManyTopicTimerArgsSelect<S[P]>>>
        : P extends 'topicTimer'
        ? TopicTimerGetPayload<ExtractFindOneTopicTimerArgsSelect<S[P]>>
        : P extends 'topicUsers'
        ? Array<TopicUserGetPayload<ExtractFindManyTopicUserArgsSelect<S[P]>>>
        : P extends 'topicUser'
        ? TopicUserGetPayload<ExtractFindOneTopicUserArgsSelect<S[P]>>
        : P extends 'translationOverrides'
        ? Array<TranslationOverrideGetPayload<ExtractFindManyTranslationOverrideArgsSelect<S[P]>>>
        : P extends 'translationOverride'
        ? TranslationOverrideGetPayload<ExtractFindOneTranslationOverrideArgsSelect<S[P]>>
        : P extends 'twitterUserInfoes'
        ? Array<TwitterUserInfoGetPayload<ExtractFindManyTwitterUserInfoArgsSelect<S[P]>>>
        : P extends 'twitterUserInfo'
        ? TwitterUserInfoGetPayload<ExtractFindOneTwitterUserInfoArgsSelect<S[P]>>
        : P extends 'unsubscribeKeys'
        ? Array<UnsubscribeKeyGetPayload<ExtractFindManyUnsubscribeKeyArgsSelect<S[P]>>>
        : P extends 'uploads'
        ? Array<UploadGetPayload<ExtractFindManyUploadArgsSelect<S[P]>>>
        : P extends 'upload'
        ? UploadGetPayload<ExtractFindOneUploadArgsSelect<S[P]>>
        : P extends 'users'
        ? Array<UserGetPayload<ExtractFindManyUserArgsSelect<S[P]>>>
        : P extends 'user'
        ? UserGetPayload<ExtractFindOneUserArgsSelect<S[P]>>
        : P extends 'userActions'
        ? Array<UserActionGetPayload<ExtractFindManyUserActionArgsSelect<S[P]>>>
        : P extends 'userAction'
        ? UserActionGetPayload<ExtractFindOneUserActionArgsSelect<S[P]>>
        : P extends 'userApiKeys'
        ? Array<UserApiKeyGetPayload<ExtractFindManyUserApiKeyArgsSelect<S[P]>>>
        : P extends 'userApiKey'
        ? UserApiKeyGetPayload<ExtractFindOneUserApiKeyArgsSelect<S[P]>>
        : P extends 'userArchivedMessages'
        ? Array<UserArchivedMessageGetPayload<ExtractFindManyUserArchivedMessageArgsSelect<S[P]>>>
        : P extends 'userArchivedMessage'
        ? UserArchivedMessageGetPayload<ExtractFindOneUserArchivedMessageArgsSelect<S[P]>>
        : P extends 'userAuthTokens'
        ? Array<UserAuthTokenGetPayload<ExtractFindManyUserAuthTokenArgsSelect<S[P]>>>
        : P extends 'userAuthToken'
        ? UserAuthTokenGetPayload<ExtractFindOneUserAuthTokenArgsSelect<S[P]>>
        : P extends 'userAuthTokenLogs'
        ? Array<UserAuthTokenLogGetPayload<ExtractFindManyUserAuthTokenLogArgsSelect<S[P]>>>
        : P extends 'userAuthTokenLog'
        ? UserAuthTokenLogGetPayload<ExtractFindOneUserAuthTokenLogArgsSelect<S[P]>>
        : P extends 'userAvatars'
        ? Array<UserAvatarGetPayload<ExtractFindManyUserAvatarArgsSelect<S[P]>>>
        : P extends 'userAvatar'
        ? UserAvatarGetPayload<ExtractFindOneUserAvatarArgsSelect<S[P]>>
        : P extends 'userBadges'
        ? Array<UserBadgeGetPayload<ExtractFindManyUserBadgeArgsSelect<S[P]>>>
        : P extends 'userBadge'
        ? UserBadgeGetPayload<ExtractFindOneUserBadgeArgsSelect<S[P]>>
        : P extends 'userCustomFields'
        ? Array<UserCustomFieldGetPayload<ExtractFindManyUserCustomFieldArgsSelect<S[P]>>>
        : P extends 'userCustomField'
        ? UserCustomFieldGetPayload<ExtractFindOneUserCustomFieldArgsSelect<S[P]>>
        : P extends 'userEmails'
        ? Array<UserEmailGetPayload<ExtractFindManyUserEmailArgsSelect<S[P]>>>
        : P extends 'userEmail'
        ? UserEmailGetPayload<ExtractFindOneUserEmailArgsSelect<S[P]>>
        : P extends 'userExports'
        ? Array<UserExportGetPayload<ExtractFindManyUserExportArgsSelect<S[P]>>>
        : P extends 'userExport'
        ? UserExportGetPayload<ExtractFindOneUserExportArgsSelect<S[P]>>
        : P extends 'userFields'
        ? Array<UserFieldGetPayload<ExtractFindManyUserFieldArgsSelect<S[P]>>>
        : P extends 'userField'
        ? UserFieldGetPayload<ExtractFindOneUserFieldArgsSelect<S[P]>>
        : P extends 'userFieldOptions'
        ? Array<UserFieldOptionGetPayload<ExtractFindManyUserFieldOptionArgsSelect<S[P]>>>
        : P extends 'userFieldOption'
        ? UserFieldOptionGetPayload<ExtractFindOneUserFieldOptionArgsSelect<S[P]>>
        : P extends 'userHistories'
        ? Array<UserHistoryGetPayload<ExtractFindManyUserHistoryArgsSelect<S[P]>>>
        : P extends 'userHistory'
        ? UserHistoryGetPayload<ExtractFindOneUserHistoryArgsSelect<S[P]>>
        : P extends 'userOpenIds'
        ? Array<UserOpenIdGetPayload<ExtractFindManyUserOpenIdArgsSelect<S[P]>>>
        : P extends 'userOpenId'
        ? UserOpenIdGetPayload<ExtractFindOneUserOpenIdArgsSelect<S[P]>>
        : P extends 'userOptions'
        ? Array<UserOptionGetPayload<ExtractFindManyUserOptionArgsSelect<S[P]>>>
        : P extends 'userOption'
        ? UserOptionGetPayload<ExtractFindOneUserOptionArgsSelect<S[P]>>
        : P extends 'userProfiles'
        ? Array<UserProfileGetPayload<ExtractFindManyUserProfileArgsSelect<S[P]>>>
        : P extends 'userProfileViews'
        ? Array<UserProfileViewGetPayload<ExtractFindManyUserProfileViewArgsSelect<S[P]>>>
        : P extends 'userProfileView'
        ? UserProfileViewGetPayload<ExtractFindOneUserProfileViewArgsSelect<S[P]>>
        : P extends 'userSearchData'
        ? Array<UserSearchDatumGetPayload<ExtractFindManyUserSearchDatumArgsSelect<S[P]>>>
        : P extends 'userSecondFactors'
        ? Array<UserSecondFactorGetPayload<ExtractFindManyUserSecondFactorArgsSelect<S[P]>>>
        : P extends 'userSecondFactor'
        ? UserSecondFactorGetPayload<ExtractFindOneUserSecondFactorArgsSelect<S[P]>>
        : P extends 'userStats'
        ? Array<UserStatGetPayload<ExtractFindManyUserStatArgsSelect<S[P]>>>
        : P extends 'userUploads'
        ? Array<UserUploadGetPayload<ExtractFindManyUserUploadArgsSelect<S[P]>>>
        : P extends 'userUpload'
        ? UserUploadGetPayload<ExtractFindOneUserUploadArgsSelect<S[P]>>
        : P extends 'userVisits'
        ? Array<UserVisitGetPayload<ExtractFindManyUserVisitArgsSelect<S[P]>>>
        : P extends 'userVisit'
        ? UserVisitGetPayload<ExtractFindOneUserVisitArgsSelect<S[P]>>
        : P extends 'userWarnings'
        ? Array<UserWarningGetPayload<ExtractFindManyUserWarningArgsSelect<S[P]>>>
        : P extends 'userWarning'
        ? UserWarningGetPayload<ExtractFindOneUserWarningArgsSelect<S[P]>>
        : P extends 'watchedWords'
        ? Array<WatchedWordGetPayload<ExtractFindManyWatchedWordArgsSelect<S[P]>>>
        : P extends 'watchedWord'
        ? WatchedWordGetPayload<ExtractFindOneWatchedWordArgsSelect<S[P]>>
        : P extends 'webCrawlerRequests'
        ? Array<WebCrawlerRequestGetPayload<ExtractFindManyWebCrawlerRequestArgsSelect<S[P]>>>
        : P extends 'webCrawlerRequest'
        ? WebCrawlerRequestGetPayload<ExtractFindOneWebCrawlerRequestArgsSelect<S[P]>>
        : P extends 'webHooks'
        ? Array<WebHookGetPayload<ExtractFindManyWebHookArgsSelect<S[P]>>>
        : P extends 'webHook'
        ? WebHookGetPayload<ExtractFindOneWebHookArgsSelect<S[P]>>
        : P extends 'webHookEvents'
        ? Array<WebHookEventGetPayload<ExtractFindManyWebHookEventArgsSelect<S[P]>>>
        : P extends 'webHookEvent'
        ? WebHookEventGetPayload<ExtractFindOneWebHookEventArgsSelect<S[P]>>
        : P extends 'webHookEventTypes'
        ? Array<WebHookEventTypeGetPayload<ExtractFindManyWebHookEventTypeArgsSelect<S[P]>>>
        : P extends 'webHookEventType'
        ? WebHookEventTypeGetPayload<ExtractFindOneWebHookEventTypeArgsSelect<S[P]>>
        : never
    } : never


interface QueryDelegate {
  <T extends QueryArgs>(args: Subset<T,QueryArgs>): PromiseLike<QueryGetPayload<T>>
}
function QueryDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): QueryDelegate {
  const Query = <T extends QueryArgs>(args: QueryArgs) => new QueryClient<T>(dmmf, fetcher, args, [])
  return Query
}

class QueryClient<T extends QueryArgs, U = QueryGetPayload<T>> implements PromiseLike<U> {
  constructor(private readonly dmmf: DMMFClass, private readonly fetcher: PhotonFetcher, private readonly args: QueryArgs, private readonly path: []) {}
  readonly [Symbol.toStringTag]: 'Promise'

  protected get query() {
    const rootField = Object.keys(this.args)[0]
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: 'query',
      // @ts-ignore
      select: this.args[rootField]
    })
    // @ts-ignore
    document.validate(this.args[rootField], true)
    return String(document)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = U, TResult2 = never>(
    onfulfilled?: ((value: U) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<U>(this.query, this.path, undefined, 'Query').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<U | TResult> {
    return this.fetcher.request<U>(this.query, this.path, undefined, 'Query').catch(onrejected)
  }
}



/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

function makeEnum<T extends {[index: string]: U}, U extends string>(x: T) { return x }

export const OrderByArg = makeEnum({
  asc: 'asc',
  desc: 'desc'
})

export type OrderByArg = (typeof OrderByArg)[keyof typeof OrderByArg]



/**
 * Model ApiKey
 */

export type ApiKey = {
  id: number
  createdAt: string
  createdById: number | null
  hidden: boolean
  key: string
  updatedAt: string
  userId: number | null
}

export type ApiKeyScalars = 'id' | 'createdAt' | 'createdById' | 'hidden' | 'key' | 'updatedAt' | 'userId'


export type ApiKeySelect = {
  id?: boolean
  createdAt?: boolean
  createdById?: boolean
  hidden?: boolean
  key?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type ApiKeyDefault = {
  id: true
  createdAt: true
  createdById: true
  hidden: true
  key: true
  updatedAt: true
  userId: true
}


type ApiKeyGetPayload<S extends boolean | ApiKeySelect> = S extends true
  ? ApiKey
  : S extends ApiKeySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ApiKeyDefault, S>>]: P extends ApiKeyScalars
        ? ApiKey[P]
        : never
    }
   : never

export interface ApiKeyDelegate {
  <T extends FindManyApiKeyArgs>(args?: Subset<T, FindManyApiKeyArgs>): PromiseLike<Array<ApiKeyGetPayload<ExtractFindManyApiKeyArgsSelect<T>>>>
  findOne<T extends FindOneApiKeyArgs>(
    args: Subset<T, FindOneApiKeyArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractFindOneApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>
  findMany<T extends FindManyApiKeyArgs>(
    args?: Subset<T, FindManyApiKeyArgs>
  ): PromiseLike<Array<ApiKeyGetPayload<ExtractFindManyApiKeyArgsSelect<T>>>>
  create<T extends ApiKeyCreateArgs>(
    args: Subset<T, ApiKeyCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyCreateArgsSelect<T>>> : ApiKeyClient<ApiKey>
  update<T extends ApiKeyUpdateArgs>(
    args: Subset<T, ApiKeyUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyUpdateArgsSelect<T>>> : ApiKeyClient<ApiKey>
  updateMany<T extends ApiKeyUpdateManyArgs>(
    args: Subset<T, ApiKeyUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyUpdateManyArgsSelect<T>>> : ApiKeyClient<ApiKey>
  upsert<T extends ApiKeyUpsertArgs>(
    args: Subset<T, ApiKeyUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyUpsertArgsSelect<T>>> : ApiKeyClient<ApiKey>
  delete<T extends ApiKeyDeleteArgs>(
    args: Subset<T, ApiKeyDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyDeleteArgsSelect<T>>> : ApiKeyClient<ApiKey>
  deleteMany<T extends ApiKeyDeleteManyArgs>(
    args: Subset<T, ApiKeyDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyDeleteManyArgsSelect<T>>> : ApiKeyClient<ApiKey>
}
function ApiKeyDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ApiKeyDelegate {
  const ApiKey = <T extends FindManyApiKeyArgs>(args: Subset<T, FindManyApiKeyArgs>) => new ApiKeyClient<PromiseLike<Array<ApiKeyGetPayload<ExtractFindManyApiKeyArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'apiKeys', 'apiKeys', args, [])
  ApiKey.findOne = <T extends FindOneApiKeyArgs>(args: Subset<T, FindOneApiKeyArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'query',
    'apiKey',
    'apiKeys.findOne',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'query',
    'apiKey',
    'apiKeys.findOne',
    args,
    []
  )
  ApiKey.findMany = <T extends FindManyApiKeyArgs>(args: Subset<T, FindManyApiKeyArgs>) => new ApiKeyClient<PromiseLike<Array<ApiKeyGetPayload<ExtractFindManyApiKeyArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'apiKeys',
    'apiKeys.findMany',
    args,
    []
  )
  ApiKey.create = <T extends ApiKeyCreateArgs>(args: Subset<T, ApiKeyCreateArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'createApiKey',
    'apiKeys.create',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'createApiKey',
    'apiKeys.create',
    args,
    []
  )
  ApiKey.update = <T extends ApiKeyUpdateArgs>(args: Subset<T, ApiKeyUpdateArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateApiKey',
    'apiKeys.update',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateApiKey',
    'apiKeys.update',
    args,
    []
  )
  ApiKey.updateMany = <T extends ApiKeyUpdateManyArgs>(args: Subset<T, ApiKeyUpdateManyArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyApiKeys',
    'apiKeys.updateMany',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyApiKeys',
    'apiKeys.updateMany',
    args,
    []
  )
  ApiKey.upsert = <T extends ApiKeyUpsertArgs>(args: Subset<T, ApiKeyUpsertArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertApiKey',
    'apiKeys.upsert',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'upsertApiKey',
    'apiKeys.upsert',
    args,
    []
  )
  ApiKey.delete = <T extends ApiKeyDeleteArgs>(args: Subset<T, ApiKeyDeleteArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteApiKey',
    'apiKeys.delete',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteApiKey',
    'apiKeys.delete',
    args,
    []
  )
  ApiKey.deleteMany = <T extends ApiKeyDeleteManyArgs>(args: Subset<T, ApiKeyDeleteManyArgs>) => args.select ? new ApiKeyClient<'select' extends keyof T ? PromiseLike<ApiKeyGetPayload<ExtractApiKeyArgsSelect<T>>> : ApiKeyClient<ApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyApiKeys',
    'apiKeys.deleteMany',
    args,
    []
  ) : new ApiKeyClient<ApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyApiKeys',
    'apiKeys.deleteMany',
    args,
    []
  )
  return ApiKey as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ApiKeyClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ApiKeyArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ApiKey').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ApiKey').catch(onrejected)
  }
}


// InputTypes

export type FindOneApiKeyArgs = {
  select?: ApiKeySelect
  where: ApiKeyWhereUniqueInput
}

export type FindOneApiKeyArgsWithSelect = {
  select: ApiKeySelect
  where: ApiKeyWhereUniqueInput
}

type ExtractFindOneApiKeyArgsSelect<S extends undefined | boolean | FindOneApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneApiKeyArgsWithSelect
  ? S['select']
  : true


export type FindManyApiKeyArgs = {
  select?: ApiKeySelect
  where?: ApiKeyWhereInput
  orderBy?: ApiKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyApiKeyArgsWithSelect = {
  select: ApiKeySelect
  where?: ApiKeyWhereInput
  orderBy?: ApiKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyApiKeyArgsSelect<S extends undefined | boolean | FindManyApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyApiKeyArgsWithSelect
  ? S['select']
  : true


export type ApiKeyCreateArgs = {
  select?: ApiKeySelect
  data: ApiKeyCreateInput
}

export type ApiKeyCreateArgsWithSelect = {
  select: ApiKeySelect
  data: ApiKeyCreateInput
}

type ExtractApiKeyCreateArgsSelect<S extends undefined | boolean | ApiKeyCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyCreateArgsWithSelect
  ? S['select']
  : true


export type ApiKeyUpdateArgs = {
  select?: ApiKeySelect
  data: ApiKeyUpdateInput
  where: ApiKeyWhereUniqueInput
}

export type ApiKeyUpdateArgsWithSelect = {
  select: ApiKeySelect
  data: ApiKeyUpdateInput
  where: ApiKeyWhereUniqueInput
}

type ExtractApiKeyUpdateArgsSelect<S extends undefined | boolean | ApiKeyUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyUpdateArgsWithSelect
  ? S['select']
  : true


export type ApiKeyUpdateManyArgs = {
  select?: ApiKeySelect
  data: ApiKeyUpdateManyMutationInput
  where?: ApiKeyWhereInput
}

export type ApiKeyUpdateManyArgsWithSelect = {
  select: ApiKeySelect
  data: ApiKeyUpdateManyMutationInput
  where?: ApiKeyWhereInput
}

type ExtractApiKeyUpdateManyArgsSelect<S extends undefined | boolean | ApiKeyUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ApiKeyUpsertArgs = {
  select?: ApiKeySelect
  where: ApiKeyWhereUniqueInput
  create: ApiKeyCreateInput
  update: ApiKeyUpdateInput
}

export type ApiKeyUpsertArgsWithSelect = {
  select: ApiKeySelect
  where: ApiKeyWhereUniqueInput
  create: ApiKeyCreateInput
  update: ApiKeyUpdateInput
}

type ExtractApiKeyUpsertArgsSelect<S extends undefined | boolean | ApiKeyUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyUpsertArgsWithSelect
  ? S['select']
  : true


export type ApiKeyDeleteArgs = {
  select?: ApiKeySelect
  where: ApiKeyWhereUniqueInput
}

export type ApiKeyDeleteArgsWithSelect = {
  select: ApiKeySelect
  where: ApiKeyWhereUniqueInput
}

type ExtractApiKeyDeleteArgsSelect<S extends undefined | boolean | ApiKeyDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyDeleteArgsWithSelect
  ? S['select']
  : true


export type ApiKeyDeleteManyArgs = {
  select?: ApiKeySelect
  where?: ApiKeyWhereInput
}

export type ApiKeyDeleteManyArgsWithSelect = {
  select: ApiKeySelect
  where?: ApiKeyWhereInput
}

type ExtractApiKeyDeleteManyArgsSelect<S extends undefined | boolean | ApiKeyDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ApiKeyArgs = {
  select?: ApiKeySelect
}

export type ApiKeyArgsWithSelect = {
  select: ApiKeySelect
}

type ExtractApiKeyArgsSelect<S extends undefined | boolean | ApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApiKeyArgsWithSelect
  ? S['select']
  : true



/**
 * Model ApplicationRequest
 */

export type ApplicationRequest = {
  id: number
  count: number
  date: string
  reqType: number
}

export type ApplicationRequestScalars = 'id' | 'count' | 'date' | 'reqType'


export type ApplicationRequestSelect = {
  id?: boolean
  count?: boolean
  date?: boolean
  reqType?: boolean
}

type ApplicationRequestDefault = {
  id: true
  count: true
  date: true
  reqType: true
}


type ApplicationRequestGetPayload<S extends boolean | ApplicationRequestSelect> = S extends true
  ? ApplicationRequest
  : S extends ApplicationRequestSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ApplicationRequestDefault, S>>]: P extends ApplicationRequestScalars
        ? ApplicationRequest[P]
        : never
    }
   : never

export interface ApplicationRequestDelegate {
  <T extends FindManyApplicationRequestArgs>(args?: Subset<T, FindManyApplicationRequestArgs>): PromiseLike<Array<ApplicationRequestGetPayload<ExtractFindManyApplicationRequestArgsSelect<T>>>>
  findOne<T extends FindOneApplicationRequestArgs>(
    args: Subset<T, FindOneApplicationRequestArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractFindOneApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  findMany<T extends FindManyApplicationRequestArgs>(
    args?: Subset<T, FindManyApplicationRequestArgs>
  ): PromiseLike<Array<ApplicationRequestGetPayload<ExtractFindManyApplicationRequestArgsSelect<T>>>>
  create<T extends ApplicationRequestCreateArgs>(
    args: Subset<T, ApplicationRequestCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestCreateArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  update<T extends ApplicationRequestUpdateArgs>(
    args: Subset<T, ApplicationRequestUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestUpdateArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  updateMany<T extends ApplicationRequestUpdateManyArgs>(
    args: Subset<T, ApplicationRequestUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestUpdateManyArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  upsert<T extends ApplicationRequestUpsertArgs>(
    args: Subset<T, ApplicationRequestUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestUpsertArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  delete<T extends ApplicationRequestDeleteArgs>(
    args: Subset<T, ApplicationRequestDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestDeleteArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
  deleteMany<T extends ApplicationRequestDeleteManyArgs>(
    args: Subset<T, ApplicationRequestDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestDeleteManyArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>
}
function ApplicationRequestDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ApplicationRequestDelegate {
  const ApplicationRequest = <T extends FindManyApplicationRequestArgs>(args: Subset<T, FindManyApplicationRequestArgs>) => new ApplicationRequestClient<PromiseLike<Array<ApplicationRequestGetPayload<ExtractFindManyApplicationRequestArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'applicationRequests', 'applicationRequests', args, [])
  ApplicationRequest.findOne = <T extends FindOneApplicationRequestArgs>(args: Subset<T, FindOneApplicationRequestArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'query',
    'applicationRequest',
    'applicationRequests.findOne',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'query',
    'applicationRequest',
    'applicationRequests.findOne',
    args,
    []
  )
  ApplicationRequest.findMany = <T extends FindManyApplicationRequestArgs>(args: Subset<T, FindManyApplicationRequestArgs>) => new ApplicationRequestClient<PromiseLike<Array<ApplicationRequestGetPayload<ExtractFindManyApplicationRequestArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'applicationRequests',
    'applicationRequests.findMany',
    args,
    []
  )
  ApplicationRequest.create = <T extends ApplicationRequestCreateArgs>(args: Subset<T, ApplicationRequestCreateArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'createApplicationRequest',
    'applicationRequests.create',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'createApplicationRequest',
    'applicationRequests.create',
    args,
    []
  )
  ApplicationRequest.update = <T extends ApplicationRequestUpdateArgs>(args: Subset<T, ApplicationRequestUpdateArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateApplicationRequest',
    'applicationRequests.update',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateApplicationRequest',
    'applicationRequests.update',
    args,
    []
  )
  ApplicationRequest.updateMany = <T extends ApplicationRequestUpdateManyArgs>(args: Subset<T, ApplicationRequestUpdateManyArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyApplicationRequests',
    'applicationRequests.updateMany',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyApplicationRequests',
    'applicationRequests.updateMany',
    args,
    []
  )
  ApplicationRequest.upsert = <T extends ApplicationRequestUpsertArgs>(args: Subset<T, ApplicationRequestUpsertArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertApplicationRequest',
    'applicationRequests.upsert',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'upsertApplicationRequest',
    'applicationRequests.upsert',
    args,
    []
  )
  ApplicationRequest.delete = <T extends ApplicationRequestDeleteArgs>(args: Subset<T, ApplicationRequestDeleteArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteApplicationRequest',
    'applicationRequests.delete',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteApplicationRequest',
    'applicationRequests.delete',
    args,
    []
  )
  ApplicationRequest.deleteMany = <T extends ApplicationRequestDeleteManyArgs>(args: Subset<T, ApplicationRequestDeleteManyArgs>) => args.select ? new ApplicationRequestClient<'select' extends keyof T ? PromiseLike<ApplicationRequestGetPayload<ExtractApplicationRequestArgsSelect<T>>> : ApplicationRequestClient<ApplicationRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyApplicationRequests',
    'applicationRequests.deleteMany',
    args,
    []
  ) : new ApplicationRequestClient<ApplicationRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyApplicationRequests',
    'applicationRequests.deleteMany',
    args,
    []
  )
  return ApplicationRequest as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ApplicationRequestClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ApplicationRequestArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ApplicationRequest').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ApplicationRequest').catch(onrejected)
  }
}


// InputTypes

export type FindOneApplicationRequestArgs = {
  select?: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
}

export type FindOneApplicationRequestArgsWithSelect = {
  select: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
}

type ExtractFindOneApplicationRequestArgsSelect<S extends undefined | boolean | FindOneApplicationRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneApplicationRequestArgsWithSelect
  ? S['select']
  : true


export type FindManyApplicationRequestArgs = {
  select?: ApplicationRequestSelect
  where?: ApplicationRequestWhereInput
  orderBy?: ApplicationRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyApplicationRequestArgsWithSelect = {
  select: ApplicationRequestSelect
  where?: ApplicationRequestWhereInput
  orderBy?: ApplicationRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyApplicationRequestArgsSelect<S extends undefined | boolean | FindManyApplicationRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyApplicationRequestArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestCreateArgs = {
  select?: ApplicationRequestSelect
  data: ApplicationRequestCreateInput
}

export type ApplicationRequestCreateArgsWithSelect = {
  select: ApplicationRequestSelect
  data: ApplicationRequestCreateInput
}

type ExtractApplicationRequestCreateArgsSelect<S extends undefined | boolean | ApplicationRequestCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestCreateArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestUpdateArgs = {
  select?: ApplicationRequestSelect
  data: ApplicationRequestUpdateInput
  where: ApplicationRequestWhereUniqueInput
}

export type ApplicationRequestUpdateArgsWithSelect = {
  select: ApplicationRequestSelect
  data: ApplicationRequestUpdateInput
  where: ApplicationRequestWhereUniqueInput
}

type ExtractApplicationRequestUpdateArgsSelect<S extends undefined | boolean | ApplicationRequestUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestUpdateArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestUpdateManyArgs = {
  select?: ApplicationRequestSelect
  data: ApplicationRequestUpdateManyMutationInput
  where?: ApplicationRequestWhereInput
}

export type ApplicationRequestUpdateManyArgsWithSelect = {
  select: ApplicationRequestSelect
  data: ApplicationRequestUpdateManyMutationInput
  where?: ApplicationRequestWhereInput
}

type ExtractApplicationRequestUpdateManyArgsSelect<S extends undefined | boolean | ApplicationRequestUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestUpsertArgs = {
  select?: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
  create: ApplicationRequestCreateInput
  update: ApplicationRequestUpdateInput
}

export type ApplicationRequestUpsertArgsWithSelect = {
  select: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
  create: ApplicationRequestCreateInput
  update: ApplicationRequestUpdateInput
}

type ExtractApplicationRequestUpsertArgsSelect<S extends undefined | boolean | ApplicationRequestUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestUpsertArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestDeleteArgs = {
  select?: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
}

export type ApplicationRequestDeleteArgsWithSelect = {
  select: ApplicationRequestSelect
  where: ApplicationRequestWhereUniqueInput
}

type ExtractApplicationRequestDeleteArgsSelect<S extends undefined | boolean | ApplicationRequestDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestDeleteArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestDeleteManyArgs = {
  select?: ApplicationRequestSelect
  where?: ApplicationRequestWhereInput
}

export type ApplicationRequestDeleteManyArgsWithSelect = {
  select: ApplicationRequestSelect
  where?: ApplicationRequestWhereInput
}

type ExtractApplicationRequestDeleteManyArgsSelect<S extends undefined | boolean | ApplicationRequestDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ApplicationRequestArgs = {
  select?: ApplicationRequestSelect
}

export type ApplicationRequestArgsWithSelect = {
  select: ApplicationRequestSelect
}

type ExtractApplicationRequestArgsSelect<S extends undefined | boolean | ApplicationRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ApplicationRequestArgsWithSelect
  ? S['select']
  : true



/**
 * Model ArInternalMetadatum
 */

export type ArInternalMetadatum = {
  key: string
  createdAt: string
  updatedAt: string
  value: string | null
}

export type ArInternalMetadatumScalars = 'key' | 'createdAt' | 'updatedAt' | 'value'


export type ArInternalMetadatumSelect = {
  key?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  value?: boolean
}

type ArInternalMetadatumDefault = {
  key: true
  createdAt: true
  updatedAt: true
  value: true
}


type ArInternalMetadatumGetPayload<S extends boolean | ArInternalMetadatumSelect> = S extends true
  ? ArInternalMetadatum
  : S extends ArInternalMetadatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ArInternalMetadatumDefault, S>>]: P extends ArInternalMetadatumScalars
        ? ArInternalMetadatum[P]
        : never
    }
   : never

export interface ArInternalMetadatumDelegate {
  <T extends FindManyArInternalMetadatumArgs>(args?: Subset<T, FindManyArInternalMetadatumArgs>): PromiseLike<Array<ArInternalMetadatumGetPayload<ExtractFindManyArInternalMetadatumArgsSelect<T>>>>
  findMany<T extends FindManyArInternalMetadatumArgs>(
    args?: Subset<T, FindManyArInternalMetadatumArgs>
  ): PromiseLike<Array<ArInternalMetadatumGetPayload<ExtractFindManyArInternalMetadatumArgsSelect<T>>>>
  create<T extends ArInternalMetadatumCreateArgs>(
    args: Subset<T, ArInternalMetadatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumCreateArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>
  updateMany<T extends ArInternalMetadatumUpdateManyArgs>(
    args: Subset<T, ArInternalMetadatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumUpdateManyArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>
  deleteMany<T extends ArInternalMetadatumDeleteManyArgs>(
    args: Subset<T, ArInternalMetadatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumDeleteManyArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>
}
function ArInternalMetadatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ArInternalMetadatumDelegate {
  const ArInternalMetadatum = <T extends FindManyArInternalMetadatumArgs>(args: Subset<T, FindManyArInternalMetadatumArgs>) => new ArInternalMetadatumClient<PromiseLike<Array<ArInternalMetadatumGetPayload<ExtractFindManyArInternalMetadatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'arInternalMetadata', 'arInternalMetadata', args, [])
  ArInternalMetadatum.findMany = <T extends FindManyArInternalMetadatumArgs>(args: Subset<T, FindManyArInternalMetadatumArgs>) => new ArInternalMetadatumClient<PromiseLike<Array<ArInternalMetadatumGetPayload<ExtractFindManyArInternalMetadatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'arInternalMetadata',
    'arInternalMetadata.findMany',
    args,
    []
  )
  ArInternalMetadatum.create = <T extends ArInternalMetadatumCreateArgs>(args: Subset<T, ArInternalMetadatumCreateArgs>) => args.select ? new ArInternalMetadatumClient<'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createArInternalMetadatum',
    'arInternalMetadata.create',
    args,
    []
  ) : new ArInternalMetadatumClient<ArInternalMetadatum>(
    dmmf,
    fetcher,
    'mutation',
    'createArInternalMetadatum',
    'arInternalMetadata.create',
    args,
    []
  )
  ArInternalMetadatum.updateMany = <T extends ArInternalMetadatumUpdateManyArgs>(args: Subset<T, ArInternalMetadatumUpdateManyArgs>) => args.select ? new ArInternalMetadatumClient<'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyArInternalMetadata',
    'arInternalMetadata.updateMany',
    args,
    []
  ) : new ArInternalMetadatumClient<ArInternalMetadatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyArInternalMetadata',
    'arInternalMetadata.updateMany',
    args,
    []
  )
  ArInternalMetadatum.deleteMany = <T extends ArInternalMetadatumDeleteManyArgs>(args: Subset<T, ArInternalMetadatumDeleteManyArgs>) => args.select ? new ArInternalMetadatumClient<'select' extends keyof T ? PromiseLike<ArInternalMetadatumGetPayload<ExtractArInternalMetadatumArgsSelect<T>>> : ArInternalMetadatumClient<ArInternalMetadatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyArInternalMetadata',
    'arInternalMetadata.deleteMany',
    args,
    []
  ) : new ArInternalMetadatumClient<ArInternalMetadatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyArInternalMetadata',
    'arInternalMetadata.deleteMany',
    args,
    []
  )
  return ArInternalMetadatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ArInternalMetadatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ArInternalMetadatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ArInternalMetadatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ArInternalMetadatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyArInternalMetadatumArgs = {
  select?: ArInternalMetadatumSelect
  where?: ArInternalMetadatumWhereInput
  orderBy?: ArInternalMetadatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyArInternalMetadatumArgsWithSelect = {
  select: ArInternalMetadatumSelect
  where?: ArInternalMetadatumWhereInput
  orderBy?: ArInternalMetadatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyArInternalMetadatumArgsSelect<S extends undefined | boolean | FindManyArInternalMetadatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyArInternalMetadatumArgsWithSelect
  ? S['select']
  : true


export type ArInternalMetadatumCreateArgs = {
  select?: ArInternalMetadatumSelect
  data: ArInternalMetadatumCreateInput
}

export type ArInternalMetadatumCreateArgsWithSelect = {
  select: ArInternalMetadatumSelect
  data: ArInternalMetadatumCreateInput
}

type ExtractArInternalMetadatumCreateArgsSelect<S extends undefined | boolean | ArInternalMetadatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ArInternalMetadatumCreateArgsWithSelect
  ? S['select']
  : true


export type ArInternalMetadatumUpdateManyArgs = {
  select?: ArInternalMetadatumSelect
  data: ArInternalMetadatumUpdateManyMutationInput
  where?: ArInternalMetadatumWhereInput
}

export type ArInternalMetadatumUpdateManyArgsWithSelect = {
  select: ArInternalMetadatumSelect
  data: ArInternalMetadatumUpdateManyMutationInput
  where?: ArInternalMetadatumWhereInput
}

type ExtractArInternalMetadatumUpdateManyArgsSelect<S extends undefined | boolean | ArInternalMetadatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ArInternalMetadatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ArInternalMetadatumDeleteManyArgs = {
  select?: ArInternalMetadatumSelect
  where?: ArInternalMetadatumWhereInput
}

export type ArInternalMetadatumDeleteManyArgsWithSelect = {
  select: ArInternalMetadatumSelect
  where?: ArInternalMetadatumWhereInput
}

type ExtractArInternalMetadatumDeleteManyArgsSelect<S extends undefined | boolean | ArInternalMetadatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ArInternalMetadatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ArInternalMetadatumArgs = {
  select?: ArInternalMetadatumSelect
}

export type ArInternalMetadatumArgsWithSelect = {
  select: ArInternalMetadatumSelect
}

type ExtractArInternalMetadatumArgsSelect<S extends undefined | boolean | ArInternalMetadatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ArInternalMetadatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model Badge
 */

export type Badge = {
  id: number
  allowTitle: boolean
  autoRevoke: boolean
  badgeGroupingId: number
  badgeTypeId: number
  createdAt: string
  description: string | null
  enabled: boolean
  grantCount: number
  icon: string | null
  image: string | null
  listable: boolean | null
  longDescription: string | null
  multipleGrant: boolean
  name: string
  query: string | null
  showPosts: boolean
  system: boolean
  targetPosts: boolean | null
  trigger: number | null
  updatedAt: string
}

export type BadgeScalars = 'id' | 'allowTitle' | 'autoRevoke' | 'badgeGroupingId' | 'badgeTypeId' | 'createdAt' | 'description' | 'enabled' | 'grantCount' | 'icon' | 'image' | 'listable' | 'longDescription' | 'multipleGrant' | 'name' | 'query' | 'showPosts' | 'system' | 'targetPosts' | 'trigger' | 'updatedAt'


export type BadgeSelect = {
  id?: boolean
  allowTitle?: boolean
  autoRevoke?: boolean
  badgeGroupingId?: boolean
  badgeTypeId?: boolean
  createdAt?: boolean
  description?: boolean
  enabled?: boolean
  grantCount?: boolean
  icon?: boolean
  image?: boolean
  listable?: boolean
  longDescription?: boolean
  multipleGrant?: boolean
  name?: boolean
  query?: boolean
  showPosts?: boolean
  system?: boolean
  targetPosts?: boolean
  trigger?: boolean
  updatedAt?: boolean
}

type BadgeDefault = {
  id: true
  allowTitle: true
  autoRevoke: true
  badgeGroupingId: true
  badgeTypeId: true
  createdAt: true
  description: true
  enabled: true
  grantCount: true
  icon: true
  image: true
  listable: true
  longDescription: true
  multipleGrant: true
  name: true
  query: true
  showPosts: true
  system: true
  targetPosts: true
  trigger: true
  updatedAt: true
}


type BadgeGetPayload<S extends boolean | BadgeSelect> = S extends true
  ? Badge
  : S extends BadgeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<BadgeDefault, S>>]: P extends BadgeScalars
        ? Badge[P]
        : never
    }
   : never

export interface BadgeDelegate {
  <T extends FindManyBadgeArgs>(args?: Subset<T, FindManyBadgeArgs>): PromiseLike<Array<BadgeGetPayload<ExtractFindManyBadgeArgsSelect<T>>>>
  findOne<T extends FindOneBadgeArgs>(
    args: Subset<T, FindOneBadgeArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractFindOneBadgeArgsSelect<T>>> : BadgeClient<Badge>
  findMany<T extends FindManyBadgeArgs>(
    args?: Subset<T, FindManyBadgeArgs>
  ): PromiseLike<Array<BadgeGetPayload<ExtractFindManyBadgeArgsSelect<T>>>>
  create<T extends BadgeCreateArgs>(
    args: Subset<T, BadgeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeCreateArgsSelect<T>>> : BadgeClient<Badge>
  update<T extends BadgeUpdateArgs>(
    args: Subset<T, BadgeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeUpdateArgsSelect<T>>> : BadgeClient<Badge>
  updateMany<T extends BadgeUpdateManyArgs>(
    args: Subset<T, BadgeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeUpdateManyArgsSelect<T>>> : BadgeClient<Badge>
  upsert<T extends BadgeUpsertArgs>(
    args: Subset<T, BadgeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeUpsertArgsSelect<T>>> : BadgeClient<Badge>
  delete<T extends BadgeDeleteArgs>(
    args: Subset<T, BadgeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeDeleteArgsSelect<T>>> : BadgeClient<Badge>
  deleteMany<T extends BadgeDeleteManyArgs>(
    args: Subset<T, BadgeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeDeleteManyArgsSelect<T>>> : BadgeClient<Badge>
}
function BadgeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): BadgeDelegate {
  const Badge = <T extends FindManyBadgeArgs>(args: Subset<T, FindManyBadgeArgs>) => new BadgeClient<PromiseLike<Array<BadgeGetPayload<ExtractFindManyBadgeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'badges', 'badges', args, [])
  Badge.findOne = <T extends FindOneBadgeArgs>(args: Subset<T, FindOneBadgeArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'query',
    'badge',
    'badges.findOne',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'query',
    'badge',
    'badges.findOne',
    args,
    []
  )
  Badge.findMany = <T extends FindManyBadgeArgs>(args: Subset<T, FindManyBadgeArgs>) => new BadgeClient<PromiseLike<Array<BadgeGetPayload<ExtractFindManyBadgeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'badges',
    'badges.findMany',
    args,
    []
  )
  Badge.create = <T extends BadgeCreateArgs>(args: Subset<T, BadgeCreateArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'createBadge',
    'badges.create',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'createBadge',
    'badges.create',
    args,
    []
  )
  Badge.update = <T extends BadgeUpdateArgs>(args: Subset<T, BadgeUpdateArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadge',
    'badges.update',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadge',
    'badges.update',
    args,
    []
  )
  Badge.updateMany = <T extends BadgeUpdateManyArgs>(args: Subset<T, BadgeUpdateManyArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadges',
    'badges.updateMany',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadges',
    'badges.updateMany',
    args,
    []
  )
  Badge.upsert = <T extends BadgeUpsertArgs>(args: Subset<T, BadgeUpsertArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadge',
    'badges.upsert',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadge',
    'badges.upsert',
    args,
    []
  )
  Badge.delete = <T extends BadgeDeleteArgs>(args: Subset<T, BadgeDeleteArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadge',
    'badges.delete',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadge',
    'badges.delete',
    args,
    []
  )
  Badge.deleteMany = <T extends BadgeDeleteManyArgs>(args: Subset<T, BadgeDeleteManyArgs>) => args.select ? new BadgeClient<'select' extends keyof T ? PromiseLike<BadgeGetPayload<ExtractBadgeArgsSelect<T>>> : BadgeClient<Badge>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadges',
    'badges.deleteMany',
    args,
    []
  ) : new BadgeClient<Badge>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadges',
    'badges.deleteMany',
    args,
    []
  )
  return Badge as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class BadgeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: BadgeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Badge').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Badge').catch(onrejected)
  }
}


// InputTypes

export type FindOneBadgeArgs = {
  select?: BadgeSelect
  where: BadgeWhereUniqueInput
}

export type FindOneBadgeArgsWithSelect = {
  select: BadgeSelect
  where: BadgeWhereUniqueInput
}

type ExtractFindOneBadgeArgsSelect<S extends undefined | boolean | FindOneBadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneBadgeArgsWithSelect
  ? S['select']
  : true


export type FindManyBadgeArgs = {
  select?: BadgeSelect
  where?: BadgeWhereInput
  orderBy?: BadgeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyBadgeArgsWithSelect = {
  select: BadgeSelect
  where?: BadgeWhereInput
  orderBy?: BadgeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyBadgeArgsSelect<S extends undefined | boolean | FindManyBadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyBadgeArgsWithSelect
  ? S['select']
  : true


export type BadgeCreateArgs = {
  select?: BadgeSelect
  data: BadgeCreateInput
}

export type BadgeCreateArgsWithSelect = {
  select: BadgeSelect
  data: BadgeCreateInput
}

type ExtractBadgeCreateArgsSelect<S extends undefined | boolean | BadgeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeCreateArgsWithSelect
  ? S['select']
  : true


export type BadgeUpdateArgs = {
  select?: BadgeSelect
  data: BadgeUpdateInput
  where: BadgeWhereUniqueInput
}

export type BadgeUpdateArgsWithSelect = {
  select: BadgeSelect
  data: BadgeUpdateInput
  where: BadgeWhereUniqueInput
}

type ExtractBadgeUpdateArgsSelect<S extends undefined | boolean | BadgeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeUpdateArgsWithSelect
  ? S['select']
  : true


export type BadgeUpdateManyArgs = {
  select?: BadgeSelect
  data: BadgeUpdateManyMutationInput
  where?: BadgeWhereInput
}

export type BadgeUpdateManyArgsWithSelect = {
  select: BadgeSelect
  data: BadgeUpdateManyMutationInput
  where?: BadgeWhereInput
}

type ExtractBadgeUpdateManyArgsSelect<S extends undefined | boolean | BadgeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type BadgeUpsertArgs = {
  select?: BadgeSelect
  where: BadgeWhereUniqueInput
  create: BadgeCreateInput
  update: BadgeUpdateInput
}

export type BadgeUpsertArgsWithSelect = {
  select: BadgeSelect
  where: BadgeWhereUniqueInput
  create: BadgeCreateInput
  update: BadgeUpdateInput
}

type ExtractBadgeUpsertArgsSelect<S extends undefined | boolean | BadgeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeUpsertArgsWithSelect
  ? S['select']
  : true


export type BadgeDeleteArgs = {
  select?: BadgeSelect
  where: BadgeWhereUniqueInput
}

export type BadgeDeleteArgsWithSelect = {
  select: BadgeSelect
  where: BadgeWhereUniqueInput
}

type ExtractBadgeDeleteArgsSelect<S extends undefined | boolean | BadgeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeDeleteArgsWithSelect
  ? S['select']
  : true


export type BadgeDeleteManyArgs = {
  select?: BadgeSelect
  where?: BadgeWhereInput
}

export type BadgeDeleteManyArgsWithSelect = {
  select: BadgeSelect
  where?: BadgeWhereInput
}

type ExtractBadgeDeleteManyArgsSelect<S extends undefined | boolean | BadgeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type BadgeArgs = {
  select?: BadgeSelect
}

export type BadgeArgsWithSelect = {
  select: BadgeSelect
}

type ExtractBadgeArgsSelect<S extends undefined | boolean | BadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeArgsWithSelect
  ? S['select']
  : true



/**
 * Model BadgeGrouping
 */

export type BadgeGrouping = {
  id: number
  createdAt: string
  description: string | null
  name: string
  position: number
  updatedAt: string
}

export type BadgeGroupingScalars = 'id' | 'createdAt' | 'description' | 'name' | 'position' | 'updatedAt'


export type BadgeGroupingSelect = {
  id?: boolean
  createdAt?: boolean
  description?: boolean
  name?: boolean
  position?: boolean
  updatedAt?: boolean
}

type BadgeGroupingDefault = {
  id: true
  createdAt: true
  description: true
  name: true
  position: true
  updatedAt: true
}


type BadgeGroupingGetPayload<S extends boolean | BadgeGroupingSelect> = S extends true
  ? BadgeGrouping
  : S extends BadgeGroupingSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<BadgeGroupingDefault, S>>]: P extends BadgeGroupingScalars
        ? BadgeGrouping[P]
        : never
    }
   : never

export interface BadgeGroupingDelegate {
  <T extends FindManyBadgeGroupingArgs>(args?: Subset<T, FindManyBadgeGroupingArgs>): PromiseLike<Array<BadgeGroupingGetPayload<ExtractFindManyBadgeGroupingArgsSelect<T>>>>
  findOne<T extends FindOneBadgeGroupingArgs>(
    args: Subset<T, FindOneBadgeGroupingArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractFindOneBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  findMany<T extends FindManyBadgeGroupingArgs>(
    args?: Subset<T, FindManyBadgeGroupingArgs>
  ): PromiseLike<Array<BadgeGroupingGetPayload<ExtractFindManyBadgeGroupingArgsSelect<T>>>>
  create<T extends BadgeGroupingCreateArgs>(
    args: Subset<T, BadgeGroupingCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingCreateArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  update<T extends BadgeGroupingUpdateArgs>(
    args: Subset<T, BadgeGroupingUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingUpdateArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  updateMany<T extends BadgeGroupingUpdateManyArgs>(
    args: Subset<T, BadgeGroupingUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingUpdateManyArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  upsert<T extends BadgeGroupingUpsertArgs>(
    args: Subset<T, BadgeGroupingUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingUpsertArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  delete<T extends BadgeGroupingDeleteArgs>(
    args: Subset<T, BadgeGroupingDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingDeleteArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
  deleteMany<T extends BadgeGroupingDeleteManyArgs>(
    args: Subset<T, BadgeGroupingDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingDeleteManyArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>
}
function BadgeGroupingDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): BadgeGroupingDelegate {
  const BadgeGrouping = <T extends FindManyBadgeGroupingArgs>(args: Subset<T, FindManyBadgeGroupingArgs>) => new BadgeGroupingClient<PromiseLike<Array<BadgeGroupingGetPayload<ExtractFindManyBadgeGroupingArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'badgeGroupings', 'badgeGroupings', args, [])
  BadgeGrouping.findOne = <T extends FindOneBadgeGroupingArgs>(args: Subset<T, FindOneBadgeGroupingArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'query',
    'badgeGrouping',
    'badgeGroupings.findOne',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'query',
    'badgeGrouping',
    'badgeGroupings.findOne',
    args,
    []
  )
  BadgeGrouping.findMany = <T extends FindManyBadgeGroupingArgs>(args: Subset<T, FindManyBadgeGroupingArgs>) => new BadgeGroupingClient<PromiseLike<Array<BadgeGroupingGetPayload<ExtractFindManyBadgeGroupingArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'badgeGroupings',
    'badgeGroupings.findMany',
    args,
    []
  )
  BadgeGrouping.create = <T extends BadgeGroupingCreateArgs>(args: Subset<T, BadgeGroupingCreateArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'createBadgeGrouping',
    'badgeGroupings.create',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'createBadgeGrouping',
    'badgeGroupings.create',
    args,
    []
  )
  BadgeGrouping.update = <T extends BadgeGroupingUpdateArgs>(args: Subset<T, BadgeGroupingUpdateArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadgeGrouping',
    'badgeGroupings.update',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadgeGrouping',
    'badgeGroupings.update',
    args,
    []
  )
  BadgeGrouping.updateMany = <T extends BadgeGroupingUpdateManyArgs>(args: Subset<T, BadgeGroupingUpdateManyArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadgeGroupings',
    'badgeGroupings.updateMany',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadgeGroupings',
    'badgeGroupings.updateMany',
    args,
    []
  )
  BadgeGrouping.upsert = <T extends BadgeGroupingUpsertArgs>(args: Subset<T, BadgeGroupingUpsertArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadgeGrouping',
    'badgeGroupings.upsert',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadgeGrouping',
    'badgeGroupings.upsert',
    args,
    []
  )
  BadgeGrouping.delete = <T extends BadgeGroupingDeleteArgs>(args: Subset<T, BadgeGroupingDeleteArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadgeGrouping',
    'badgeGroupings.delete',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadgeGrouping',
    'badgeGroupings.delete',
    args,
    []
  )
  BadgeGrouping.deleteMany = <T extends BadgeGroupingDeleteManyArgs>(args: Subset<T, BadgeGroupingDeleteManyArgs>) => args.select ? new BadgeGroupingClient<'select' extends keyof T ? PromiseLike<BadgeGroupingGetPayload<ExtractBadgeGroupingArgsSelect<T>>> : BadgeGroupingClient<BadgeGrouping>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadgeGroupings',
    'badgeGroupings.deleteMany',
    args,
    []
  ) : new BadgeGroupingClient<BadgeGrouping>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadgeGroupings',
    'badgeGroupings.deleteMany',
    args,
    []
  )
  return BadgeGrouping as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class BadgeGroupingClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: BadgeGroupingArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'BadgeGrouping').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'BadgeGrouping').catch(onrejected)
  }
}


// InputTypes

export type FindOneBadgeGroupingArgs = {
  select?: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
}

export type FindOneBadgeGroupingArgsWithSelect = {
  select: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
}

type ExtractFindOneBadgeGroupingArgsSelect<S extends undefined | boolean | FindOneBadgeGroupingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneBadgeGroupingArgsWithSelect
  ? S['select']
  : true


export type FindManyBadgeGroupingArgs = {
  select?: BadgeGroupingSelect
  where?: BadgeGroupingWhereInput
  orderBy?: BadgeGroupingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyBadgeGroupingArgsWithSelect = {
  select: BadgeGroupingSelect
  where?: BadgeGroupingWhereInput
  orderBy?: BadgeGroupingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyBadgeGroupingArgsSelect<S extends undefined | boolean | FindManyBadgeGroupingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyBadgeGroupingArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingCreateArgs = {
  select?: BadgeGroupingSelect
  data: BadgeGroupingCreateInput
}

export type BadgeGroupingCreateArgsWithSelect = {
  select: BadgeGroupingSelect
  data: BadgeGroupingCreateInput
}

type ExtractBadgeGroupingCreateArgsSelect<S extends undefined | boolean | BadgeGroupingCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingCreateArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingUpdateArgs = {
  select?: BadgeGroupingSelect
  data: BadgeGroupingUpdateInput
  where: BadgeGroupingWhereUniqueInput
}

export type BadgeGroupingUpdateArgsWithSelect = {
  select: BadgeGroupingSelect
  data: BadgeGroupingUpdateInput
  where: BadgeGroupingWhereUniqueInput
}

type ExtractBadgeGroupingUpdateArgsSelect<S extends undefined | boolean | BadgeGroupingUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingUpdateArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingUpdateManyArgs = {
  select?: BadgeGroupingSelect
  data: BadgeGroupingUpdateManyMutationInput
  where?: BadgeGroupingWhereInput
}

export type BadgeGroupingUpdateManyArgsWithSelect = {
  select: BadgeGroupingSelect
  data: BadgeGroupingUpdateManyMutationInput
  where?: BadgeGroupingWhereInput
}

type ExtractBadgeGroupingUpdateManyArgsSelect<S extends undefined | boolean | BadgeGroupingUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingUpdateManyArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingUpsertArgs = {
  select?: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
  create: BadgeGroupingCreateInput
  update: BadgeGroupingUpdateInput
}

export type BadgeGroupingUpsertArgsWithSelect = {
  select: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
  create: BadgeGroupingCreateInput
  update: BadgeGroupingUpdateInput
}

type ExtractBadgeGroupingUpsertArgsSelect<S extends undefined | boolean | BadgeGroupingUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingUpsertArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingDeleteArgs = {
  select?: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
}

export type BadgeGroupingDeleteArgsWithSelect = {
  select: BadgeGroupingSelect
  where: BadgeGroupingWhereUniqueInput
}

type ExtractBadgeGroupingDeleteArgsSelect<S extends undefined | boolean | BadgeGroupingDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingDeleteArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingDeleteManyArgs = {
  select?: BadgeGroupingSelect
  where?: BadgeGroupingWhereInput
}

export type BadgeGroupingDeleteManyArgsWithSelect = {
  select: BadgeGroupingSelect
  where?: BadgeGroupingWhereInput
}

type ExtractBadgeGroupingDeleteManyArgsSelect<S extends undefined | boolean | BadgeGroupingDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingDeleteManyArgsWithSelect
  ? S['select']
  : true


export type BadgeGroupingArgs = {
  select?: BadgeGroupingSelect
}

export type BadgeGroupingArgsWithSelect = {
  select: BadgeGroupingSelect
}

type ExtractBadgeGroupingArgsSelect<S extends undefined | boolean | BadgeGroupingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeGroupingArgsWithSelect
  ? S['select']
  : true



/**
 * Model BadgeType
 */

export type BadgeType = {
  id: number
  createdAt: string
  name: string
  updatedAt: string
}

export type BadgeTypeScalars = 'id' | 'createdAt' | 'name' | 'updatedAt'


export type BadgeTypeSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  updatedAt?: boolean
}

type BadgeTypeDefault = {
  id: true
  createdAt: true
  name: true
  updatedAt: true
}


type BadgeTypeGetPayload<S extends boolean | BadgeTypeSelect> = S extends true
  ? BadgeType
  : S extends BadgeTypeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<BadgeTypeDefault, S>>]: P extends BadgeTypeScalars
        ? BadgeType[P]
        : never
    }
   : never

export interface BadgeTypeDelegate {
  <T extends FindManyBadgeTypeArgs>(args?: Subset<T, FindManyBadgeTypeArgs>): PromiseLike<Array<BadgeTypeGetPayload<ExtractFindManyBadgeTypeArgsSelect<T>>>>
  findOne<T extends FindOneBadgeTypeArgs>(
    args: Subset<T, FindOneBadgeTypeArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractFindOneBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  findMany<T extends FindManyBadgeTypeArgs>(
    args?: Subset<T, FindManyBadgeTypeArgs>
  ): PromiseLike<Array<BadgeTypeGetPayload<ExtractFindManyBadgeTypeArgsSelect<T>>>>
  create<T extends BadgeTypeCreateArgs>(
    args: Subset<T, BadgeTypeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeCreateArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  update<T extends BadgeTypeUpdateArgs>(
    args: Subset<T, BadgeTypeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeUpdateArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  updateMany<T extends BadgeTypeUpdateManyArgs>(
    args: Subset<T, BadgeTypeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeUpdateManyArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  upsert<T extends BadgeTypeUpsertArgs>(
    args: Subset<T, BadgeTypeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeUpsertArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  delete<T extends BadgeTypeDeleteArgs>(
    args: Subset<T, BadgeTypeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeDeleteArgsSelect<T>>> : BadgeTypeClient<BadgeType>
  deleteMany<T extends BadgeTypeDeleteManyArgs>(
    args: Subset<T, BadgeTypeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeDeleteManyArgsSelect<T>>> : BadgeTypeClient<BadgeType>
}
function BadgeTypeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): BadgeTypeDelegate {
  const BadgeType = <T extends FindManyBadgeTypeArgs>(args: Subset<T, FindManyBadgeTypeArgs>) => new BadgeTypeClient<PromiseLike<Array<BadgeTypeGetPayload<ExtractFindManyBadgeTypeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'badgeTypes', 'badgeTypes', args, [])
  BadgeType.findOne = <T extends FindOneBadgeTypeArgs>(args: Subset<T, FindOneBadgeTypeArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'query',
    'badgeType',
    'badgeTypes.findOne',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'query',
    'badgeType',
    'badgeTypes.findOne',
    args,
    []
  )
  BadgeType.findMany = <T extends FindManyBadgeTypeArgs>(args: Subset<T, FindManyBadgeTypeArgs>) => new BadgeTypeClient<PromiseLike<Array<BadgeTypeGetPayload<ExtractFindManyBadgeTypeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'badgeTypes',
    'badgeTypes.findMany',
    args,
    []
  )
  BadgeType.create = <T extends BadgeTypeCreateArgs>(args: Subset<T, BadgeTypeCreateArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'createBadgeType',
    'badgeTypes.create',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'createBadgeType',
    'badgeTypes.create',
    args,
    []
  )
  BadgeType.update = <T extends BadgeTypeUpdateArgs>(args: Subset<T, BadgeTypeUpdateArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadgeType',
    'badgeTypes.update',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'updateBadgeType',
    'badgeTypes.update',
    args,
    []
  )
  BadgeType.updateMany = <T extends BadgeTypeUpdateManyArgs>(args: Subset<T, BadgeTypeUpdateManyArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadgeTypes',
    'badgeTypes.updateMany',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyBadgeTypes',
    'badgeTypes.updateMany',
    args,
    []
  )
  BadgeType.upsert = <T extends BadgeTypeUpsertArgs>(args: Subset<T, BadgeTypeUpsertArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadgeType',
    'badgeTypes.upsert',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'upsertBadgeType',
    'badgeTypes.upsert',
    args,
    []
  )
  BadgeType.delete = <T extends BadgeTypeDeleteArgs>(args: Subset<T, BadgeTypeDeleteArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadgeType',
    'badgeTypes.delete',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'deleteBadgeType',
    'badgeTypes.delete',
    args,
    []
  )
  BadgeType.deleteMany = <T extends BadgeTypeDeleteManyArgs>(args: Subset<T, BadgeTypeDeleteManyArgs>) => args.select ? new BadgeTypeClient<'select' extends keyof T ? PromiseLike<BadgeTypeGetPayload<ExtractBadgeTypeArgsSelect<T>>> : BadgeTypeClient<BadgeType>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadgeTypes',
    'badgeTypes.deleteMany',
    args,
    []
  ) : new BadgeTypeClient<BadgeType>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyBadgeTypes',
    'badgeTypes.deleteMany',
    args,
    []
  )
  return BadgeType as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class BadgeTypeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: BadgeTypeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'BadgeType').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'BadgeType').catch(onrejected)
  }
}


// InputTypes

export type FindOneBadgeTypeArgs = {
  select?: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
}

export type FindOneBadgeTypeArgsWithSelect = {
  select: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
}

type ExtractFindOneBadgeTypeArgsSelect<S extends undefined | boolean | FindOneBadgeTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneBadgeTypeArgsWithSelect
  ? S['select']
  : true


export type FindManyBadgeTypeArgs = {
  select?: BadgeTypeSelect
  where?: BadgeTypeWhereInput
  orderBy?: BadgeTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyBadgeTypeArgsWithSelect = {
  select: BadgeTypeSelect
  where?: BadgeTypeWhereInput
  orderBy?: BadgeTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyBadgeTypeArgsSelect<S extends undefined | boolean | FindManyBadgeTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyBadgeTypeArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeCreateArgs = {
  select?: BadgeTypeSelect
  data: BadgeTypeCreateInput
}

export type BadgeTypeCreateArgsWithSelect = {
  select: BadgeTypeSelect
  data: BadgeTypeCreateInput
}

type ExtractBadgeTypeCreateArgsSelect<S extends undefined | boolean | BadgeTypeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeCreateArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeUpdateArgs = {
  select?: BadgeTypeSelect
  data: BadgeTypeUpdateInput
  where: BadgeTypeWhereUniqueInput
}

export type BadgeTypeUpdateArgsWithSelect = {
  select: BadgeTypeSelect
  data: BadgeTypeUpdateInput
  where: BadgeTypeWhereUniqueInput
}

type ExtractBadgeTypeUpdateArgsSelect<S extends undefined | boolean | BadgeTypeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeUpdateArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeUpdateManyArgs = {
  select?: BadgeTypeSelect
  data: BadgeTypeUpdateManyMutationInput
  where?: BadgeTypeWhereInput
}

export type BadgeTypeUpdateManyArgsWithSelect = {
  select: BadgeTypeSelect
  data: BadgeTypeUpdateManyMutationInput
  where?: BadgeTypeWhereInput
}

type ExtractBadgeTypeUpdateManyArgsSelect<S extends undefined | boolean | BadgeTypeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeUpsertArgs = {
  select?: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
  create: BadgeTypeCreateInput
  update: BadgeTypeUpdateInput
}

export type BadgeTypeUpsertArgsWithSelect = {
  select: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
  create: BadgeTypeCreateInput
  update: BadgeTypeUpdateInput
}

type ExtractBadgeTypeUpsertArgsSelect<S extends undefined | boolean | BadgeTypeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeUpsertArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeDeleteArgs = {
  select?: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
}

export type BadgeTypeDeleteArgsWithSelect = {
  select: BadgeTypeSelect
  where: BadgeTypeWhereUniqueInput
}

type ExtractBadgeTypeDeleteArgsSelect<S extends undefined | boolean | BadgeTypeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeDeleteArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeDeleteManyArgs = {
  select?: BadgeTypeSelect
  where?: BadgeTypeWhereInput
}

export type BadgeTypeDeleteManyArgsWithSelect = {
  select: BadgeTypeSelect
  where?: BadgeTypeWhereInput
}

type ExtractBadgeTypeDeleteManyArgsSelect<S extends undefined | boolean | BadgeTypeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type BadgeTypeArgs = {
  select?: BadgeTypeSelect
}

export type BadgeTypeArgsWithSelect = {
  select: BadgeTypeSelect
}

type ExtractBadgeTypeArgsSelect<S extends undefined | boolean | BadgeTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends BadgeTypeArgsWithSelect
  ? S['select']
  : true



/**
 * Model Category
 */

export type Category = {
  id: number
  allowBadges: boolean
  allTopicsWiki: boolean
  autoCloseBasedOnLastPost: boolean | null
  autoCloseHours: number | null
  color: string
  containsMessages: boolean | null
  createdAt: string
  defaultTopPeriod: string | null
  defaultView: string | null
  description: string | null
  emailIn: string | null
  emailInAllowStrangers: boolean | null
  latestPostId: number | null
  latestTopicId: number | null
  mailinglistMirror: boolean
  minimumRequiredTags: number | null
  name: string
  nameLower: string
  navigateToFirstPostAfterRead: boolean
  numFeaturedTopics: number | null
  parentCategoryId: number | null
  position: number | null
  postCount: number
  postsDay: number | null
  postsMonth: number | null
  postsWeek: number | null
  postsYear: number | null
  readRestricted: boolean
  showSubcategoryList: boolean | null
  slug: string
  sortAscending: boolean | null
  sortOrder: string | null
  subcategoryListStyle: string | null
  suppressFromLatest: boolean | null
  textColor: string
  topicCount: number
  topicFeaturedLinkAllowed: boolean | null
  topicId: number | null
  topicsDay: number | null
  topicsMonth: number | null
  topicsWeek: number | null
  topicsYear: number | null
  topicTemplate: string | null
  updatedAt: string
  uploadedBackgroundId: number | null
  uploadedLogoId: number | null
  userId: number
}

export type CategoryScalars = 'id' | 'allowBadges' | 'allTopicsWiki' | 'autoCloseBasedOnLastPost' | 'autoCloseHours' | 'color' | 'containsMessages' | 'createdAt' | 'defaultTopPeriod' | 'defaultView' | 'description' | 'emailIn' | 'emailInAllowStrangers' | 'latestPostId' | 'latestTopicId' | 'mailinglistMirror' | 'minimumRequiredTags' | 'name' | 'nameLower' | 'navigateToFirstPostAfterRead' | 'numFeaturedTopics' | 'parentCategoryId' | 'position' | 'postCount' | 'postsDay' | 'postsMonth' | 'postsWeek' | 'postsYear' | 'readRestricted' | 'showSubcategoryList' | 'slug' | 'sortAscending' | 'sortOrder' | 'subcategoryListStyle' | 'suppressFromLatest' | 'textColor' | 'topicCount' | 'topicFeaturedLinkAllowed' | 'topicId' | 'topicsDay' | 'topicsMonth' | 'topicsWeek' | 'topicsYear' | 'topicTemplate' | 'updatedAt' | 'uploadedBackgroundId' | 'uploadedLogoId' | 'userId'


export type CategorySelect = {
  id?: boolean
  allowBadges?: boolean
  allTopicsWiki?: boolean
  autoCloseBasedOnLastPost?: boolean
  autoCloseHours?: boolean
  color?: boolean
  containsMessages?: boolean
  createdAt?: boolean
  defaultTopPeriod?: boolean
  defaultView?: boolean
  description?: boolean
  emailIn?: boolean
  emailInAllowStrangers?: boolean
  latestPostId?: boolean
  latestTopicId?: boolean
  mailinglistMirror?: boolean
  minimumRequiredTags?: boolean
  name?: boolean
  nameLower?: boolean
  navigateToFirstPostAfterRead?: boolean
  numFeaturedTopics?: boolean
  parentCategoryId?: boolean
  position?: boolean
  postCount?: boolean
  postsDay?: boolean
  postsMonth?: boolean
  postsWeek?: boolean
  postsYear?: boolean
  readRestricted?: boolean
  showSubcategoryList?: boolean
  slug?: boolean
  sortAscending?: boolean
  sortOrder?: boolean
  subcategoryListStyle?: boolean
  suppressFromLatest?: boolean
  textColor?: boolean
  topicCount?: boolean
  topicFeaturedLinkAllowed?: boolean
  topicId?: boolean
  topicsDay?: boolean
  topicsMonth?: boolean
  topicsWeek?: boolean
  topicsYear?: boolean
  topicTemplate?: boolean
  updatedAt?: boolean
  uploadedBackgroundId?: boolean
  uploadedLogoId?: boolean
  userId?: boolean
}

type CategoryDefault = {
  id: true
  allowBadges: true
  allTopicsWiki: true
  autoCloseBasedOnLastPost: true
  autoCloseHours: true
  color: true
  containsMessages: true
  createdAt: true
  defaultTopPeriod: true
  defaultView: true
  description: true
  emailIn: true
  emailInAllowStrangers: true
  latestPostId: true
  latestTopicId: true
  mailinglistMirror: true
  minimumRequiredTags: true
  name: true
  nameLower: true
  navigateToFirstPostAfterRead: true
  numFeaturedTopics: true
  parentCategoryId: true
  position: true
  postCount: true
  postsDay: true
  postsMonth: true
  postsWeek: true
  postsYear: true
  readRestricted: true
  showSubcategoryList: true
  slug: true
  sortAscending: true
  sortOrder: true
  subcategoryListStyle: true
  suppressFromLatest: true
  textColor: true
  topicCount: true
  topicFeaturedLinkAllowed: true
  topicId: true
  topicsDay: true
  topicsMonth: true
  topicsWeek: true
  topicsYear: true
  topicTemplate: true
  updatedAt: true
  uploadedBackgroundId: true
  uploadedLogoId: true
  userId: true
}


type CategoryGetPayload<S extends boolean | CategorySelect> = S extends true
  ? Category
  : S extends CategorySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryDefault, S>>]: P extends CategoryScalars
        ? Category[P]
        : never
    }
   : never

export interface CategoryDelegate {
  <T extends FindManyCategoryArgs>(args?: Subset<T, FindManyCategoryArgs>): PromiseLike<Array<CategoryGetPayload<ExtractFindManyCategoryArgsSelect<T>>>>
  findOne<T extends FindOneCategoryArgs>(
    args: Subset<T, FindOneCategoryArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractFindOneCategoryArgsSelect<T>>> : CategoryClient<Category>
  findMany<T extends FindManyCategoryArgs>(
    args?: Subset<T, FindManyCategoryArgs>
  ): PromiseLike<Array<CategoryGetPayload<ExtractFindManyCategoryArgsSelect<T>>>>
  create<T extends CategoryCreateArgs>(
    args: Subset<T, CategoryCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryCreateArgsSelect<T>>> : CategoryClient<Category>
  update<T extends CategoryUpdateArgs>(
    args: Subset<T, CategoryUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryUpdateArgsSelect<T>>> : CategoryClient<Category>
  updateMany<T extends CategoryUpdateManyArgs>(
    args: Subset<T, CategoryUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryUpdateManyArgsSelect<T>>> : CategoryClient<Category>
  upsert<T extends CategoryUpsertArgs>(
    args: Subset<T, CategoryUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryUpsertArgsSelect<T>>> : CategoryClient<Category>
  delete<T extends CategoryDeleteArgs>(
    args: Subset<T, CategoryDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryDeleteArgsSelect<T>>> : CategoryClient<Category>
  deleteMany<T extends CategoryDeleteManyArgs>(
    args: Subset<T, CategoryDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryDeleteManyArgsSelect<T>>> : CategoryClient<Category>
}
function CategoryDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryDelegate {
  const Category = <T extends FindManyCategoryArgs>(args: Subset<T, FindManyCategoryArgs>) => new CategoryClient<PromiseLike<Array<CategoryGetPayload<ExtractFindManyCategoryArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categories', 'categories', args, [])
  Category.findOne = <T extends FindOneCategoryArgs>(args: Subset<T, FindOneCategoryArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'query',
    'category',
    'categories.findOne',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'query',
    'category',
    'categories.findOne',
    args,
    []
  )
  Category.findMany = <T extends FindManyCategoryArgs>(args: Subset<T, FindManyCategoryArgs>) => new CategoryClient<PromiseLike<Array<CategoryGetPayload<ExtractFindManyCategoryArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categories',
    'categories.findMany',
    args,
    []
  )
  Category.create = <T extends CategoryCreateArgs>(args: Subset<T, CategoryCreateArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategory',
    'categories.create',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'createCategory',
    'categories.create',
    args,
    []
  )
  Category.update = <T extends CategoryUpdateArgs>(args: Subset<T, CategoryUpdateArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategory',
    'categories.update',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategory',
    'categories.update',
    args,
    []
  )
  Category.updateMany = <T extends CategoryUpdateManyArgs>(args: Subset<T, CategoryUpdateManyArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategories',
    'categories.updateMany',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategories',
    'categories.updateMany',
    args,
    []
  )
  Category.upsert = <T extends CategoryUpsertArgs>(args: Subset<T, CategoryUpsertArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategory',
    'categories.upsert',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategory',
    'categories.upsert',
    args,
    []
  )
  Category.delete = <T extends CategoryDeleteArgs>(args: Subset<T, CategoryDeleteArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategory',
    'categories.delete',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategory',
    'categories.delete',
    args,
    []
  )
  Category.deleteMany = <T extends CategoryDeleteManyArgs>(args: Subset<T, CategoryDeleteManyArgs>) => args.select ? new CategoryClient<'select' extends keyof T ? PromiseLike<CategoryGetPayload<ExtractCategoryArgsSelect<T>>> : CategoryClient<Category>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategories',
    'categories.deleteMany',
    args,
    []
  ) : new CategoryClient<Category>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategories',
    'categories.deleteMany',
    args,
    []
  )
  return Category as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Category').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Category').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryArgs = {
  select?: CategorySelect
  where: CategoryWhereUniqueInput
}

export type FindOneCategoryArgsWithSelect = {
  select: CategorySelect
  where: CategoryWhereUniqueInput
}

type ExtractFindOneCategoryArgsSelect<S extends undefined | boolean | FindOneCategoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryArgs = {
  select?: CategorySelect
  where?: CategoryWhereInput
  orderBy?: CategoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryArgsWithSelect = {
  select: CategorySelect
  where?: CategoryWhereInput
  orderBy?: CategoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryArgsSelect<S extends undefined | boolean | FindManyCategoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryArgsWithSelect
  ? S['select']
  : true


export type CategoryCreateArgs = {
  select?: CategorySelect
  data: CategoryCreateInput
}

export type CategoryCreateArgsWithSelect = {
  select: CategorySelect
  data: CategoryCreateInput
}

type ExtractCategoryCreateArgsSelect<S extends undefined | boolean | CategoryCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryUpdateArgs = {
  select?: CategorySelect
  data: CategoryUpdateInput
  where: CategoryWhereUniqueInput
}

export type CategoryUpdateArgsWithSelect = {
  select: CategorySelect
  data: CategoryUpdateInput
  where: CategoryWhereUniqueInput
}

type ExtractCategoryUpdateArgsSelect<S extends undefined | boolean | CategoryUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryUpdateManyArgs = {
  select?: CategorySelect
  data: CategoryUpdateManyMutationInput
  where?: CategoryWhereInput
}

export type CategoryUpdateManyArgsWithSelect = {
  select: CategorySelect
  data: CategoryUpdateManyMutationInput
  where?: CategoryWhereInput
}

type ExtractCategoryUpdateManyArgsSelect<S extends undefined | boolean | CategoryUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryUpsertArgs = {
  select?: CategorySelect
  where: CategoryWhereUniqueInput
  create: CategoryCreateInput
  update: CategoryUpdateInput
}

export type CategoryUpsertArgsWithSelect = {
  select: CategorySelect
  where: CategoryWhereUniqueInput
  create: CategoryCreateInput
  update: CategoryUpdateInput
}

type ExtractCategoryUpsertArgsSelect<S extends undefined | boolean | CategoryUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryDeleteArgs = {
  select?: CategorySelect
  where: CategoryWhereUniqueInput
}

export type CategoryDeleteArgsWithSelect = {
  select: CategorySelect
  where: CategoryWhereUniqueInput
}

type ExtractCategoryDeleteArgsSelect<S extends undefined | boolean | CategoryDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryDeleteManyArgs = {
  select?: CategorySelect
  where?: CategoryWhereInput
}

export type CategoryDeleteManyArgsWithSelect = {
  select: CategorySelect
  where?: CategoryWhereInput
}

type ExtractCategoryDeleteManyArgsSelect<S extends undefined | boolean | CategoryDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryArgs = {
  select?: CategorySelect
}

export type CategoryArgsWithSelect = {
  select: CategorySelect
}

type ExtractCategoryArgsSelect<S extends undefined | boolean | CategoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryCustomField
 */

export type CategoryCustomField = {
  id: number
  categoryId: number
  createdAt: string
  name: string
  updatedAt: string
  value: string | null
}

export type CategoryCustomFieldScalars = 'id' | 'categoryId' | 'createdAt' | 'name' | 'updatedAt' | 'value'


export type CategoryCustomFieldSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  name?: boolean
  updatedAt?: boolean
  value?: boolean
}

type CategoryCustomFieldDefault = {
  id: true
  categoryId: true
  createdAt: true
  name: true
  updatedAt: true
  value: true
}


type CategoryCustomFieldGetPayload<S extends boolean | CategoryCustomFieldSelect> = S extends true
  ? CategoryCustomField
  : S extends CategoryCustomFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryCustomFieldDefault, S>>]: P extends CategoryCustomFieldScalars
        ? CategoryCustomField[P]
        : never
    }
   : never

export interface CategoryCustomFieldDelegate {
  <T extends FindManyCategoryCustomFieldArgs>(args?: Subset<T, FindManyCategoryCustomFieldArgs>): PromiseLike<Array<CategoryCustomFieldGetPayload<ExtractFindManyCategoryCustomFieldArgsSelect<T>>>>
  findOne<T extends FindOneCategoryCustomFieldArgs>(
    args: Subset<T, FindOneCategoryCustomFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractFindOneCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  findMany<T extends FindManyCategoryCustomFieldArgs>(
    args?: Subset<T, FindManyCategoryCustomFieldArgs>
  ): PromiseLike<Array<CategoryCustomFieldGetPayload<ExtractFindManyCategoryCustomFieldArgsSelect<T>>>>
  create<T extends CategoryCustomFieldCreateArgs>(
    args: Subset<T, CategoryCustomFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldCreateArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  update<T extends CategoryCustomFieldUpdateArgs>(
    args: Subset<T, CategoryCustomFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldUpdateArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  updateMany<T extends CategoryCustomFieldUpdateManyArgs>(
    args: Subset<T, CategoryCustomFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldUpdateManyArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  upsert<T extends CategoryCustomFieldUpsertArgs>(
    args: Subset<T, CategoryCustomFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldUpsertArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  delete<T extends CategoryCustomFieldDeleteArgs>(
    args: Subset<T, CategoryCustomFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldDeleteArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
  deleteMany<T extends CategoryCustomFieldDeleteManyArgs>(
    args: Subset<T, CategoryCustomFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldDeleteManyArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>
}
function CategoryCustomFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryCustomFieldDelegate {
  const CategoryCustomField = <T extends FindManyCategoryCustomFieldArgs>(args: Subset<T, FindManyCategoryCustomFieldArgs>) => new CategoryCustomFieldClient<PromiseLike<Array<CategoryCustomFieldGetPayload<ExtractFindManyCategoryCustomFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryCustomFields', 'categoryCustomFields', args, [])
  CategoryCustomField.findOne = <T extends FindOneCategoryCustomFieldArgs>(args: Subset<T, FindOneCategoryCustomFieldArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'query',
    'categoryCustomField',
    'categoryCustomFields.findOne',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'query',
    'categoryCustomField',
    'categoryCustomFields.findOne',
    args,
    []
  )
  CategoryCustomField.findMany = <T extends FindManyCategoryCustomFieldArgs>(args: Subset<T, FindManyCategoryCustomFieldArgs>) => new CategoryCustomFieldClient<PromiseLike<Array<CategoryCustomFieldGetPayload<ExtractFindManyCategoryCustomFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryCustomFields',
    'categoryCustomFields.findMany',
    args,
    []
  )
  CategoryCustomField.create = <T extends CategoryCustomFieldCreateArgs>(args: Subset<T, CategoryCustomFieldCreateArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryCustomField',
    'categoryCustomFields.create',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryCustomField',
    'categoryCustomFields.create',
    args,
    []
  )
  CategoryCustomField.update = <T extends CategoryCustomFieldUpdateArgs>(args: Subset<T, CategoryCustomFieldUpdateArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryCustomField',
    'categoryCustomFields.update',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryCustomField',
    'categoryCustomFields.update',
    args,
    []
  )
  CategoryCustomField.updateMany = <T extends CategoryCustomFieldUpdateManyArgs>(args: Subset<T, CategoryCustomFieldUpdateManyArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryCustomFields',
    'categoryCustomFields.updateMany',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryCustomFields',
    'categoryCustomFields.updateMany',
    args,
    []
  )
  CategoryCustomField.upsert = <T extends CategoryCustomFieldUpsertArgs>(args: Subset<T, CategoryCustomFieldUpsertArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryCustomField',
    'categoryCustomFields.upsert',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryCustomField',
    'categoryCustomFields.upsert',
    args,
    []
  )
  CategoryCustomField.delete = <T extends CategoryCustomFieldDeleteArgs>(args: Subset<T, CategoryCustomFieldDeleteArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryCustomField',
    'categoryCustomFields.delete',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryCustomField',
    'categoryCustomFields.delete',
    args,
    []
  )
  CategoryCustomField.deleteMany = <T extends CategoryCustomFieldDeleteManyArgs>(args: Subset<T, CategoryCustomFieldDeleteManyArgs>) => args.select ? new CategoryCustomFieldClient<'select' extends keyof T ? PromiseLike<CategoryCustomFieldGetPayload<ExtractCategoryCustomFieldArgsSelect<T>>> : CategoryCustomFieldClient<CategoryCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryCustomFields',
    'categoryCustomFields.deleteMany',
    args,
    []
  ) : new CategoryCustomFieldClient<CategoryCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryCustomFields',
    'categoryCustomFields.deleteMany',
    args,
    []
  )
  return CategoryCustomField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryCustomFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryCustomFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryCustomField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryCustomField').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryCustomFieldArgs = {
  select?: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
}

export type FindOneCategoryCustomFieldArgsWithSelect = {
  select: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
}

type ExtractFindOneCategoryCustomFieldArgsSelect<S extends undefined | boolean | FindOneCategoryCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryCustomFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryCustomFieldArgs = {
  select?: CategoryCustomFieldSelect
  where?: CategoryCustomFieldWhereInput
  orderBy?: CategoryCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryCustomFieldArgsWithSelect = {
  select: CategoryCustomFieldSelect
  where?: CategoryCustomFieldWhereInput
  orderBy?: CategoryCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryCustomFieldArgsSelect<S extends undefined | boolean | FindManyCategoryCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryCustomFieldArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldCreateArgs = {
  select?: CategoryCustomFieldSelect
  data: CategoryCustomFieldCreateInput
}

export type CategoryCustomFieldCreateArgsWithSelect = {
  select: CategoryCustomFieldSelect
  data: CategoryCustomFieldCreateInput
}

type ExtractCategoryCustomFieldCreateArgsSelect<S extends undefined | boolean | CategoryCustomFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldUpdateArgs = {
  select?: CategoryCustomFieldSelect
  data: CategoryCustomFieldUpdateInput
  where: CategoryCustomFieldWhereUniqueInput
}

export type CategoryCustomFieldUpdateArgsWithSelect = {
  select: CategoryCustomFieldSelect
  data: CategoryCustomFieldUpdateInput
  where: CategoryCustomFieldWhereUniqueInput
}

type ExtractCategoryCustomFieldUpdateArgsSelect<S extends undefined | boolean | CategoryCustomFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldUpdateManyArgs = {
  select?: CategoryCustomFieldSelect
  data: CategoryCustomFieldUpdateManyMutationInput
  where?: CategoryCustomFieldWhereInput
}

export type CategoryCustomFieldUpdateManyArgsWithSelect = {
  select: CategoryCustomFieldSelect
  data: CategoryCustomFieldUpdateManyMutationInput
  where?: CategoryCustomFieldWhereInput
}

type ExtractCategoryCustomFieldUpdateManyArgsSelect<S extends undefined | boolean | CategoryCustomFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldUpsertArgs = {
  select?: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
  create: CategoryCustomFieldCreateInput
  update: CategoryCustomFieldUpdateInput
}

export type CategoryCustomFieldUpsertArgsWithSelect = {
  select: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
  create: CategoryCustomFieldCreateInput
  update: CategoryCustomFieldUpdateInput
}

type ExtractCategoryCustomFieldUpsertArgsSelect<S extends undefined | boolean | CategoryCustomFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldDeleteArgs = {
  select?: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
}

export type CategoryCustomFieldDeleteArgsWithSelect = {
  select: CategoryCustomFieldSelect
  where: CategoryCustomFieldWhereUniqueInput
}

type ExtractCategoryCustomFieldDeleteArgsSelect<S extends undefined | boolean | CategoryCustomFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldDeleteManyArgs = {
  select?: CategoryCustomFieldSelect
  where?: CategoryCustomFieldWhereInput
}

export type CategoryCustomFieldDeleteManyArgsWithSelect = {
  select: CategoryCustomFieldSelect
  where?: CategoryCustomFieldWhereInput
}

type ExtractCategoryCustomFieldDeleteManyArgsSelect<S extends undefined | boolean | CategoryCustomFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryCustomFieldArgs = {
  select?: CategoryCustomFieldSelect
}

export type CategoryCustomFieldArgsWithSelect = {
  select: CategoryCustomFieldSelect
}

type ExtractCategoryCustomFieldArgsSelect<S extends undefined | boolean | CategoryCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryCustomFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryFeaturedTopic
 */

export type CategoryFeaturedTopic = {
  id: number
  categoryId: number
  createdAt: string
  rank: number
  topicId: number
  updatedAt: string
}

export type CategoryFeaturedTopicScalars = 'id' | 'categoryId' | 'createdAt' | 'rank' | 'topicId' | 'updatedAt'


export type CategoryFeaturedTopicSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  rank?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type CategoryFeaturedTopicDefault = {
  id: true
  categoryId: true
  createdAt: true
  rank: true
  topicId: true
  updatedAt: true
}


type CategoryFeaturedTopicGetPayload<S extends boolean | CategoryFeaturedTopicSelect> = S extends true
  ? CategoryFeaturedTopic
  : S extends CategoryFeaturedTopicSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryFeaturedTopicDefault, S>>]: P extends CategoryFeaturedTopicScalars
        ? CategoryFeaturedTopic[P]
        : never
    }
   : never

export interface CategoryFeaturedTopicDelegate {
  <T extends FindManyCategoryFeaturedTopicArgs>(args?: Subset<T, FindManyCategoryFeaturedTopicArgs>): PromiseLike<Array<CategoryFeaturedTopicGetPayload<ExtractFindManyCategoryFeaturedTopicArgsSelect<T>>>>
  findOne<T extends FindOneCategoryFeaturedTopicArgs>(
    args: Subset<T, FindOneCategoryFeaturedTopicArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractFindOneCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  findMany<T extends FindManyCategoryFeaturedTopicArgs>(
    args?: Subset<T, FindManyCategoryFeaturedTopicArgs>
  ): PromiseLike<Array<CategoryFeaturedTopicGetPayload<ExtractFindManyCategoryFeaturedTopicArgsSelect<T>>>>
  create<T extends CategoryFeaturedTopicCreateArgs>(
    args: Subset<T, CategoryFeaturedTopicCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicCreateArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  update<T extends CategoryFeaturedTopicUpdateArgs>(
    args: Subset<T, CategoryFeaturedTopicUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicUpdateArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  updateMany<T extends CategoryFeaturedTopicUpdateManyArgs>(
    args: Subset<T, CategoryFeaturedTopicUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicUpdateManyArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  upsert<T extends CategoryFeaturedTopicUpsertArgs>(
    args: Subset<T, CategoryFeaturedTopicUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicUpsertArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  delete<T extends CategoryFeaturedTopicDeleteArgs>(
    args: Subset<T, CategoryFeaturedTopicDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicDeleteArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
  deleteMany<T extends CategoryFeaturedTopicDeleteManyArgs>(
    args: Subset<T, CategoryFeaturedTopicDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicDeleteManyArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>
}
function CategoryFeaturedTopicDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryFeaturedTopicDelegate {
  const CategoryFeaturedTopic = <T extends FindManyCategoryFeaturedTopicArgs>(args: Subset<T, FindManyCategoryFeaturedTopicArgs>) => new CategoryFeaturedTopicClient<PromiseLike<Array<CategoryFeaturedTopicGetPayload<ExtractFindManyCategoryFeaturedTopicArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryFeaturedTopics', 'categoryFeaturedTopics', args, [])
  CategoryFeaturedTopic.findOne = <T extends FindOneCategoryFeaturedTopicArgs>(args: Subset<T, FindOneCategoryFeaturedTopicArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'query',
    'categoryFeaturedTopic',
    'categoryFeaturedTopics.findOne',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'query',
    'categoryFeaturedTopic',
    'categoryFeaturedTopics.findOne',
    args,
    []
  )
  CategoryFeaturedTopic.findMany = <T extends FindManyCategoryFeaturedTopicArgs>(args: Subset<T, FindManyCategoryFeaturedTopicArgs>) => new CategoryFeaturedTopicClient<PromiseLike<Array<CategoryFeaturedTopicGetPayload<ExtractFindManyCategoryFeaturedTopicArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryFeaturedTopics',
    'categoryFeaturedTopics.findMany',
    args,
    []
  )
  CategoryFeaturedTopic.create = <T extends CategoryFeaturedTopicCreateArgs>(args: Subset<T, CategoryFeaturedTopicCreateArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryFeaturedTopic',
    'categoryFeaturedTopics.create',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryFeaturedTopic',
    'categoryFeaturedTopics.create',
    args,
    []
  )
  CategoryFeaturedTopic.update = <T extends CategoryFeaturedTopicUpdateArgs>(args: Subset<T, CategoryFeaturedTopicUpdateArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryFeaturedTopic',
    'categoryFeaturedTopics.update',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryFeaturedTopic',
    'categoryFeaturedTopics.update',
    args,
    []
  )
  CategoryFeaturedTopic.updateMany = <T extends CategoryFeaturedTopicUpdateManyArgs>(args: Subset<T, CategoryFeaturedTopicUpdateManyArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryFeaturedTopics',
    'categoryFeaturedTopics.updateMany',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryFeaturedTopics',
    'categoryFeaturedTopics.updateMany',
    args,
    []
  )
  CategoryFeaturedTopic.upsert = <T extends CategoryFeaturedTopicUpsertArgs>(args: Subset<T, CategoryFeaturedTopicUpsertArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryFeaturedTopic',
    'categoryFeaturedTopics.upsert',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryFeaturedTopic',
    'categoryFeaturedTopics.upsert',
    args,
    []
  )
  CategoryFeaturedTopic.delete = <T extends CategoryFeaturedTopicDeleteArgs>(args: Subset<T, CategoryFeaturedTopicDeleteArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryFeaturedTopic',
    'categoryFeaturedTopics.delete',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryFeaturedTopic',
    'categoryFeaturedTopics.delete',
    args,
    []
  )
  CategoryFeaturedTopic.deleteMany = <T extends CategoryFeaturedTopicDeleteManyArgs>(args: Subset<T, CategoryFeaturedTopicDeleteManyArgs>) => args.select ? new CategoryFeaturedTopicClient<'select' extends keyof T ? PromiseLike<CategoryFeaturedTopicGetPayload<ExtractCategoryFeaturedTopicArgsSelect<T>>> : CategoryFeaturedTopicClient<CategoryFeaturedTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryFeaturedTopics',
    'categoryFeaturedTopics.deleteMany',
    args,
    []
  ) : new CategoryFeaturedTopicClient<CategoryFeaturedTopic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryFeaturedTopics',
    'categoryFeaturedTopics.deleteMany',
    args,
    []
  )
  return CategoryFeaturedTopic as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryFeaturedTopicClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryFeaturedTopicArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryFeaturedTopic').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryFeaturedTopic').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryFeaturedTopicArgs = {
  select?: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
}

export type FindOneCategoryFeaturedTopicArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
}

type ExtractFindOneCategoryFeaturedTopicArgsSelect<S extends undefined | boolean | FindOneCategoryFeaturedTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryFeaturedTopicArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryFeaturedTopicArgs = {
  select?: CategoryFeaturedTopicSelect
  where?: CategoryFeaturedTopicWhereInput
  orderBy?: CategoryFeaturedTopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryFeaturedTopicArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  where?: CategoryFeaturedTopicWhereInput
  orderBy?: CategoryFeaturedTopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryFeaturedTopicArgsSelect<S extends undefined | boolean | FindManyCategoryFeaturedTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryFeaturedTopicArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicCreateArgs = {
  select?: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicCreateInput
}

export type CategoryFeaturedTopicCreateArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicCreateInput
}

type ExtractCategoryFeaturedTopicCreateArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicUpdateArgs = {
  select?: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicUpdateInput
  where: CategoryFeaturedTopicWhereUniqueInput
}

export type CategoryFeaturedTopicUpdateArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicUpdateInput
  where: CategoryFeaturedTopicWhereUniqueInput
}

type ExtractCategoryFeaturedTopicUpdateArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicUpdateManyArgs = {
  select?: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicUpdateManyMutationInput
  where?: CategoryFeaturedTopicWhereInput
}

export type CategoryFeaturedTopicUpdateManyArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  data: CategoryFeaturedTopicUpdateManyMutationInput
  where?: CategoryFeaturedTopicWhereInput
}

type ExtractCategoryFeaturedTopicUpdateManyArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicUpsertArgs = {
  select?: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
  create: CategoryFeaturedTopicCreateInput
  update: CategoryFeaturedTopicUpdateInput
}

export type CategoryFeaturedTopicUpsertArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
  create: CategoryFeaturedTopicCreateInput
  update: CategoryFeaturedTopicUpdateInput
}

type ExtractCategoryFeaturedTopicUpsertArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicDeleteArgs = {
  select?: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
}

export type CategoryFeaturedTopicDeleteArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  where: CategoryFeaturedTopicWhereUniqueInput
}

type ExtractCategoryFeaturedTopicDeleteArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicDeleteManyArgs = {
  select?: CategoryFeaturedTopicSelect
  where?: CategoryFeaturedTopicWhereInput
}

export type CategoryFeaturedTopicDeleteManyArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
  where?: CategoryFeaturedTopicWhereInput
}

type ExtractCategoryFeaturedTopicDeleteManyArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryFeaturedTopicArgs = {
  select?: CategoryFeaturedTopicSelect
}

export type CategoryFeaturedTopicArgsWithSelect = {
  select: CategoryFeaturedTopicSelect
}

type ExtractCategoryFeaturedTopicArgsSelect<S extends undefined | boolean | CategoryFeaturedTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryFeaturedTopicArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryGroup
 */

export type CategoryGroup = {
  id: number
  categoryId: number
  createdAt: string
  groupId: number
  permissionType: number | null
  updatedAt: string
}

export type CategoryGroupScalars = 'id' | 'categoryId' | 'createdAt' | 'groupId' | 'permissionType' | 'updatedAt'


export type CategoryGroupSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  groupId?: boolean
  permissionType?: boolean
  updatedAt?: boolean
}

type CategoryGroupDefault = {
  id: true
  categoryId: true
  createdAt: true
  groupId: true
  permissionType: true
  updatedAt: true
}


type CategoryGroupGetPayload<S extends boolean | CategoryGroupSelect> = S extends true
  ? CategoryGroup
  : S extends CategoryGroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryGroupDefault, S>>]: P extends CategoryGroupScalars
        ? CategoryGroup[P]
        : never
    }
   : never

export interface CategoryGroupDelegate {
  <T extends FindManyCategoryGroupArgs>(args?: Subset<T, FindManyCategoryGroupArgs>): PromiseLike<Array<CategoryGroupGetPayload<ExtractFindManyCategoryGroupArgsSelect<T>>>>
  findOne<T extends FindOneCategoryGroupArgs>(
    args: Subset<T, FindOneCategoryGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractFindOneCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  findMany<T extends FindManyCategoryGroupArgs>(
    args?: Subset<T, FindManyCategoryGroupArgs>
  ): PromiseLike<Array<CategoryGroupGetPayload<ExtractFindManyCategoryGroupArgsSelect<T>>>>
  create<T extends CategoryGroupCreateArgs>(
    args: Subset<T, CategoryGroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupCreateArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  update<T extends CategoryGroupUpdateArgs>(
    args: Subset<T, CategoryGroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupUpdateArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  updateMany<T extends CategoryGroupUpdateManyArgs>(
    args: Subset<T, CategoryGroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupUpdateManyArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  upsert<T extends CategoryGroupUpsertArgs>(
    args: Subset<T, CategoryGroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupUpsertArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  delete<T extends CategoryGroupDeleteArgs>(
    args: Subset<T, CategoryGroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupDeleteArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
  deleteMany<T extends CategoryGroupDeleteManyArgs>(
    args: Subset<T, CategoryGroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupDeleteManyArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>
}
function CategoryGroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryGroupDelegate {
  const CategoryGroup = <T extends FindManyCategoryGroupArgs>(args: Subset<T, FindManyCategoryGroupArgs>) => new CategoryGroupClient<PromiseLike<Array<CategoryGroupGetPayload<ExtractFindManyCategoryGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryGroups', 'categoryGroups', args, [])
  CategoryGroup.findOne = <T extends FindOneCategoryGroupArgs>(args: Subset<T, FindOneCategoryGroupArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'query',
    'categoryGroup',
    'categoryGroups.findOne',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'query',
    'categoryGroup',
    'categoryGroups.findOne',
    args,
    []
  )
  CategoryGroup.findMany = <T extends FindManyCategoryGroupArgs>(args: Subset<T, FindManyCategoryGroupArgs>) => new CategoryGroupClient<PromiseLike<Array<CategoryGroupGetPayload<ExtractFindManyCategoryGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryGroups',
    'categoryGroups.findMany',
    args,
    []
  )
  CategoryGroup.create = <T extends CategoryGroupCreateArgs>(args: Subset<T, CategoryGroupCreateArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryGroup',
    'categoryGroups.create',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryGroup',
    'categoryGroups.create',
    args,
    []
  )
  CategoryGroup.update = <T extends CategoryGroupUpdateArgs>(args: Subset<T, CategoryGroupUpdateArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryGroup',
    'categoryGroups.update',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryGroup',
    'categoryGroups.update',
    args,
    []
  )
  CategoryGroup.updateMany = <T extends CategoryGroupUpdateManyArgs>(args: Subset<T, CategoryGroupUpdateManyArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryGroups',
    'categoryGroups.updateMany',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryGroups',
    'categoryGroups.updateMany',
    args,
    []
  )
  CategoryGroup.upsert = <T extends CategoryGroupUpsertArgs>(args: Subset<T, CategoryGroupUpsertArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryGroup',
    'categoryGroups.upsert',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryGroup',
    'categoryGroups.upsert',
    args,
    []
  )
  CategoryGroup.delete = <T extends CategoryGroupDeleteArgs>(args: Subset<T, CategoryGroupDeleteArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryGroup',
    'categoryGroups.delete',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryGroup',
    'categoryGroups.delete',
    args,
    []
  )
  CategoryGroup.deleteMany = <T extends CategoryGroupDeleteManyArgs>(args: Subset<T, CategoryGroupDeleteManyArgs>) => args.select ? new CategoryGroupClient<'select' extends keyof T ? PromiseLike<CategoryGroupGetPayload<ExtractCategoryGroupArgsSelect<T>>> : CategoryGroupClient<CategoryGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryGroups',
    'categoryGroups.deleteMany',
    args,
    []
  ) : new CategoryGroupClient<CategoryGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryGroups',
    'categoryGroups.deleteMany',
    args,
    []
  )
  return CategoryGroup as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryGroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryGroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryGroup').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryGroup').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryGroupArgs = {
  select?: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
}

export type FindOneCategoryGroupArgsWithSelect = {
  select: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
}

type ExtractFindOneCategoryGroupArgsSelect<S extends undefined | boolean | FindOneCategoryGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryGroupArgs = {
  select?: CategoryGroupSelect
  where?: CategoryGroupWhereInput
  orderBy?: CategoryGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryGroupArgsWithSelect = {
  select: CategoryGroupSelect
  where?: CategoryGroupWhereInput
  orderBy?: CategoryGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryGroupArgsSelect<S extends undefined | boolean | FindManyCategoryGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryGroupArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupCreateArgs = {
  select?: CategoryGroupSelect
  data: CategoryGroupCreateInput
}

export type CategoryGroupCreateArgsWithSelect = {
  select: CategoryGroupSelect
  data: CategoryGroupCreateInput
}

type ExtractCategoryGroupCreateArgsSelect<S extends undefined | boolean | CategoryGroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupUpdateArgs = {
  select?: CategoryGroupSelect
  data: CategoryGroupUpdateInput
  where: CategoryGroupWhereUniqueInput
}

export type CategoryGroupUpdateArgsWithSelect = {
  select: CategoryGroupSelect
  data: CategoryGroupUpdateInput
  where: CategoryGroupWhereUniqueInput
}

type ExtractCategoryGroupUpdateArgsSelect<S extends undefined | boolean | CategoryGroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupUpdateManyArgs = {
  select?: CategoryGroupSelect
  data: CategoryGroupUpdateManyMutationInput
  where?: CategoryGroupWhereInput
}

export type CategoryGroupUpdateManyArgsWithSelect = {
  select: CategoryGroupSelect
  data: CategoryGroupUpdateManyMutationInput
  where?: CategoryGroupWhereInput
}

type ExtractCategoryGroupUpdateManyArgsSelect<S extends undefined | boolean | CategoryGroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupUpsertArgs = {
  select?: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
  create: CategoryGroupCreateInput
  update: CategoryGroupUpdateInput
}

export type CategoryGroupUpsertArgsWithSelect = {
  select: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
  create: CategoryGroupCreateInput
  update: CategoryGroupUpdateInput
}

type ExtractCategoryGroupUpsertArgsSelect<S extends undefined | boolean | CategoryGroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupDeleteArgs = {
  select?: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
}

export type CategoryGroupDeleteArgsWithSelect = {
  select: CategoryGroupSelect
  where: CategoryGroupWhereUniqueInput
}

type ExtractCategoryGroupDeleteArgsSelect<S extends undefined | boolean | CategoryGroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupDeleteManyArgs = {
  select?: CategoryGroupSelect
  where?: CategoryGroupWhereInput
}

export type CategoryGroupDeleteManyArgsWithSelect = {
  select: CategoryGroupSelect
  where?: CategoryGroupWhereInput
}

type ExtractCategoryGroupDeleteManyArgsSelect<S extends undefined | boolean | CategoryGroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryGroupArgs = {
  select?: CategoryGroupSelect
}

export type CategoryGroupArgsWithSelect = {
  select: CategoryGroupSelect
}

type ExtractCategoryGroupArgsSelect<S extends undefined | boolean | CategoryGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryGroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategorySearchDatum
 */

export type CategorySearchDatum = {
  category_id: number
  locale: string | null
  rawData: string | null
  version: number | null
}

export type CategorySearchDatumScalars = 'category_id' | 'locale' | 'rawData' | 'version'


export type CategorySearchDatumSelect = {
  category_id?: boolean
  locale?: boolean
  rawData?: boolean
  version?: boolean
}

type CategorySearchDatumDefault = {
  category_id: true
  locale: true
  rawData: true
  version: true
}


type CategorySearchDatumGetPayload<S extends boolean | CategorySearchDatumSelect> = S extends true
  ? CategorySearchDatum
  : S extends CategorySearchDatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategorySearchDatumDefault, S>>]: P extends CategorySearchDatumScalars
        ? CategorySearchDatum[P]
        : never
    }
   : never

export interface CategorySearchDatumDelegate {
  <T extends FindManyCategorySearchDatumArgs>(args?: Subset<T, FindManyCategorySearchDatumArgs>): PromiseLike<Array<CategorySearchDatumGetPayload<ExtractFindManyCategorySearchDatumArgsSelect<T>>>>
  findMany<T extends FindManyCategorySearchDatumArgs>(
    args?: Subset<T, FindManyCategorySearchDatumArgs>
  ): PromiseLike<Array<CategorySearchDatumGetPayload<ExtractFindManyCategorySearchDatumArgsSelect<T>>>>
  create<T extends CategorySearchDatumCreateArgs>(
    args: Subset<T, CategorySearchDatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumCreateArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>
  updateMany<T extends CategorySearchDatumUpdateManyArgs>(
    args: Subset<T, CategorySearchDatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumUpdateManyArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>
  deleteMany<T extends CategorySearchDatumDeleteManyArgs>(
    args: Subset<T, CategorySearchDatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumDeleteManyArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>
}
function CategorySearchDatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategorySearchDatumDelegate {
  const CategorySearchDatum = <T extends FindManyCategorySearchDatumArgs>(args: Subset<T, FindManyCategorySearchDatumArgs>) => new CategorySearchDatumClient<PromiseLike<Array<CategorySearchDatumGetPayload<ExtractFindManyCategorySearchDatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categorySearchData', 'categorySearchData', args, [])
  CategorySearchDatum.findMany = <T extends FindManyCategorySearchDatumArgs>(args: Subset<T, FindManyCategorySearchDatumArgs>) => new CategorySearchDatumClient<PromiseLike<Array<CategorySearchDatumGetPayload<ExtractFindManyCategorySearchDatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categorySearchData',
    'categorySearchData.findMany',
    args,
    []
  )
  CategorySearchDatum.create = <T extends CategorySearchDatumCreateArgs>(args: Subset<T, CategorySearchDatumCreateArgs>) => args.select ? new CategorySearchDatumClient<'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategorySearchDatum',
    'categorySearchData.create',
    args,
    []
  ) : new CategorySearchDatumClient<CategorySearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'createCategorySearchDatum',
    'categorySearchData.create',
    args,
    []
  )
  CategorySearchDatum.updateMany = <T extends CategorySearchDatumUpdateManyArgs>(args: Subset<T, CategorySearchDatumUpdateManyArgs>) => args.select ? new CategorySearchDatumClient<'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategorySearchData',
    'categorySearchData.updateMany',
    args,
    []
  ) : new CategorySearchDatumClient<CategorySearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategorySearchData',
    'categorySearchData.updateMany',
    args,
    []
  )
  CategorySearchDatum.deleteMany = <T extends CategorySearchDatumDeleteManyArgs>(args: Subset<T, CategorySearchDatumDeleteManyArgs>) => args.select ? new CategorySearchDatumClient<'select' extends keyof T ? PromiseLike<CategorySearchDatumGetPayload<ExtractCategorySearchDatumArgsSelect<T>>> : CategorySearchDatumClient<CategorySearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategorySearchData',
    'categorySearchData.deleteMany',
    args,
    []
  ) : new CategorySearchDatumClient<CategorySearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategorySearchData',
    'categorySearchData.deleteMany',
    args,
    []
  )
  return CategorySearchDatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategorySearchDatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategorySearchDatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategorySearchDatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategorySearchDatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyCategorySearchDatumArgs = {
  select?: CategorySearchDatumSelect
  where?: CategorySearchDatumWhereInput
  orderBy?: CategorySearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategorySearchDatumArgsWithSelect = {
  select: CategorySearchDatumSelect
  where?: CategorySearchDatumWhereInput
  orderBy?: CategorySearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategorySearchDatumArgsSelect<S extends undefined | boolean | FindManyCategorySearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategorySearchDatumArgsWithSelect
  ? S['select']
  : true


export type CategorySearchDatumCreateArgs = {
  select?: CategorySearchDatumSelect
  data: CategorySearchDatumCreateInput
}

export type CategorySearchDatumCreateArgsWithSelect = {
  select: CategorySearchDatumSelect
  data: CategorySearchDatumCreateInput
}

type ExtractCategorySearchDatumCreateArgsSelect<S extends undefined | boolean | CategorySearchDatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategorySearchDatumCreateArgsWithSelect
  ? S['select']
  : true


export type CategorySearchDatumUpdateManyArgs = {
  select?: CategorySearchDatumSelect
  data: CategorySearchDatumUpdateManyMutationInput
  where?: CategorySearchDatumWhereInput
}

export type CategorySearchDatumUpdateManyArgsWithSelect = {
  select: CategorySearchDatumSelect
  data: CategorySearchDatumUpdateManyMutationInput
  where?: CategorySearchDatumWhereInput
}

type ExtractCategorySearchDatumUpdateManyArgsSelect<S extends undefined | boolean | CategorySearchDatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategorySearchDatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategorySearchDatumDeleteManyArgs = {
  select?: CategorySearchDatumSelect
  where?: CategorySearchDatumWhereInput
}

export type CategorySearchDatumDeleteManyArgsWithSelect = {
  select: CategorySearchDatumSelect
  where?: CategorySearchDatumWhereInput
}

type ExtractCategorySearchDatumDeleteManyArgsSelect<S extends undefined | boolean | CategorySearchDatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategorySearchDatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategorySearchDatumArgs = {
  select?: CategorySearchDatumSelect
}

export type CategorySearchDatumArgsWithSelect = {
  select: CategorySearchDatumSelect
}

type ExtractCategorySearchDatumArgsSelect<S extends undefined | boolean | CategorySearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategorySearchDatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryTag
 */

export type CategoryTag = {
  id: number
  categoryId: number
  createdAt: string | null
  tagId: number
  updatedAt: string | null
}

export type CategoryTagScalars = 'id' | 'categoryId' | 'createdAt' | 'tagId' | 'updatedAt'


export type CategoryTagSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  tagId?: boolean
  updatedAt?: boolean
}

type CategoryTagDefault = {
  id: true
  categoryId: true
  createdAt: true
  tagId: true
  updatedAt: true
}


type CategoryTagGetPayload<S extends boolean | CategoryTagSelect> = S extends true
  ? CategoryTag
  : S extends CategoryTagSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryTagDefault, S>>]: P extends CategoryTagScalars
        ? CategoryTag[P]
        : never
    }
   : never

export interface CategoryTagDelegate {
  <T extends FindManyCategoryTagArgs>(args?: Subset<T, FindManyCategoryTagArgs>): PromiseLike<Array<CategoryTagGetPayload<ExtractFindManyCategoryTagArgsSelect<T>>>>
  findOne<T extends FindOneCategoryTagArgs>(
    args: Subset<T, FindOneCategoryTagArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractFindOneCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  findMany<T extends FindManyCategoryTagArgs>(
    args?: Subset<T, FindManyCategoryTagArgs>
  ): PromiseLike<Array<CategoryTagGetPayload<ExtractFindManyCategoryTagArgsSelect<T>>>>
  create<T extends CategoryTagCreateArgs>(
    args: Subset<T, CategoryTagCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagCreateArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  update<T extends CategoryTagUpdateArgs>(
    args: Subset<T, CategoryTagUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagUpdateArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  updateMany<T extends CategoryTagUpdateManyArgs>(
    args: Subset<T, CategoryTagUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagUpdateManyArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  upsert<T extends CategoryTagUpsertArgs>(
    args: Subset<T, CategoryTagUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagUpsertArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  delete<T extends CategoryTagDeleteArgs>(
    args: Subset<T, CategoryTagDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagDeleteArgsSelect<T>>> : CategoryTagClient<CategoryTag>
  deleteMany<T extends CategoryTagDeleteManyArgs>(
    args: Subset<T, CategoryTagDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagDeleteManyArgsSelect<T>>> : CategoryTagClient<CategoryTag>
}
function CategoryTagDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryTagDelegate {
  const CategoryTag = <T extends FindManyCategoryTagArgs>(args: Subset<T, FindManyCategoryTagArgs>) => new CategoryTagClient<PromiseLike<Array<CategoryTagGetPayload<ExtractFindManyCategoryTagArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryTags', 'categoryTags', args, [])
  CategoryTag.findOne = <T extends FindOneCategoryTagArgs>(args: Subset<T, FindOneCategoryTagArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'query',
    'categoryTag',
    'categoryTags.findOne',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'query',
    'categoryTag',
    'categoryTags.findOne',
    args,
    []
  )
  CategoryTag.findMany = <T extends FindManyCategoryTagArgs>(args: Subset<T, FindManyCategoryTagArgs>) => new CategoryTagClient<PromiseLike<Array<CategoryTagGetPayload<ExtractFindManyCategoryTagArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryTags',
    'categoryTags.findMany',
    args,
    []
  )
  CategoryTag.create = <T extends CategoryTagCreateArgs>(args: Subset<T, CategoryTagCreateArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTag',
    'categoryTags.create',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTag',
    'categoryTags.create',
    args,
    []
  )
  CategoryTag.update = <T extends CategoryTagUpdateArgs>(args: Subset<T, CategoryTagUpdateArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTag',
    'categoryTags.update',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTag',
    'categoryTags.update',
    args,
    []
  )
  CategoryTag.updateMany = <T extends CategoryTagUpdateManyArgs>(args: Subset<T, CategoryTagUpdateManyArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTags',
    'categoryTags.updateMany',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTags',
    'categoryTags.updateMany',
    args,
    []
  )
  CategoryTag.upsert = <T extends CategoryTagUpsertArgs>(args: Subset<T, CategoryTagUpsertArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTag',
    'categoryTags.upsert',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTag',
    'categoryTags.upsert',
    args,
    []
  )
  CategoryTag.delete = <T extends CategoryTagDeleteArgs>(args: Subset<T, CategoryTagDeleteArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTag',
    'categoryTags.delete',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTag',
    'categoryTags.delete',
    args,
    []
  )
  CategoryTag.deleteMany = <T extends CategoryTagDeleteManyArgs>(args: Subset<T, CategoryTagDeleteManyArgs>) => args.select ? new CategoryTagClient<'select' extends keyof T ? PromiseLike<CategoryTagGetPayload<ExtractCategoryTagArgsSelect<T>>> : CategoryTagClient<CategoryTag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTags',
    'categoryTags.deleteMany',
    args,
    []
  ) : new CategoryTagClient<CategoryTag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTags',
    'categoryTags.deleteMany',
    args,
    []
  )
  return CategoryTag as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryTagClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryTagArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTag').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTag').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryTagArgs = {
  select?: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
}

export type FindOneCategoryTagArgsWithSelect = {
  select: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
}

type ExtractFindOneCategoryTagArgsSelect<S extends undefined | boolean | FindOneCategoryTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryTagArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryTagArgs = {
  select?: CategoryTagSelect
  where?: CategoryTagWhereInput
  orderBy?: CategoryTagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryTagArgsWithSelect = {
  select: CategoryTagSelect
  where?: CategoryTagWhereInput
  orderBy?: CategoryTagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryTagArgsSelect<S extends undefined | boolean | FindManyCategoryTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryTagArgsWithSelect
  ? S['select']
  : true


export type CategoryTagCreateArgs = {
  select?: CategoryTagSelect
  data: CategoryTagCreateInput
}

export type CategoryTagCreateArgsWithSelect = {
  select: CategoryTagSelect
  data: CategoryTagCreateInput
}

type ExtractCategoryTagCreateArgsSelect<S extends undefined | boolean | CategoryTagCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagUpdateArgs = {
  select?: CategoryTagSelect
  data: CategoryTagUpdateInput
  where: CategoryTagWhereUniqueInput
}

export type CategoryTagUpdateArgsWithSelect = {
  select: CategoryTagSelect
  data: CategoryTagUpdateInput
  where: CategoryTagWhereUniqueInput
}

type ExtractCategoryTagUpdateArgsSelect<S extends undefined | boolean | CategoryTagUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagUpdateManyArgs = {
  select?: CategoryTagSelect
  data: CategoryTagUpdateManyMutationInput
  where?: CategoryTagWhereInput
}

export type CategoryTagUpdateManyArgsWithSelect = {
  select: CategoryTagSelect
  data: CategoryTagUpdateManyMutationInput
  where?: CategoryTagWhereInput
}

type ExtractCategoryTagUpdateManyArgsSelect<S extends undefined | boolean | CategoryTagUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagUpsertArgs = {
  select?: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
  create: CategoryTagCreateInput
  update: CategoryTagUpdateInput
}

export type CategoryTagUpsertArgsWithSelect = {
  select: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
  create: CategoryTagCreateInput
  update: CategoryTagUpdateInput
}

type ExtractCategoryTagUpsertArgsSelect<S extends undefined | boolean | CategoryTagUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryTagDeleteArgs = {
  select?: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
}

export type CategoryTagDeleteArgsWithSelect = {
  select: CategoryTagSelect
  where: CategoryTagWhereUniqueInput
}

type ExtractCategoryTagDeleteArgsSelect<S extends undefined | boolean | CategoryTagDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryTagDeleteManyArgs = {
  select?: CategoryTagSelect
  where?: CategoryTagWhereInput
}

export type CategoryTagDeleteManyArgsWithSelect = {
  select: CategoryTagSelect
  where?: CategoryTagWhereInput
}

type ExtractCategoryTagDeleteManyArgsSelect<S extends undefined | boolean | CategoryTagDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagArgs = {
  select?: CategoryTagSelect
}

export type CategoryTagArgsWithSelect = {
  select: CategoryTagSelect
}

type ExtractCategoryTagArgsSelect<S extends undefined | boolean | CategoryTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryTagGroup
 */

export type CategoryTagGroup = {
  id: number
  categoryId: number
  createdAt: string | null
  tagGroupId: number
  updatedAt: string | null
}

export type CategoryTagGroupScalars = 'id' | 'categoryId' | 'createdAt' | 'tagGroupId' | 'updatedAt'


export type CategoryTagGroupSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  tagGroupId?: boolean
  updatedAt?: boolean
}

type CategoryTagGroupDefault = {
  id: true
  categoryId: true
  createdAt: true
  tagGroupId: true
  updatedAt: true
}


type CategoryTagGroupGetPayload<S extends boolean | CategoryTagGroupSelect> = S extends true
  ? CategoryTagGroup
  : S extends CategoryTagGroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryTagGroupDefault, S>>]: P extends CategoryTagGroupScalars
        ? CategoryTagGroup[P]
        : never
    }
   : never

export interface CategoryTagGroupDelegate {
  <T extends FindManyCategoryTagGroupArgs>(args?: Subset<T, FindManyCategoryTagGroupArgs>): PromiseLike<Array<CategoryTagGroupGetPayload<ExtractFindManyCategoryTagGroupArgsSelect<T>>>>
  findOne<T extends FindOneCategoryTagGroupArgs>(
    args: Subset<T, FindOneCategoryTagGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractFindOneCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  findMany<T extends FindManyCategoryTagGroupArgs>(
    args?: Subset<T, FindManyCategoryTagGroupArgs>
  ): PromiseLike<Array<CategoryTagGroupGetPayload<ExtractFindManyCategoryTagGroupArgsSelect<T>>>>
  create<T extends CategoryTagGroupCreateArgs>(
    args: Subset<T, CategoryTagGroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupCreateArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  update<T extends CategoryTagGroupUpdateArgs>(
    args: Subset<T, CategoryTagGroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupUpdateArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  updateMany<T extends CategoryTagGroupUpdateManyArgs>(
    args: Subset<T, CategoryTagGroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupUpdateManyArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  upsert<T extends CategoryTagGroupUpsertArgs>(
    args: Subset<T, CategoryTagGroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupUpsertArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  delete<T extends CategoryTagGroupDeleteArgs>(
    args: Subset<T, CategoryTagGroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupDeleteArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
  deleteMany<T extends CategoryTagGroupDeleteManyArgs>(
    args: Subset<T, CategoryTagGroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupDeleteManyArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>
}
function CategoryTagGroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryTagGroupDelegate {
  const CategoryTagGroup = <T extends FindManyCategoryTagGroupArgs>(args: Subset<T, FindManyCategoryTagGroupArgs>) => new CategoryTagGroupClient<PromiseLike<Array<CategoryTagGroupGetPayload<ExtractFindManyCategoryTagGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryTagGroups', 'categoryTagGroups', args, [])
  CategoryTagGroup.findOne = <T extends FindOneCategoryTagGroupArgs>(args: Subset<T, FindOneCategoryTagGroupArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'query',
    'categoryTagGroup',
    'categoryTagGroups.findOne',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'query',
    'categoryTagGroup',
    'categoryTagGroups.findOne',
    args,
    []
  )
  CategoryTagGroup.findMany = <T extends FindManyCategoryTagGroupArgs>(args: Subset<T, FindManyCategoryTagGroupArgs>) => new CategoryTagGroupClient<PromiseLike<Array<CategoryTagGroupGetPayload<ExtractFindManyCategoryTagGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryTagGroups',
    'categoryTagGroups.findMany',
    args,
    []
  )
  CategoryTagGroup.create = <T extends CategoryTagGroupCreateArgs>(args: Subset<T, CategoryTagGroupCreateArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTagGroup',
    'categoryTagGroups.create',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTagGroup',
    'categoryTagGroups.create',
    args,
    []
  )
  CategoryTagGroup.update = <T extends CategoryTagGroupUpdateArgs>(args: Subset<T, CategoryTagGroupUpdateArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTagGroup',
    'categoryTagGroups.update',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTagGroup',
    'categoryTagGroups.update',
    args,
    []
  )
  CategoryTagGroup.updateMany = <T extends CategoryTagGroupUpdateManyArgs>(args: Subset<T, CategoryTagGroupUpdateManyArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTagGroups',
    'categoryTagGroups.updateMany',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTagGroups',
    'categoryTagGroups.updateMany',
    args,
    []
  )
  CategoryTagGroup.upsert = <T extends CategoryTagGroupUpsertArgs>(args: Subset<T, CategoryTagGroupUpsertArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTagGroup',
    'categoryTagGroups.upsert',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTagGroup',
    'categoryTagGroups.upsert',
    args,
    []
  )
  CategoryTagGroup.delete = <T extends CategoryTagGroupDeleteArgs>(args: Subset<T, CategoryTagGroupDeleteArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTagGroup',
    'categoryTagGroups.delete',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTagGroup',
    'categoryTagGroups.delete',
    args,
    []
  )
  CategoryTagGroup.deleteMany = <T extends CategoryTagGroupDeleteManyArgs>(args: Subset<T, CategoryTagGroupDeleteManyArgs>) => args.select ? new CategoryTagGroupClient<'select' extends keyof T ? PromiseLike<CategoryTagGroupGetPayload<ExtractCategoryTagGroupArgsSelect<T>>> : CategoryTagGroupClient<CategoryTagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTagGroups',
    'categoryTagGroups.deleteMany',
    args,
    []
  ) : new CategoryTagGroupClient<CategoryTagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTagGroups',
    'categoryTagGroups.deleteMany',
    args,
    []
  )
  return CategoryTagGroup as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryTagGroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryTagGroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTagGroup').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTagGroup').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryTagGroupArgs = {
  select?: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
}

export type FindOneCategoryTagGroupArgsWithSelect = {
  select: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
}

type ExtractFindOneCategoryTagGroupArgsSelect<S extends undefined | boolean | FindOneCategoryTagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryTagGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryTagGroupArgs = {
  select?: CategoryTagGroupSelect
  where?: CategoryTagGroupWhereInput
  orderBy?: CategoryTagGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryTagGroupArgsWithSelect = {
  select: CategoryTagGroupSelect
  where?: CategoryTagGroupWhereInput
  orderBy?: CategoryTagGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryTagGroupArgsSelect<S extends undefined | boolean | FindManyCategoryTagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryTagGroupArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupCreateArgs = {
  select?: CategoryTagGroupSelect
  data: CategoryTagGroupCreateInput
}

export type CategoryTagGroupCreateArgsWithSelect = {
  select: CategoryTagGroupSelect
  data: CategoryTagGroupCreateInput
}

type ExtractCategoryTagGroupCreateArgsSelect<S extends undefined | boolean | CategoryTagGroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupUpdateArgs = {
  select?: CategoryTagGroupSelect
  data: CategoryTagGroupUpdateInput
  where: CategoryTagGroupWhereUniqueInput
}

export type CategoryTagGroupUpdateArgsWithSelect = {
  select: CategoryTagGroupSelect
  data: CategoryTagGroupUpdateInput
  where: CategoryTagGroupWhereUniqueInput
}

type ExtractCategoryTagGroupUpdateArgsSelect<S extends undefined | boolean | CategoryTagGroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupUpdateManyArgs = {
  select?: CategoryTagGroupSelect
  data: CategoryTagGroupUpdateManyMutationInput
  where?: CategoryTagGroupWhereInput
}

export type CategoryTagGroupUpdateManyArgsWithSelect = {
  select: CategoryTagGroupSelect
  data: CategoryTagGroupUpdateManyMutationInput
  where?: CategoryTagGroupWhereInput
}

type ExtractCategoryTagGroupUpdateManyArgsSelect<S extends undefined | boolean | CategoryTagGroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupUpsertArgs = {
  select?: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
  create: CategoryTagGroupCreateInput
  update: CategoryTagGroupUpdateInput
}

export type CategoryTagGroupUpsertArgsWithSelect = {
  select: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
  create: CategoryTagGroupCreateInput
  update: CategoryTagGroupUpdateInput
}

type ExtractCategoryTagGroupUpsertArgsSelect<S extends undefined | boolean | CategoryTagGroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupDeleteArgs = {
  select?: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
}

export type CategoryTagGroupDeleteArgsWithSelect = {
  select: CategoryTagGroupSelect
  where: CategoryTagGroupWhereUniqueInput
}

type ExtractCategoryTagGroupDeleteArgsSelect<S extends undefined | boolean | CategoryTagGroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupDeleteManyArgs = {
  select?: CategoryTagGroupSelect
  where?: CategoryTagGroupWhereInput
}

export type CategoryTagGroupDeleteManyArgsWithSelect = {
  select: CategoryTagGroupSelect
  where?: CategoryTagGroupWhereInput
}

type ExtractCategoryTagGroupDeleteManyArgsSelect<S extends undefined | boolean | CategoryTagGroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagGroupArgs = {
  select?: CategoryTagGroupSelect
}

export type CategoryTagGroupArgsWithSelect = {
  select: CategoryTagGroupSelect
}

type ExtractCategoryTagGroupArgsSelect<S extends undefined | boolean | CategoryTagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagGroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryTagStat
 */

export type CategoryTagStat = {
  id: number
  categoryId: number
  tagId: number
  topicCount: number
}

export type CategoryTagStatScalars = 'id' | 'categoryId' | 'tagId' | 'topicCount'


export type CategoryTagStatSelect = {
  id?: boolean
  categoryId?: boolean
  tagId?: boolean
  topicCount?: boolean
}

type CategoryTagStatDefault = {
  id: true
  categoryId: true
  tagId: true
  topicCount: true
}


type CategoryTagStatGetPayload<S extends boolean | CategoryTagStatSelect> = S extends true
  ? CategoryTagStat
  : S extends CategoryTagStatSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryTagStatDefault, S>>]: P extends CategoryTagStatScalars
        ? CategoryTagStat[P]
        : never
    }
   : never

export interface CategoryTagStatDelegate {
  <T extends FindManyCategoryTagStatArgs>(args?: Subset<T, FindManyCategoryTagStatArgs>): PromiseLike<Array<CategoryTagStatGetPayload<ExtractFindManyCategoryTagStatArgsSelect<T>>>>
  findOne<T extends FindOneCategoryTagStatArgs>(
    args: Subset<T, FindOneCategoryTagStatArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractFindOneCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  findMany<T extends FindManyCategoryTagStatArgs>(
    args?: Subset<T, FindManyCategoryTagStatArgs>
  ): PromiseLike<Array<CategoryTagStatGetPayload<ExtractFindManyCategoryTagStatArgsSelect<T>>>>
  create<T extends CategoryTagStatCreateArgs>(
    args: Subset<T, CategoryTagStatCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatCreateArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  update<T extends CategoryTagStatUpdateArgs>(
    args: Subset<T, CategoryTagStatUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatUpdateArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  updateMany<T extends CategoryTagStatUpdateManyArgs>(
    args: Subset<T, CategoryTagStatUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatUpdateManyArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  upsert<T extends CategoryTagStatUpsertArgs>(
    args: Subset<T, CategoryTagStatUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatUpsertArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  delete<T extends CategoryTagStatDeleteArgs>(
    args: Subset<T, CategoryTagStatDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatDeleteArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
  deleteMany<T extends CategoryTagStatDeleteManyArgs>(
    args: Subset<T, CategoryTagStatDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatDeleteManyArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>
}
function CategoryTagStatDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryTagStatDelegate {
  const CategoryTagStat = <T extends FindManyCategoryTagStatArgs>(args: Subset<T, FindManyCategoryTagStatArgs>) => new CategoryTagStatClient<PromiseLike<Array<CategoryTagStatGetPayload<ExtractFindManyCategoryTagStatArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryTagStats', 'categoryTagStats', args, [])
  CategoryTagStat.findOne = <T extends FindOneCategoryTagStatArgs>(args: Subset<T, FindOneCategoryTagStatArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'query',
    'categoryTagStat',
    'categoryTagStats.findOne',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'query',
    'categoryTagStat',
    'categoryTagStats.findOne',
    args,
    []
  )
  CategoryTagStat.findMany = <T extends FindManyCategoryTagStatArgs>(args: Subset<T, FindManyCategoryTagStatArgs>) => new CategoryTagStatClient<PromiseLike<Array<CategoryTagStatGetPayload<ExtractFindManyCategoryTagStatArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryTagStats',
    'categoryTagStats.findMany',
    args,
    []
  )
  CategoryTagStat.create = <T extends CategoryTagStatCreateArgs>(args: Subset<T, CategoryTagStatCreateArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTagStat',
    'categoryTagStats.create',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryTagStat',
    'categoryTagStats.create',
    args,
    []
  )
  CategoryTagStat.update = <T extends CategoryTagStatUpdateArgs>(args: Subset<T, CategoryTagStatUpdateArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTagStat',
    'categoryTagStats.update',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryTagStat',
    'categoryTagStats.update',
    args,
    []
  )
  CategoryTagStat.updateMany = <T extends CategoryTagStatUpdateManyArgs>(args: Subset<T, CategoryTagStatUpdateManyArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTagStats',
    'categoryTagStats.updateMany',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryTagStats',
    'categoryTagStats.updateMany',
    args,
    []
  )
  CategoryTagStat.upsert = <T extends CategoryTagStatUpsertArgs>(args: Subset<T, CategoryTagStatUpsertArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTagStat',
    'categoryTagStats.upsert',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryTagStat',
    'categoryTagStats.upsert',
    args,
    []
  )
  CategoryTagStat.delete = <T extends CategoryTagStatDeleteArgs>(args: Subset<T, CategoryTagStatDeleteArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTagStat',
    'categoryTagStats.delete',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryTagStat',
    'categoryTagStats.delete',
    args,
    []
  )
  CategoryTagStat.deleteMany = <T extends CategoryTagStatDeleteManyArgs>(args: Subset<T, CategoryTagStatDeleteManyArgs>) => args.select ? new CategoryTagStatClient<'select' extends keyof T ? PromiseLike<CategoryTagStatGetPayload<ExtractCategoryTagStatArgsSelect<T>>> : CategoryTagStatClient<CategoryTagStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTagStats',
    'categoryTagStats.deleteMany',
    args,
    []
  ) : new CategoryTagStatClient<CategoryTagStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryTagStats',
    'categoryTagStats.deleteMany',
    args,
    []
  )
  return CategoryTagStat as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryTagStatClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryTagStatArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTagStat').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryTagStat').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryTagStatArgs = {
  select?: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
}

export type FindOneCategoryTagStatArgsWithSelect = {
  select: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
}

type ExtractFindOneCategoryTagStatArgsSelect<S extends undefined | boolean | FindOneCategoryTagStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryTagStatArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryTagStatArgs = {
  select?: CategoryTagStatSelect
  where?: CategoryTagStatWhereInput
  orderBy?: CategoryTagStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryTagStatArgsWithSelect = {
  select: CategoryTagStatSelect
  where?: CategoryTagStatWhereInput
  orderBy?: CategoryTagStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryTagStatArgsSelect<S extends undefined | boolean | FindManyCategoryTagStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryTagStatArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatCreateArgs = {
  select?: CategoryTagStatSelect
  data: CategoryTagStatCreateInput
}

export type CategoryTagStatCreateArgsWithSelect = {
  select: CategoryTagStatSelect
  data: CategoryTagStatCreateInput
}

type ExtractCategoryTagStatCreateArgsSelect<S extends undefined | boolean | CategoryTagStatCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatUpdateArgs = {
  select?: CategoryTagStatSelect
  data: CategoryTagStatUpdateInput
  where: CategoryTagStatWhereUniqueInput
}

export type CategoryTagStatUpdateArgsWithSelect = {
  select: CategoryTagStatSelect
  data: CategoryTagStatUpdateInput
  where: CategoryTagStatWhereUniqueInput
}

type ExtractCategoryTagStatUpdateArgsSelect<S extends undefined | boolean | CategoryTagStatUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatUpdateManyArgs = {
  select?: CategoryTagStatSelect
  data: CategoryTagStatUpdateManyMutationInput
  where?: CategoryTagStatWhereInput
}

export type CategoryTagStatUpdateManyArgsWithSelect = {
  select: CategoryTagStatSelect
  data: CategoryTagStatUpdateManyMutationInput
  where?: CategoryTagStatWhereInput
}

type ExtractCategoryTagStatUpdateManyArgsSelect<S extends undefined | boolean | CategoryTagStatUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatUpsertArgs = {
  select?: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
  create: CategoryTagStatCreateInput
  update: CategoryTagStatUpdateInput
}

export type CategoryTagStatUpsertArgsWithSelect = {
  select: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
  create: CategoryTagStatCreateInput
  update: CategoryTagStatUpdateInput
}

type ExtractCategoryTagStatUpsertArgsSelect<S extends undefined | boolean | CategoryTagStatUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatDeleteArgs = {
  select?: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
}

export type CategoryTagStatDeleteArgsWithSelect = {
  select: CategoryTagStatSelect
  where: CategoryTagStatWhereUniqueInput
}

type ExtractCategoryTagStatDeleteArgsSelect<S extends undefined | boolean | CategoryTagStatDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatDeleteManyArgs = {
  select?: CategoryTagStatSelect
  where?: CategoryTagStatWhereInput
}

export type CategoryTagStatDeleteManyArgsWithSelect = {
  select: CategoryTagStatSelect
  where?: CategoryTagStatWhereInput
}

type ExtractCategoryTagStatDeleteManyArgsSelect<S extends undefined | boolean | CategoryTagStatDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryTagStatArgs = {
  select?: CategoryTagStatSelect
}

export type CategoryTagStatArgsWithSelect = {
  select: CategoryTagStatSelect
}

type ExtractCategoryTagStatArgsSelect<S extends undefined | boolean | CategoryTagStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryTagStatArgsWithSelect
  ? S['select']
  : true



/**
 * Model CategoryUser
 */

export type CategoryUser = {
  id: number
  categoryId: number
  notificationLevel: number
  userId: number
}

export type CategoryUserScalars = 'id' | 'categoryId' | 'notificationLevel' | 'userId'


export type CategoryUserSelect = {
  id?: boolean
  categoryId?: boolean
  notificationLevel?: boolean
  userId?: boolean
}

type CategoryUserDefault = {
  id: true
  categoryId: true
  notificationLevel: true
  userId: true
}


type CategoryUserGetPayload<S extends boolean | CategoryUserSelect> = S extends true
  ? CategoryUser
  : S extends CategoryUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CategoryUserDefault, S>>]: P extends CategoryUserScalars
        ? CategoryUser[P]
        : never
    }
   : never

export interface CategoryUserDelegate {
  <T extends FindManyCategoryUserArgs>(args?: Subset<T, FindManyCategoryUserArgs>): PromiseLike<Array<CategoryUserGetPayload<ExtractFindManyCategoryUserArgsSelect<T>>>>
  findOne<T extends FindOneCategoryUserArgs>(
    args: Subset<T, FindOneCategoryUserArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractFindOneCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  findMany<T extends FindManyCategoryUserArgs>(
    args?: Subset<T, FindManyCategoryUserArgs>
  ): PromiseLike<Array<CategoryUserGetPayload<ExtractFindManyCategoryUserArgsSelect<T>>>>
  create<T extends CategoryUserCreateArgs>(
    args: Subset<T, CategoryUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserCreateArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  update<T extends CategoryUserUpdateArgs>(
    args: Subset<T, CategoryUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserUpdateArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  updateMany<T extends CategoryUserUpdateManyArgs>(
    args: Subset<T, CategoryUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserUpdateManyArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  upsert<T extends CategoryUserUpsertArgs>(
    args: Subset<T, CategoryUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserUpsertArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  delete<T extends CategoryUserDeleteArgs>(
    args: Subset<T, CategoryUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserDeleteArgsSelect<T>>> : CategoryUserClient<CategoryUser>
  deleteMany<T extends CategoryUserDeleteManyArgs>(
    args: Subset<T, CategoryUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserDeleteManyArgsSelect<T>>> : CategoryUserClient<CategoryUser>
}
function CategoryUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CategoryUserDelegate {
  const CategoryUser = <T extends FindManyCategoryUserArgs>(args: Subset<T, FindManyCategoryUserArgs>) => new CategoryUserClient<PromiseLike<Array<CategoryUserGetPayload<ExtractFindManyCategoryUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'categoryUsers', 'categoryUsers', args, [])
  CategoryUser.findOne = <T extends FindOneCategoryUserArgs>(args: Subset<T, FindOneCategoryUserArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'query',
    'categoryUser',
    'categoryUsers.findOne',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'query',
    'categoryUser',
    'categoryUsers.findOne',
    args,
    []
  )
  CategoryUser.findMany = <T extends FindManyCategoryUserArgs>(args: Subset<T, FindManyCategoryUserArgs>) => new CategoryUserClient<PromiseLike<Array<CategoryUserGetPayload<ExtractFindManyCategoryUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'categoryUsers',
    'categoryUsers.findMany',
    args,
    []
  )
  CategoryUser.create = <T extends CategoryUserCreateArgs>(args: Subset<T, CategoryUserCreateArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryUser',
    'categoryUsers.create',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'createCategoryUser',
    'categoryUsers.create',
    args,
    []
  )
  CategoryUser.update = <T extends CategoryUserUpdateArgs>(args: Subset<T, CategoryUserUpdateArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryUser',
    'categoryUsers.update',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateCategoryUser',
    'categoryUsers.update',
    args,
    []
  )
  CategoryUser.updateMany = <T extends CategoryUserUpdateManyArgs>(args: Subset<T, CategoryUserUpdateManyArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryUsers',
    'categoryUsers.updateMany',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCategoryUsers',
    'categoryUsers.updateMany',
    args,
    []
  )
  CategoryUser.upsert = <T extends CategoryUserUpsertArgs>(args: Subset<T, CategoryUserUpsertArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryUser',
    'categoryUsers.upsert',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCategoryUser',
    'categoryUsers.upsert',
    args,
    []
  )
  CategoryUser.delete = <T extends CategoryUserDeleteArgs>(args: Subset<T, CategoryUserDeleteArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryUser',
    'categoryUsers.delete',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCategoryUser',
    'categoryUsers.delete',
    args,
    []
  )
  CategoryUser.deleteMany = <T extends CategoryUserDeleteManyArgs>(args: Subset<T, CategoryUserDeleteManyArgs>) => args.select ? new CategoryUserClient<'select' extends keyof T ? PromiseLike<CategoryUserGetPayload<ExtractCategoryUserArgsSelect<T>>> : CategoryUserClient<CategoryUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryUsers',
    'categoryUsers.deleteMany',
    args,
    []
  ) : new CategoryUserClient<CategoryUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCategoryUsers',
    'categoryUsers.deleteMany',
    args,
    []
  )
  return CategoryUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CategoryUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CategoryUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CategoryUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneCategoryUserArgs = {
  select?: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
}

export type FindOneCategoryUserArgsWithSelect = {
  select: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
}

type ExtractFindOneCategoryUserArgsSelect<S extends undefined | boolean | FindOneCategoryUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCategoryUserArgsWithSelect
  ? S['select']
  : true


export type FindManyCategoryUserArgs = {
  select?: CategoryUserSelect
  where?: CategoryUserWhereInput
  orderBy?: CategoryUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCategoryUserArgsWithSelect = {
  select: CategoryUserSelect
  where?: CategoryUserWhereInput
  orderBy?: CategoryUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCategoryUserArgsSelect<S extends undefined | boolean | FindManyCategoryUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCategoryUserArgsWithSelect
  ? S['select']
  : true


export type CategoryUserCreateArgs = {
  select?: CategoryUserSelect
  data: CategoryUserCreateInput
}

export type CategoryUserCreateArgsWithSelect = {
  select: CategoryUserSelect
  data: CategoryUserCreateInput
}

type ExtractCategoryUserCreateArgsSelect<S extends undefined | boolean | CategoryUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserCreateArgsWithSelect
  ? S['select']
  : true


export type CategoryUserUpdateArgs = {
  select?: CategoryUserSelect
  data: CategoryUserUpdateInput
  where: CategoryUserWhereUniqueInput
}

export type CategoryUserUpdateArgsWithSelect = {
  select: CategoryUserSelect
  data: CategoryUserUpdateInput
  where: CategoryUserWhereUniqueInput
}

type ExtractCategoryUserUpdateArgsSelect<S extends undefined | boolean | CategoryUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserUpdateArgsWithSelect
  ? S['select']
  : true


export type CategoryUserUpdateManyArgs = {
  select?: CategoryUserSelect
  data: CategoryUserUpdateManyMutationInput
  where?: CategoryUserWhereInput
}

export type CategoryUserUpdateManyArgsWithSelect = {
  select: CategoryUserSelect
  data: CategoryUserUpdateManyMutationInput
  where?: CategoryUserWhereInput
}

type ExtractCategoryUserUpdateManyArgsSelect<S extends undefined | boolean | CategoryUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CategoryUserUpsertArgs = {
  select?: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
  create: CategoryUserCreateInput
  update: CategoryUserUpdateInput
}

export type CategoryUserUpsertArgsWithSelect = {
  select: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
  create: CategoryUserCreateInput
  update: CategoryUserUpdateInput
}

type ExtractCategoryUserUpsertArgsSelect<S extends undefined | boolean | CategoryUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserUpsertArgsWithSelect
  ? S['select']
  : true


export type CategoryUserDeleteArgs = {
  select?: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
}

export type CategoryUserDeleteArgsWithSelect = {
  select: CategoryUserSelect
  where: CategoryUserWhereUniqueInput
}

type ExtractCategoryUserDeleteArgsSelect<S extends undefined | boolean | CategoryUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserDeleteArgsWithSelect
  ? S['select']
  : true


export type CategoryUserDeleteManyArgs = {
  select?: CategoryUserSelect
  where?: CategoryUserWhereInput
}

export type CategoryUserDeleteManyArgsWithSelect = {
  select: CategoryUserSelect
  where?: CategoryUserWhereInput
}

type ExtractCategoryUserDeleteManyArgsSelect<S extends undefined | boolean | CategoryUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CategoryUserArgs = {
  select?: CategoryUserSelect
}

export type CategoryUserArgsWithSelect = {
  select: CategoryUserSelect
}

type ExtractCategoryUserArgsSelect<S extends undefined | boolean | CategoryUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CategoryUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model ChildTheme
 */

export type ChildTheme = {
  id: number
  childThemeId: number | null
  createdAt: string | null
  parentThemeId: number | null
  updatedAt: string | null
}

export type ChildThemeScalars = 'id' | 'childThemeId' | 'createdAt' | 'parentThemeId' | 'updatedAt'


export type ChildThemeSelect = {
  id?: boolean
  childThemeId?: boolean
  createdAt?: boolean
  parentThemeId?: boolean
  updatedAt?: boolean
}

type ChildThemeDefault = {
  id: true
  childThemeId: true
  createdAt: true
  parentThemeId: true
  updatedAt: true
}


type ChildThemeGetPayload<S extends boolean | ChildThemeSelect> = S extends true
  ? ChildTheme
  : S extends ChildThemeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ChildThemeDefault, S>>]: P extends ChildThemeScalars
        ? ChildTheme[P]
        : never
    }
   : never

export interface ChildThemeDelegate {
  <T extends FindManyChildThemeArgs>(args?: Subset<T, FindManyChildThemeArgs>): PromiseLike<Array<ChildThemeGetPayload<ExtractFindManyChildThemeArgsSelect<T>>>>
  findOne<T extends FindOneChildThemeArgs>(
    args: Subset<T, FindOneChildThemeArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractFindOneChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  findMany<T extends FindManyChildThemeArgs>(
    args?: Subset<T, FindManyChildThemeArgs>
  ): PromiseLike<Array<ChildThemeGetPayload<ExtractFindManyChildThemeArgsSelect<T>>>>
  create<T extends ChildThemeCreateArgs>(
    args: Subset<T, ChildThemeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeCreateArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  update<T extends ChildThemeUpdateArgs>(
    args: Subset<T, ChildThemeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeUpdateArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  updateMany<T extends ChildThemeUpdateManyArgs>(
    args: Subset<T, ChildThemeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeUpdateManyArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  upsert<T extends ChildThemeUpsertArgs>(
    args: Subset<T, ChildThemeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeUpsertArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  delete<T extends ChildThemeDeleteArgs>(
    args: Subset<T, ChildThemeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeDeleteArgsSelect<T>>> : ChildThemeClient<ChildTheme>
  deleteMany<T extends ChildThemeDeleteManyArgs>(
    args: Subset<T, ChildThemeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeDeleteManyArgsSelect<T>>> : ChildThemeClient<ChildTheme>
}
function ChildThemeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ChildThemeDelegate {
  const ChildTheme = <T extends FindManyChildThemeArgs>(args: Subset<T, FindManyChildThemeArgs>) => new ChildThemeClient<PromiseLike<Array<ChildThemeGetPayload<ExtractFindManyChildThemeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'childThemes', 'childThemes', args, [])
  ChildTheme.findOne = <T extends FindOneChildThemeArgs>(args: Subset<T, FindOneChildThemeArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'query',
    'childTheme',
    'childThemes.findOne',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'query',
    'childTheme',
    'childThemes.findOne',
    args,
    []
  )
  ChildTheme.findMany = <T extends FindManyChildThemeArgs>(args: Subset<T, FindManyChildThemeArgs>) => new ChildThemeClient<PromiseLike<Array<ChildThemeGetPayload<ExtractFindManyChildThemeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'childThemes',
    'childThemes.findMany',
    args,
    []
  )
  ChildTheme.create = <T extends ChildThemeCreateArgs>(args: Subset<T, ChildThemeCreateArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'createChildTheme',
    'childThemes.create',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'createChildTheme',
    'childThemes.create',
    args,
    []
  )
  ChildTheme.update = <T extends ChildThemeUpdateArgs>(args: Subset<T, ChildThemeUpdateArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateChildTheme',
    'childThemes.update',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateChildTheme',
    'childThemes.update',
    args,
    []
  )
  ChildTheme.updateMany = <T extends ChildThemeUpdateManyArgs>(args: Subset<T, ChildThemeUpdateManyArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyChildThemes',
    'childThemes.updateMany',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyChildThemes',
    'childThemes.updateMany',
    args,
    []
  )
  ChildTheme.upsert = <T extends ChildThemeUpsertArgs>(args: Subset<T, ChildThemeUpsertArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertChildTheme',
    'childThemes.upsert',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'upsertChildTheme',
    'childThemes.upsert',
    args,
    []
  )
  ChildTheme.delete = <T extends ChildThemeDeleteArgs>(args: Subset<T, ChildThemeDeleteArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteChildTheme',
    'childThemes.delete',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteChildTheme',
    'childThemes.delete',
    args,
    []
  )
  ChildTheme.deleteMany = <T extends ChildThemeDeleteManyArgs>(args: Subset<T, ChildThemeDeleteManyArgs>) => args.select ? new ChildThemeClient<'select' extends keyof T ? PromiseLike<ChildThemeGetPayload<ExtractChildThemeArgsSelect<T>>> : ChildThemeClient<ChildTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyChildThemes',
    'childThemes.deleteMany',
    args,
    []
  ) : new ChildThemeClient<ChildTheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyChildThemes',
    'childThemes.deleteMany',
    args,
    []
  )
  return ChildTheme as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ChildThemeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ChildThemeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ChildTheme').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ChildTheme').catch(onrejected)
  }
}


// InputTypes

export type FindOneChildThemeArgs = {
  select?: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
}

export type FindOneChildThemeArgsWithSelect = {
  select: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
}

type ExtractFindOneChildThemeArgsSelect<S extends undefined | boolean | FindOneChildThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneChildThemeArgsWithSelect
  ? S['select']
  : true


export type FindManyChildThemeArgs = {
  select?: ChildThemeSelect
  where?: ChildThemeWhereInput
  orderBy?: ChildThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyChildThemeArgsWithSelect = {
  select: ChildThemeSelect
  where?: ChildThemeWhereInput
  orderBy?: ChildThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyChildThemeArgsSelect<S extends undefined | boolean | FindManyChildThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyChildThemeArgsWithSelect
  ? S['select']
  : true


export type ChildThemeCreateArgs = {
  select?: ChildThemeSelect
  data: ChildThemeCreateInput
}

export type ChildThemeCreateArgsWithSelect = {
  select: ChildThemeSelect
  data: ChildThemeCreateInput
}

type ExtractChildThemeCreateArgsSelect<S extends undefined | boolean | ChildThemeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeCreateArgsWithSelect
  ? S['select']
  : true


export type ChildThemeUpdateArgs = {
  select?: ChildThemeSelect
  data: ChildThemeUpdateInput
  where: ChildThemeWhereUniqueInput
}

export type ChildThemeUpdateArgsWithSelect = {
  select: ChildThemeSelect
  data: ChildThemeUpdateInput
  where: ChildThemeWhereUniqueInput
}

type ExtractChildThemeUpdateArgsSelect<S extends undefined | boolean | ChildThemeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeUpdateArgsWithSelect
  ? S['select']
  : true


export type ChildThemeUpdateManyArgs = {
  select?: ChildThemeSelect
  data: ChildThemeUpdateManyMutationInput
  where?: ChildThemeWhereInput
}

export type ChildThemeUpdateManyArgsWithSelect = {
  select: ChildThemeSelect
  data: ChildThemeUpdateManyMutationInput
  where?: ChildThemeWhereInput
}

type ExtractChildThemeUpdateManyArgsSelect<S extends undefined | boolean | ChildThemeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ChildThemeUpsertArgs = {
  select?: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
  create: ChildThemeCreateInput
  update: ChildThemeUpdateInput
}

export type ChildThemeUpsertArgsWithSelect = {
  select: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
  create: ChildThemeCreateInput
  update: ChildThemeUpdateInput
}

type ExtractChildThemeUpsertArgsSelect<S extends undefined | boolean | ChildThemeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeUpsertArgsWithSelect
  ? S['select']
  : true


export type ChildThemeDeleteArgs = {
  select?: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
}

export type ChildThemeDeleteArgsWithSelect = {
  select: ChildThemeSelect
  where: ChildThemeWhereUniqueInput
}

type ExtractChildThemeDeleteArgsSelect<S extends undefined | boolean | ChildThemeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeDeleteArgsWithSelect
  ? S['select']
  : true


export type ChildThemeDeleteManyArgs = {
  select?: ChildThemeSelect
  where?: ChildThemeWhereInput
}

export type ChildThemeDeleteManyArgsWithSelect = {
  select: ChildThemeSelect
  where?: ChildThemeWhereInput
}

type ExtractChildThemeDeleteManyArgsSelect<S extends undefined | boolean | ChildThemeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ChildThemeArgs = {
  select?: ChildThemeSelect
}

export type ChildThemeArgsWithSelect = {
  select: ChildThemeSelect
}

type ExtractChildThemeArgsSelect<S extends undefined | boolean | ChildThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ChildThemeArgsWithSelect
  ? S['select']
  : true



/**
 * Model ColorScheme
 */

export type ColorScheme = {
  id: number
  baseSchemeId: string | null
  createdAt: string
  name: string
  themeId: number | null
  updatedAt: string
  version: number
  viaWizard: boolean
}

export type ColorSchemeScalars = 'id' | 'baseSchemeId' | 'createdAt' | 'name' | 'themeId' | 'updatedAt' | 'version' | 'viaWizard'


export type ColorSchemeSelect = {
  id?: boolean
  baseSchemeId?: boolean
  createdAt?: boolean
  name?: boolean
  themeId?: boolean
  updatedAt?: boolean
  version?: boolean
  viaWizard?: boolean
}

type ColorSchemeDefault = {
  id: true
  baseSchemeId: true
  createdAt: true
  name: true
  themeId: true
  updatedAt: true
  version: true
  viaWizard: true
}


type ColorSchemeGetPayload<S extends boolean | ColorSchemeSelect> = S extends true
  ? ColorScheme
  : S extends ColorSchemeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ColorSchemeDefault, S>>]: P extends ColorSchemeScalars
        ? ColorScheme[P]
        : never
    }
   : never

export interface ColorSchemeDelegate {
  <T extends FindManyColorSchemeArgs>(args?: Subset<T, FindManyColorSchemeArgs>): PromiseLike<Array<ColorSchemeGetPayload<ExtractFindManyColorSchemeArgsSelect<T>>>>
  findOne<T extends FindOneColorSchemeArgs>(
    args: Subset<T, FindOneColorSchemeArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractFindOneColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  findMany<T extends FindManyColorSchemeArgs>(
    args?: Subset<T, FindManyColorSchemeArgs>
  ): PromiseLike<Array<ColorSchemeGetPayload<ExtractFindManyColorSchemeArgsSelect<T>>>>
  create<T extends ColorSchemeCreateArgs>(
    args: Subset<T, ColorSchemeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeCreateArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  update<T extends ColorSchemeUpdateArgs>(
    args: Subset<T, ColorSchemeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeUpdateArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  updateMany<T extends ColorSchemeUpdateManyArgs>(
    args: Subset<T, ColorSchemeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeUpdateManyArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  upsert<T extends ColorSchemeUpsertArgs>(
    args: Subset<T, ColorSchemeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeUpsertArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  delete<T extends ColorSchemeDeleteArgs>(
    args: Subset<T, ColorSchemeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeDeleteArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
  deleteMany<T extends ColorSchemeDeleteManyArgs>(
    args: Subset<T, ColorSchemeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeDeleteManyArgsSelect<T>>> : ColorSchemeClient<ColorScheme>
}
function ColorSchemeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ColorSchemeDelegate {
  const ColorScheme = <T extends FindManyColorSchemeArgs>(args: Subset<T, FindManyColorSchemeArgs>) => new ColorSchemeClient<PromiseLike<Array<ColorSchemeGetPayload<ExtractFindManyColorSchemeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'colorSchemes', 'colorSchemes', args, [])
  ColorScheme.findOne = <T extends FindOneColorSchemeArgs>(args: Subset<T, FindOneColorSchemeArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'query',
    'colorScheme',
    'colorSchemes.findOne',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'query',
    'colorScheme',
    'colorSchemes.findOne',
    args,
    []
  )
  ColorScheme.findMany = <T extends FindManyColorSchemeArgs>(args: Subset<T, FindManyColorSchemeArgs>) => new ColorSchemeClient<PromiseLike<Array<ColorSchemeGetPayload<ExtractFindManyColorSchemeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'colorSchemes',
    'colorSchemes.findMany',
    args,
    []
  )
  ColorScheme.create = <T extends ColorSchemeCreateArgs>(args: Subset<T, ColorSchemeCreateArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'createColorScheme',
    'colorSchemes.create',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'createColorScheme',
    'colorSchemes.create',
    args,
    []
  )
  ColorScheme.update = <T extends ColorSchemeUpdateArgs>(args: Subset<T, ColorSchemeUpdateArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateColorScheme',
    'colorSchemes.update',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateColorScheme',
    'colorSchemes.update',
    args,
    []
  )
  ColorScheme.updateMany = <T extends ColorSchemeUpdateManyArgs>(args: Subset<T, ColorSchemeUpdateManyArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyColorSchemes',
    'colorSchemes.updateMany',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyColorSchemes',
    'colorSchemes.updateMany',
    args,
    []
  )
  ColorScheme.upsert = <T extends ColorSchemeUpsertArgs>(args: Subset<T, ColorSchemeUpsertArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertColorScheme',
    'colorSchemes.upsert',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'upsertColorScheme',
    'colorSchemes.upsert',
    args,
    []
  )
  ColorScheme.delete = <T extends ColorSchemeDeleteArgs>(args: Subset<T, ColorSchemeDeleteArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteColorScheme',
    'colorSchemes.delete',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteColorScheme',
    'colorSchemes.delete',
    args,
    []
  )
  ColorScheme.deleteMany = <T extends ColorSchemeDeleteManyArgs>(args: Subset<T, ColorSchemeDeleteManyArgs>) => args.select ? new ColorSchemeClient<'select' extends keyof T ? PromiseLike<ColorSchemeGetPayload<ExtractColorSchemeArgsSelect<T>>> : ColorSchemeClient<ColorScheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyColorSchemes',
    'colorSchemes.deleteMany',
    args,
    []
  ) : new ColorSchemeClient<ColorScheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyColorSchemes',
    'colorSchemes.deleteMany',
    args,
    []
  )
  return ColorScheme as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ColorSchemeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ColorSchemeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ColorScheme').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ColorScheme').catch(onrejected)
  }
}


// InputTypes

export type FindOneColorSchemeArgs = {
  select?: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
}

export type FindOneColorSchemeArgsWithSelect = {
  select: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
}

type ExtractFindOneColorSchemeArgsSelect<S extends undefined | boolean | FindOneColorSchemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneColorSchemeArgsWithSelect
  ? S['select']
  : true


export type FindManyColorSchemeArgs = {
  select?: ColorSchemeSelect
  where?: ColorSchemeWhereInput
  orderBy?: ColorSchemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyColorSchemeArgsWithSelect = {
  select: ColorSchemeSelect
  where?: ColorSchemeWhereInput
  orderBy?: ColorSchemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyColorSchemeArgsSelect<S extends undefined | boolean | FindManyColorSchemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyColorSchemeArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeCreateArgs = {
  select?: ColorSchemeSelect
  data: ColorSchemeCreateInput
}

export type ColorSchemeCreateArgsWithSelect = {
  select: ColorSchemeSelect
  data: ColorSchemeCreateInput
}

type ExtractColorSchemeCreateArgsSelect<S extends undefined | boolean | ColorSchemeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeCreateArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeUpdateArgs = {
  select?: ColorSchemeSelect
  data: ColorSchemeUpdateInput
  where: ColorSchemeWhereUniqueInput
}

export type ColorSchemeUpdateArgsWithSelect = {
  select: ColorSchemeSelect
  data: ColorSchemeUpdateInput
  where: ColorSchemeWhereUniqueInput
}

type ExtractColorSchemeUpdateArgsSelect<S extends undefined | boolean | ColorSchemeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeUpdateArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeUpdateManyArgs = {
  select?: ColorSchemeSelect
  data: ColorSchemeUpdateManyMutationInput
  where?: ColorSchemeWhereInput
}

export type ColorSchemeUpdateManyArgsWithSelect = {
  select: ColorSchemeSelect
  data: ColorSchemeUpdateManyMutationInput
  where?: ColorSchemeWhereInput
}

type ExtractColorSchemeUpdateManyArgsSelect<S extends undefined | boolean | ColorSchemeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeUpsertArgs = {
  select?: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
  create: ColorSchemeCreateInput
  update: ColorSchemeUpdateInput
}

export type ColorSchemeUpsertArgsWithSelect = {
  select: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
  create: ColorSchemeCreateInput
  update: ColorSchemeUpdateInput
}

type ExtractColorSchemeUpsertArgsSelect<S extends undefined | boolean | ColorSchemeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeUpsertArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeDeleteArgs = {
  select?: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
}

export type ColorSchemeDeleteArgsWithSelect = {
  select: ColorSchemeSelect
  where: ColorSchemeWhereUniqueInput
}

type ExtractColorSchemeDeleteArgsSelect<S extends undefined | boolean | ColorSchemeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeDeleteArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeDeleteManyArgs = {
  select?: ColorSchemeSelect
  where?: ColorSchemeWhereInput
}

export type ColorSchemeDeleteManyArgsWithSelect = {
  select: ColorSchemeSelect
  where?: ColorSchemeWhereInput
}

type ExtractColorSchemeDeleteManyArgsSelect<S extends undefined | boolean | ColorSchemeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeArgs = {
  select?: ColorSchemeSelect
}

export type ColorSchemeArgsWithSelect = {
  select: ColorSchemeSelect
}

type ExtractColorSchemeArgsSelect<S extends undefined | boolean | ColorSchemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeArgsWithSelect
  ? S['select']
  : true



/**
 * Model ColorSchemeColor
 */

export type ColorSchemeColor = {
  id: number
  colorSchemeId: number
  createdAt: string
  hex: string
  name: string
  updatedAt: string
}

export type ColorSchemeColorScalars = 'id' | 'colorSchemeId' | 'createdAt' | 'hex' | 'name' | 'updatedAt'


export type ColorSchemeColorSelect = {
  id?: boolean
  colorSchemeId?: boolean
  createdAt?: boolean
  hex?: boolean
  name?: boolean
  updatedAt?: boolean
}

type ColorSchemeColorDefault = {
  id: true
  colorSchemeId: true
  createdAt: true
  hex: true
  name: true
  updatedAt: true
}


type ColorSchemeColorGetPayload<S extends boolean | ColorSchemeColorSelect> = S extends true
  ? ColorSchemeColor
  : S extends ColorSchemeColorSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ColorSchemeColorDefault, S>>]: P extends ColorSchemeColorScalars
        ? ColorSchemeColor[P]
        : never
    }
   : never

export interface ColorSchemeColorDelegate {
  <T extends FindManyColorSchemeColorArgs>(args?: Subset<T, FindManyColorSchemeColorArgs>): PromiseLike<Array<ColorSchemeColorGetPayload<ExtractFindManyColorSchemeColorArgsSelect<T>>>>
  findOne<T extends FindOneColorSchemeColorArgs>(
    args: Subset<T, FindOneColorSchemeColorArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractFindOneColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  findMany<T extends FindManyColorSchemeColorArgs>(
    args?: Subset<T, FindManyColorSchemeColorArgs>
  ): PromiseLike<Array<ColorSchemeColorGetPayload<ExtractFindManyColorSchemeColorArgsSelect<T>>>>
  create<T extends ColorSchemeColorCreateArgs>(
    args: Subset<T, ColorSchemeColorCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorCreateArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  update<T extends ColorSchemeColorUpdateArgs>(
    args: Subset<T, ColorSchemeColorUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorUpdateArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  updateMany<T extends ColorSchemeColorUpdateManyArgs>(
    args: Subset<T, ColorSchemeColorUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorUpdateManyArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  upsert<T extends ColorSchemeColorUpsertArgs>(
    args: Subset<T, ColorSchemeColorUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorUpsertArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  delete<T extends ColorSchemeColorDeleteArgs>(
    args: Subset<T, ColorSchemeColorDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorDeleteArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
  deleteMany<T extends ColorSchemeColorDeleteManyArgs>(
    args: Subset<T, ColorSchemeColorDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorDeleteManyArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>
}
function ColorSchemeColorDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ColorSchemeColorDelegate {
  const ColorSchemeColor = <T extends FindManyColorSchemeColorArgs>(args: Subset<T, FindManyColorSchemeColorArgs>) => new ColorSchemeColorClient<PromiseLike<Array<ColorSchemeColorGetPayload<ExtractFindManyColorSchemeColorArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'colorSchemeColors', 'colorSchemeColors', args, [])
  ColorSchemeColor.findOne = <T extends FindOneColorSchemeColorArgs>(args: Subset<T, FindOneColorSchemeColorArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'query',
    'colorSchemeColor',
    'colorSchemeColors.findOne',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'query',
    'colorSchemeColor',
    'colorSchemeColors.findOne',
    args,
    []
  )
  ColorSchemeColor.findMany = <T extends FindManyColorSchemeColorArgs>(args: Subset<T, FindManyColorSchemeColorArgs>) => new ColorSchemeColorClient<PromiseLike<Array<ColorSchemeColorGetPayload<ExtractFindManyColorSchemeColorArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'colorSchemeColors',
    'colorSchemeColors.findMany',
    args,
    []
  )
  ColorSchemeColor.create = <T extends ColorSchemeColorCreateArgs>(args: Subset<T, ColorSchemeColorCreateArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'createColorSchemeColor',
    'colorSchemeColors.create',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'createColorSchemeColor',
    'colorSchemeColors.create',
    args,
    []
  )
  ColorSchemeColor.update = <T extends ColorSchemeColorUpdateArgs>(args: Subset<T, ColorSchemeColorUpdateArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'updateColorSchemeColor',
    'colorSchemeColors.update',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'updateColorSchemeColor',
    'colorSchemeColors.update',
    args,
    []
  )
  ColorSchemeColor.updateMany = <T extends ColorSchemeColorUpdateManyArgs>(args: Subset<T, ColorSchemeColorUpdateManyArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyColorSchemeColors',
    'colorSchemeColors.updateMany',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyColorSchemeColors',
    'colorSchemeColors.updateMany',
    args,
    []
  )
  ColorSchemeColor.upsert = <T extends ColorSchemeColorUpsertArgs>(args: Subset<T, ColorSchemeColorUpsertArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertColorSchemeColor',
    'colorSchemeColors.upsert',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'upsertColorSchemeColor',
    'colorSchemeColors.upsert',
    args,
    []
  )
  ColorSchemeColor.delete = <T extends ColorSchemeColorDeleteArgs>(args: Subset<T, ColorSchemeColorDeleteArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteColorSchemeColor',
    'colorSchemeColors.delete',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'deleteColorSchemeColor',
    'colorSchemeColors.delete',
    args,
    []
  )
  ColorSchemeColor.deleteMany = <T extends ColorSchemeColorDeleteManyArgs>(args: Subset<T, ColorSchemeColorDeleteManyArgs>) => args.select ? new ColorSchemeColorClient<'select' extends keyof T ? PromiseLike<ColorSchemeColorGetPayload<ExtractColorSchemeColorArgsSelect<T>>> : ColorSchemeColorClient<ColorSchemeColor>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyColorSchemeColors',
    'colorSchemeColors.deleteMany',
    args,
    []
  ) : new ColorSchemeColorClient<ColorSchemeColor>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyColorSchemeColors',
    'colorSchemeColors.deleteMany',
    args,
    []
  )
  return ColorSchemeColor as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ColorSchemeColorClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ColorSchemeColorArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ColorSchemeColor').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ColorSchemeColor').catch(onrejected)
  }
}


// InputTypes

export type FindOneColorSchemeColorArgs = {
  select?: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
}

export type FindOneColorSchemeColorArgsWithSelect = {
  select: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
}

type ExtractFindOneColorSchemeColorArgsSelect<S extends undefined | boolean | FindOneColorSchemeColorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneColorSchemeColorArgsWithSelect
  ? S['select']
  : true


export type FindManyColorSchemeColorArgs = {
  select?: ColorSchemeColorSelect
  where?: ColorSchemeColorWhereInput
  orderBy?: ColorSchemeColorOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyColorSchemeColorArgsWithSelect = {
  select: ColorSchemeColorSelect
  where?: ColorSchemeColorWhereInput
  orderBy?: ColorSchemeColorOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyColorSchemeColorArgsSelect<S extends undefined | boolean | FindManyColorSchemeColorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyColorSchemeColorArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorCreateArgs = {
  select?: ColorSchemeColorSelect
  data: ColorSchemeColorCreateInput
}

export type ColorSchemeColorCreateArgsWithSelect = {
  select: ColorSchemeColorSelect
  data: ColorSchemeColorCreateInput
}

type ExtractColorSchemeColorCreateArgsSelect<S extends undefined | boolean | ColorSchemeColorCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorCreateArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorUpdateArgs = {
  select?: ColorSchemeColorSelect
  data: ColorSchemeColorUpdateInput
  where: ColorSchemeColorWhereUniqueInput
}

export type ColorSchemeColorUpdateArgsWithSelect = {
  select: ColorSchemeColorSelect
  data: ColorSchemeColorUpdateInput
  where: ColorSchemeColorWhereUniqueInput
}

type ExtractColorSchemeColorUpdateArgsSelect<S extends undefined | boolean | ColorSchemeColorUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorUpdateArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorUpdateManyArgs = {
  select?: ColorSchemeColorSelect
  data: ColorSchemeColorUpdateManyMutationInput
  where?: ColorSchemeColorWhereInput
}

export type ColorSchemeColorUpdateManyArgsWithSelect = {
  select: ColorSchemeColorSelect
  data: ColorSchemeColorUpdateManyMutationInput
  where?: ColorSchemeColorWhereInput
}

type ExtractColorSchemeColorUpdateManyArgsSelect<S extends undefined | boolean | ColorSchemeColorUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorUpsertArgs = {
  select?: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
  create: ColorSchemeColorCreateInput
  update: ColorSchemeColorUpdateInput
}

export type ColorSchemeColorUpsertArgsWithSelect = {
  select: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
  create: ColorSchemeColorCreateInput
  update: ColorSchemeColorUpdateInput
}

type ExtractColorSchemeColorUpsertArgsSelect<S extends undefined | boolean | ColorSchemeColorUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorUpsertArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorDeleteArgs = {
  select?: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
}

export type ColorSchemeColorDeleteArgsWithSelect = {
  select: ColorSchemeColorSelect
  where: ColorSchemeColorWhereUniqueInput
}

type ExtractColorSchemeColorDeleteArgsSelect<S extends undefined | boolean | ColorSchemeColorDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorDeleteArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorDeleteManyArgs = {
  select?: ColorSchemeColorSelect
  where?: ColorSchemeColorWhereInput
}

export type ColorSchemeColorDeleteManyArgsWithSelect = {
  select: ColorSchemeColorSelect
  where?: ColorSchemeColorWhereInput
}

type ExtractColorSchemeColorDeleteManyArgsSelect<S extends undefined | boolean | ColorSchemeColorDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ColorSchemeColorArgs = {
  select?: ColorSchemeColorSelect
}

export type ColorSchemeColorArgsWithSelect = {
  select: ColorSchemeColorSelect
}

type ExtractColorSchemeColorArgsSelect<S extends undefined | boolean | ColorSchemeColorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ColorSchemeColorArgsWithSelect
  ? S['select']
  : true



/**
 * Model CustomEmoji
 */

export type CustomEmoji = {
  id: number
  createdAt: string
  name: string
  updatedAt: string
  uploadId: number
}

export type CustomEmojiScalars = 'id' | 'createdAt' | 'name' | 'updatedAt' | 'uploadId'


export type CustomEmojiSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  updatedAt?: boolean
  uploadId?: boolean
}

type CustomEmojiDefault = {
  id: true
  createdAt: true
  name: true
  updatedAt: true
  uploadId: true
}


type CustomEmojiGetPayload<S extends boolean | CustomEmojiSelect> = S extends true
  ? CustomEmoji
  : S extends CustomEmojiSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<CustomEmojiDefault, S>>]: P extends CustomEmojiScalars
        ? CustomEmoji[P]
        : never
    }
   : never

export interface CustomEmojiDelegate {
  <T extends FindManyCustomEmojiArgs>(args?: Subset<T, FindManyCustomEmojiArgs>): PromiseLike<Array<CustomEmojiGetPayload<ExtractFindManyCustomEmojiArgsSelect<T>>>>
  findOne<T extends FindOneCustomEmojiArgs>(
    args: Subset<T, FindOneCustomEmojiArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractFindOneCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  findMany<T extends FindManyCustomEmojiArgs>(
    args?: Subset<T, FindManyCustomEmojiArgs>
  ): PromiseLike<Array<CustomEmojiGetPayload<ExtractFindManyCustomEmojiArgsSelect<T>>>>
  create<T extends CustomEmojiCreateArgs>(
    args: Subset<T, CustomEmojiCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiCreateArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  update<T extends CustomEmojiUpdateArgs>(
    args: Subset<T, CustomEmojiUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiUpdateArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  updateMany<T extends CustomEmojiUpdateManyArgs>(
    args: Subset<T, CustomEmojiUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiUpdateManyArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  upsert<T extends CustomEmojiUpsertArgs>(
    args: Subset<T, CustomEmojiUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiUpsertArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  delete<T extends CustomEmojiDeleteArgs>(
    args: Subset<T, CustomEmojiDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiDeleteArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
  deleteMany<T extends CustomEmojiDeleteManyArgs>(
    args: Subset<T, CustomEmojiDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiDeleteManyArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>
}
function CustomEmojiDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): CustomEmojiDelegate {
  const CustomEmoji = <T extends FindManyCustomEmojiArgs>(args: Subset<T, FindManyCustomEmojiArgs>) => new CustomEmojiClient<PromiseLike<Array<CustomEmojiGetPayload<ExtractFindManyCustomEmojiArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'customEmojis', 'customEmojis', args, [])
  CustomEmoji.findOne = <T extends FindOneCustomEmojiArgs>(args: Subset<T, FindOneCustomEmojiArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'query',
    'customEmoji',
    'customEmojis.findOne',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'query',
    'customEmoji',
    'customEmojis.findOne',
    args,
    []
  )
  CustomEmoji.findMany = <T extends FindManyCustomEmojiArgs>(args: Subset<T, FindManyCustomEmojiArgs>) => new CustomEmojiClient<PromiseLike<Array<CustomEmojiGetPayload<ExtractFindManyCustomEmojiArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'customEmojis',
    'customEmojis.findMany',
    args,
    []
  )
  CustomEmoji.create = <T extends CustomEmojiCreateArgs>(args: Subset<T, CustomEmojiCreateArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'createCustomEmoji',
    'customEmojis.create',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'createCustomEmoji',
    'customEmojis.create',
    args,
    []
  )
  CustomEmoji.update = <T extends CustomEmojiUpdateArgs>(args: Subset<T, CustomEmojiUpdateArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'updateCustomEmoji',
    'customEmojis.update',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'updateCustomEmoji',
    'customEmojis.update',
    args,
    []
  )
  CustomEmoji.updateMany = <T extends CustomEmojiUpdateManyArgs>(args: Subset<T, CustomEmojiUpdateManyArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCustomEmojis',
    'customEmojis.updateMany',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyCustomEmojis',
    'customEmojis.updateMany',
    args,
    []
  )
  CustomEmoji.upsert = <T extends CustomEmojiUpsertArgs>(args: Subset<T, CustomEmojiUpsertArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCustomEmoji',
    'customEmojis.upsert',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'upsertCustomEmoji',
    'customEmojis.upsert',
    args,
    []
  )
  CustomEmoji.delete = <T extends CustomEmojiDeleteArgs>(args: Subset<T, CustomEmojiDeleteArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCustomEmoji',
    'customEmojis.delete',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'deleteCustomEmoji',
    'customEmojis.delete',
    args,
    []
  )
  CustomEmoji.deleteMany = <T extends CustomEmojiDeleteManyArgs>(args: Subset<T, CustomEmojiDeleteManyArgs>) => args.select ? new CustomEmojiClient<'select' extends keyof T ? PromiseLike<CustomEmojiGetPayload<ExtractCustomEmojiArgsSelect<T>>> : CustomEmojiClient<CustomEmoji>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCustomEmojis',
    'customEmojis.deleteMany',
    args,
    []
  ) : new CustomEmojiClient<CustomEmoji>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyCustomEmojis',
    'customEmojis.deleteMany',
    args,
    []
  )
  return CustomEmoji as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class CustomEmojiClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: CustomEmojiArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CustomEmoji').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'CustomEmoji').catch(onrejected)
  }
}


// InputTypes

export type FindOneCustomEmojiArgs = {
  select?: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
}

export type FindOneCustomEmojiArgsWithSelect = {
  select: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
}

type ExtractFindOneCustomEmojiArgsSelect<S extends undefined | boolean | FindOneCustomEmojiArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneCustomEmojiArgsWithSelect
  ? S['select']
  : true


export type FindManyCustomEmojiArgs = {
  select?: CustomEmojiSelect
  where?: CustomEmojiWhereInput
  orderBy?: CustomEmojiOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyCustomEmojiArgsWithSelect = {
  select: CustomEmojiSelect
  where?: CustomEmojiWhereInput
  orderBy?: CustomEmojiOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyCustomEmojiArgsSelect<S extends undefined | boolean | FindManyCustomEmojiArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyCustomEmojiArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiCreateArgs = {
  select?: CustomEmojiSelect
  data: CustomEmojiCreateInput
}

export type CustomEmojiCreateArgsWithSelect = {
  select: CustomEmojiSelect
  data: CustomEmojiCreateInput
}

type ExtractCustomEmojiCreateArgsSelect<S extends undefined | boolean | CustomEmojiCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiCreateArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiUpdateArgs = {
  select?: CustomEmojiSelect
  data: CustomEmojiUpdateInput
  where: CustomEmojiWhereUniqueInput
}

export type CustomEmojiUpdateArgsWithSelect = {
  select: CustomEmojiSelect
  data: CustomEmojiUpdateInput
  where: CustomEmojiWhereUniqueInput
}

type ExtractCustomEmojiUpdateArgsSelect<S extends undefined | boolean | CustomEmojiUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiUpdateArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiUpdateManyArgs = {
  select?: CustomEmojiSelect
  data: CustomEmojiUpdateManyMutationInput
  where?: CustomEmojiWhereInput
}

export type CustomEmojiUpdateManyArgsWithSelect = {
  select: CustomEmojiSelect
  data: CustomEmojiUpdateManyMutationInput
  where?: CustomEmojiWhereInput
}

type ExtractCustomEmojiUpdateManyArgsSelect<S extends undefined | boolean | CustomEmojiUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiUpdateManyArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiUpsertArgs = {
  select?: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
  create: CustomEmojiCreateInput
  update: CustomEmojiUpdateInput
}

export type CustomEmojiUpsertArgsWithSelect = {
  select: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
  create: CustomEmojiCreateInput
  update: CustomEmojiUpdateInput
}

type ExtractCustomEmojiUpsertArgsSelect<S extends undefined | boolean | CustomEmojiUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiUpsertArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiDeleteArgs = {
  select?: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
}

export type CustomEmojiDeleteArgsWithSelect = {
  select: CustomEmojiSelect
  where: CustomEmojiWhereUniqueInput
}

type ExtractCustomEmojiDeleteArgsSelect<S extends undefined | boolean | CustomEmojiDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiDeleteArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiDeleteManyArgs = {
  select?: CustomEmojiSelect
  where?: CustomEmojiWhereInput
}

export type CustomEmojiDeleteManyArgsWithSelect = {
  select: CustomEmojiSelect
  where?: CustomEmojiWhereInput
}

type ExtractCustomEmojiDeleteManyArgsSelect<S extends undefined | boolean | CustomEmojiDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiDeleteManyArgsWithSelect
  ? S['select']
  : true


export type CustomEmojiArgs = {
  select?: CustomEmojiSelect
}

export type CustomEmojiArgsWithSelect = {
  select: CustomEmojiSelect
}

type ExtractCustomEmojiArgsSelect<S extends undefined | boolean | CustomEmojiArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends CustomEmojiArgsWithSelect
  ? S['select']
  : true



/**
 * Model Developer
 */

export type Developer = {
  id: number
  userId: number
}

export type DeveloperScalars = 'id' | 'userId'


export type DeveloperSelect = {
  id?: boolean
  userId?: boolean
}

type DeveloperDefault = {
  id: true
  userId: true
}


type DeveloperGetPayload<S extends boolean | DeveloperSelect> = S extends true
  ? Developer
  : S extends DeveloperSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<DeveloperDefault, S>>]: P extends DeveloperScalars
        ? Developer[P]
        : never
    }
   : never

export interface DeveloperDelegate {
  <T extends FindManyDeveloperArgs>(args?: Subset<T, FindManyDeveloperArgs>): PromiseLike<Array<DeveloperGetPayload<ExtractFindManyDeveloperArgsSelect<T>>>>
  findOne<T extends FindOneDeveloperArgs>(
    args: Subset<T, FindOneDeveloperArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractFindOneDeveloperArgsSelect<T>>> : DeveloperClient<Developer>
  findMany<T extends FindManyDeveloperArgs>(
    args?: Subset<T, FindManyDeveloperArgs>
  ): PromiseLike<Array<DeveloperGetPayload<ExtractFindManyDeveloperArgsSelect<T>>>>
  create<T extends DeveloperCreateArgs>(
    args: Subset<T, DeveloperCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperCreateArgsSelect<T>>> : DeveloperClient<Developer>
  update<T extends DeveloperUpdateArgs>(
    args: Subset<T, DeveloperUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperUpdateArgsSelect<T>>> : DeveloperClient<Developer>
  updateMany<T extends DeveloperUpdateManyArgs>(
    args: Subset<T, DeveloperUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperUpdateManyArgsSelect<T>>> : DeveloperClient<Developer>
  upsert<T extends DeveloperUpsertArgs>(
    args: Subset<T, DeveloperUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperUpsertArgsSelect<T>>> : DeveloperClient<Developer>
  delete<T extends DeveloperDeleteArgs>(
    args: Subset<T, DeveloperDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperDeleteArgsSelect<T>>> : DeveloperClient<Developer>
  deleteMany<T extends DeveloperDeleteManyArgs>(
    args: Subset<T, DeveloperDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperDeleteManyArgsSelect<T>>> : DeveloperClient<Developer>
}
function DeveloperDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): DeveloperDelegate {
  const Developer = <T extends FindManyDeveloperArgs>(args: Subset<T, FindManyDeveloperArgs>) => new DeveloperClient<PromiseLike<Array<DeveloperGetPayload<ExtractFindManyDeveloperArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'developers', 'developers', args, [])
  Developer.findOne = <T extends FindOneDeveloperArgs>(args: Subset<T, FindOneDeveloperArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'query',
    'developer',
    'developers.findOne',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'query',
    'developer',
    'developers.findOne',
    args,
    []
  )
  Developer.findMany = <T extends FindManyDeveloperArgs>(args: Subset<T, FindManyDeveloperArgs>) => new DeveloperClient<PromiseLike<Array<DeveloperGetPayload<ExtractFindManyDeveloperArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'developers',
    'developers.findMany',
    args,
    []
  )
  Developer.create = <T extends DeveloperCreateArgs>(args: Subset<T, DeveloperCreateArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'createDeveloper',
    'developers.create',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'createDeveloper',
    'developers.create',
    args,
    []
  )
  Developer.update = <T extends DeveloperUpdateArgs>(args: Subset<T, DeveloperUpdateArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateDeveloper',
    'developers.update',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'updateDeveloper',
    'developers.update',
    args,
    []
  )
  Developer.updateMany = <T extends DeveloperUpdateManyArgs>(args: Subset<T, DeveloperUpdateManyArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDevelopers',
    'developers.updateMany',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDevelopers',
    'developers.updateMany',
    args,
    []
  )
  Developer.upsert = <T extends DeveloperUpsertArgs>(args: Subset<T, DeveloperUpsertArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDeveloper',
    'developers.upsert',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDeveloper',
    'developers.upsert',
    args,
    []
  )
  Developer.delete = <T extends DeveloperDeleteArgs>(args: Subset<T, DeveloperDeleteArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDeveloper',
    'developers.delete',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDeveloper',
    'developers.delete',
    args,
    []
  )
  Developer.deleteMany = <T extends DeveloperDeleteManyArgs>(args: Subset<T, DeveloperDeleteManyArgs>) => args.select ? new DeveloperClient<'select' extends keyof T ? PromiseLike<DeveloperGetPayload<ExtractDeveloperArgsSelect<T>>> : DeveloperClient<Developer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDevelopers',
    'developers.deleteMany',
    args,
    []
  ) : new DeveloperClient<Developer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDevelopers',
    'developers.deleteMany',
    args,
    []
  )
  return Developer as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class DeveloperClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: DeveloperArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Developer').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Developer').catch(onrejected)
  }
}


// InputTypes

export type FindOneDeveloperArgs = {
  select?: DeveloperSelect
  where: DeveloperWhereUniqueInput
}

export type FindOneDeveloperArgsWithSelect = {
  select: DeveloperSelect
  where: DeveloperWhereUniqueInput
}

type ExtractFindOneDeveloperArgsSelect<S extends undefined | boolean | FindOneDeveloperArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneDeveloperArgsWithSelect
  ? S['select']
  : true


export type FindManyDeveloperArgs = {
  select?: DeveloperSelect
  where?: DeveloperWhereInput
  orderBy?: DeveloperOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyDeveloperArgsWithSelect = {
  select: DeveloperSelect
  where?: DeveloperWhereInput
  orderBy?: DeveloperOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyDeveloperArgsSelect<S extends undefined | boolean | FindManyDeveloperArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyDeveloperArgsWithSelect
  ? S['select']
  : true


export type DeveloperCreateArgs = {
  select?: DeveloperSelect
  data: DeveloperCreateInput
}

export type DeveloperCreateArgsWithSelect = {
  select: DeveloperSelect
  data: DeveloperCreateInput
}

type ExtractDeveloperCreateArgsSelect<S extends undefined | boolean | DeveloperCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperCreateArgsWithSelect
  ? S['select']
  : true


export type DeveloperUpdateArgs = {
  select?: DeveloperSelect
  data: DeveloperUpdateInput
  where: DeveloperWhereUniqueInput
}

export type DeveloperUpdateArgsWithSelect = {
  select: DeveloperSelect
  data: DeveloperUpdateInput
  where: DeveloperWhereUniqueInput
}

type ExtractDeveloperUpdateArgsSelect<S extends undefined | boolean | DeveloperUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperUpdateArgsWithSelect
  ? S['select']
  : true


export type DeveloperUpdateManyArgs = {
  select?: DeveloperSelect
  data: DeveloperUpdateManyMutationInput
  where?: DeveloperWhereInput
}

export type DeveloperUpdateManyArgsWithSelect = {
  select: DeveloperSelect
  data: DeveloperUpdateManyMutationInput
  where?: DeveloperWhereInput
}

type ExtractDeveloperUpdateManyArgsSelect<S extends undefined | boolean | DeveloperUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperUpdateManyArgsWithSelect
  ? S['select']
  : true


export type DeveloperUpsertArgs = {
  select?: DeveloperSelect
  where: DeveloperWhereUniqueInput
  create: DeveloperCreateInput
  update: DeveloperUpdateInput
}

export type DeveloperUpsertArgsWithSelect = {
  select: DeveloperSelect
  where: DeveloperWhereUniqueInput
  create: DeveloperCreateInput
  update: DeveloperUpdateInput
}

type ExtractDeveloperUpsertArgsSelect<S extends undefined | boolean | DeveloperUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperUpsertArgsWithSelect
  ? S['select']
  : true


export type DeveloperDeleteArgs = {
  select?: DeveloperSelect
  where: DeveloperWhereUniqueInput
}

export type DeveloperDeleteArgsWithSelect = {
  select: DeveloperSelect
  where: DeveloperWhereUniqueInput
}

type ExtractDeveloperDeleteArgsSelect<S extends undefined | boolean | DeveloperDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperDeleteArgsWithSelect
  ? S['select']
  : true


export type DeveloperDeleteManyArgs = {
  select?: DeveloperSelect
  where?: DeveloperWhereInput
}

export type DeveloperDeleteManyArgsWithSelect = {
  select: DeveloperSelect
  where?: DeveloperWhereInput
}

type ExtractDeveloperDeleteManyArgsSelect<S extends undefined | boolean | DeveloperDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperDeleteManyArgsWithSelect
  ? S['select']
  : true


export type DeveloperArgs = {
  select?: DeveloperSelect
}

export type DeveloperArgsWithSelect = {
  select: DeveloperSelect
}

type ExtractDeveloperArgsSelect<S extends undefined | boolean | DeveloperArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DeveloperArgsWithSelect
  ? S['select']
  : true



/**
 * Model DirectoryItem
 */

export type DirectoryItem = {
  id: number
  createdAt: string | null
  daysVisited: number
  likesGiven: number
  likesReceived: number
  periodType: number
  postCount: number
  postsRead: number
  topicCount: number
  topicsEntered: number
  updatedAt: string | null
  userId: number
}

export type DirectoryItemScalars = 'id' | 'createdAt' | 'daysVisited' | 'likesGiven' | 'likesReceived' | 'periodType' | 'postCount' | 'postsRead' | 'topicCount' | 'topicsEntered' | 'updatedAt' | 'userId'


export type DirectoryItemSelect = {
  id?: boolean
  createdAt?: boolean
  daysVisited?: boolean
  likesGiven?: boolean
  likesReceived?: boolean
  periodType?: boolean
  postCount?: boolean
  postsRead?: boolean
  topicCount?: boolean
  topicsEntered?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type DirectoryItemDefault = {
  id: true
  createdAt: true
  daysVisited: true
  likesGiven: true
  likesReceived: true
  periodType: true
  postCount: true
  postsRead: true
  topicCount: true
  topicsEntered: true
  updatedAt: true
  userId: true
}


type DirectoryItemGetPayload<S extends boolean | DirectoryItemSelect> = S extends true
  ? DirectoryItem
  : S extends DirectoryItemSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<DirectoryItemDefault, S>>]: P extends DirectoryItemScalars
        ? DirectoryItem[P]
        : never
    }
   : never

export interface DirectoryItemDelegate {
  <T extends FindManyDirectoryItemArgs>(args?: Subset<T, FindManyDirectoryItemArgs>): PromiseLike<Array<DirectoryItemGetPayload<ExtractFindManyDirectoryItemArgsSelect<T>>>>
  findOne<T extends FindOneDirectoryItemArgs>(
    args: Subset<T, FindOneDirectoryItemArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractFindOneDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  findMany<T extends FindManyDirectoryItemArgs>(
    args?: Subset<T, FindManyDirectoryItemArgs>
  ): PromiseLike<Array<DirectoryItemGetPayload<ExtractFindManyDirectoryItemArgsSelect<T>>>>
  create<T extends DirectoryItemCreateArgs>(
    args: Subset<T, DirectoryItemCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemCreateArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  update<T extends DirectoryItemUpdateArgs>(
    args: Subset<T, DirectoryItemUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemUpdateArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  updateMany<T extends DirectoryItemUpdateManyArgs>(
    args: Subset<T, DirectoryItemUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemUpdateManyArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  upsert<T extends DirectoryItemUpsertArgs>(
    args: Subset<T, DirectoryItemUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemUpsertArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  delete<T extends DirectoryItemDeleteArgs>(
    args: Subset<T, DirectoryItemDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemDeleteArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
  deleteMany<T extends DirectoryItemDeleteManyArgs>(
    args: Subset<T, DirectoryItemDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemDeleteManyArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>
}
function DirectoryItemDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): DirectoryItemDelegate {
  const DirectoryItem = <T extends FindManyDirectoryItemArgs>(args: Subset<T, FindManyDirectoryItemArgs>) => new DirectoryItemClient<PromiseLike<Array<DirectoryItemGetPayload<ExtractFindManyDirectoryItemArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'directoryItems', 'directoryItems', args, [])
  DirectoryItem.findOne = <T extends FindOneDirectoryItemArgs>(args: Subset<T, FindOneDirectoryItemArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'query',
    'directoryItem',
    'directoryItems.findOne',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'query',
    'directoryItem',
    'directoryItems.findOne',
    args,
    []
  )
  DirectoryItem.findMany = <T extends FindManyDirectoryItemArgs>(args: Subset<T, FindManyDirectoryItemArgs>) => new DirectoryItemClient<PromiseLike<Array<DirectoryItemGetPayload<ExtractFindManyDirectoryItemArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'directoryItems',
    'directoryItems.findMany',
    args,
    []
  )
  DirectoryItem.create = <T extends DirectoryItemCreateArgs>(args: Subset<T, DirectoryItemCreateArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'createDirectoryItem',
    'directoryItems.create',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'createDirectoryItem',
    'directoryItems.create',
    args,
    []
  )
  DirectoryItem.update = <T extends DirectoryItemUpdateArgs>(args: Subset<T, DirectoryItemUpdateArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'updateDirectoryItem',
    'directoryItems.update',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'updateDirectoryItem',
    'directoryItems.update',
    args,
    []
  )
  DirectoryItem.updateMany = <T extends DirectoryItemUpdateManyArgs>(args: Subset<T, DirectoryItemUpdateManyArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDirectoryItems',
    'directoryItems.updateMany',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDirectoryItems',
    'directoryItems.updateMany',
    args,
    []
  )
  DirectoryItem.upsert = <T extends DirectoryItemUpsertArgs>(args: Subset<T, DirectoryItemUpsertArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDirectoryItem',
    'directoryItems.upsert',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDirectoryItem',
    'directoryItems.upsert',
    args,
    []
  )
  DirectoryItem.delete = <T extends DirectoryItemDeleteArgs>(args: Subset<T, DirectoryItemDeleteArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDirectoryItem',
    'directoryItems.delete',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDirectoryItem',
    'directoryItems.delete',
    args,
    []
  )
  DirectoryItem.deleteMany = <T extends DirectoryItemDeleteManyArgs>(args: Subset<T, DirectoryItemDeleteManyArgs>) => args.select ? new DirectoryItemClient<'select' extends keyof T ? PromiseLike<DirectoryItemGetPayload<ExtractDirectoryItemArgsSelect<T>>> : DirectoryItemClient<DirectoryItem>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDirectoryItems',
    'directoryItems.deleteMany',
    args,
    []
  ) : new DirectoryItemClient<DirectoryItem>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDirectoryItems',
    'directoryItems.deleteMany',
    args,
    []
  )
  return DirectoryItem as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class DirectoryItemClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: DirectoryItemArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'DirectoryItem').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'DirectoryItem').catch(onrejected)
  }
}


// InputTypes

export type FindOneDirectoryItemArgs = {
  select?: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
}

export type FindOneDirectoryItemArgsWithSelect = {
  select: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
}

type ExtractFindOneDirectoryItemArgsSelect<S extends undefined | boolean | FindOneDirectoryItemArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneDirectoryItemArgsWithSelect
  ? S['select']
  : true


export type FindManyDirectoryItemArgs = {
  select?: DirectoryItemSelect
  where?: DirectoryItemWhereInput
  orderBy?: DirectoryItemOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyDirectoryItemArgsWithSelect = {
  select: DirectoryItemSelect
  where?: DirectoryItemWhereInput
  orderBy?: DirectoryItemOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyDirectoryItemArgsSelect<S extends undefined | boolean | FindManyDirectoryItemArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyDirectoryItemArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemCreateArgs = {
  select?: DirectoryItemSelect
  data: DirectoryItemCreateInput
}

export type DirectoryItemCreateArgsWithSelect = {
  select: DirectoryItemSelect
  data: DirectoryItemCreateInput
}

type ExtractDirectoryItemCreateArgsSelect<S extends undefined | boolean | DirectoryItemCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemCreateArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemUpdateArgs = {
  select?: DirectoryItemSelect
  data: DirectoryItemUpdateInput
  where: DirectoryItemWhereUniqueInput
}

export type DirectoryItemUpdateArgsWithSelect = {
  select: DirectoryItemSelect
  data: DirectoryItemUpdateInput
  where: DirectoryItemWhereUniqueInput
}

type ExtractDirectoryItemUpdateArgsSelect<S extends undefined | boolean | DirectoryItemUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemUpdateArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemUpdateManyArgs = {
  select?: DirectoryItemSelect
  data: DirectoryItemUpdateManyMutationInput
  where?: DirectoryItemWhereInput
}

export type DirectoryItemUpdateManyArgsWithSelect = {
  select: DirectoryItemSelect
  data: DirectoryItemUpdateManyMutationInput
  where?: DirectoryItemWhereInput
}

type ExtractDirectoryItemUpdateManyArgsSelect<S extends undefined | boolean | DirectoryItemUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemUpdateManyArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemUpsertArgs = {
  select?: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
  create: DirectoryItemCreateInput
  update: DirectoryItemUpdateInput
}

export type DirectoryItemUpsertArgsWithSelect = {
  select: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
  create: DirectoryItemCreateInput
  update: DirectoryItemUpdateInput
}

type ExtractDirectoryItemUpsertArgsSelect<S extends undefined | boolean | DirectoryItemUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemUpsertArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemDeleteArgs = {
  select?: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
}

export type DirectoryItemDeleteArgsWithSelect = {
  select: DirectoryItemSelect
  where: DirectoryItemWhereUniqueInput
}

type ExtractDirectoryItemDeleteArgsSelect<S extends undefined | boolean | DirectoryItemDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemDeleteArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemDeleteManyArgs = {
  select?: DirectoryItemSelect
  where?: DirectoryItemWhereInput
}

export type DirectoryItemDeleteManyArgsWithSelect = {
  select: DirectoryItemSelect
  where?: DirectoryItemWhereInput
}

type ExtractDirectoryItemDeleteManyArgsSelect<S extends undefined | boolean | DirectoryItemDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemDeleteManyArgsWithSelect
  ? S['select']
  : true


export type DirectoryItemArgs = {
  select?: DirectoryItemSelect
}

export type DirectoryItemArgsWithSelect = {
  select: DirectoryItemSelect
}

type ExtractDirectoryItemArgsSelect<S extends undefined | boolean | DirectoryItemArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DirectoryItemArgsWithSelect
  ? S['select']
  : true



/**
 * Model Draft
 */

export type Draft = {
  id: number
  createdAt: string
  data: string
  draftKey: string
  revisions: number
  sequence: number
  updatedAt: string
  userId: number
}

export type DraftScalars = 'id' | 'createdAt' | 'data' | 'draftKey' | 'revisions' | 'sequence' | 'updatedAt' | 'userId'


export type DraftSelect = {
  id?: boolean
  createdAt?: boolean
  data?: boolean
  draftKey?: boolean
  revisions?: boolean
  sequence?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type DraftDefault = {
  id: true
  createdAt: true
  data: true
  draftKey: true
  revisions: true
  sequence: true
  updatedAt: true
  userId: true
}


type DraftGetPayload<S extends boolean | DraftSelect> = S extends true
  ? Draft
  : S extends DraftSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<DraftDefault, S>>]: P extends DraftScalars
        ? Draft[P]
        : never
    }
   : never

export interface DraftDelegate {
  <T extends FindManyDraftArgs>(args?: Subset<T, FindManyDraftArgs>): PromiseLike<Array<DraftGetPayload<ExtractFindManyDraftArgsSelect<T>>>>
  findOne<T extends FindOneDraftArgs>(
    args: Subset<T, FindOneDraftArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractFindOneDraftArgsSelect<T>>> : DraftClient<Draft>
  findMany<T extends FindManyDraftArgs>(
    args?: Subset<T, FindManyDraftArgs>
  ): PromiseLike<Array<DraftGetPayload<ExtractFindManyDraftArgsSelect<T>>>>
  create<T extends DraftCreateArgs>(
    args: Subset<T, DraftCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftCreateArgsSelect<T>>> : DraftClient<Draft>
  update<T extends DraftUpdateArgs>(
    args: Subset<T, DraftUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftUpdateArgsSelect<T>>> : DraftClient<Draft>
  updateMany<T extends DraftUpdateManyArgs>(
    args: Subset<T, DraftUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftUpdateManyArgsSelect<T>>> : DraftClient<Draft>
  upsert<T extends DraftUpsertArgs>(
    args: Subset<T, DraftUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftUpsertArgsSelect<T>>> : DraftClient<Draft>
  delete<T extends DraftDeleteArgs>(
    args: Subset<T, DraftDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftDeleteArgsSelect<T>>> : DraftClient<Draft>
  deleteMany<T extends DraftDeleteManyArgs>(
    args: Subset<T, DraftDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftDeleteManyArgsSelect<T>>> : DraftClient<Draft>
}
function DraftDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): DraftDelegate {
  const Draft = <T extends FindManyDraftArgs>(args: Subset<T, FindManyDraftArgs>) => new DraftClient<PromiseLike<Array<DraftGetPayload<ExtractFindManyDraftArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'drafts', 'drafts', args, [])
  Draft.findOne = <T extends FindOneDraftArgs>(args: Subset<T, FindOneDraftArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'query',
    'draft',
    'drafts.findOne',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'query',
    'draft',
    'drafts.findOne',
    args,
    []
  )
  Draft.findMany = <T extends FindManyDraftArgs>(args: Subset<T, FindManyDraftArgs>) => new DraftClient<PromiseLike<Array<DraftGetPayload<ExtractFindManyDraftArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'drafts',
    'drafts.findMany',
    args,
    []
  )
  Draft.create = <T extends DraftCreateArgs>(args: Subset<T, DraftCreateArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'createDraft',
    'drafts.create',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'createDraft',
    'drafts.create',
    args,
    []
  )
  Draft.update = <T extends DraftUpdateArgs>(args: Subset<T, DraftUpdateArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'updateDraft',
    'drafts.update',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'updateDraft',
    'drafts.update',
    args,
    []
  )
  Draft.updateMany = <T extends DraftUpdateManyArgs>(args: Subset<T, DraftUpdateManyArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDrafts',
    'drafts.updateMany',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDrafts',
    'drafts.updateMany',
    args,
    []
  )
  Draft.upsert = <T extends DraftUpsertArgs>(args: Subset<T, DraftUpsertArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDraft',
    'drafts.upsert',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDraft',
    'drafts.upsert',
    args,
    []
  )
  Draft.delete = <T extends DraftDeleteArgs>(args: Subset<T, DraftDeleteArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDraft',
    'drafts.delete',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDraft',
    'drafts.delete',
    args,
    []
  )
  Draft.deleteMany = <T extends DraftDeleteManyArgs>(args: Subset<T, DraftDeleteManyArgs>) => args.select ? new DraftClient<'select' extends keyof T ? PromiseLike<DraftGetPayload<ExtractDraftArgsSelect<T>>> : DraftClient<Draft>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDrafts',
    'drafts.deleteMany',
    args,
    []
  ) : new DraftClient<Draft>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDrafts',
    'drafts.deleteMany',
    args,
    []
  )
  return Draft as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class DraftClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: DraftArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Draft').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Draft').catch(onrejected)
  }
}


// InputTypes

export type FindOneDraftArgs = {
  select?: DraftSelect
  where: DraftWhereUniqueInput
}

export type FindOneDraftArgsWithSelect = {
  select: DraftSelect
  where: DraftWhereUniqueInput
}

type ExtractFindOneDraftArgsSelect<S extends undefined | boolean | FindOneDraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneDraftArgsWithSelect
  ? S['select']
  : true


export type FindManyDraftArgs = {
  select?: DraftSelect
  where?: DraftWhereInput
  orderBy?: DraftOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyDraftArgsWithSelect = {
  select: DraftSelect
  where?: DraftWhereInput
  orderBy?: DraftOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyDraftArgsSelect<S extends undefined | boolean | FindManyDraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyDraftArgsWithSelect
  ? S['select']
  : true


export type DraftCreateArgs = {
  select?: DraftSelect
  data: DraftCreateInput
}

export type DraftCreateArgsWithSelect = {
  select: DraftSelect
  data: DraftCreateInput
}

type ExtractDraftCreateArgsSelect<S extends undefined | boolean | DraftCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftCreateArgsWithSelect
  ? S['select']
  : true


export type DraftUpdateArgs = {
  select?: DraftSelect
  data: DraftUpdateInput
  where: DraftWhereUniqueInput
}

export type DraftUpdateArgsWithSelect = {
  select: DraftSelect
  data: DraftUpdateInput
  where: DraftWhereUniqueInput
}

type ExtractDraftUpdateArgsSelect<S extends undefined | boolean | DraftUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftUpdateArgsWithSelect
  ? S['select']
  : true


export type DraftUpdateManyArgs = {
  select?: DraftSelect
  data: DraftUpdateManyMutationInput
  where?: DraftWhereInput
}

export type DraftUpdateManyArgsWithSelect = {
  select: DraftSelect
  data: DraftUpdateManyMutationInput
  where?: DraftWhereInput
}

type ExtractDraftUpdateManyArgsSelect<S extends undefined | boolean | DraftUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftUpdateManyArgsWithSelect
  ? S['select']
  : true


export type DraftUpsertArgs = {
  select?: DraftSelect
  where: DraftWhereUniqueInput
  create: DraftCreateInput
  update: DraftUpdateInput
}

export type DraftUpsertArgsWithSelect = {
  select: DraftSelect
  where: DraftWhereUniqueInput
  create: DraftCreateInput
  update: DraftUpdateInput
}

type ExtractDraftUpsertArgsSelect<S extends undefined | boolean | DraftUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftUpsertArgsWithSelect
  ? S['select']
  : true


export type DraftDeleteArgs = {
  select?: DraftSelect
  where: DraftWhereUniqueInput
}

export type DraftDeleteArgsWithSelect = {
  select: DraftSelect
  where: DraftWhereUniqueInput
}

type ExtractDraftDeleteArgsSelect<S extends undefined | boolean | DraftDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftDeleteArgsWithSelect
  ? S['select']
  : true


export type DraftDeleteManyArgs = {
  select?: DraftSelect
  where?: DraftWhereInput
}

export type DraftDeleteManyArgsWithSelect = {
  select: DraftSelect
  where?: DraftWhereInput
}

type ExtractDraftDeleteManyArgsSelect<S extends undefined | boolean | DraftDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftDeleteManyArgsWithSelect
  ? S['select']
  : true


export type DraftArgs = {
  select?: DraftSelect
}

export type DraftArgsWithSelect = {
  select: DraftSelect
}

type ExtractDraftArgsSelect<S extends undefined | boolean | DraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftArgsWithSelect
  ? S['select']
  : true



/**
 * Model DraftSequence
 */

export type DraftSequence = {
  id: number
  draftKey: string
  sequence: number
  userId: number
}

export type DraftSequenceScalars = 'id' | 'draftKey' | 'sequence' | 'userId'


export type DraftSequenceSelect = {
  id?: boolean
  draftKey?: boolean
  sequence?: boolean
  userId?: boolean
}

type DraftSequenceDefault = {
  id: true
  draftKey: true
  sequence: true
  userId: true
}


type DraftSequenceGetPayload<S extends boolean | DraftSequenceSelect> = S extends true
  ? DraftSequence
  : S extends DraftSequenceSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<DraftSequenceDefault, S>>]: P extends DraftSequenceScalars
        ? DraftSequence[P]
        : never
    }
   : never

export interface DraftSequenceDelegate {
  <T extends FindManyDraftSequenceArgs>(args?: Subset<T, FindManyDraftSequenceArgs>): PromiseLike<Array<DraftSequenceGetPayload<ExtractFindManyDraftSequenceArgsSelect<T>>>>
  findOne<T extends FindOneDraftSequenceArgs>(
    args: Subset<T, FindOneDraftSequenceArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractFindOneDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  findMany<T extends FindManyDraftSequenceArgs>(
    args?: Subset<T, FindManyDraftSequenceArgs>
  ): PromiseLike<Array<DraftSequenceGetPayload<ExtractFindManyDraftSequenceArgsSelect<T>>>>
  create<T extends DraftSequenceCreateArgs>(
    args: Subset<T, DraftSequenceCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceCreateArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  update<T extends DraftSequenceUpdateArgs>(
    args: Subset<T, DraftSequenceUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceUpdateArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  updateMany<T extends DraftSequenceUpdateManyArgs>(
    args: Subset<T, DraftSequenceUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceUpdateManyArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  upsert<T extends DraftSequenceUpsertArgs>(
    args: Subset<T, DraftSequenceUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceUpsertArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  delete<T extends DraftSequenceDeleteArgs>(
    args: Subset<T, DraftSequenceDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceDeleteArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
  deleteMany<T extends DraftSequenceDeleteManyArgs>(
    args: Subset<T, DraftSequenceDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceDeleteManyArgsSelect<T>>> : DraftSequenceClient<DraftSequence>
}
function DraftSequenceDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): DraftSequenceDelegate {
  const DraftSequence = <T extends FindManyDraftSequenceArgs>(args: Subset<T, FindManyDraftSequenceArgs>) => new DraftSequenceClient<PromiseLike<Array<DraftSequenceGetPayload<ExtractFindManyDraftSequenceArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'draftSequences', 'draftSequences', args, [])
  DraftSequence.findOne = <T extends FindOneDraftSequenceArgs>(args: Subset<T, FindOneDraftSequenceArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'query',
    'draftSequence',
    'draftSequences.findOne',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'query',
    'draftSequence',
    'draftSequences.findOne',
    args,
    []
  )
  DraftSequence.findMany = <T extends FindManyDraftSequenceArgs>(args: Subset<T, FindManyDraftSequenceArgs>) => new DraftSequenceClient<PromiseLike<Array<DraftSequenceGetPayload<ExtractFindManyDraftSequenceArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'draftSequences',
    'draftSequences.findMany',
    args,
    []
  )
  DraftSequence.create = <T extends DraftSequenceCreateArgs>(args: Subset<T, DraftSequenceCreateArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'createDraftSequence',
    'draftSequences.create',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'createDraftSequence',
    'draftSequences.create',
    args,
    []
  )
  DraftSequence.update = <T extends DraftSequenceUpdateArgs>(args: Subset<T, DraftSequenceUpdateArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'updateDraftSequence',
    'draftSequences.update',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'updateDraftSequence',
    'draftSequences.update',
    args,
    []
  )
  DraftSequence.updateMany = <T extends DraftSequenceUpdateManyArgs>(args: Subset<T, DraftSequenceUpdateManyArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDraftSequences',
    'draftSequences.updateMany',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyDraftSequences',
    'draftSequences.updateMany',
    args,
    []
  )
  DraftSequence.upsert = <T extends DraftSequenceUpsertArgs>(args: Subset<T, DraftSequenceUpsertArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDraftSequence',
    'draftSequences.upsert',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'upsertDraftSequence',
    'draftSequences.upsert',
    args,
    []
  )
  DraftSequence.delete = <T extends DraftSequenceDeleteArgs>(args: Subset<T, DraftSequenceDeleteArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDraftSequence',
    'draftSequences.delete',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'deleteDraftSequence',
    'draftSequences.delete',
    args,
    []
  )
  DraftSequence.deleteMany = <T extends DraftSequenceDeleteManyArgs>(args: Subset<T, DraftSequenceDeleteManyArgs>) => args.select ? new DraftSequenceClient<'select' extends keyof T ? PromiseLike<DraftSequenceGetPayload<ExtractDraftSequenceArgsSelect<T>>> : DraftSequenceClient<DraftSequence>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDraftSequences',
    'draftSequences.deleteMany',
    args,
    []
  ) : new DraftSequenceClient<DraftSequence>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyDraftSequences',
    'draftSequences.deleteMany',
    args,
    []
  )
  return DraftSequence as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class DraftSequenceClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: DraftSequenceArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'DraftSequence').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'DraftSequence').catch(onrejected)
  }
}


// InputTypes

export type FindOneDraftSequenceArgs = {
  select?: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
}

export type FindOneDraftSequenceArgsWithSelect = {
  select: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
}

type ExtractFindOneDraftSequenceArgsSelect<S extends undefined | boolean | FindOneDraftSequenceArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneDraftSequenceArgsWithSelect
  ? S['select']
  : true


export type FindManyDraftSequenceArgs = {
  select?: DraftSequenceSelect
  where?: DraftSequenceWhereInput
  orderBy?: DraftSequenceOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyDraftSequenceArgsWithSelect = {
  select: DraftSequenceSelect
  where?: DraftSequenceWhereInput
  orderBy?: DraftSequenceOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyDraftSequenceArgsSelect<S extends undefined | boolean | FindManyDraftSequenceArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyDraftSequenceArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceCreateArgs = {
  select?: DraftSequenceSelect
  data: DraftSequenceCreateInput
}

export type DraftSequenceCreateArgsWithSelect = {
  select: DraftSequenceSelect
  data: DraftSequenceCreateInput
}

type ExtractDraftSequenceCreateArgsSelect<S extends undefined | boolean | DraftSequenceCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceCreateArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceUpdateArgs = {
  select?: DraftSequenceSelect
  data: DraftSequenceUpdateInput
  where: DraftSequenceWhereUniqueInput
}

export type DraftSequenceUpdateArgsWithSelect = {
  select: DraftSequenceSelect
  data: DraftSequenceUpdateInput
  where: DraftSequenceWhereUniqueInput
}

type ExtractDraftSequenceUpdateArgsSelect<S extends undefined | boolean | DraftSequenceUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceUpdateArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceUpdateManyArgs = {
  select?: DraftSequenceSelect
  data: DraftSequenceUpdateManyMutationInput
  where?: DraftSequenceWhereInput
}

export type DraftSequenceUpdateManyArgsWithSelect = {
  select: DraftSequenceSelect
  data: DraftSequenceUpdateManyMutationInput
  where?: DraftSequenceWhereInput
}

type ExtractDraftSequenceUpdateManyArgsSelect<S extends undefined | boolean | DraftSequenceUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceUpdateManyArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceUpsertArgs = {
  select?: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
  create: DraftSequenceCreateInput
  update: DraftSequenceUpdateInput
}

export type DraftSequenceUpsertArgsWithSelect = {
  select: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
  create: DraftSequenceCreateInput
  update: DraftSequenceUpdateInput
}

type ExtractDraftSequenceUpsertArgsSelect<S extends undefined | boolean | DraftSequenceUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceUpsertArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceDeleteArgs = {
  select?: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
}

export type DraftSequenceDeleteArgsWithSelect = {
  select: DraftSequenceSelect
  where: DraftSequenceWhereUniqueInput
}

type ExtractDraftSequenceDeleteArgsSelect<S extends undefined | boolean | DraftSequenceDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceDeleteArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceDeleteManyArgs = {
  select?: DraftSequenceSelect
  where?: DraftSequenceWhereInput
}

export type DraftSequenceDeleteManyArgsWithSelect = {
  select: DraftSequenceSelect
  where?: DraftSequenceWhereInput
}

type ExtractDraftSequenceDeleteManyArgsSelect<S extends undefined | boolean | DraftSequenceDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceDeleteManyArgsWithSelect
  ? S['select']
  : true


export type DraftSequenceArgs = {
  select?: DraftSequenceSelect
}

export type DraftSequenceArgsWithSelect = {
  select: DraftSequenceSelect
}

type ExtractDraftSequenceArgsSelect<S extends undefined | boolean | DraftSequenceArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends DraftSequenceArgsWithSelect
  ? S['select']
  : true



/**
 * Model EmailChangeRequest
 */

export type EmailChangeRequest = {
  id: number
  changeState: number
  createdAt: string
  newEmail: string
  newEmailTokenId: number | null
  oldEmail: string
  oldEmailTokenId: number | null
  updatedAt: string
  userId: number
}

export type EmailChangeRequestScalars = 'id' | 'changeState' | 'createdAt' | 'newEmail' | 'newEmailTokenId' | 'oldEmail' | 'oldEmailTokenId' | 'updatedAt' | 'userId'


export type EmailChangeRequestSelect = {
  id?: boolean
  changeState?: boolean
  createdAt?: boolean
  newEmail?: boolean
  newEmailTokenId?: boolean
  oldEmail?: boolean
  oldEmailTokenId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type EmailChangeRequestDefault = {
  id: true
  changeState: true
  createdAt: true
  newEmail: true
  newEmailTokenId: true
  oldEmail: true
  oldEmailTokenId: true
  updatedAt: true
  userId: true
}


type EmailChangeRequestGetPayload<S extends boolean | EmailChangeRequestSelect> = S extends true
  ? EmailChangeRequest
  : S extends EmailChangeRequestSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<EmailChangeRequestDefault, S>>]: P extends EmailChangeRequestScalars
        ? EmailChangeRequest[P]
        : never
    }
   : never

export interface EmailChangeRequestDelegate {
  <T extends FindManyEmailChangeRequestArgs>(args?: Subset<T, FindManyEmailChangeRequestArgs>): PromiseLike<Array<EmailChangeRequestGetPayload<ExtractFindManyEmailChangeRequestArgsSelect<T>>>>
  findOne<T extends FindOneEmailChangeRequestArgs>(
    args: Subset<T, FindOneEmailChangeRequestArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractFindOneEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  findMany<T extends FindManyEmailChangeRequestArgs>(
    args?: Subset<T, FindManyEmailChangeRequestArgs>
  ): PromiseLike<Array<EmailChangeRequestGetPayload<ExtractFindManyEmailChangeRequestArgsSelect<T>>>>
  create<T extends EmailChangeRequestCreateArgs>(
    args: Subset<T, EmailChangeRequestCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestCreateArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  update<T extends EmailChangeRequestUpdateArgs>(
    args: Subset<T, EmailChangeRequestUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestUpdateArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  updateMany<T extends EmailChangeRequestUpdateManyArgs>(
    args: Subset<T, EmailChangeRequestUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestUpdateManyArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  upsert<T extends EmailChangeRequestUpsertArgs>(
    args: Subset<T, EmailChangeRequestUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestUpsertArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  delete<T extends EmailChangeRequestDeleteArgs>(
    args: Subset<T, EmailChangeRequestDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestDeleteArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
  deleteMany<T extends EmailChangeRequestDeleteManyArgs>(
    args: Subset<T, EmailChangeRequestDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestDeleteManyArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>
}
function EmailChangeRequestDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): EmailChangeRequestDelegate {
  const EmailChangeRequest = <T extends FindManyEmailChangeRequestArgs>(args: Subset<T, FindManyEmailChangeRequestArgs>) => new EmailChangeRequestClient<PromiseLike<Array<EmailChangeRequestGetPayload<ExtractFindManyEmailChangeRequestArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'emailChangeRequests', 'emailChangeRequests', args, [])
  EmailChangeRequest.findOne = <T extends FindOneEmailChangeRequestArgs>(args: Subset<T, FindOneEmailChangeRequestArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'query',
    'emailChangeRequest',
    'emailChangeRequests.findOne',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'query',
    'emailChangeRequest',
    'emailChangeRequests.findOne',
    args,
    []
  )
  EmailChangeRequest.findMany = <T extends FindManyEmailChangeRequestArgs>(args: Subset<T, FindManyEmailChangeRequestArgs>) => new EmailChangeRequestClient<PromiseLike<Array<EmailChangeRequestGetPayload<ExtractFindManyEmailChangeRequestArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'emailChangeRequests',
    'emailChangeRequests.findMany',
    args,
    []
  )
  EmailChangeRequest.create = <T extends EmailChangeRequestCreateArgs>(args: Subset<T, EmailChangeRequestCreateArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailChangeRequest',
    'emailChangeRequests.create',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailChangeRequest',
    'emailChangeRequests.create',
    args,
    []
  )
  EmailChangeRequest.update = <T extends EmailChangeRequestUpdateArgs>(args: Subset<T, EmailChangeRequestUpdateArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailChangeRequest',
    'emailChangeRequests.update',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailChangeRequest',
    'emailChangeRequests.update',
    args,
    []
  )
  EmailChangeRequest.updateMany = <T extends EmailChangeRequestUpdateManyArgs>(args: Subset<T, EmailChangeRequestUpdateManyArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailChangeRequests',
    'emailChangeRequests.updateMany',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailChangeRequests',
    'emailChangeRequests.updateMany',
    args,
    []
  )
  EmailChangeRequest.upsert = <T extends EmailChangeRequestUpsertArgs>(args: Subset<T, EmailChangeRequestUpsertArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailChangeRequest',
    'emailChangeRequests.upsert',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailChangeRequest',
    'emailChangeRequests.upsert',
    args,
    []
  )
  EmailChangeRequest.delete = <T extends EmailChangeRequestDeleteArgs>(args: Subset<T, EmailChangeRequestDeleteArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailChangeRequest',
    'emailChangeRequests.delete',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailChangeRequest',
    'emailChangeRequests.delete',
    args,
    []
  )
  EmailChangeRequest.deleteMany = <T extends EmailChangeRequestDeleteManyArgs>(args: Subset<T, EmailChangeRequestDeleteManyArgs>) => args.select ? new EmailChangeRequestClient<'select' extends keyof T ? PromiseLike<EmailChangeRequestGetPayload<ExtractEmailChangeRequestArgsSelect<T>>> : EmailChangeRequestClient<EmailChangeRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailChangeRequests',
    'emailChangeRequests.deleteMany',
    args,
    []
  ) : new EmailChangeRequestClient<EmailChangeRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailChangeRequests',
    'emailChangeRequests.deleteMany',
    args,
    []
  )
  return EmailChangeRequest as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class EmailChangeRequestClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: EmailChangeRequestArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailChangeRequest').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailChangeRequest').catch(onrejected)
  }
}


// InputTypes

export type FindOneEmailChangeRequestArgs = {
  select?: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
}

export type FindOneEmailChangeRequestArgsWithSelect = {
  select: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
}

type ExtractFindOneEmailChangeRequestArgsSelect<S extends undefined | boolean | FindOneEmailChangeRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneEmailChangeRequestArgsWithSelect
  ? S['select']
  : true


export type FindManyEmailChangeRequestArgs = {
  select?: EmailChangeRequestSelect
  where?: EmailChangeRequestWhereInput
  orderBy?: EmailChangeRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyEmailChangeRequestArgsWithSelect = {
  select: EmailChangeRequestSelect
  where?: EmailChangeRequestWhereInput
  orderBy?: EmailChangeRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyEmailChangeRequestArgsSelect<S extends undefined | boolean | FindManyEmailChangeRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyEmailChangeRequestArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestCreateArgs = {
  select?: EmailChangeRequestSelect
  data: EmailChangeRequestCreateInput
}

export type EmailChangeRequestCreateArgsWithSelect = {
  select: EmailChangeRequestSelect
  data: EmailChangeRequestCreateInput
}

type ExtractEmailChangeRequestCreateArgsSelect<S extends undefined | boolean | EmailChangeRequestCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestCreateArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestUpdateArgs = {
  select?: EmailChangeRequestSelect
  data: EmailChangeRequestUpdateInput
  where: EmailChangeRequestWhereUniqueInput
}

export type EmailChangeRequestUpdateArgsWithSelect = {
  select: EmailChangeRequestSelect
  data: EmailChangeRequestUpdateInput
  where: EmailChangeRequestWhereUniqueInput
}

type ExtractEmailChangeRequestUpdateArgsSelect<S extends undefined | boolean | EmailChangeRequestUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestUpdateArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestUpdateManyArgs = {
  select?: EmailChangeRequestSelect
  data: EmailChangeRequestUpdateManyMutationInput
  where?: EmailChangeRequestWhereInput
}

export type EmailChangeRequestUpdateManyArgsWithSelect = {
  select: EmailChangeRequestSelect
  data: EmailChangeRequestUpdateManyMutationInput
  where?: EmailChangeRequestWhereInput
}

type ExtractEmailChangeRequestUpdateManyArgsSelect<S extends undefined | boolean | EmailChangeRequestUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestUpdateManyArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestUpsertArgs = {
  select?: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
  create: EmailChangeRequestCreateInput
  update: EmailChangeRequestUpdateInput
}

export type EmailChangeRequestUpsertArgsWithSelect = {
  select: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
  create: EmailChangeRequestCreateInput
  update: EmailChangeRequestUpdateInput
}

type ExtractEmailChangeRequestUpsertArgsSelect<S extends undefined | boolean | EmailChangeRequestUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestUpsertArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestDeleteArgs = {
  select?: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
}

export type EmailChangeRequestDeleteArgsWithSelect = {
  select: EmailChangeRequestSelect
  where: EmailChangeRequestWhereUniqueInput
}

type ExtractEmailChangeRequestDeleteArgsSelect<S extends undefined | boolean | EmailChangeRequestDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestDeleteArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestDeleteManyArgs = {
  select?: EmailChangeRequestSelect
  where?: EmailChangeRequestWhereInput
}

export type EmailChangeRequestDeleteManyArgsWithSelect = {
  select: EmailChangeRequestSelect
  where?: EmailChangeRequestWhereInput
}

type ExtractEmailChangeRequestDeleteManyArgsSelect<S extends undefined | boolean | EmailChangeRequestDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestDeleteManyArgsWithSelect
  ? S['select']
  : true


export type EmailChangeRequestArgs = {
  select?: EmailChangeRequestSelect
}

export type EmailChangeRequestArgsWithSelect = {
  select: EmailChangeRequestSelect
}

type ExtractEmailChangeRequestArgsSelect<S extends undefined | boolean | EmailChangeRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailChangeRequestArgsWithSelect
  ? S['select']
  : true



/**
 * Model EmailLog
 */

export type EmailLog = {
  id: number
  bounced: boolean
  bounceKey: string | null
  createdAt: string
  emailType: string
  messageId: string | null
  postId: number | null
  toAddress: string
  updatedAt: string
  userId: number | null
}

export type EmailLogScalars = 'id' | 'bounced' | 'bounceKey' | 'createdAt' | 'emailType' | 'messageId' | 'postId' | 'toAddress' | 'updatedAt' | 'userId'


export type EmailLogSelect = {
  id?: boolean
  bounced?: boolean
  bounceKey?: boolean
  createdAt?: boolean
  emailType?: boolean
  messageId?: boolean
  postId?: boolean
  toAddress?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type EmailLogDefault = {
  id: true
  bounced: true
  bounceKey: true
  createdAt: true
  emailType: true
  messageId: true
  postId: true
  toAddress: true
  updatedAt: true
  userId: true
}


type EmailLogGetPayload<S extends boolean | EmailLogSelect> = S extends true
  ? EmailLog
  : S extends EmailLogSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<EmailLogDefault, S>>]: P extends EmailLogScalars
        ? EmailLog[P]
        : never
    }
   : never

export interface EmailLogDelegate {
  <T extends FindManyEmailLogArgs>(args?: Subset<T, FindManyEmailLogArgs>): PromiseLike<Array<EmailLogGetPayload<ExtractFindManyEmailLogArgsSelect<T>>>>
  findOne<T extends FindOneEmailLogArgs>(
    args: Subset<T, FindOneEmailLogArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractFindOneEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>
  findMany<T extends FindManyEmailLogArgs>(
    args?: Subset<T, FindManyEmailLogArgs>
  ): PromiseLike<Array<EmailLogGetPayload<ExtractFindManyEmailLogArgsSelect<T>>>>
  create<T extends EmailLogCreateArgs>(
    args: Subset<T, EmailLogCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogCreateArgsSelect<T>>> : EmailLogClient<EmailLog>
  update<T extends EmailLogUpdateArgs>(
    args: Subset<T, EmailLogUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogUpdateArgsSelect<T>>> : EmailLogClient<EmailLog>
  updateMany<T extends EmailLogUpdateManyArgs>(
    args: Subset<T, EmailLogUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogUpdateManyArgsSelect<T>>> : EmailLogClient<EmailLog>
  upsert<T extends EmailLogUpsertArgs>(
    args: Subset<T, EmailLogUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogUpsertArgsSelect<T>>> : EmailLogClient<EmailLog>
  delete<T extends EmailLogDeleteArgs>(
    args: Subset<T, EmailLogDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogDeleteArgsSelect<T>>> : EmailLogClient<EmailLog>
  deleteMany<T extends EmailLogDeleteManyArgs>(
    args: Subset<T, EmailLogDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogDeleteManyArgsSelect<T>>> : EmailLogClient<EmailLog>
}
function EmailLogDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): EmailLogDelegate {
  const EmailLog = <T extends FindManyEmailLogArgs>(args: Subset<T, FindManyEmailLogArgs>) => new EmailLogClient<PromiseLike<Array<EmailLogGetPayload<ExtractFindManyEmailLogArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'emailLogs', 'emailLogs', args, [])
  EmailLog.findOne = <T extends FindOneEmailLogArgs>(args: Subset<T, FindOneEmailLogArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'query',
    'emailLog',
    'emailLogs.findOne',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'query',
    'emailLog',
    'emailLogs.findOne',
    args,
    []
  )
  EmailLog.findMany = <T extends FindManyEmailLogArgs>(args: Subset<T, FindManyEmailLogArgs>) => new EmailLogClient<PromiseLike<Array<EmailLogGetPayload<ExtractFindManyEmailLogArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'emailLogs',
    'emailLogs.findMany',
    args,
    []
  )
  EmailLog.create = <T extends EmailLogCreateArgs>(args: Subset<T, EmailLogCreateArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailLog',
    'emailLogs.create',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailLog',
    'emailLogs.create',
    args,
    []
  )
  EmailLog.update = <T extends EmailLogUpdateArgs>(args: Subset<T, EmailLogUpdateArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailLog',
    'emailLogs.update',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailLog',
    'emailLogs.update',
    args,
    []
  )
  EmailLog.updateMany = <T extends EmailLogUpdateManyArgs>(args: Subset<T, EmailLogUpdateManyArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailLogs',
    'emailLogs.updateMany',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailLogs',
    'emailLogs.updateMany',
    args,
    []
  )
  EmailLog.upsert = <T extends EmailLogUpsertArgs>(args: Subset<T, EmailLogUpsertArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailLog',
    'emailLogs.upsert',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailLog',
    'emailLogs.upsert',
    args,
    []
  )
  EmailLog.delete = <T extends EmailLogDeleteArgs>(args: Subset<T, EmailLogDeleteArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailLog',
    'emailLogs.delete',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailLog',
    'emailLogs.delete',
    args,
    []
  )
  EmailLog.deleteMany = <T extends EmailLogDeleteManyArgs>(args: Subset<T, EmailLogDeleteManyArgs>) => args.select ? new EmailLogClient<'select' extends keyof T ? PromiseLike<EmailLogGetPayload<ExtractEmailLogArgsSelect<T>>> : EmailLogClient<EmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailLogs',
    'emailLogs.deleteMany',
    args,
    []
  ) : new EmailLogClient<EmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailLogs',
    'emailLogs.deleteMany',
    args,
    []
  )
  return EmailLog as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class EmailLogClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: EmailLogArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailLog').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailLog').catch(onrejected)
  }
}


// InputTypes

export type FindOneEmailLogArgs = {
  select?: EmailLogSelect
  where: EmailLogWhereUniqueInput
}

export type FindOneEmailLogArgsWithSelect = {
  select: EmailLogSelect
  where: EmailLogWhereUniqueInput
}

type ExtractFindOneEmailLogArgsSelect<S extends undefined | boolean | FindOneEmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneEmailLogArgsWithSelect
  ? S['select']
  : true


export type FindManyEmailLogArgs = {
  select?: EmailLogSelect
  where?: EmailLogWhereInput
  orderBy?: EmailLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyEmailLogArgsWithSelect = {
  select: EmailLogSelect
  where?: EmailLogWhereInput
  orderBy?: EmailLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyEmailLogArgsSelect<S extends undefined | boolean | FindManyEmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyEmailLogArgsWithSelect
  ? S['select']
  : true


export type EmailLogCreateArgs = {
  select?: EmailLogSelect
  data: EmailLogCreateInput
}

export type EmailLogCreateArgsWithSelect = {
  select: EmailLogSelect
  data: EmailLogCreateInput
}

type ExtractEmailLogCreateArgsSelect<S extends undefined | boolean | EmailLogCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogCreateArgsWithSelect
  ? S['select']
  : true


export type EmailLogUpdateArgs = {
  select?: EmailLogSelect
  data: EmailLogUpdateInput
  where: EmailLogWhereUniqueInput
}

export type EmailLogUpdateArgsWithSelect = {
  select: EmailLogSelect
  data: EmailLogUpdateInput
  where: EmailLogWhereUniqueInput
}

type ExtractEmailLogUpdateArgsSelect<S extends undefined | boolean | EmailLogUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogUpdateArgsWithSelect
  ? S['select']
  : true


export type EmailLogUpdateManyArgs = {
  select?: EmailLogSelect
  data: EmailLogUpdateManyMutationInput
  where?: EmailLogWhereInput
}

export type EmailLogUpdateManyArgsWithSelect = {
  select: EmailLogSelect
  data: EmailLogUpdateManyMutationInput
  where?: EmailLogWhereInput
}

type ExtractEmailLogUpdateManyArgsSelect<S extends undefined | boolean | EmailLogUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogUpdateManyArgsWithSelect
  ? S['select']
  : true


export type EmailLogUpsertArgs = {
  select?: EmailLogSelect
  where: EmailLogWhereUniqueInput
  create: EmailLogCreateInput
  update: EmailLogUpdateInput
}

export type EmailLogUpsertArgsWithSelect = {
  select: EmailLogSelect
  where: EmailLogWhereUniqueInput
  create: EmailLogCreateInput
  update: EmailLogUpdateInput
}

type ExtractEmailLogUpsertArgsSelect<S extends undefined | boolean | EmailLogUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogUpsertArgsWithSelect
  ? S['select']
  : true


export type EmailLogDeleteArgs = {
  select?: EmailLogSelect
  where: EmailLogWhereUniqueInput
}

export type EmailLogDeleteArgsWithSelect = {
  select: EmailLogSelect
  where: EmailLogWhereUniqueInput
}

type ExtractEmailLogDeleteArgsSelect<S extends undefined | boolean | EmailLogDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogDeleteArgsWithSelect
  ? S['select']
  : true


export type EmailLogDeleteManyArgs = {
  select?: EmailLogSelect
  where?: EmailLogWhereInput
}

export type EmailLogDeleteManyArgsWithSelect = {
  select: EmailLogSelect
  where?: EmailLogWhereInput
}

type ExtractEmailLogDeleteManyArgsSelect<S extends undefined | boolean | EmailLogDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogDeleteManyArgsWithSelect
  ? S['select']
  : true


export type EmailLogArgs = {
  select?: EmailLogSelect
}

export type EmailLogArgsWithSelect = {
  select: EmailLogSelect
}

type ExtractEmailLogArgsSelect<S extends undefined | boolean | EmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailLogArgsWithSelect
  ? S['select']
  : true



/**
 * Model EmailToken
 */

export type EmailToken = {
  id: number
  confirmed: boolean
  createdAt: string
  email: string
  expired: boolean
  token: string
  updatedAt: string
  userId: number
}

export type EmailTokenScalars = 'id' | 'confirmed' | 'createdAt' | 'email' | 'expired' | 'token' | 'updatedAt' | 'userId'


export type EmailTokenSelect = {
  id?: boolean
  confirmed?: boolean
  createdAt?: boolean
  email?: boolean
  expired?: boolean
  token?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type EmailTokenDefault = {
  id: true
  confirmed: true
  createdAt: true
  email: true
  expired: true
  token: true
  updatedAt: true
  userId: true
}


type EmailTokenGetPayload<S extends boolean | EmailTokenSelect> = S extends true
  ? EmailToken
  : S extends EmailTokenSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<EmailTokenDefault, S>>]: P extends EmailTokenScalars
        ? EmailToken[P]
        : never
    }
   : never

export interface EmailTokenDelegate {
  <T extends FindManyEmailTokenArgs>(args?: Subset<T, FindManyEmailTokenArgs>): PromiseLike<Array<EmailTokenGetPayload<ExtractFindManyEmailTokenArgsSelect<T>>>>
  findOne<T extends FindOneEmailTokenArgs>(
    args: Subset<T, FindOneEmailTokenArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractFindOneEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>
  findMany<T extends FindManyEmailTokenArgs>(
    args?: Subset<T, FindManyEmailTokenArgs>
  ): PromiseLike<Array<EmailTokenGetPayload<ExtractFindManyEmailTokenArgsSelect<T>>>>
  create<T extends EmailTokenCreateArgs>(
    args: Subset<T, EmailTokenCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenCreateArgsSelect<T>>> : EmailTokenClient<EmailToken>
  update<T extends EmailTokenUpdateArgs>(
    args: Subset<T, EmailTokenUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenUpdateArgsSelect<T>>> : EmailTokenClient<EmailToken>
  updateMany<T extends EmailTokenUpdateManyArgs>(
    args: Subset<T, EmailTokenUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenUpdateManyArgsSelect<T>>> : EmailTokenClient<EmailToken>
  upsert<T extends EmailTokenUpsertArgs>(
    args: Subset<T, EmailTokenUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenUpsertArgsSelect<T>>> : EmailTokenClient<EmailToken>
  delete<T extends EmailTokenDeleteArgs>(
    args: Subset<T, EmailTokenDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenDeleteArgsSelect<T>>> : EmailTokenClient<EmailToken>
  deleteMany<T extends EmailTokenDeleteManyArgs>(
    args: Subset<T, EmailTokenDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenDeleteManyArgsSelect<T>>> : EmailTokenClient<EmailToken>
}
function EmailTokenDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): EmailTokenDelegate {
  const EmailToken = <T extends FindManyEmailTokenArgs>(args: Subset<T, FindManyEmailTokenArgs>) => new EmailTokenClient<PromiseLike<Array<EmailTokenGetPayload<ExtractFindManyEmailTokenArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'emailTokens', 'emailTokens', args, [])
  EmailToken.findOne = <T extends FindOneEmailTokenArgs>(args: Subset<T, FindOneEmailTokenArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'query',
    'emailToken',
    'emailTokens.findOne',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'query',
    'emailToken',
    'emailTokens.findOne',
    args,
    []
  )
  EmailToken.findMany = <T extends FindManyEmailTokenArgs>(args: Subset<T, FindManyEmailTokenArgs>) => new EmailTokenClient<PromiseLike<Array<EmailTokenGetPayload<ExtractFindManyEmailTokenArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'emailTokens',
    'emailTokens.findMany',
    args,
    []
  )
  EmailToken.create = <T extends EmailTokenCreateArgs>(args: Subset<T, EmailTokenCreateArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailToken',
    'emailTokens.create',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'createEmailToken',
    'emailTokens.create',
    args,
    []
  )
  EmailToken.update = <T extends EmailTokenUpdateArgs>(args: Subset<T, EmailTokenUpdateArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailToken',
    'emailTokens.update',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmailToken',
    'emailTokens.update',
    args,
    []
  )
  EmailToken.updateMany = <T extends EmailTokenUpdateManyArgs>(args: Subset<T, EmailTokenUpdateManyArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailTokens',
    'emailTokens.updateMany',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmailTokens',
    'emailTokens.updateMany',
    args,
    []
  )
  EmailToken.upsert = <T extends EmailTokenUpsertArgs>(args: Subset<T, EmailTokenUpsertArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailToken',
    'emailTokens.upsert',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmailToken',
    'emailTokens.upsert',
    args,
    []
  )
  EmailToken.delete = <T extends EmailTokenDeleteArgs>(args: Subset<T, EmailTokenDeleteArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailToken',
    'emailTokens.delete',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmailToken',
    'emailTokens.delete',
    args,
    []
  )
  EmailToken.deleteMany = <T extends EmailTokenDeleteManyArgs>(args: Subset<T, EmailTokenDeleteManyArgs>) => args.select ? new EmailTokenClient<'select' extends keyof T ? PromiseLike<EmailTokenGetPayload<ExtractEmailTokenArgsSelect<T>>> : EmailTokenClient<EmailToken>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailTokens',
    'emailTokens.deleteMany',
    args,
    []
  ) : new EmailTokenClient<EmailToken>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmailTokens',
    'emailTokens.deleteMany',
    args,
    []
  )
  return EmailToken as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class EmailTokenClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: EmailTokenArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailToken').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmailToken').catch(onrejected)
  }
}


// InputTypes

export type FindOneEmailTokenArgs = {
  select?: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
}

export type FindOneEmailTokenArgsWithSelect = {
  select: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
}

type ExtractFindOneEmailTokenArgsSelect<S extends undefined | boolean | FindOneEmailTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneEmailTokenArgsWithSelect
  ? S['select']
  : true


export type FindManyEmailTokenArgs = {
  select?: EmailTokenSelect
  where?: EmailTokenWhereInput
  orderBy?: EmailTokenOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyEmailTokenArgsWithSelect = {
  select: EmailTokenSelect
  where?: EmailTokenWhereInput
  orderBy?: EmailTokenOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyEmailTokenArgsSelect<S extends undefined | boolean | FindManyEmailTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyEmailTokenArgsWithSelect
  ? S['select']
  : true


export type EmailTokenCreateArgs = {
  select?: EmailTokenSelect
  data: EmailTokenCreateInput
}

export type EmailTokenCreateArgsWithSelect = {
  select: EmailTokenSelect
  data: EmailTokenCreateInput
}

type ExtractEmailTokenCreateArgsSelect<S extends undefined | boolean | EmailTokenCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenCreateArgsWithSelect
  ? S['select']
  : true


export type EmailTokenUpdateArgs = {
  select?: EmailTokenSelect
  data: EmailTokenUpdateInput
  where: EmailTokenWhereUniqueInput
}

export type EmailTokenUpdateArgsWithSelect = {
  select: EmailTokenSelect
  data: EmailTokenUpdateInput
  where: EmailTokenWhereUniqueInput
}

type ExtractEmailTokenUpdateArgsSelect<S extends undefined | boolean | EmailTokenUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenUpdateArgsWithSelect
  ? S['select']
  : true


export type EmailTokenUpdateManyArgs = {
  select?: EmailTokenSelect
  data: EmailTokenUpdateManyMutationInput
  where?: EmailTokenWhereInput
}

export type EmailTokenUpdateManyArgsWithSelect = {
  select: EmailTokenSelect
  data: EmailTokenUpdateManyMutationInput
  where?: EmailTokenWhereInput
}

type ExtractEmailTokenUpdateManyArgsSelect<S extends undefined | boolean | EmailTokenUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenUpdateManyArgsWithSelect
  ? S['select']
  : true


export type EmailTokenUpsertArgs = {
  select?: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
  create: EmailTokenCreateInput
  update: EmailTokenUpdateInput
}

export type EmailTokenUpsertArgsWithSelect = {
  select: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
  create: EmailTokenCreateInput
  update: EmailTokenUpdateInput
}

type ExtractEmailTokenUpsertArgsSelect<S extends undefined | boolean | EmailTokenUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenUpsertArgsWithSelect
  ? S['select']
  : true


export type EmailTokenDeleteArgs = {
  select?: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
}

export type EmailTokenDeleteArgsWithSelect = {
  select: EmailTokenSelect
  where: EmailTokenWhereUniqueInput
}

type ExtractEmailTokenDeleteArgsSelect<S extends undefined | boolean | EmailTokenDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenDeleteArgsWithSelect
  ? S['select']
  : true


export type EmailTokenDeleteManyArgs = {
  select?: EmailTokenSelect
  where?: EmailTokenWhereInput
}

export type EmailTokenDeleteManyArgsWithSelect = {
  select: EmailTokenSelect
  where?: EmailTokenWhereInput
}

type ExtractEmailTokenDeleteManyArgsSelect<S extends undefined | boolean | EmailTokenDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenDeleteManyArgsWithSelect
  ? S['select']
  : true


export type EmailTokenArgs = {
  select?: EmailTokenSelect
}

export type EmailTokenArgsWithSelect = {
  select: EmailTokenSelect
}

type ExtractEmailTokenArgsSelect<S extends undefined | boolean | EmailTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmailTokenArgsWithSelect
  ? S['select']
  : true



/**
 * Model EmbeddableHost
 */

export type EmbeddableHost = {
  id: number
  categoryId: number
  className: string | null
  createdAt: string | null
  host: string
  pathWhitelist: string | null
  updatedAt: string | null
}

export type EmbeddableHostScalars = 'id' | 'categoryId' | 'className' | 'createdAt' | 'host' | 'pathWhitelist' | 'updatedAt'


export type EmbeddableHostSelect = {
  id?: boolean
  categoryId?: boolean
  className?: boolean
  createdAt?: boolean
  host?: boolean
  pathWhitelist?: boolean
  updatedAt?: boolean
}

type EmbeddableHostDefault = {
  id: true
  categoryId: true
  className: true
  createdAt: true
  host: true
  pathWhitelist: true
  updatedAt: true
}


type EmbeddableHostGetPayload<S extends boolean | EmbeddableHostSelect> = S extends true
  ? EmbeddableHost
  : S extends EmbeddableHostSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<EmbeddableHostDefault, S>>]: P extends EmbeddableHostScalars
        ? EmbeddableHost[P]
        : never
    }
   : never

export interface EmbeddableHostDelegate {
  <T extends FindManyEmbeddableHostArgs>(args?: Subset<T, FindManyEmbeddableHostArgs>): PromiseLike<Array<EmbeddableHostGetPayload<ExtractFindManyEmbeddableHostArgsSelect<T>>>>
  findOne<T extends FindOneEmbeddableHostArgs>(
    args: Subset<T, FindOneEmbeddableHostArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractFindOneEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  findMany<T extends FindManyEmbeddableHostArgs>(
    args?: Subset<T, FindManyEmbeddableHostArgs>
  ): PromiseLike<Array<EmbeddableHostGetPayload<ExtractFindManyEmbeddableHostArgsSelect<T>>>>
  create<T extends EmbeddableHostCreateArgs>(
    args: Subset<T, EmbeddableHostCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostCreateArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  update<T extends EmbeddableHostUpdateArgs>(
    args: Subset<T, EmbeddableHostUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostUpdateArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  updateMany<T extends EmbeddableHostUpdateManyArgs>(
    args: Subset<T, EmbeddableHostUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostUpdateManyArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  upsert<T extends EmbeddableHostUpsertArgs>(
    args: Subset<T, EmbeddableHostUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostUpsertArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  delete<T extends EmbeddableHostDeleteArgs>(
    args: Subset<T, EmbeddableHostDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostDeleteArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
  deleteMany<T extends EmbeddableHostDeleteManyArgs>(
    args: Subset<T, EmbeddableHostDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostDeleteManyArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>
}
function EmbeddableHostDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): EmbeddableHostDelegate {
  const EmbeddableHost = <T extends FindManyEmbeddableHostArgs>(args: Subset<T, FindManyEmbeddableHostArgs>) => new EmbeddableHostClient<PromiseLike<Array<EmbeddableHostGetPayload<ExtractFindManyEmbeddableHostArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'embeddableHosts', 'embeddableHosts', args, [])
  EmbeddableHost.findOne = <T extends FindOneEmbeddableHostArgs>(args: Subset<T, FindOneEmbeddableHostArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'query',
    'embeddableHost',
    'embeddableHosts.findOne',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'query',
    'embeddableHost',
    'embeddableHosts.findOne',
    args,
    []
  )
  EmbeddableHost.findMany = <T extends FindManyEmbeddableHostArgs>(args: Subset<T, FindManyEmbeddableHostArgs>) => new EmbeddableHostClient<PromiseLike<Array<EmbeddableHostGetPayload<ExtractFindManyEmbeddableHostArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'embeddableHosts',
    'embeddableHosts.findMany',
    args,
    []
  )
  EmbeddableHost.create = <T extends EmbeddableHostCreateArgs>(args: Subset<T, EmbeddableHostCreateArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'createEmbeddableHost',
    'embeddableHosts.create',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'createEmbeddableHost',
    'embeddableHosts.create',
    args,
    []
  )
  EmbeddableHost.update = <T extends EmbeddableHostUpdateArgs>(args: Subset<T, EmbeddableHostUpdateArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmbeddableHost',
    'embeddableHosts.update',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'updateEmbeddableHost',
    'embeddableHosts.update',
    args,
    []
  )
  EmbeddableHost.updateMany = <T extends EmbeddableHostUpdateManyArgs>(args: Subset<T, EmbeddableHostUpdateManyArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmbeddableHosts',
    'embeddableHosts.updateMany',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyEmbeddableHosts',
    'embeddableHosts.updateMany',
    args,
    []
  )
  EmbeddableHost.upsert = <T extends EmbeddableHostUpsertArgs>(args: Subset<T, EmbeddableHostUpsertArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmbeddableHost',
    'embeddableHosts.upsert',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'upsertEmbeddableHost',
    'embeddableHosts.upsert',
    args,
    []
  )
  EmbeddableHost.delete = <T extends EmbeddableHostDeleteArgs>(args: Subset<T, EmbeddableHostDeleteArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmbeddableHost',
    'embeddableHosts.delete',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteEmbeddableHost',
    'embeddableHosts.delete',
    args,
    []
  )
  EmbeddableHost.deleteMany = <T extends EmbeddableHostDeleteManyArgs>(args: Subset<T, EmbeddableHostDeleteManyArgs>) => args.select ? new EmbeddableHostClient<'select' extends keyof T ? PromiseLike<EmbeddableHostGetPayload<ExtractEmbeddableHostArgsSelect<T>>> : EmbeddableHostClient<EmbeddableHost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmbeddableHosts',
    'embeddableHosts.deleteMany',
    args,
    []
  ) : new EmbeddableHostClient<EmbeddableHost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyEmbeddableHosts',
    'embeddableHosts.deleteMany',
    args,
    []
  )
  return EmbeddableHost as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class EmbeddableHostClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: EmbeddableHostArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmbeddableHost').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'EmbeddableHost').catch(onrejected)
  }
}


// InputTypes

export type FindOneEmbeddableHostArgs = {
  select?: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
}

export type FindOneEmbeddableHostArgsWithSelect = {
  select: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
}

type ExtractFindOneEmbeddableHostArgsSelect<S extends undefined | boolean | FindOneEmbeddableHostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneEmbeddableHostArgsWithSelect
  ? S['select']
  : true


export type FindManyEmbeddableHostArgs = {
  select?: EmbeddableHostSelect
  where?: EmbeddableHostWhereInput
  orderBy?: EmbeddableHostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyEmbeddableHostArgsWithSelect = {
  select: EmbeddableHostSelect
  where?: EmbeddableHostWhereInput
  orderBy?: EmbeddableHostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyEmbeddableHostArgsSelect<S extends undefined | boolean | FindManyEmbeddableHostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyEmbeddableHostArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostCreateArgs = {
  select?: EmbeddableHostSelect
  data: EmbeddableHostCreateInput
}

export type EmbeddableHostCreateArgsWithSelect = {
  select: EmbeddableHostSelect
  data: EmbeddableHostCreateInput
}

type ExtractEmbeddableHostCreateArgsSelect<S extends undefined | boolean | EmbeddableHostCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostCreateArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostUpdateArgs = {
  select?: EmbeddableHostSelect
  data: EmbeddableHostUpdateInput
  where: EmbeddableHostWhereUniqueInput
}

export type EmbeddableHostUpdateArgsWithSelect = {
  select: EmbeddableHostSelect
  data: EmbeddableHostUpdateInput
  where: EmbeddableHostWhereUniqueInput
}

type ExtractEmbeddableHostUpdateArgsSelect<S extends undefined | boolean | EmbeddableHostUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostUpdateArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostUpdateManyArgs = {
  select?: EmbeddableHostSelect
  data: EmbeddableHostUpdateManyMutationInput
  where?: EmbeddableHostWhereInput
}

export type EmbeddableHostUpdateManyArgsWithSelect = {
  select: EmbeddableHostSelect
  data: EmbeddableHostUpdateManyMutationInput
  where?: EmbeddableHostWhereInput
}

type ExtractEmbeddableHostUpdateManyArgsSelect<S extends undefined | boolean | EmbeddableHostUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostUpdateManyArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostUpsertArgs = {
  select?: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
  create: EmbeddableHostCreateInput
  update: EmbeddableHostUpdateInput
}

export type EmbeddableHostUpsertArgsWithSelect = {
  select: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
  create: EmbeddableHostCreateInput
  update: EmbeddableHostUpdateInput
}

type ExtractEmbeddableHostUpsertArgsSelect<S extends undefined | boolean | EmbeddableHostUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostUpsertArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostDeleteArgs = {
  select?: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
}

export type EmbeddableHostDeleteArgsWithSelect = {
  select: EmbeddableHostSelect
  where: EmbeddableHostWhereUniqueInput
}

type ExtractEmbeddableHostDeleteArgsSelect<S extends undefined | boolean | EmbeddableHostDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostDeleteArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostDeleteManyArgs = {
  select?: EmbeddableHostSelect
  where?: EmbeddableHostWhereInput
}

export type EmbeddableHostDeleteManyArgsWithSelect = {
  select: EmbeddableHostSelect
  where?: EmbeddableHostWhereInput
}

type ExtractEmbeddableHostDeleteManyArgsSelect<S extends undefined | boolean | EmbeddableHostDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostDeleteManyArgsWithSelect
  ? S['select']
  : true


export type EmbeddableHostArgs = {
  select?: EmbeddableHostSelect
}

export type EmbeddableHostArgsWithSelect = {
  select: EmbeddableHostSelect
}

type ExtractEmbeddableHostArgsSelect<S extends undefined | boolean | EmbeddableHostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends EmbeddableHostArgsWithSelect
  ? S['select']
  : true



/**
 * Model FacebookUserInfo
 */

export type FacebookUserInfo = {
  id: number
  aboutMe: string | null
  avatarUrl: string | null
  createdAt: string
  email: string | null
  facebookUserId: number
  firstName: string | null
  gender: string | null
  lastName: string | null
  link: string | null
  location: string | null
  name: string | null
  updatedAt: string
  userId: number
  username: string | null
  website: string | null
}

export type FacebookUserInfoScalars = 'id' | 'aboutMe' | 'avatarUrl' | 'createdAt' | 'email' | 'facebookUserId' | 'firstName' | 'gender' | 'lastName' | 'link' | 'location' | 'name' | 'updatedAt' | 'userId' | 'username' | 'website'


export type FacebookUserInfoSelect = {
  id?: boolean
  aboutMe?: boolean
  avatarUrl?: boolean
  createdAt?: boolean
  email?: boolean
  facebookUserId?: boolean
  firstName?: boolean
  gender?: boolean
  lastName?: boolean
  link?: boolean
  location?: boolean
  name?: boolean
  updatedAt?: boolean
  userId?: boolean
  username?: boolean
  website?: boolean
}

type FacebookUserInfoDefault = {
  id: true
  aboutMe: true
  avatarUrl: true
  createdAt: true
  email: true
  facebookUserId: true
  firstName: true
  gender: true
  lastName: true
  link: true
  location: true
  name: true
  updatedAt: true
  userId: true
  username: true
  website: true
}


type FacebookUserInfoGetPayload<S extends boolean | FacebookUserInfoSelect> = S extends true
  ? FacebookUserInfo
  : S extends FacebookUserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<FacebookUserInfoDefault, S>>]: P extends FacebookUserInfoScalars
        ? FacebookUserInfo[P]
        : never
    }
   : never

export interface FacebookUserInfoDelegate {
  <T extends FindManyFacebookUserInfoArgs>(args?: Subset<T, FindManyFacebookUserInfoArgs>): PromiseLike<Array<FacebookUserInfoGetPayload<ExtractFindManyFacebookUserInfoArgsSelect<T>>>>
  findOne<T extends FindOneFacebookUserInfoArgs>(
    args: Subset<T, FindOneFacebookUserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFindOneFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  findMany<T extends FindManyFacebookUserInfoArgs>(
    args?: Subset<T, FindManyFacebookUserInfoArgs>
  ): PromiseLike<Array<FacebookUserInfoGetPayload<ExtractFindManyFacebookUserInfoArgsSelect<T>>>>
  create<T extends FacebookUserInfoCreateArgs>(
    args: Subset<T, FacebookUserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoCreateArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  update<T extends FacebookUserInfoUpdateArgs>(
    args: Subset<T, FacebookUserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoUpdateArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  updateMany<T extends FacebookUserInfoUpdateManyArgs>(
    args: Subset<T, FacebookUserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoUpdateManyArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  upsert<T extends FacebookUserInfoUpsertArgs>(
    args: Subset<T, FacebookUserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoUpsertArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  delete<T extends FacebookUserInfoDeleteArgs>(
    args: Subset<T, FacebookUserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoDeleteArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
  deleteMany<T extends FacebookUserInfoDeleteManyArgs>(
    args: Subset<T, FacebookUserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoDeleteManyArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>
}
function FacebookUserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): FacebookUserInfoDelegate {
  const FacebookUserInfo = <T extends FindManyFacebookUserInfoArgs>(args: Subset<T, FindManyFacebookUserInfoArgs>) => new FacebookUserInfoClient<PromiseLike<Array<FacebookUserInfoGetPayload<ExtractFindManyFacebookUserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'facebookUserInfoes', 'facebookUserInfoes', args, [])
  FacebookUserInfo.findOne = <T extends FindOneFacebookUserInfoArgs>(args: Subset<T, FindOneFacebookUserInfoArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'query',
    'facebookUserInfo',
    'facebookUserInfoes.findOne',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'query',
    'facebookUserInfo',
    'facebookUserInfoes.findOne',
    args,
    []
  )
  FacebookUserInfo.findMany = <T extends FindManyFacebookUserInfoArgs>(args: Subset<T, FindManyFacebookUserInfoArgs>) => new FacebookUserInfoClient<PromiseLike<Array<FacebookUserInfoGetPayload<ExtractFindManyFacebookUserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'facebookUserInfoes',
    'facebookUserInfoes.findMany',
    args,
    []
  )
  FacebookUserInfo.create = <T extends FacebookUserInfoCreateArgs>(args: Subset<T, FacebookUserInfoCreateArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createFacebookUserInfo',
    'facebookUserInfoes.create',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createFacebookUserInfo',
    'facebookUserInfoes.create',
    args,
    []
  )
  FacebookUserInfo.update = <T extends FacebookUserInfoUpdateArgs>(args: Subset<T, FacebookUserInfoUpdateArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateFacebookUserInfo',
    'facebookUserInfoes.update',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateFacebookUserInfo',
    'facebookUserInfoes.update',
    args,
    []
  )
  FacebookUserInfo.updateMany = <T extends FacebookUserInfoUpdateManyArgs>(args: Subset<T, FacebookUserInfoUpdateManyArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyFacebookUserInfoes',
    'facebookUserInfoes.updateMany',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyFacebookUserInfoes',
    'facebookUserInfoes.updateMany',
    args,
    []
  )
  FacebookUserInfo.upsert = <T extends FacebookUserInfoUpsertArgs>(args: Subset<T, FacebookUserInfoUpsertArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertFacebookUserInfo',
    'facebookUserInfoes.upsert',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertFacebookUserInfo',
    'facebookUserInfoes.upsert',
    args,
    []
  )
  FacebookUserInfo.delete = <T extends FacebookUserInfoDeleteArgs>(args: Subset<T, FacebookUserInfoDeleteArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteFacebookUserInfo',
    'facebookUserInfoes.delete',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteFacebookUserInfo',
    'facebookUserInfoes.delete',
    args,
    []
  )
  FacebookUserInfo.deleteMany = <T extends FacebookUserInfoDeleteManyArgs>(args: Subset<T, FacebookUserInfoDeleteManyArgs>) => args.select ? new FacebookUserInfoClient<'select' extends keyof T ? PromiseLike<FacebookUserInfoGetPayload<ExtractFacebookUserInfoArgsSelect<T>>> : FacebookUserInfoClient<FacebookUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyFacebookUserInfoes',
    'facebookUserInfoes.deleteMany',
    args,
    []
  ) : new FacebookUserInfoClient<FacebookUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyFacebookUserInfoes',
    'facebookUserInfoes.deleteMany',
    args,
    []
  )
  return FacebookUserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class FacebookUserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: FacebookUserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'FacebookUserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'FacebookUserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneFacebookUserInfoArgs = {
  select?: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
}

export type FindOneFacebookUserInfoArgsWithSelect = {
  select: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
}

type ExtractFindOneFacebookUserInfoArgsSelect<S extends undefined | boolean | FindOneFacebookUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneFacebookUserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyFacebookUserInfoArgs = {
  select?: FacebookUserInfoSelect
  where?: FacebookUserInfoWhereInput
  orderBy?: FacebookUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyFacebookUserInfoArgsWithSelect = {
  select: FacebookUserInfoSelect
  where?: FacebookUserInfoWhereInput
  orderBy?: FacebookUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyFacebookUserInfoArgsSelect<S extends undefined | boolean | FindManyFacebookUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyFacebookUserInfoArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoCreateArgs = {
  select?: FacebookUserInfoSelect
  data: FacebookUserInfoCreateInput
}

export type FacebookUserInfoCreateArgsWithSelect = {
  select: FacebookUserInfoSelect
  data: FacebookUserInfoCreateInput
}

type ExtractFacebookUserInfoCreateArgsSelect<S extends undefined | boolean | FacebookUserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoUpdateArgs = {
  select?: FacebookUserInfoSelect
  data: FacebookUserInfoUpdateInput
  where: FacebookUserInfoWhereUniqueInput
}

export type FacebookUserInfoUpdateArgsWithSelect = {
  select: FacebookUserInfoSelect
  data: FacebookUserInfoUpdateInput
  where: FacebookUserInfoWhereUniqueInput
}

type ExtractFacebookUserInfoUpdateArgsSelect<S extends undefined | boolean | FacebookUserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoUpdateManyArgs = {
  select?: FacebookUserInfoSelect
  data: FacebookUserInfoUpdateManyMutationInput
  where?: FacebookUserInfoWhereInput
}

export type FacebookUserInfoUpdateManyArgsWithSelect = {
  select: FacebookUserInfoSelect
  data: FacebookUserInfoUpdateManyMutationInput
  where?: FacebookUserInfoWhereInput
}

type ExtractFacebookUserInfoUpdateManyArgsSelect<S extends undefined | boolean | FacebookUserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoUpsertArgs = {
  select?: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
  create: FacebookUserInfoCreateInput
  update: FacebookUserInfoUpdateInput
}

export type FacebookUserInfoUpsertArgsWithSelect = {
  select: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
  create: FacebookUserInfoCreateInput
  update: FacebookUserInfoUpdateInput
}

type ExtractFacebookUserInfoUpsertArgsSelect<S extends undefined | boolean | FacebookUserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoDeleteArgs = {
  select?: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
}

export type FacebookUserInfoDeleteArgsWithSelect = {
  select: FacebookUserInfoSelect
  where: FacebookUserInfoWhereUniqueInput
}

type ExtractFacebookUserInfoDeleteArgsSelect<S extends undefined | boolean | FacebookUserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoDeleteManyArgs = {
  select?: FacebookUserInfoSelect
  where?: FacebookUserInfoWhereInput
}

export type FacebookUserInfoDeleteManyArgsWithSelect = {
  select: FacebookUserInfoSelect
  where?: FacebookUserInfoWhereInput
}

type ExtractFacebookUserInfoDeleteManyArgsSelect<S extends undefined | boolean | FacebookUserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type FacebookUserInfoArgs = {
  select?: FacebookUserInfoSelect
}

export type FacebookUserInfoArgsWithSelect = {
  select: FacebookUserInfoSelect
}

type ExtractFacebookUserInfoArgsSelect<S extends undefined | boolean | FacebookUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FacebookUserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model GithubUserInfo
 */

export type GithubUserInfo = {
  id: number
  createdAt: string
  githubUserId: number
  screenName: string
  updatedAt: string
  userId: number
}

export type GithubUserInfoScalars = 'id' | 'createdAt' | 'githubUserId' | 'screenName' | 'updatedAt' | 'userId'


export type GithubUserInfoSelect = {
  id?: boolean
  createdAt?: boolean
  githubUserId?: boolean
  screenName?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type GithubUserInfoDefault = {
  id: true
  createdAt: true
  githubUserId: true
  screenName: true
  updatedAt: true
  userId: true
}


type GithubUserInfoGetPayload<S extends boolean | GithubUserInfoSelect> = S extends true
  ? GithubUserInfo
  : S extends GithubUserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GithubUserInfoDefault, S>>]: P extends GithubUserInfoScalars
        ? GithubUserInfo[P]
        : never
    }
   : never

export interface GithubUserInfoDelegate {
  <T extends FindManyGithubUserInfoArgs>(args?: Subset<T, FindManyGithubUserInfoArgs>): PromiseLike<Array<GithubUserInfoGetPayload<ExtractFindManyGithubUserInfoArgsSelect<T>>>>
  findOne<T extends FindOneGithubUserInfoArgs>(
    args: Subset<T, FindOneGithubUserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractFindOneGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  findMany<T extends FindManyGithubUserInfoArgs>(
    args?: Subset<T, FindManyGithubUserInfoArgs>
  ): PromiseLike<Array<GithubUserInfoGetPayload<ExtractFindManyGithubUserInfoArgsSelect<T>>>>
  create<T extends GithubUserInfoCreateArgs>(
    args: Subset<T, GithubUserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoCreateArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  update<T extends GithubUserInfoUpdateArgs>(
    args: Subset<T, GithubUserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoUpdateArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  updateMany<T extends GithubUserInfoUpdateManyArgs>(
    args: Subset<T, GithubUserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoUpdateManyArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  upsert<T extends GithubUserInfoUpsertArgs>(
    args: Subset<T, GithubUserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoUpsertArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  delete<T extends GithubUserInfoDeleteArgs>(
    args: Subset<T, GithubUserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoDeleteArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
  deleteMany<T extends GithubUserInfoDeleteManyArgs>(
    args: Subset<T, GithubUserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoDeleteManyArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>
}
function GithubUserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GithubUserInfoDelegate {
  const GithubUserInfo = <T extends FindManyGithubUserInfoArgs>(args: Subset<T, FindManyGithubUserInfoArgs>) => new GithubUserInfoClient<PromiseLike<Array<GithubUserInfoGetPayload<ExtractFindManyGithubUserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'githubUserInfoes', 'githubUserInfoes', args, [])
  GithubUserInfo.findOne = <T extends FindOneGithubUserInfoArgs>(args: Subset<T, FindOneGithubUserInfoArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'query',
    'githubUserInfo',
    'githubUserInfoes.findOne',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'query',
    'githubUserInfo',
    'githubUserInfoes.findOne',
    args,
    []
  )
  GithubUserInfo.findMany = <T extends FindManyGithubUserInfoArgs>(args: Subset<T, FindManyGithubUserInfoArgs>) => new GithubUserInfoClient<PromiseLike<Array<GithubUserInfoGetPayload<ExtractFindManyGithubUserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'githubUserInfoes',
    'githubUserInfoes.findMany',
    args,
    []
  )
  GithubUserInfo.create = <T extends GithubUserInfoCreateArgs>(args: Subset<T, GithubUserInfoCreateArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createGithubUserInfo',
    'githubUserInfoes.create',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createGithubUserInfo',
    'githubUserInfoes.create',
    args,
    []
  )
  GithubUserInfo.update = <T extends GithubUserInfoUpdateArgs>(args: Subset<T, GithubUserInfoUpdateArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGithubUserInfo',
    'githubUserInfoes.update',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateGithubUserInfo',
    'githubUserInfoes.update',
    args,
    []
  )
  GithubUserInfo.updateMany = <T extends GithubUserInfoUpdateManyArgs>(args: Subset<T, GithubUserInfoUpdateManyArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGithubUserInfoes',
    'githubUserInfoes.updateMany',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGithubUserInfoes',
    'githubUserInfoes.updateMany',
    args,
    []
  )
  GithubUserInfo.upsert = <T extends GithubUserInfoUpsertArgs>(args: Subset<T, GithubUserInfoUpsertArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGithubUserInfo',
    'githubUserInfoes.upsert',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGithubUserInfo',
    'githubUserInfoes.upsert',
    args,
    []
  )
  GithubUserInfo.delete = <T extends GithubUserInfoDeleteArgs>(args: Subset<T, GithubUserInfoDeleteArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGithubUserInfo',
    'githubUserInfoes.delete',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGithubUserInfo',
    'githubUserInfoes.delete',
    args,
    []
  )
  GithubUserInfo.deleteMany = <T extends GithubUserInfoDeleteManyArgs>(args: Subset<T, GithubUserInfoDeleteManyArgs>) => args.select ? new GithubUserInfoClient<'select' extends keyof T ? PromiseLike<GithubUserInfoGetPayload<ExtractGithubUserInfoArgsSelect<T>>> : GithubUserInfoClient<GithubUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGithubUserInfoes',
    'githubUserInfoes.deleteMany',
    args,
    []
  ) : new GithubUserInfoClient<GithubUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGithubUserInfoes',
    'githubUserInfoes.deleteMany',
    args,
    []
  )
  return GithubUserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GithubUserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GithubUserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GithubUserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GithubUserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneGithubUserInfoArgs = {
  select?: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
}

export type FindOneGithubUserInfoArgsWithSelect = {
  select: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
}

type ExtractFindOneGithubUserInfoArgsSelect<S extends undefined | boolean | FindOneGithubUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGithubUserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyGithubUserInfoArgs = {
  select?: GithubUserInfoSelect
  where?: GithubUserInfoWhereInput
  orderBy?: GithubUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGithubUserInfoArgsWithSelect = {
  select: GithubUserInfoSelect
  where?: GithubUserInfoWhereInput
  orderBy?: GithubUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGithubUserInfoArgsSelect<S extends undefined | boolean | FindManyGithubUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGithubUserInfoArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoCreateArgs = {
  select?: GithubUserInfoSelect
  data: GithubUserInfoCreateInput
}

export type GithubUserInfoCreateArgsWithSelect = {
  select: GithubUserInfoSelect
  data: GithubUserInfoCreateInput
}

type ExtractGithubUserInfoCreateArgsSelect<S extends undefined | boolean | GithubUserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoUpdateArgs = {
  select?: GithubUserInfoSelect
  data: GithubUserInfoUpdateInput
  where: GithubUserInfoWhereUniqueInput
}

export type GithubUserInfoUpdateArgsWithSelect = {
  select: GithubUserInfoSelect
  data: GithubUserInfoUpdateInput
  where: GithubUserInfoWhereUniqueInput
}

type ExtractGithubUserInfoUpdateArgsSelect<S extends undefined | boolean | GithubUserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoUpdateManyArgs = {
  select?: GithubUserInfoSelect
  data: GithubUserInfoUpdateManyMutationInput
  where?: GithubUserInfoWhereInput
}

export type GithubUserInfoUpdateManyArgsWithSelect = {
  select: GithubUserInfoSelect
  data: GithubUserInfoUpdateManyMutationInput
  where?: GithubUserInfoWhereInput
}

type ExtractGithubUserInfoUpdateManyArgsSelect<S extends undefined | boolean | GithubUserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoUpsertArgs = {
  select?: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
  create: GithubUserInfoCreateInput
  update: GithubUserInfoUpdateInput
}

export type GithubUserInfoUpsertArgsWithSelect = {
  select: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
  create: GithubUserInfoCreateInput
  update: GithubUserInfoUpdateInput
}

type ExtractGithubUserInfoUpsertArgsSelect<S extends undefined | boolean | GithubUserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoDeleteArgs = {
  select?: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
}

export type GithubUserInfoDeleteArgsWithSelect = {
  select: GithubUserInfoSelect
  where: GithubUserInfoWhereUniqueInput
}

type ExtractGithubUserInfoDeleteArgsSelect<S extends undefined | boolean | GithubUserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoDeleteManyArgs = {
  select?: GithubUserInfoSelect
  where?: GithubUserInfoWhereInput
}

export type GithubUserInfoDeleteManyArgsWithSelect = {
  select: GithubUserInfoSelect
  where?: GithubUserInfoWhereInput
}

type ExtractGithubUserInfoDeleteManyArgsSelect<S extends undefined | boolean | GithubUserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GithubUserInfoArgs = {
  select?: GithubUserInfoSelect
}

export type GithubUserInfoArgsWithSelect = {
  select: GithubUserInfoSelect
}

type ExtractGithubUserInfoArgsSelect<S extends undefined | boolean | GithubUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GithubUserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model GoogleUserInfo
 */

export type GoogleUserInfo = {
  id: number
  createdAt: string
  email: string | null
  firstName: string | null
  gender: string | null
  googleUserId: string
  lastName: string | null
  link: string | null
  name: string | null
  picture: string | null
  profileLink: string | null
  updatedAt: string
  userId: number
}

export type GoogleUserInfoScalars = 'id' | 'createdAt' | 'email' | 'firstName' | 'gender' | 'googleUserId' | 'lastName' | 'link' | 'name' | 'picture' | 'profileLink' | 'updatedAt' | 'userId'


export type GoogleUserInfoSelect = {
  id?: boolean
  createdAt?: boolean
  email?: boolean
  firstName?: boolean
  gender?: boolean
  googleUserId?: boolean
  lastName?: boolean
  link?: boolean
  name?: boolean
  picture?: boolean
  profileLink?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type GoogleUserInfoDefault = {
  id: true
  createdAt: true
  email: true
  firstName: true
  gender: true
  googleUserId: true
  lastName: true
  link: true
  name: true
  picture: true
  profileLink: true
  updatedAt: true
  userId: true
}


type GoogleUserInfoGetPayload<S extends boolean | GoogleUserInfoSelect> = S extends true
  ? GoogleUserInfo
  : S extends GoogleUserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GoogleUserInfoDefault, S>>]: P extends GoogleUserInfoScalars
        ? GoogleUserInfo[P]
        : never
    }
   : never

export interface GoogleUserInfoDelegate {
  <T extends FindManyGoogleUserInfoArgs>(args?: Subset<T, FindManyGoogleUserInfoArgs>): PromiseLike<Array<GoogleUserInfoGetPayload<ExtractFindManyGoogleUserInfoArgsSelect<T>>>>
  findOne<T extends FindOneGoogleUserInfoArgs>(
    args: Subset<T, FindOneGoogleUserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractFindOneGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  findMany<T extends FindManyGoogleUserInfoArgs>(
    args?: Subset<T, FindManyGoogleUserInfoArgs>
  ): PromiseLike<Array<GoogleUserInfoGetPayload<ExtractFindManyGoogleUserInfoArgsSelect<T>>>>
  create<T extends GoogleUserInfoCreateArgs>(
    args: Subset<T, GoogleUserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoCreateArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  update<T extends GoogleUserInfoUpdateArgs>(
    args: Subset<T, GoogleUserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoUpdateArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  updateMany<T extends GoogleUserInfoUpdateManyArgs>(
    args: Subset<T, GoogleUserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoUpdateManyArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  upsert<T extends GoogleUserInfoUpsertArgs>(
    args: Subset<T, GoogleUserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoUpsertArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  delete<T extends GoogleUserInfoDeleteArgs>(
    args: Subset<T, GoogleUserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoDeleteArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
  deleteMany<T extends GoogleUserInfoDeleteManyArgs>(
    args: Subset<T, GoogleUserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoDeleteManyArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>
}
function GoogleUserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GoogleUserInfoDelegate {
  const GoogleUserInfo = <T extends FindManyGoogleUserInfoArgs>(args: Subset<T, FindManyGoogleUserInfoArgs>) => new GoogleUserInfoClient<PromiseLike<Array<GoogleUserInfoGetPayload<ExtractFindManyGoogleUserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'googleUserInfoes', 'googleUserInfoes', args, [])
  GoogleUserInfo.findOne = <T extends FindOneGoogleUserInfoArgs>(args: Subset<T, FindOneGoogleUserInfoArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'query',
    'googleUserInfo',
    'googleUserInfoes.findOne',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'query',
    'googleUserInfo',
    'googleUserInfoes.findOne',
    args,
    []
  )
  GoogleUserInfo.findMany = <T extends FindManyGoogleUserInfoArgs>(args: Subset<T, FindManyGoogleUserInfoArgs>) => new GoogleUserInfoClient<PromiseLike<Array<GoogleUserInfoGetPayload<ExtractFindManyGoogleUserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'googleUserInfoes',
    'googleUserInfoes.findMany',
    args,
    []
  )
  GoogleUserInfo.create = <T extends GoogleUserInfoCreateArgs>(args: Subset<T, GoogleUserInfoCreateArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createGoogleUserInfo',
    'googleUserInfoes.create',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createGoogleUserInfo',
    'googleUserInfoes.create',
    args,
    []
  )
  GoogleUserInfo.update = <T extends GoogleUserInfoUpdateArgs>(args: Subset<T, GoogleUserInfoUpdateArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGoogleUserInfo',
    'googleUserInfoes.update',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateGoogleUserInfo',
    'googleUserInfoes.update',
    args,
    []
  )
  GoogleUserInfo.updateMany = <T extends GoogleUserInfoUpdateManyArgs>(args: Subset<T, GoogleUserInfoUpdateManyArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGoogleUserInfoes',
    'googleUserInfoes.updateMany',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGoogleUserInfoes',
    'googleUserInfoes.updateMany',
    args,
    []
  )
  GoogleUserInfo.upsert = <T extends GoogleUserInfoUpsertArgs>(args: Subset<T, GoogleUserInfoUpsertArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGoogleUserInfo',
    'googleUserInfoes.upsert',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGoogleUserInfo',
    'googleUserInfoes.upsert',
    args,
    []
  )
  GoogleUserInfo.delete = <T extends GoogleUserInfoDeleteArgs>(args: Subset<T, GoogleUserInfoDeleteArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGoogleUserInfo',
    'googleUserInfoes.delete',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGoogleUserInfo',
    'googleUserInfoes.delete',
    args,
    []
  )
  GoogleUserInfo.deleteMany = <T extends GoogleUserInfoDeleteManyArgs>(args: Subset<T, GoogleUserInfoDeleteManyArgs>) => args.select ? new GoogleUserInfoClient<'select' extends keyof T ? PromiseLike<GoogleUserInfoGetPayload<ExtractGoogleUserInfoArgsSelect<T>>> : GoogleUserInfoClient<GoogleUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGoogleUserInfoes',
    'googleUserInfoes.deleteMany',
    args,
    []
  ) : new GoogleUserInfoClient<GoogleUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGoogleUserInfoes',
    'googleUserInfoes.deleteMany',
    args,
    []
  )
  return GoogleUserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GoogleUserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GoogleUserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GoogleUserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GoogleUserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneGoogleUserInfoArgs = {
  select?: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
}

export type FindOneGoogleUserInfoArgsWithSelect = {
  select: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
}

type ExtractFindOneGoogleUserInfoArgsSelect<S extends undefined | boolean | FindOneGoogleUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGoogleUserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyGoogleUserInfoArgs = {
  select?: GoogleUserInfoSelect
  where?: GoogleUserInfoWhereInput
  orderBy?: GoogleUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGoogleUserInfoArgsWithSelect = {
  select: GoogleUserInfoSelect
  where?: GoogleUserInfoWhereInput
  orderBy?: GoogleUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGoogleUserInfoArgsSelect<S extends undefined | boolean | FindManyGoogleUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGoogleUserInfoArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoCreateArgs = {
  select?: GoogleUserInfoSelect
  data: GoogleUserInfoCreateInput
}

export type GoogleUserInfoCreateArgsWithSelect = {
  select: GoogleUserInfoSelect
  data: GoogleUserInfoCreateInput
}

type ExtractGoogleUserInfoCreateArgsSelect<S extends undefined | boolean | GoogleUserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoUpdateArgs = {
  select?: GoogleUserInfoSelect
  data: GoogleUserInfoUpdateInput
  where: GoogleUserInfoWhereUniqueInput
}

export type GoogleUserInfoUpdateArgsWithSelect = {
  select: GoogleUserInfoSelect
  data: GoogleUserInfoUpdateInput
  where: GoogleUserInfoWhereUniqueInput
}

type ExtractGoogleUserInfoUpdateArgsSelect<S extends undefined | boolean | GoogleUserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoUpdateManyArgs = {
  select?: GoogleUserInfoSelect
  data: GoogleUserInfoUpdateManyMutationInput
  where?: GoogleUserInfoWhereInput
}

export type GoogleUserInfoUpdateManyArgsWithSelect = {
  select: GoogleUserInfoSelect
  data: GoogleUserInfoUpdateManyMutationInput
  where?: GoogleUserInfoWhereInput
}

type ExtractGoogleUserInfoUpdateManyArgsSelect<S extends undefined | boolean | GoogleUserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoUpsertArgs = {
  select?: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
  create: GoogleUserInfoCreateInput
  update: GoogleUserInfoUpdateInput
}

export type GoogleUserInfoUpsertArgsWithSelect = {
  select: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
  create: GoogleUserInfoCreateInput
  update: GoogleUserInfoUpdateInput
}

type ExtractGoogleUserInfoUpsertArgsSelect<S extends undefined | boolean | GoogleUserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoDeleteArgs = {
  select?: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
}

export type GoogleUserInfoDeleteArgsWithSelect = {
  select: GoogleUserInfoSelect
  where: GoogleUserInfoWhereUniqueInput
}

type ExtractGoogleUserInfoDeleteArgsSelect<S extends undefined | boolean | GoogleUserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoDeleteManyArgs = {
  select?: GoogleUserInfoSelect
  where?: GoogleUserInfoWhereInput
}

export type GoogleUserInfoDeleteManyArgsWithSelect = {
  select: GoogleUserInfoSelect
  where?: GoogleUserInfoWhereInput
}

type ExtractGoogleUserInfoDeleteManyArgsSelect<S extends undefined | boolean | GoogleUserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GoogleUserInfoArgs = {
  select?: GoogleUserInfoSelect
}

export type GoogleUserInfoArgsWithSelect = {
  select: GoogleUserInfoSelect
}

type ExtractGoogleUserInfoArgsSelect<S extends undefined | boolean | GoogleUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GoogleUserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model Group
 */

export type Group = {
  id: number
  allowMembershipRequests: boolean
  automatic: boolean
  automaticMembershipEmailDomains: string | null
  automaticMembershipRetroactive: boolean | null
  bioCooked: string | null
  bioRaw: string | null
  createdAt: string
  defaultNotificationLevel: number
  flairBgColor: string | null
  flairColor: string | null
  flairUrl: string | null
  fullName: string | null
  grantTrustLevel: number | null
  hasMessages: boolean
  incomingEmail: string | null
  membershipRequestTemplate: string | null
  mentionableLevel: number | null
  messageableLevel: number | null
  name: string
  primaryGroup: boolean
  publicAdmission: boolean
  publicExit: boolean
  title: string | null
  updatedAt: string
  userCount: number
  visibilityLevel: number
}

export type GroupScalars = 'id' | 'allowMembershipRequests' | 'automatic' | 'automaticMembershipEmailDomains' | 'automaticMembershipRetroactive' | 'bioCooked' | 'bioRaw' | 'createdAt' | 'defaultNotificationLevel' | 'flairBgColor' | 'flairColor' | 'flairUrl' | 'fullName' | 'grantTrustLevel' | 'hasMessages' | 'incomingEmail' | 'membershipRequestTemplate' | 'mentionableLevel' | 'messageableLevel' | 'name' | 'primaryGroup' | 'publicAdmission' | 'publicExit' | 'title' | 'updatedAt' | 'userCount' | 'visibilityLevel'


export type GroupSelect = {
  id?: boolean
  allowMembershipRequests?: boolean
  automatic?: boolean
  automaticMembershipEmailDomains?: boolean
  automaticMembershipRetroactive?: boolean
  bioCooked?: boolean
  bioRaw?: boolean
  createdAt?: boolean
  defaultNotificationLevel?: boolean
  flairBgColor?: boolean
  flairColor?: boolean
  flairUrl?: boolean
  fullName?: boolean
  grantTrustLevel?: boolean
  hasMessages?: boolean
  incomingEmail?: boolean
  membershipRequestTemplate?: boolean
  mentionableLevel?: boolean
  messageableLevel?: boolean
  name?: boolean
  primaryGroup?: boolean
  publicAdmission?: boolean
  publicExit?: boolean
  title?: boolean
  updatedAt?: boolean
  userCount?: boolean
  visibilityLevel?: boolean
}

type GroupDefault = {
  id: true
  allowMembershipRequests: true
  automatic: true
  automaticMembershipEmailDomains: true
  automaticMembershipRetroactive: true
  bioCooked: true
  bioRaw: true
  createdAt: true
  defaultNotificationLevel: true
  flairBgColor: true
  flairColor: true
  flairUrl: true
  fullName: true
  grantTrustLevel: true
  hasMessages: true
  incomingEmail: true
  membershipRequestTemplate: true
  mentionableLevel: true
  messageableLevel: true
  name: true
  primaryGroup: true
  publicAdmission: true
  publicExit: true
  title: true
  updatedAt: true
  userCount: true
  visibilityLevel: true
}


type GroupGetPayload<S extends boolean | GroupSelect> = S extends true
  ? Group
  : S extends GroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupDefault, S>>]: P extends GroupScalars
        ? Group[P]
        : never
    }
   : never

export interface GroupDelegate {
  <T extends FindManyGroupArgs>(args?: Subset<T, FindManyGroupArgs>): PromiseLike<Array<GroupGetPayload<ExtractFindManyGroupArgsSelect<T>>>>
  findOne<T extends FindOneGroupArgs>(
    args: Subset<T, FindOneGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractFindOneGroupArgsSelect<T>>> : GroupClient<Group>
  findMany<T extends FindManyGroupArgs>(
    args?: Subset<T, FindManyGroupArgs>
  ): PromiseLike<Array<GroupGetPayload<ExtractFindManyGroupArgsSelect<T>>>>
  create<T extends GroupCreateArgs>(
    args: Subset<T, GroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupCreateArgsSelect<T>>> : GroupClient<Group>
  update<T extends GroupUpdateArgs>(
    args: Subset<T, GroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupUpdateArgsSelect<T>>> : GroupClient<Group>
  updateMany<T extends GroupUpdateManyArgs>(
    args: Subset<T, GroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupUpdateManyArgsSelect<T>>> : GroupClient<Group>
  upsert<T extends GroupUpsertArgs>(
    args: Subset<T, GroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupUpsertArgsSelect<T>>> : GroupClient<Group>
  delete<T extends GroupDeleteArgs>(
    args: Subset<T, GroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupDeleteArgsSelect<T>>> : GroupClient<Group>
  deleteMany<T extends GroupDeleteManyArgs>(
    args: Subset<T, GroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupDeleteManyArgsSelect<T>>> : GroupClient<Group>
}
function GroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupDelegate {
  const Group = <T extends FindManyGroupArgs>(args: Subset<T, FindManyGroupArgs>) => new GroupClient<PromiseLike<Array<GroupGetPayload<ExtractFindManyGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groups', 'groups', args, [])
  Group.findOne = <T extends FindOneGroupArgs>(args: Subset<T, FindOneGroupArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'query',
    'group',
    'groups.findOne',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'query',
    'group',
    'groups.findOne',
    args,
    []
  )
  Group.findMany = <T extends FindManyGroupArgs>(args: Subset<T, FindManyGroupArgs>) => new GroupClient<PromiseLike<Array<GroupGetPayload<ExtractFindManyGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groups',
    'groups.findMany',
    args,
    []
  )
  Group.create = <T extends GroupCreateArgs>(args: Subset<T, GroupCreateArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroup',
    'groups.create',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'createGroup',
    'groups.create',
    args,
    []
  )
  Group.update = <T extends GroupUpdateArgs>(args: Subset<T, GroupUpdateArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroup',
    'groups.update',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroup',
    'groups.update',
    args,
    []
  )
  Group.updateMany = <T extends GroupUpdateManyArgs>(args: Subset<T, GroupUpdateManyArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroups',
    'groups.updateMany',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroups',
    'groups.updateMany',
    args,
    []
  )
  Group.upsert = <T extends GroupUpsertArgs>(args: Subset<T, GroupUpsertArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroup',
    'groups.upsert',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroup',
    'groups.upsert',
    args,
    []
  )
  Group.delete = <T extends GroupDeleteArgs>(args: Subset<T, GroupDeleteArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroup',
    'groups.delete',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroup',
    'groups.delete',
    args,
    []
  )
  Group.deleteMany = <T extends GroupDeleteManyArgs>(args: Subset<T, GroupDeleteManyArgs>) => args.select ? new GroupClient<'select' extends keyof T ? PromiseLike<GroupGetPayload<ExtractGroupArgsSelect<T>>> : GroupClient<Group>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroups',
    'groups.deleteMany',
    args,
    []
  ) : new GroupClient<Group>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroups',
    'groups.deleteMany',
    args,
    []
  )
  return Group as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Group').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Group').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupArgs = {
  select?: GroupSelect
  where: GroupWhereUniqueInput
}

export type FindOneGroupArgsWithSelect = {
  select: GroupSelect
  where: GroupWhereUniqueInput
}

type ExtractFindOneGroupArgsSelect<S extends undefined | boolean | FindOneGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupArgs = {
  select?: GroupSelect
  where?: GroupWhereInput
  orderBy?: GroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupArgsWithSelect = {
  select: GroupSelect
  where?: GroupWhereInput
  orderBy?: GroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupArgsSelect<S extends undefined | boolean | FindManyGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupArgsWithSelect
  ? S['select']
  : true


export type GroupCreateArgs = {
  select?: GroupSelect
  data: GroupCreateInput
}

export type GroupCreateArgsWithSelect = {
  select: GroupSelect
  data: GroupCreateInput
}

type ExtractGroupCreateArgsSelect<S extends undefined | boolean | GroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCreateArgsWithSelect
  ? S['select']
  : true


export type GroupUpdateArgs = {
  select?: GroupSelect
  data: GroupUpdateInput
  where: GroupWhereUniqueInput
}

export type GroupUpdateArgsWithSelect = {
  select: GroupSelect
  data: GroupUpdateInput
  where: GroupWhereUniqueInput
}

type ExtractGroupUpdateArgsSelect<S extends undefined | boolean | GroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupUpdateManyArgs = {
  select?: GroupSelect
  data: GroupUpdateManyMutationInput
  where?: GroupWhereInput
}

export type GroupUpdateManyArgsWithSelect = {
  select: GroupSelect
  data: GroupUpdateManyMutationInput
  where?: GroupWhereInput
}

type ExtractGroupUpdateManyArgsSelect<S extends undefined | boolean | GroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupUpsertArgs = {
  select?: GroupSelect
  where: GroupWhereUniqueInput
  create: GroupCreateInput
  update: GroupUpdateInput
}

export type GroupUpsertArgsWithSelect = {
  select: GroupSelect
  where: GroupWhereUniqueInput
  create: GroupCreateInput
  update: GroupUpdateInput
}

type ExtractGroupUpsertArgsSelect<S extends undefined | boolean | GroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupDeleteArgs = {
  select?: GroupSelect
  where: GroupWhereUniqueInput
}

export type GroupDeleteArgsWithSelect = {
  select: GroupSelect
  where: GroupWhereUniqueInput
}

type ExtractGroupDeleteArgsSelect<S extends undefined | boolean | GroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupDeleteManyArgs = {
  select?: GroupSelect
  where?: GroupWhereInput
}

export type GroupDeleteManyArgsWithSelect = {
  select: GroupSelect
  where?: GroupWhereInput
}

type ExtractGroupDeleteManyArgsSelect<S extends undefined | boolean | GroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupArgs = {
  select?: GroupSelect
}

export type GroupArgsWithSelect = {
  select: GroupSelect
}

type ExtractGroupArgsSelect<S extends undefined | boolean | GroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model GroupArchivedMessage
 */

export type GroupArchivedMessage = {
  id: number
  createdAt: string | null
  groupId: number
  topicId: number
  updatedAt: string | null
}

export type GroupArchivedMessageScalars = 'id' | 'createdAt' | 'groupId' | 'topicId' | 'updatedAt'


export type GroupArchivedMessageSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type GroupArchivedMessageDefault = {
  id: true
  createdAt: true
  groupId: true
  topicId: true
  updatedAt: true
}


type GroupArchivedMessageGetPayload<S extends boolean | GroupArchivedMessageSelect> = S extends true
  ? GroupArchivedMessage
  : S extends GroupArchivedMessageSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupArchivedMessageDefault, S>>]: P extends GroupArchivedMessageScalars
        ? GroupArchivedMessage[P]
        : never
    }
   : never

export interface GroupArchivedMessageDelegate {
  <T extends FindManyGroupArchivedMessageArgs>(args?: Subset<T, FindManyGroupArchivedMessageArgs>): PromiseLike<Array<GroupArchivedMessageGetPayload<ExtractFindManyGroupArchivedMessageArgsSelect<T>>>>
  findOne<T extends FindOneGroupArchivedMessageArgs>(
    args: Subset<T, FindOneGroupArchivedMessageArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractFindOneGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  findMany<T extends FindManyGroupArchivedMessageArgs>(
    args?: Subset<T, FindManyGroupArchivedMessageArgs>
  ): PromiseLike<Array<GroupArchivedMessageGetPayload<ExtractFindManyGroupArchivedMessageArgsSelect<T>>>>
  create<T extends GroupArchivedMessageCreateArgs>(
    args: Subset<T, GroupArchivedMessageCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageCreateArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  update<T extends GroupArchivedMessageUpdateArgs>(
    args: Subset<T, GroupArchivedMessageUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageUpdateArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  updateMany<T extends GroupArchivedMessageUpdateManyArgs>(
    args: Subset<T, GroupArchivedMessageUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageUpdateManyArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  upsert<T extends GroupArchivedMessageUpsertArgs>(
    args: Subset<T, GroupArchivedMessageUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageUpsertArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  delete<T extends GroupArchivedMessageDeleteArgs>(
    args: Subset<T, GroupArchivedMessageDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageDeleteArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
  deleteMany<T extends GroupArchivedMessageDeleteManyArgs>(
    args: Subset<T, GroupArchivedMessageDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageDeleteManyArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>
}
function GroupArchivedMessageDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupArchivedMessageDelegate {
  const GroupArchivedMessage = <T extends FindManyGroupArchivedMessageArgs>(args: Subset<T, FindManyGroupArchivedMessageArgs>) => new GroupArchivedMessageClient<PromiseLike<Array<GroupArchivedMessageGetPayload<ExtractFindManyGroupArchivedMessageArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groupArchivedMessages', 'groupArchivedMessages', args, [])
  GroupArchivedMessage.findOne = <T extends FindOneGroupArchivedMessageArgs>(args: Subset<T, FindOneGroupArchivedMessageArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'query',
    'groupArchivedMessage',
    'groupArchivedMessages.findOne',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'query',
    'groupArchivedMessage',
    'groupArchivedMessages.findOne',
    args,
    []
  )
  GroupArchivedMessage.findMany = <T extends FindManyGroupArchivedMessageArgs>(args: Subset<T, FindManyGroupArchivedMessageArgs>) => new GroupArchivedMessageClient<PromiseLike<Array<GroupArchivedMessageGetPayload<ExtractFindManyGroupArchivedMessageArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groupArchivedMessages',
    'groupArchivedMessages.findMany',
    args,
    []
  )
  GroupArchivedMessage.create = <T extends GroupArchivedMessageCreateArgs>(args: Subset<T, GroupArchivedMessageCreateArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupArchivedMessage',
    'groupArchivedMessages.create',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupArchivedMessage',
    'groupArchivedMessages.create',
    args,
    []
  )
  GroupArchivedMessage.update = <T extends GroupArchivedMessageUpdateArgs>(args: Subset<T, GroupArchivedMessageUpdateArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupArchivedMessage',
    'groupArchivedMessages.update',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupArchivedMessage',
    'groupArchivedMessages.update',
    args,
    []
  )
  GroupArchivedMessage.updateMany = <T extends GroupArchivedMessageUpdateManyArgs>(args: Subset<T, GroupArchivedMessageUpdateManyArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupArchivedMessages',
    'groupArchivedMessages.updateMany',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupArchivedMessages',
    'groupArchivedMessages.updateMany',
    args,
    []
  )
  GroupArchivedMessage.upsert = <T extends GroupArchivedMessageUpsertArgs>(args: Subset<T, GroupArchivedMessageUpsertArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupArchivedMessage',
    'groupArchivedMessages.upsert',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupArchivedMessage',
    'groupArchivedMessages.upsert',
    args,
    []
  )
  GroupArchivedMessage.delete = <T extends GroupArchivedMessageDeleteArgs>(args: Subset<T, GroupArchivedMessageDeleteArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupArchivedMessage',
    'groupArchivedMessages.delete',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupArchivedMessage',
    'groupArchivedMessages.delete',
    args,
    []
  )
  GroupArchivedMessage.deleteMany = <T extends GroupArchivedMessageDeleteManyArgs>(args: Subset<T, GroupArchivedMessageDeleteManyArgs>) => args.select ? new GroupArchivedMessageClient<'select' extends keyof T ? PromiseLike<GroupArchivedMessageGetPayload<ExtractGroupArchivedMessageArgsSelect<T>>> : GroupArchivedMessageClient<GroupArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupArchivedMessages',
    'groupArchivedMessages.deleteMany',
    args,
    []
  ) : new GroupArchivedMessageClient<GroupArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupArchivedMessages',
    'groupArchivedMessages.deleteMany',
    args,
    []
  )
  return GroupArchivedMessage as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupArchivedMessageClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupArchivedMessageArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupArchivedMessage').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupArchivedMessage').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupArchivedMessageArgs = {
  select?: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
}

export type FindOneGroupArchivedMessageArgsWithSelect = {
  select: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
}

type ExtractFindOneGroupArchivedMessageArgsSelect<S extends undefined | boolean | FindOneGroupArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupArchivedMessageArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupArchivedMessageArgs = {
  select?: GroupArchivedMessageSelect
  where?: GroupArchivedMessageWhereInput
  orderBy?: GroupArchivedMessageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupArchivedMessageArgsWithSelect = {
  select: GroupArchivedMessageSelect
  where?: GroupArchivedMessageWhereInput
  orderBy?: GroupArchivedMessageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupArchivedMessageArgsSelect<S extends undefined | boolean | FindManyGroupArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupArchivedMessageArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageCreateArgs = {
  select?: GroupArchivedMessageSelect
  data: GroupArchivedMessageCreateInput
}

export type GroupArchivedMessageCreateArgsWithSelect = {
  select: GroupArchivedMessageSelect
  data: GroupArchivedMessageCreateInput
}

type ExtractGroupArchivedMessageCreateArgsSelect<S extends undefined | boolean | GroupArchivedMessageCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageCreateArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageUpdateArgs = {
  select?: GroupArchivedMessageSelect
  data: GroupArchivedMessageUpdateInput
  where: GroupArchivedMessageWhereUniqueInput
}

export type GroupArchivedMessageUpdateArgsWithSelect = {
  select: GroupArchivedMessageSelect
  data: GroupArchivedMessageUpdateInput
  where: GroupArchivedMessageWhereUniqueInput
}

type ExtractGroupArchivedMessageUpdateArgsSelect<S extends undefined | boolean | GroupArchivedMessageUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageUpdateManyArgs = {
  select?: GroupArchivedMessageSelect
  data: GroupArchivedMessageUpdateManyMutationInput
  where?: GroupArchivedMessageWhereInput
}

export type GroupArchivedMessageUpdateManyArgsWithSelect = {
  select: GroupArchivedMessageSelect
  data: GroupArchivedMessageUpdateManyMutationInput
  where?: GroupArchivedMessageWhereInput
}

type ExtractGroupArchivedMessageUpdateManyArgsSelect<S extends undefined | boolean | GroupArchivedMessageUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageUpsertArgs = {
  select?: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
  create: GroupArchivedMessageCreateInput
  update: GroupArchivedMessageUpdateInput
}

export type GroupArchivedMessageUpsertArgsWithSelect = {
  select: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
  create: GroupArchivedMessageCreateInput
  update: GroupArchivedMessageUpdateInput
}

type ExtractGroupArchivedMessageUpsertArgsSelect<S extends undefined | boolean | GroupArchivedMessageUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageDeleteArgs = {
  select?: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
}

export type GroupArchivedMessageDeleteArgsWithSelect = {
  select: GroupArchivedMessageSelect
  where: GroupArchivedMessageWhereUniqueInput
}

type ExtractGroupArchivedMessageDeleteArgsSelect<S extends undefined | boolean | GroupArchivedMessageDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageDeleteManyArgs = {
  select?: GroupArchivedMessageSelect
  where?: GroupArchivedMessageWhereInput
}

export type GroupArchivedMessageDeleteManyArgsWithSelect = {
  select: GroupArchivedMessageSelect
  where?: GroupArchivedMessageWhereInput
}

type ExtractGroupArchivedMessageDeleteManyArgsSelect<S extends undefined | boolean | GroupArchivedMessageDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupArchivedMessageArgs = {
  select?: GroupArchivedMessageSelect
}

export type GroupArchivedMessageArgsWithSelect = {
  select: GroupArchivedMessageSelect
}

type ExtractGroupArchivedMessageArgsSelect<S extends undefined | boolean | GroupArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupArchivedMessageArgsWithSelect
  ? S['select']
  : true



/**
 * Model GroupCustomField
 */

export type GroupCustomField = {
  id: number
  createdAt: string
  groupId: number
  name: string
  updatedAt: string
  value: string | null
}

export type GroupCustomFieldScalars = 'id' | 'createdAt' | 'groupId' | 'name' | 'updatedAt' | 'value'


export type GroupCustomFieldSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  name?: boolean
  updatedAt?: boolean
  value?: boolean
}

type GroupCustomFieldDefault = {
  id: true
  createdAt: true
  groupId: true
  name: true
  updatedAt: true
  value: true
}


type GroupCustomFieldGetPayload<S extends boolean | GroupCustomFieldSelect> = S extends true
  ? GroupCustomField
  : S extends GroupCustomFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupCustomFieldDefault, S>>]: P extends GroupCustomFieldScalars
        ? GroupCustomField[P]
        : never
    }
   : never

export interface GroupCustomFieldDelegate {
  <T extends FindManyGroupCustomFieldArgs>(args?: Subset<T, FindManyGroupCustomFieldArgs>): PromiseLike<Array<GroupCustomFieldGetPayload<ExtractFindManyGroupCustomFieldArgsSelect<T>>>>
  findOne<T extends FindOneGroupCustomFieldArgs>(
    args: Subset<T, FindOneGroupCustomFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractFindOneGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  findMany<T extends FindManyGroupCustomFieldArgs>(
    args?: Subset<T, FindManyGroupCustomFieldArgs>
  ): PromiseLike<Array<GroupCustomFieldGetPayload<ExtractFindManyGroupCustomFieldArgsSelect<T>>>>
  create<T extends GroupCustomFieldCreateArgs>(
    args: Subset<T, GroupCustomFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldCreateArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  update<T extends GroupCustomFieldUpdateArgs>(
    args: Subset<T, GroupCustomFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldUpdateArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  updateMany<T extends GroupCustomFieldUpdateManyArgs>(
    args: Subset<T, GroupCustomFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldUpdateManyArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  upsert<T extends GroupCustomFieldUpsertArgs>(
    args: Subset<T, GroupCustomFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldUpsertArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  delete<T extends GroupCustomFieldDeleteArgs>(
    args: Subset<T, GroupCustomFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldDeleteArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
  deleteMany<T extends GroupCustomFieldDeleteManyArgs>(
    args: Subset<T, GroupCustomFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldDeleteManyArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>
}
function GroupCustomFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupCustomFieldDelegate {
  const GroupCustomField = <T extends FindManyGroupCustomFieldArgs>(args: Subset<T, FindManyGroupCustomFieldArgs>) => new GroupCustomFieldClient<PromiseLike<Array<GroupCustomFieldGetPayload<ExtractFindManyGroupCustomFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groupCustomFields', 'groupCustomFields', args, [])
  GroupCustomField.findOne = <T extends FindOneGroupCustomFieldArgs>(args: Subset<T, FindOneGroupCustomFieldArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'query',
    'groupCustomField',
    'groupCustomFields.findOne',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'query',
    'groupCustomField',
    'groupCustomFields.findOne',
    args,
    []
  )
  GroupCustomField.findMany = <T extends FindManyGroupCustomFieldArgs>(args: Subset<T, FindManyGroupCustomFieldArgs>) => new GroupCustomFieldClient<PromiseLike<Array<GroupCustomFieldGetPayload<ExtractFindManyGroupCustomFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groupCustomFields',
    'groupCustomFields.findMany',
    args,
    []
  )
  GroupCustomField.create = <T extends GroupCustomFieldCreateArgs>(args: Subset<T, GroupCustomFieldCreateArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupCustomField',
    'groupCustomFields.create',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupCustomField',
    'groupCustomFields.create',
    args,
    []
  )
  GroupCustomField.update = <T extends GroupCustomFieldUpdateArgs>(args: Subset<T, GroupCustomFieldUpdateArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupCustomField',
    'groupCustomFields.update',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupCustomField',
    'groupCustomFields.update',
    args,
    []
  )
  GroupCustomField.updateMany = <T extends GroupCustomFieldUpdateManyArgs>(args: Subset<T, GroupCustomFieldUpdateManyArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupCustomFields',
    'groupCustomFields.updateMany',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupCustomFields',
    'groupCustomFields.updateMany',
    args,
    []
  )
  GroupCustomField.upsert = <T extends GroupCustomFieldUpsertArgs>(args: Subset<T, GroupCustomFieldUpsertArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupCustomField',
    'groupCustomFields.upsert',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupCustomField',
    'groupCustomFields.upsert',
    args,
    []
  )
  GroupCustomField.delete = <T extends GroupCustomFieldDeleteArgs>(args: Subset<T, GroupCustomFieldDeleteArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupCustomField',
    'groupCustomFields.delete',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupCustomField',
    'groupCustomFields.delete',
    args,
    []
  )
  GroupCustomField.deleteMany = <T extends GroupCustomFieldDeleteManyArgs>(args: Subset<T, GroupCustomFieldDeleteManyArgs>) => args.select ? new GroupCustomFieldClient<'select' extends keyof T ? PromiseLike<GroupCustomFieldGetPayload<ExtractGroupCustomFieldArgsSelect<T>>> : GroupCustomFieldClient<GroupCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupCustomFields',
    'groupCustomFields.deleteMany',
    args,
    []
  ) : new GroupCustomFieldClient<GroupCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupCustomFields',
    'groupCustomFields.deleteMany',
    args,
    []
  )
  return GroupCustomField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupCustomFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupCustomFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupCustomField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupCustomField').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupCustomFieldArgs = {
  select?: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
}

export type FindOneGroupCustomFieldArgsWithSelect = {
  select: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
}

type ExtractFindOneGroupCustomFieldArgsSelect<S extends undefined | boolean | FindOneGroupCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupCustomFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupCustomFieldArgs = {
  select?: GroupCustomFieldSelect
  where?: GroupCustomFieldWhereInput
  orderBy?: GroupCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupCustomFieldArgsWithSelect = {
  select: GroupCustomFieldSelect
  where?: GroupCustomFieldWhereInput
  orderBy?: GroupCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupCustomFieldArgsSelect<S extends undefined | boolean | FindManyGroupCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupCustomFieldArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldCreateArgs = {
  select?: GroupCustomFieldSelect
  data: GroupCustomFieldCreateInput
}

export type GroupCustomFieldCreateArgsWithSelect = {
  select: GroupCustomFieldSelect
  data: GroupCustomFieldCreateInput
}

type ExtractGroupCustomFieldCreateArgsSelect<S extends undefined | boolean | GroupCustomFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldCreateArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldUpdateArgs = {
  select?: GroupCustomFieldSelect
  data: GroupCustomFieldUpdateInput
  where: GroupCustomFieldWhereUniqueInput
}

export type GroupCustomFieldUpdateArgsWithSelect = {
  select: GroupCustomFieldSelect
  data: GroupCustomFieldUpdateInput
  where: GroupCustomFieldWhereUniqueInput
}

type ExtractGroupCustomFieldUpdateArgsSelect<S extends undefined | boolean | GroupCustomFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldUpdateManyArgs = {
  select?: GroupCustomFieldSelect
  data: GroupCustomFieldUpdateManyMutationInput
  where?: GroupCustomFieldWhereInput
}

export type GroupCustomFieldUpdateManyArgsWithSelect = {
  select: GroupCustomFieldSelect
  data: GroupCustomFieldUpdateManyMutationInput
  where?: GroupCustomFieldWhereInput
}

type ExtractGroupCustomFieldUpdateManyArgsSelect<S extends undefined | boolean | GroupCustomFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldUpsertArgs = {
  select?: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
  create: GroupCustomFieldCreateInput
  update: GroupCustomFieldUpdateInput
}

export type GroupCustomFieldUpsertArgsWithSelect = {
  select: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
  create: GroupCustomFieldCreateInput
  update: GroupCustomFieldUpdateInput
}

type ExtractGroupCustomFieldUpsertArgsSelect<S extends undefined | boolean | GroupCustomFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldDeleteArgs = {
  select?: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
}

export type GroupCustomFieldDeleteArgsWithSelect = {
  select: GroupCustomFieldSelect
  where: GroupCustomFieldWhereUniqueInput
}

type ExtractGroupCustomFieldDeleteArgsSelect<S extends undefined | boolean | GroupCustomFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldDeleteManyArgs = {
  select?: GroupCustomFieldSelect
  where?: GroupCustomFieldWhereInput
}

export type GroupCustomFieldDeleteManyArgsWithSelect = {
  select: GroupCustomFieldSelect
  where?: GroupCustomFieldWhereInput
}

type ExtractGroupCustomFieldDeleteManyArgsSelect<S extends undefined | boolean | GroupCustomFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupCustomFieldArgs = {
  select?: GroupCustomFieldSelect
}

export type GroupCustomFieldArgsWithSelect = {
  select: GroupCustomFieldSelect
}

type ExtractGroupCustomFieldArgsSelect<S extends undefined | boolean | GroupCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupCustomFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model GroupHistory
 */

export type GroupHistory = {
  id: number
  actingUserId: number
  action: number
  createdAt: string
  groupId: number
  newValue: string | null
  prevValue: string | null
  subject: string | null
  targetUserId: number | null
  updatedAt: string
}

export type GroupHistoryScalars = 'id' | 'actingUserId' | 'action' | 'createdAt' | 'groupId' | 'newValue' | 'prevValue' | 'subject' | 'targetUserId' | 'updatedAt'


export type GroupHistorySelect = {
  id?: boolean
  actingUserId?: boolean
  action?: boolean
  createdAt?: boolean
  groupId?: boolean
  newValue?: boolean
  prevValue?: boolean
  subject?: boolean
  targetUserId?: boolean
  updatedAt?: boolean
}

type GroupHistoryDefault = {
  id: true
  actingUserId: true
  action: true
  createdAt: true
  groupId: true
  newValue: true
  prevValue: true
  subject: true
  targetUserId: true
  updatedAt: true
}


type GroupHistoryGetPayload<S extends boolean | GroupHistorySelect> = S extends true
  ? GroupHistory
  : S extends GroupHistorySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupHistoryDefault, S>>]: P extends GroupHistoryScalars
        ? GroupHistory[P]
        : never
    }
   : never

export interface GroupHistoryDelegate {
  <T extends FindManyGroupHistoryArgs>(args?: Subset<T, FindManyGroupHistoryArgs>): PromiseLike<Array<GroupHistoryGetPayload<ExtractFindManyGroupHistoryArgsSelect<T>>>>
  findOne<T extends FindOneGroupHistoryArgs>(
    args: Subset<T, FindOneGroupHistoryArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractFindOneGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  findMany<T extends FindManyGroupHistoryArgs>(
    args?: Subset<T, FindManyGroupHistoryArgs>
  ): PromiseLike<Array<GroupHistoryGetPayload<ExtractFindManyGroupHistoryArgsSelect<T>>>>
  create<T extends GroupHistoryCreateArgs>(
    args: Subset<T, GroupHistoryCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryCreateArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  update<T extends GroupHistoryUpdateArgs>(
    args: Subset<T, GroupHistoryUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryUpdateArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  updateMany<T extends GroupHistoryUpdateManyArgs>(
    args: Subset<T, GroupHistoryUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryUpdateManyArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  upsert<T extends GroupHistoryUpsertArgs>(
    args: Subset<T, GroupHistoryUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryUpsertArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  delete<T extends GroupHistoryDeleteArgs>(
    args: Subset<T, GroupHistoryDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryDeleteArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
  deleteMany<T extends GroupHistoryDeleteManyArgs>(
    args: Subset<T, GroupHistoryDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryDeleteManyArgsSelect<T>>> : GroupHistoryClient<GroupHistory>
}
function GroupHistoryDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupHistoryDelegate {
  const GroupHistory = <T extends FindManyGroupHistoryArgs>(args: Subset<T, FindManyGroupHistoryArgs>) => new GroupHistoryClient<PromiseLike<Array<GroupHistoryGetPayload<ExtractFindManyGroupHistoryArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groupHistories', 'groupHistories', args, [])
  GroupHistory.findOne = <T extends FindOneGroupHistoryArgs>(args: Subset<T, FindOneGroupHistoryArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'query',
    'groupHistory',
    'groupHistories.findOne',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'query',
    'groupHistory',
    'groupHistories.findOne',
    args,
    []
  )
  GroupHistory.findMany = <T extends FindManyGroupHistoryArgs>(args: Subset<T, FindManyGroupHistoryArgs>) => new GroupHistoryClient<PromiseLike<Array<GroupHistoryGetPayload<ExtractFindManyGroupHistoryArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groupHistories',
    'groupHistories.findMany',
    args,
    []
  )
  GroupHistory.create = <T extends GroupHistoryCreateArgs>(args: Subset<T, GroupHistoryCreateArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupHistory',
    'groupHistories.create',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupHistory',
    'groupHistories.create',
    args,
    []
  )
  GroupHistory.update = <T extends GroupHistoryUpdateArgs>(args: Subset<T, GroupHistoryUpdateArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupHistory',
    'groupHistories.update',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupHistory',
    'groupHistories.update',
    args,
    []
  )
  GroupHistory.updateMany = <T extends GroupHistoryUpdateManyArgs>(args: Subset<T, GroupHistoryUpdateManyArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupHistories',
    'groupHistories.updateMany',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupHistories',
    'groupHistories.updateMany',
    args,
    []
  )
  GroupHistory.upsert = <T extends GroupHistoryUpsertArgs>(args: Subset<T, GroupHistoryUpsertArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupHistory',
    'groupHistories.upsert',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupHistory',
    'groupHistories.upsert',
    args,
    []
  )
  GroupHistory.delete = <T extends GroupHistoryDeleteArgs>(args: Subset<T, GroupHistoryDeleteArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupHistory',
    'groupHistories.delete',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupHistory',
    'groupHistories.delete',
    args,
    []
  )
  GroupHistory.deleteMany = <T extends GroupHistoryDeleteManyArgs>(args: Subset<T, GroupHistoryDeleteManyArgs>) => args.select ? new GroupHistoryClient<'select' extends keyof T ? PromiseLike<GroupHistoryGetPayload<ExtractGroupHistoryArgsSelect<T>>> : GroupHistoryClient<GroupHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupHistories',
    'groupHistories.deleteMany',
    args,
    []
  ) : new GroupHistoryClient<GroupHistory>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupHistories',
    'groupHistories.deleteMany',
    args,
    []
  )
  return GroupHistory as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupHistoryClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupHistoryArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupHistory').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupHistory').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupHistoryArgs = {
  select?: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
}

export type FindOneGroupHistoryArgsWithSelect = {
  select: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
}

type ExtractFindOneGroupHistoryArgsSelect<S extends undefined | boolean | FindOneGroupHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupHistoryArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupHistoryArgs = {
  select?: GroupHistorySelect
  where?: GroupHistoryWhereInput
  orderBy?: GroupHistoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupHistoryArgsWithSelect = {
  select: GroupHistorySelect
  where?: GroupHistoryWhereInput
  orderBy?: GroupHistoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupHistoryArgsSelect<S extends undefined | boolean | FindManyGroupHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupHistoryArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryCreateArgs = {
  select?: GroupHistorySelect
  data: GroupHistoryCreateInput
}

export type GroupHistoryCreateArgsWithSelect = {
  select: GroupHistorySelect
  data: GroupHistoryCreateInput
}

type ExtractGroupHistoryCreateArgsSelect<S extends undefined | boolean | GroupHistoryCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryCreateArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryUpdateArgs = {
  select?: GroupHistorySelect
  data: GroupHistoryUpdateInput
  where: GroupHistoryWhereUniqueInput
}

export type GroupHistoryUpdateArgsWithSelect = {
  select: GroupHistorySelect
  data: GroupHistoryUpdateInput
  where: GroupHistoryWhereUniqueInput
}

type ExtractGroupHistoryUpdateArgsSelect<S extends undefined | boolean | GroupHistoryUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryUpdateManyArgs = {
  select?: GroupHistorySelect
  data: GroupHistoryUpdateManyMutationInput
  where?: GroupHistoryWhereInput
}

export type GroupHistoryUpdateManyArgsWithSelect = {
  select: GroupHistorySelect
  data: GroupHistoryUpdateManyMutationInput
  where?: GroupHistoryWhereInput
}

type ExtractGroupHistoryUpdateManyArgsSelect<S extends undefined | boolean | GroupHistoryUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryUpsertArgs = {
  select?: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
  create: GroupHistoryCreateInput
  update: GroupHistoryUpdateInput
}

export type GroupHistoryUpsertArgsWithSelect = {
  select: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
  create: GroupHistoryCreateInput
  update: GroupHistoryUpdateInput
}

type ExtractGroupHistoryUpsertArgsSelect<S extends undefined | boolean | GroupHistoryUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryDeleteArgs = {
  select?: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
}

export type GroupHistoryDeleteArgsWithSelect = {
  select: GroupHistorySelect
  where: GroupHistoryWhereUniqueInput
}

type ExtractGroupHistoryDeleteArgsSelect<S extends undefined | boolean | GroupHistoryDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryDeleteManyArgs = {
  select?: GroupHistorySelect
  where?: GroupHistoryWhereInput
}

export type GroupHistoryDeleteManyArgsWithSelect = {
  select: GroupHistorySelect
  where?: GroupHistoryWhereInput
}

type ExtractGroupHistoryDeleteManyArgsSelect<S extends undefined | boolean | GroupHistoryDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupHistoryArgs = {
  select?: GroupHistorySelect
}

export type GroupHistoryArgsWithSelect = {
  select: GroupHistorySelect
}

type ExtractGroupHistoryArgsSelect<S extends undefined | boolean | GroupHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupHistoryArgsWithSelect
  ? S['select']
  : true



/**
 * Model GroupMention
 */

export type GroupMention = {
  id: number
  createdAt: string | null
  groupId: number | null
  postId: number | null
  updatedAt: string | null
}

export type GroupMentionScalars = 'id' | 'createdAt' | 'groupId' | 'postId' | 'updatedAt'


export type GroupMentionSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  postId?: boolean
  updatedAt?: boolean
}

type GroupMentionDefault = {
  id: true
  createdAt: true
  groupId: true
  postId: true
  updatedAt: true
}


type GroupMentionGetPayload<S extends boolean | GroupMentionSelect> = S extends true
  ? GroupMention
  : S extends GroupMentionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupMentionDefault, S>>]: P extends GroupMentionScalars
        ? GroupMention[P]
        : never
    }
   : never

export interface GroupMentionDelegate {
  <T extends FindManyGroupMentionArgs>(args?: Subset<T, FindManyGroupMentionArgs>): PromiseLike<Array<GroupMentionGetPayload<ExtractFindManyGroupMentionArgsSelect<T>>>>
  findOne<T extends FindOneGroupMentionArgs>(
    args: Subset<T, FindOneGroupMentionArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractFindOneGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>
  findMany<T extends FindManyGroupMentionArgs>(
    args?: Subset<T, FindManyGroupMentionArgs>
  ): PromiseLike<Array<GroupMentionGetPayload<ExtractFindManyGroupMentionArgsSelect<T>>>>
  create<T extends GroupMentionCreateArgs>(
    args: Subset<T, GroupMentionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionCreateArgsSelect<T>>> : GroupMentionClient<GroupMention>
  update<T extends GroupMentionUpdateArgs>(
    args: Subset<T, GroupMentionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionUpdateArgsSelect<T>>> : GroupMentionClient<GroupMention>
  updateMany<T extends GroupMentionUpdateManyArgs>(
    args: Subset<T, GroupMentionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionUpdateManyArgsSelect<T>>> : GroupMentionClient<GroupMention>
  upsert<T extends GroupMentionUpsertArgs>(
    args: Subset<T, GroupMentionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionUpsertArgsSelect<T>>> : GroupMentionClient<GroupMention>
  delete<T extends GroupMentionDeleteArgs>(
    args: Subset<T, GroupMentionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionDeleteArgsSelect<T>>> : GroupMentionClient<GroupMention>
  deleteMany<T extends GroupMentionDeleteManyArgs>(
    args: Subset<T, GroupMentionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionDeleteManyArgsSelect<T>>> : GroupMentionClient<GroupMention>
}
function GroupMentionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupMentionDelegate {
  const GroupMention = <T extends FindManyGroupMentionArgs>(args: Subset<T, FindManyGroupMentionArgs>) => new GroupMentionClient<PromiseLike<Array<GroupMentionGetPayload<ExtractFindManyGroupMentionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groupMentions', 'groupMentions', args, [])
  GroupMention.findOne = <T extends FindOneGroupMentionArgs>(args: Subset<T, FindOneGroupMentionArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'query',
    'groupMention',
    'groupMentions.findOne',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'query',
    'groupMention',
    'groupMentions.findOne',
    args,
    []
  )
  GroupMention.findMany = <T extends FindManyGroupMentionArgs>(args: Subset<T, FindManyGroupMentionArgs>) => new GroupMentionClient<PromiseLike<Array<GroupMentionGetPayload<ExtractFindManyGroupMentionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groupMentions',
    'groupMentions.findMany',
    args,
    []
  )
  GroupMention.create = <T extends GroupMentionCreateArgs>(args: Subset<T, GroupMentionCreateArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupMention',
    'groupMentions.create',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupMention',
    'groupMentions.create',
    args,
    []
  )
  GroupMention.update = <T extends GroupMentionUpdateArgs>(args: Subset<T, GroupMentionUpdateArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupMention',
    'groupMentions.update',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupMention',
    'groupMentions.update',
    args,
    []
  )
  GroupMention.updateMany = <T extends GroupMentionUpdateManyArgs>(args: Subset<T, GroupMentionUpdateManyArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupMentions',
    'groupMentions.updateMany',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupMentions',
    'groupMentions.updateMany',
    args,
    []
  )
  GroupMention.upsert = <T extends GroupMentionUpsertArgs>(args: Subset<T, GroupMentionUpsertArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupMention',
    'groupMentions.upsert',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupMention',
    'groupMentions.upsert',
    args,
    []
  )
  GroupMention.delete = <T extends GroupMentionDeleteArgs>(args: Subset<T, GroupMentionDeleteArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupMention',
    'groupMentions.delete',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupMention',
    'groupMentions.delete',
    args,
    []
  )
  GroupMention.deleteMany = <T extends GroupMentionDeleteManyArgs>(args: Subset<T, GroupMentionDeleteManyArgs>) => args.select ? new GroupMentionClient<'select' extends keyof T ? PromiseLike<GroupMentionGetPayload<ExtractGroupMentionArgsSelect<T>>> : GroupMentionClient<GroupMention>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupMentions',
    'groupMentions.deleteMany',
    args,
    []
  ) : new GroupMentionClient<GroupMention>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupMentions',
    'groupMentions.deleteMany',
    args,
    []
  )
  return GroupMention as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupMentionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupMentionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupMention').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupMention').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupMentionArgs = {
  select?: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
}

export type FindOneGroupMentionArgsWithSelect = {
  select: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
}

type ExtractFindOneGroupMentionArgsSelect<S extends undefined | boolean | FindOneGroupMentionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupMentionArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupMentionArgs = {
  select?: GroupMentionSelect
  where?: GroupMentionWhereInput
  orderBy?: GroupMentionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupMentionArgsWithSelect = {
  select: GroupMentionSelect
  where?: GroupMentionWhereInput
  orderBy?: GroupMentionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupMentionArgsSelect<S extends undefined | boolean | FindManyGroupMentionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupMentionArgsWithSelect
  ? S['select']
  : true


export type GroupMentionCreateArgs = {
  select?: GroupMentionSelect
  data: GroupMentionCreateInput
}

export type GroupMentionCreateArgsWithSelect = {
  select: GroupMentionSelect
  data: GroupMentionCreateInput
}

type ExtractGroupMentionCreateArgsSelect<S extends undefined | boolean | GroupMentionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionCreateArgsWithSelect
  ? S['select']
  : true


export type GroupMentionUpdateArgs = {
  select?: GroupMentionSelect
  data: GroupMentionUpdateInput
  where: GroupMentionWhereUniqueInput
}

export type GroupMentionUpdateArgsWithSelect = {
  select: GroupMentionSelect
  data: GroupMentionUpdateInput
  where: GroupMentionWhereUniqueInput
}

type ExtractGroupMentionUpdateArgsSelect<S extends undefined | boolean | GroupMentionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupMentionUpdateManyArgs = {
  select?: GroupMentionSelect
  data: GroupMentionUpdateManyMutationInput
  where?: GroupMentionWhereInput
}

export type GroupMentionUpdateManyArgsWithSelect = {
  select: GroupMentionSelect
  data: GroupMentionUpdateManyMutationInput
  where?: GroupMentionWhereInput
}

type ExtractGroupMentionUpdateManyArgsSelect<S extends undefined | boolean | GroupMentionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupMentionUpsertArgs = {
  select?: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
  create: GroupMentionCreateInput
  update: GroupMentionUpdateInput
}

export type GroupMentionUpsertArgsWithSelect = {
  select: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
  create: GroupMentionCreateInput
  update: GroupMentionUpdateInput
}

type ExtractGroupMentionUpsertArgsSelect<S extends undefined | boolean | GroupMentionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupMentionDeleteArgs = {
  select?: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
}

export type GroupMentionDeleteArgsWithSelect = {
  select: GroupMentionSelect
  where: GroupMentionWhereUniqueInput
}

type ExtractGroupMentionDeleteArgsSelect<S extends undefined | boolean | GroupMentionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupMentionDeleteManyArgs = {
  select?: GroupMentionSelect
  where?: GroupMentionWhereInput
}

export type GroupMentionDeleteManyArgsWithSelect = {
  select: GroupMentionSelect
  where?: GroupMentionWhereInput
}

type ExtractGroupMentionDeleteManyArgsSelect<S extends undefined | boolean | GroupMentionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupMentionArgs = {
  select?: GroupMentionSelect
}

export type GroupMentionArgsWithSelect = {
  select: GroupMentionSelect
}

type ExtractGroupMentionArgsSelect<S extends undefined | boolean | GroupMentionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupMentionArgsWithSelect
  ? S['select']
  : true



/**
 * Model GroupUser
 */

export type GroupUser = {
  id: number
  createdAt: string
  groupId: number
  notificationLevel: number
  owner: boolean
  updatedAt: string
  userId: number
}

export type GroupUserScalars = 'id' | 'createdAt' | 'groupId' | 'notificationLevel' | 'owner' | 'updatedAt' | 'userId'


export type GroupUserSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  notificationLevel?: boolean
  owner?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type GroupUserDefault = {
  id: true
  createdAt: true
  groupId: true
  notificationLevel: true
  owner: true
  updatedAt: true
  userId: true
}


type GroupUserGetPayload<S extends boolean | GroupUserSelect> = S extends true
  ? GroupUser
  : S extends GroupUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<GroupUserDefault, S>>]: P extends GroupUserScalars
        ? GroupUser[P]
        : never
    }
   : never

export interface GroupUserDelegate {
  <T extends FindManyGroupUserArgs>(args?: Subset<T, FindManyGroupUserArgs>): PromiseLike<Array<GroupUserGetPayload<ExtractFindManyGroupUserArgsSelect<T>>>>
  findOne<T extends FindOneGroupUserArgs>(
    args: Subset<T, FindOneGroupUserArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractFindOneGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>
  findMany<T extends FindManyGroupUserArgs>(
    args?: Subset<T, FindManyGroupUserArgs>
  ): PromiseLike<Array<GroupUserGetPayload<ExtractFindManyGroupUserArgsSelect<T>>>>
  create<T extends GroupUserCreateArgs>(
    args: Subset<T, GroupUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserCreateArgsSelect<T>>> : GroupUserClient<GroupUser>
  update<T extends GroupUserUpdateArgs>(
    args: Subset<T, GroupUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserUpdateArgsSelect<T>>> : GroupUserClient<GroupUser>
  updateMany<T extends GroupUserUpdateManyArgs>(
    args: Subset<T, GroupUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserUpdateManyArgsSelect<T>>> : GroupUserClient<GroupUser>
  upsert<T extends GroupUserUpsertArgs>(
    args: Subset<T, GroupUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserUpsertArgsSelect<T>>> : GroupUserClient<GroupUser>
  delete<T extends GroupUserDeleteArgs>(
    args: Subset<T, GroupUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserDeleteArgsSelect<T>>> : GroupUserClient<GroupUser>
  deleteMany<T extends GroupUserDeleteManyArgs>(
    args: Subset<T, GroupUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserDeleteManyArgsSelect<T>>> : GroupUserClient<GroupUser>
}
function GroupUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): GroupUserDelegate {
  const GroupUser = <T extends FindManyGroupUserArgs>(args: Subset<T, FindManyGroupUserArgs>) => new GroupUserClient<PromiseLike<Array<GroupUserGetPayload<ExtractFindManyGroupUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'groupUsers', 'groupUsers', args, [])
  GroupUser.findOne = <T extends FindOneGroupUserArgs>(args: Subset<T, FindOneGroupUserArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'query',
    'groupUser',
    'groupUsers.findOne',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'query',
    'groupUser',
    'groupUsers.findOne',
    args,
    []
  )
  GroupUser.findMany = <T extends FindManyGroupUserArgs>(args: Subset<T, FindManyGroupUserArgs>) => new GroupUserClient<PromiseLike<Array<GroupUserGetPayload<ExtractFindManyGroupUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'groupUsers',
    'groupUsers.findMany',
    args,
    []
  )
  GroupUser.create = <T extends GroupUserCreateArgs>(args: Subset<T, GroupUserCreateArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupUser',
    'groupUsers.create',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'createGroupUser',
    'groupUsers.create',
    args,
    []
  )
  GroupUser.update = <T extends GroupUserUpdateArgs>(args: Subset<T, GroupUserUpdateArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupUser',
    'groupUsers.update',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateGroupUser',
    'groupUsers.update',
    args,
    []
  )
  GroupUser.updateMany = <T extends GroupUserUpdateManyArgs>(args: Subset<T, GroupUserUpdateManyArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupUsers',
    'groupUsers.updateMany',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyGroupUsers',
    'groupUsers.updateMany',
    args,
    []
  )
  GroupUser.upsert = <T extends GroupUserUpsertArgs>(args: Subset<T, GroupUserUpsertArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupUser',
    'groupUsers.upsert',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertGroupUser',
    'groupUsers.upsert',
    args,
    []
  )
  GroupUser.delete = <T extends GroupUserDeleteArgs>(args: Subset<T, GroupUserDeleteArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupUser',
    'groupUsers.delete',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteGroupUser',
    'groupUsers.delete',
    args,
    []
  )
  GroupUser.deleteMany = <T extends GroupUserDeleteManyArgs>(args: Subset<T, GroupUserDeleteManyArgs>) => args.select ? new GroupUserClient<'select' extends keyof T ? PromiseLike<GroupUserGetPayload<ExtractGroupUserArgsSelect<T>>> : GroupUserClient<GroupUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupUsers',
    'groupUsers.deleteMany',
    args,
    []
  ) : new GroupUserClient<GroupUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyGroupUsers',
    'groupUsers.deleteMany',
    args,
    []
  )
  return GroupUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class GroupUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: GroupUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'GroupUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneGroupUserArgs = {
  select?: GroupUserSelect
  where: GroupUserWhereUniqueInput
}

export type FindOneGroupUserArgsWithSelect = {
  select: GroupUserSelect
  where: GroupUserWhereUniqueInput
}

type ExtractFindOneGroupUserArgsSelect<S extends undefined | boolean | FindOneGroupUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneGroupUserArgsWithSelect
  ? S['select']
  : true


export type FindManyGroupUserArgs = {
  select?: GroupUserSelect
  where?: GroupUserWhereInput
  orderBy?: GroupUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyGroupUserArgsWithSelect = {
  select: GroupUserSelect
  where?: GroupUserWhereInput
  orderBy?: GroupUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyGroupUserArgsSelect<S extends undefined | boolean | FindManyGroupUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyGroupUserArgsWithSelect
  ? S['select']
  : true


export type GroupUserCreateArgs = {
  select?: GroupUserSelect
  data: GroupUserCreateInput
}

export type GroupUserCreateArgsWithSelect = {
  select: GroupUserSelect
  data: GroupUserCreateInput
}

type ExtractGroupUserCreateArgsSelect<S extends undefined | boolean | GroupUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserCreateArgsWithSelect
  ? S['select']
  : true


export type GroupUserUpdateArgs = {
  select?: GroupUserSelect
  data: GroupUserUpdateInput
  where: GroupUserWhereUniqueInput
}

export type GroupUserUpdateArgsWithSelect = {
  select: GroupUserSelect
  data: GroupUserUpdateInput
  where: GroupUserWhereUniqueInput
}

type ExtractGroupUserUpdateArgsSelect<S extends undefined | boolean | GroupUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserUpdateArgsWithSelect
  ? S['select']
  : true


export type GroupUserUpdateManyArgs = {
  select?: GroupUserSelect
  data: GroupUserUpdateManyMutationInput
  where?: GroupUserWhereInput
}

export type GroupUserUpdateManyArgsWithSelect = {
  select: GroupUserSelect
  data: GroupUserUpdateManyMutationInput
  where?: GroupUserWhereInput
}

type ExtractGroupUserUpdateManyArgsSelect<S extends undefined | boolean | GroupUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type GroupUserUpsertArgs = {
  select?: GroupUserSelect
  where: GroupUserWhereUniqueInput
  create: GroupUserCreateInput
  update: GroupUserUpdateInput
}

export type GroupUserUpsertArgsWithSelect = {
  select: GroupUserSelect
  where: GroupUserWhereUniqueInput
  create: GroupUserCreateInput
  update: GroupUserUpdateInput
}

type ExtractGroupUserUpsertArgsSelect<S extends undefined | boolean | GroupUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserUpsertArgsWithSelect
  ? S['select']
  : true


export type GroupUserDeleteArgs = {
  select?: GroupUserSelect
  where: GroupUserWhereUniqueInput
}

export type GroupUserDeleteArgsWithSelect = {
  select: GroupUserSelect
  where: GroupUserWhereUniqueInput
}

type ExtractGroupUserDeleteArgsSelect<S extends undefined | boolean | GroupUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserDeleteArgsWithSelect
  ? S['select']
  : true


export type GroupUserDeleteManyArgs = {
  select?: GroupUserSelect
  where?: GroupUserWhereInput
}

export type GroupUserDeleteManyArgsWithSelect = {
  select: GroupUserSelect
  where?: GroupUserWhereInput
}

type ExtractGroupUserDeleteManyArgsSelect<S extends undefined | boolean | GroupUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type GroupUserArgs = {
  select?: GroupUserSelect
}

export type GroupUserArgsWithSelect = {
  select: GroupUserSelect
}

type ExtractGroupUserArgsSelect<S extends undefined | boolean | GroupUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends GroupUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model IncomingDomain
 */

export type IncomingDomain = {
  id: number
  https: boolean
  name: string
  port: number
}

export type IncomingDomainScalars = 'id' | 'https' | 'name' | 'port'


export type IncomingDomainSelect = {
  id?: boolean
  https?: boolean
  name?: boolean
  port?: boolean
}

type IncomingDomainDefault = {
  id: true
  https: true
  name: true
  port: true
}


type IncomingDomainGetPayload<S extends boolean | IncomingDomainSelect> = S extends true
  ? IncomingDomain
  : S extends IncomingDomainSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<IncomingDomainDefault, S>>]: P extends IncomingDomainScalars
        ? IncomingDomain[P]
        : never
    }
   : never

export interface IncomingDomainDelegate {
  <T extends FindManyIncomingDomainArgs>(args?: Subset<T, FindManyIncomingDomainArgs>): PromiseLike<Array<IncomingDomainGetPayload<ExtractFindManyIncomingDomainArgsSelect<T>>>>
  findOne<T extends FindOneIncomingDomainArgs>(
    args: Subset<T, FindOneIncomingDomainArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractFindOneIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  findMany<T extends FindManyIncomingDomainArgs>(
    args?: Subset<T, FindManyIncomingDomainArgs>
  ): PromiseLike<Array<IncomingDomainGetPayload<ExtractFindManyIncomingDomainArgsSelect<T>>>>
  create<T extends IncomingDomainCreateArgs>(
    args: Subset<T, IncomingDomainCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainCreateArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  update<T extends IncomingDomainUpdateArgs>(
    args: Subset<T, IncomingDomainUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainUpdateArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  updateMany<T extends IncomingDomainUpdateManyArgs>(
    args: Subset<T, IncomingDomainUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainUpdateManyArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  upsert<T extends IncomingDomainUpsertArgs>(
    args: Subset<T, IncomingDomainUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainUpsertArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  delete<T extends IncomingDomainDeleteArgs>(
    args: Subset<T, IncomingDomainDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainDeleteArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
  deleteMany<T extends IncomingDomainDeleteManyArgs>(
    args: Subset<T, IncomingDomainDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainDeleteManyArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>
}
function IncomingDomainDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): IncomingDomainDelegate {
  const IncomingDomain = <T extends FindManyIncomingDomainArgs>(args: Subset<T, FindManyIncomingDomainArgs>) => new IncomingDomainClient<PromiseLike<Array<IncomingDomainGetPayload<ExtractFindManyIncomingDomainArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'incomingDomains', 'incomingDomains', args, [])
  IncomingDomain.findOne = <T extends FindOneIncomingDomainArgs>(args: Subset<T, FindOneIncomingDomainArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'query',
    'incomingDomain',
    'incomingDomains.findOne',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'query',
    'incomingDomain',
    'incomingDomains.findOne',
    args,
    []
  )
  IncomingDomain.findMany = <T extends FindManyIncomingDomainArgs>(args: Subset<T, FindManyIncomingDomainArgs>) => new IncomingDomainClient<PromiseLike<Array<IncomingDomainGetPayload<ExtractFindManyIncomingDomainArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'incomingDomains',
    'incomingDomains.findMany',
    args,
    []
  )
  IncomingDomain.create = <T extends IncomingDomainCreateArgs>(args: Subset<T, IncomingDomainCreateArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingDomain',
    'incomingDomains.create',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingDomain',
    'incomingDomains.create',
    args,
    []
  )
  IncomingDomain.update = <T extends IncomingDomainUpdateArgs>(args: Subset<T, IncomingDomainUpdateArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingDomain',
    'incomingDomains.update',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingDomain',
    'incomingDomains.update',
    args,
    []
  )
  IncomingDomain.updateMany = <T extends IncomingDomainUpdateManyArgs>(args: Subset<T, IncomingDomainUpdateManyArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingDomains',
    'incomingDomains.updateMany',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingDomains',
    'incomingDomains.updateMany',
    args,
    []
  )
  IncomingDomain.upsert = <T extends IncomingDomainUpsertArgs>(args: Subset<T, IncomingDomainUpsertArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingDomain',
    'incomingDomains.upsert',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingDomain',
    'incomingDomains.upsert',
    args,
    []
  )
  IncomingDomain.delete = <T extends IncomingDomainDeleteArgs>(args: Subset<T, IncomingDomainDeleteArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingDomain',
    'incomingDomains.delete',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingDomain',
    'incomingDomains.delete',
    args,
    []
  )
  IncomingDomain.deleteMany = <T extends IncomingDomainDeleteManyArgs>(args: Subset<T, IncomingDomainDeleteManyArgs>) => args.select ? new IncomingDomainClient<'select' extends keyof T ? PromiseLike<IncomingDomainGetPayload<ExtractIncomingDomainArgsSelect<T>>> : IncomingDomainClient<IncomingDomain>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingDomains',
    'incomingDomains.deleteMany',
    args,
    []
  ) : new IncomingDomainClient<IncomingDomain>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingDomains',
    'incomingDomains.deleteMany',
    args,
    []
  )
  return IncomingDomain as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class IncomingDomainClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: IncomingDomainArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingDomain').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingDomain').catch(onrejected)
  }
}


// InputTypes

export type FindOneIncomingDomainArgs = {
  select?: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
}

export type FindOneIncomingDomainArgsWithSelect = {
  select: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
}

type ExtractFindOneIncomingDomainArgsSelect<S extends undefined | boolean | FindOneIncomingDomainArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneIncomingDomainArgsWithSelect
  ? S['select']
  : true


export type FindManyIncomingDomainArgs = {
  select?: IncomingDomainSelect
  where?: IncomingDomainWhereInput
  orderBy?: IncomingDomainOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyIncomingDomainArgsWithSelect = {
  select: IncomingDomainSelect
  where?: IncomingDomainWhereInput
  orderBy?: IncomingDomainOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyIncomingDomainArgsSelect<S extends undefined | boolean | FindManyIncomingDomainArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyIncomingDomainArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainCreateArgs = {
  select?: IncomingDomainSelect
  data: IncomingDomainCreateInput
}

export type IncomingDomainCreateArgsWithSelect = {
  select: IncomingDomainSelect
  data: IncomingDomainCreateInput
}

type ExtractIncomingDomainCreateArgsSelect<S extends undefined | boolean | IncomingDomainCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainCreateArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainUpdateArgs = {
  select?: IncomingDomainSelect
  data: IncomingDomainUpdateInput
  where: IncomingDomainWhereUniqueInput
}

export type IncomingDomainUpdateArgsWithSelect = {
  select: IncomingDomainSelect
  data: IncomingDomainUpdateInput
  where: IncomingDomainWhereUniqueInput
}

type ExtractIncomingDomainUpdateArgsSelect<S extends undefined | boolean | IncomingDomainUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainUpdateArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainUpdateManyArgs = {
  select?: IncomingDomainSelect
  data: IncomingDomainUpdateManyMutationInput
  where?: IncomingDomainWhereInput
}

export type IncomingDomainUpdateManyArgsWithSelect = {
  select: IncomingDomainSelect
  data: IncomingDomainUpdateManyMutationInput
  where?: IncomingDomainWhereInput
}

type ExtractIncomingDomainUpdateManyArgsSelect<S extends undefined | boolean | IncomingDomainUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainUpdateManyArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainUpsertArgs = {
  select?: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
  create: IncomingDomainCreateInput
  update: IncomingDomainUpdateInput
}

export type IncomingDomainUpsertArgsWithSelect = {
  select: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
  create: IncomingDomainCreateInput
  update: IncomingDomainUpdateInput
}

type ExtractIncomingDomainUpsertArgsSelect<S extends undefined | boolean | IncomingDomainUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainUpsertArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainDeleteArgs = {
  select?: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
}

export type IncomingDomainDeleteArgsWithSelect = {
  select: IncomingDomainSelect
  where: IncomingDomainWhereUniqueInput
}

type ExtractIncomingDomainDeleteArgsSelect<S extends undefined | boolean | IncomingDomainDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainDeleteArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainDeleteManyArgs = {
  select?: IncomingDomainSelect
  where?: IncomingDomainWhereInput
}

export type IncomingDomainDeleteManyArgsWithSelect = {
  select: IncomingDomainSelect
  where?: IncomingDomainWhereInput
}

type ExtractIncomingDomainDeleteManyArgsSelect<S extends undefined | boolean | IncomingDomainDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainDeleteManyArgsWithSelect
  ? S['select']
  : true


export type IncomingDomainArgs = {
  select?: IncomingDomainSelect
}

export type IncomingDomainArgsWithSelect = {
  select: IncomingDomainSelect
}

type ExtractIncomingDomainArgsSelect<S extends undefined | boolean | IncomingDomainArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingDomainArgsWithSelect
  ? S['select']
  : true



/**
 * Model IncomingEmail
 */

export type IncomingEmail = {
  id: number
  ccAddresses: string | null
  createdAt: string
  error: string | null
  fromAddress: string | null
  isAutoGenerated: boolean | null
  isBounce: boolean
  messageId: string | null
  postId: number | null
  raw: string | null
  rejectionMessage: string | null
  subject: string | null
  toAddresses: string | null
  topicId: number | null
  updatedAt: string
  userId: number | null
}

export type IncomingEmailScalars = 'id' | 'ccAddresses' | 'createdAt' | 'error' | 'fromAddress' | 'isAutoGenerated' | 'isBounce' | 'messageId' | 'postId' | 'raw' | 'rejectionMessage' | 'subject' | 'toAddresses' | 'topicId' | 'updatedAt' | 'userId'


export type IncomingEmailSelect = {
  id?: boolean
  ccAddresses?: boolean
  createdAt?: boolean
  error?: boolean
  fromAddress?: boolean
  isAutoGenerated?: boolean
  isBounce?: boolean
  messageId?: boolean
  postId?: boolean
  raw?: boolean
  rejectionMessage?: boolean
  subject?: boolean
  toAddresses?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type IncomingEmailDefault = {
  id: true
  ccAddresses: true
  createdAt: true
  error: true
  fromAddress: true
  isAutoGenerated: true
  isBounce: true
  messageId: true
  postId: true
  raw: true
  rejectionMessage: true
  subject: true
  toAddresses: true
  topicId: true
  updatedAt: true
  userId: true
}


type IncomingEmailGetPayload<S extends boolean | IncomingEmailSelect> = S extends true
  ? IncomingEmail
  : S extends IncomingEmailSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<IncomingEmailDefault, S>>]: P extends IncomingEmailScalars
        ? IncomingEmail[P]
        : never
    }
   : never

export interface IncomingEmailDelegate {
  <T extends FindManyIncomingEmailArgs>(args?: Subset<T, FindManyIncomingEmailArgs>): PromiseLike<Array<IncomingEmailGetPayload<ExtractFindManyIncomingEmailArgsSelect<T>>>>
  findOne<T extends FindOneIncomingEmailArgs>(
    args: Subset<T, FindOneIncomingEmailArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractFindOneIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  findMany<T extends FindManyIncomingEmailArgs>(
    args?: Subset<T, FindManyIncomingEmailArgs>
  ): PromiseLike<Array<IncomingEmailGetPayload<ExtractFindManyIncomingEmailArgsSelect<T>>>>
  create<T extends IncomingEmailCreateArgs>(
    args: Subset<T, IncomingEmailCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailCreateArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  update<T extends IncomingEmailUpdateArgs>(
    args: Subset<T, IncomingEmailUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailUpdateArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  updateMany<T extends IncomingEmailUpdateManyArgs>(
    args: Subset<T, IncomingEmailUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailUpdateManyArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  upsert<T extends IncomingEmailUpsertArgs>(
    args: Subset<T, IncomingEmailUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailUpsertArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  delete<T extends IncomingEmailDeleteArgs>(
    args: Subset<T, IncomingEmailDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailDeleteArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
  deleteMany<T extends IncomingEmailDeleteManyArgs>(
    args: Subset<T, IncomingEmailDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailDeleteManyArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>
}
function IncomingEmailDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): IncomingEmailDelegate {
  const IncomingEmail = <T extends FindManyIncomingEmailArgs>(args: Subset<T, FindManyIncomingEmailArgs>) => new IncomingEmailClient<PromiseLike<Array<IncomingEmailGetPayload<ExtractFindManyIncomingEmailArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'incomingEmails', 'incomingEmails', args, [])
  IncomingEmail.findOne = <T extends FindOneIncomingEmailArgs>(args: Subset<T, FindOneIncomingEmailArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'query',
    'incomingEmail',
    'incomingEmails.findOne',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'query',
    'incomingEmail',
    'incomingEmails.findOne',
    args,
    []
  )
  IncomingEmail.findMany = <T extends FindManyIncomingEmailArgs>(args: Subset<T, FindManyIncomingEmailArgs>) => new IncomingEmailClient<PromiseLike<Array<IncomingEmailGetPayload<ExtractFindManyIncomingEmailArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'incomingEmails',
    'incomingEmails.findMany',
    args,
    []
  )
  IncomingEmail.create = <T extends IncomingEmailCreateArgs>(args: Subset<T, IncomingEmailCreateArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingEmail',
    'incomingEmails.create',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingEmail',
    'incomingEmails.create',
    args,
    []
  )
  IncomingEmail.update = <T extends IncomingEmailUpdateArgs>(args: Subset<T, IncomingEmailUpdateArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingEmail',
    'incomingEmails.update',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingEmail',
    'incomingEmails.update',
    args,
    []
  )
  IncomingEmail.updateMany = <T extends IncomingEmailUpdateManyArgs>(args: Subset<T, IncomingEmailUpdateManyArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingEmails',
    'incomingEmails.updateMany',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingEmails',
    'incomingEmails.updateMany',
    args,
    []
  )
  IncomingEmail.upsert = <T extends IncomingEmailUpsertArgs>(args: Subset<T, IncomingEmailUpsertArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingEmail',
    'incomingEmails.upsert',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingEmail',
    'incomingEmails.upsert',
    args,
    []
  )
  IncomingEmail.delete = <T extends IncomingEmailDeleteArgs>(args: Subset<T, IncomingEmailDeleteArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingEmail',
    'incomingEmails.delete',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingEmail',
    'incomingEmails.delete',
    args,
    []
  )
  IncomingEmail.deleteMany = <T extends IncomingEmailDeleteManyArgs>(args: Subset<T, IncomingEmailDeleteManyArgs>) => args.select ? new IncomingEmailClient<'select' extends keyof T ? PromiseLike<IncomingEmailGetPayload<ExtractIncomingEmailArgsSelect<T>>> : IncomingEmailClient<IncomingEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingEmails',
    'incomingEmails.deleteMany',
    args,
    []
  ) : new IncomingEmailClient<IncomingEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingEmails',
    'incomingEmails.deleteMany',
    args,
    []
  )
  return IncomingEmail as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class IncomingEmailClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: IncomingEmailArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingEmail').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingEmail').catch(onrejected)
  }
}


// InputTypes

export type FindOneIncomingEmailArgs = {
  select?: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
}

export type FindOneIncomingEmailArgsWithSelect = {
  select: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
}

type ExtractFindOneIncomingEmailArgsSelect<S extends undefined | boolean | FindOneIncomingEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneIncomingEmailArgsWithSelect
  ? S['select']
  : true


export type FindManyIncomingEmailArgs = {
  select?: IncomingEmailSelect
  where?: IncomingEmailWhereInput
  orderBy?: IncomingEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyIncomingEmailArgsWithSelect = {
  select: IncomingEmailSelect
  where?: IncomingEmailWhereInput
  orderBy?: IncomingEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyIncomingEmailArgsSelect<S extends undefined | boolean | FindManyIncomingEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyIncomingEmailArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailCreateArgs = {
  select?: IncomingEmailSelect
  data: IncomingEmailCreateInput
}

export type IncomingEmailCreateArgsWithSelect = {
  select: IncomingEmailSelect
  data: IncomingEmailCreateInput
}

type ExtractIncomingEmailCreateArgsSelect<S extends undefined | boolean | IncomingEmailCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailCreateArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailUpdateArgs = {
  select?: IncomingEmailSelect
  data: IncomingEmailUpdateInput
  where: IncomingEmailWhereUniqueInput
}

export type IncomingEmailUpdateArgsWithSelect = {
  select: IncomingEmailSelect
  data: IncomingEmailUpdateInput
  where: IncomingEmailWhereUniqueInput
}

type ExtractIncomingEmailUpdateArgsSelect<S extends undefined | boolean | IncomingEmailUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailUpdateArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailUpdateManyArgs = {
  select?: IncomingEmailSelect
  data: IncomingEmailUpdateManyMutationInput
  where?: IncomingEmailWhereInput
}

export type IncomingEmailUpdateManyArgsWithSelect = {
  select: IncomingEmailSelect
  data: IncomingEmailUpdateManyMutationInput
  where?: IncomingEmailWhereInput
}

type ExtractIncomingEmailUpdateManyArgsSelect<S extends undefined | boolean | IncomingEmailUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailUpdateManyArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailUpsertArgs = {
  select?: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
  create: IncomingEmailCreateInput
  update: IncomingEmailUpdateInput
}

export type IncomingEmailUpsertArgsWithSelect = {
  select: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
  create: IncomingEmailCreateInput
  update: IncomingEmailUpdateInput
}

type ExtractIncomingEmailUpsertArgsSelect<S extends undefined | boolean | IncomingEmailUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailUpsertArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailDeleteArgs = {
  select?: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
}

export type IncomingEmailDeleteArgsWithSelect = {
  select: IncomingEmailSelect
  where: IncomingEmailWhereUniqueInput
}

type ExtractIncomingEmailDeleteArgsSelect<S extends undefined | boolean | IncomingEmailDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailDeleteArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailDeleteManyArgs = {
  select?: IncomingEmailSelect
  where?: IncomingEmailWhereInput
}

export type IncomingEmailDeleteManyArgsWithSelect = {
  select: IncomingEmailSelect
  where?: IncomingEmailWhereInput
}

type ExtractIncomingEmailDeleteManyArgsSelect<S extends undefined | boolean | IncomingEmailDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailDeleteManyArgsWithSelect
  ? S['select']
  : true


export type IncomingEmailArgs = {
  select?: IncomingEmailSelect
}

export type IncomingEmailArgsWithSelect = {
  select: IncomingEmailSelect
}

type ExtractIncomingEmailArgsSelect<S extends undefined | boolean | IncomingEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingEmailArgsWithSelect
  ? S['select']
  : true



/**
 * Model IncomingLink
 */

export type IncomingLink = {
  id: number
  createdAt: string
  currentUserId: number | null
  incomingRefererId: number | null
  postId: number
  userId: number | null
}

export type IncomingLinkScalars = 'id' | 'createdAt' | 'currentUserId' | 'incomingRefererId' | 'postId' | 'userId'


export type IncomingLinkSelect = {
  id?: boolean
  createdAt?: boolean
  currentUserId?: boolean
  incomingRefererId?: boolean
  postId?: boolean
  userId?: boolean
}

type IncomingLinkDefault = {
  id: true
  createdAt: true
  currentUserId: true
  incomingRefererId: true
  postId: true
  userId: true
}


type IncomingLinkGetPayload<S extends boolean | IncomingLinkSelect> = S extends true
  ? IncomingLink
  : S extends IncomingLinkSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<IncomingLinkDefault, S>>]: P extends IncomingLinkScalars
        ? IncomingLink[P]
        : never
    }
   : never

export interface IncomingLinkDelegate {
  <T extends FindManyIncomingLinkArgs>(args?: Subset<T, FindManyIncomingLinkArgs>): PromiseLike<Array<IncomingLinkGetPayload<ExtractFindManyIncomingLinkArgsSelect<T>>>>
  findOne<T extends FindOneIncomingLinkArgs>(
    args: Subset<T, FindOneIncomingLinkArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractFindOneIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  findMany<T extends FindManyIncomingLinkArgs>(
    args?: Subset<T, FindManyIncomingLinkArgs>
  ): PromiseLike<Array<IncomingLinkGetPayload<ExtractFindManyIncomingLinkArgsSelect<T>>>>
  create<T extends IncomingLinkCreateArgs>(
    args: Subset<T, IncomingLinkCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkCreateArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  update<T extends IncomingLinkUpdateArgs>(
    args: Subset<T, IncomingLinkUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkUpdateArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  updateMany<T extends IncomingLinkUpdateManyArgs>(
    args: Subset<T, IncomingLinkUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkUpdateManyArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  upsert<T extends IncomingLinkUpsertArgs>(
    args: Subset<T, IncomingLinkUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkUpsertArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  delete<T extends IncomingLinkDeleteArgs>(
    args: Subset<T, IncomingLinkDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkDeleteArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
  deleteMany<T extends IncomingLinkDeleteManyArgs>(
    args: Subset<T, IncomingLinkDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkDeleteManyArgsSelect<T>>> : IncomingLinkClient<IncomingLink>
}
function IncomingLinkDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): IncomingLinkDelegate {
  const IncomingLink = <T extends FindManyIncomingLinkArgs>(args: Subset<T, FindManyIncomingLinkArgs>) => new IncomingLinkClient<PromiseLike<Array<IncomingLinkGetPayload<ExtractFindManyIncomingLinkArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'incomingLinks', 'incomingLinks', args, [])
  IncomingLink.findOne = <T extends FindOneIncomingLinkArgs>(args: Subset<T, FindOneIncomingLinkArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'query',
    'incomingLink',
    'incomingLinks.findOne',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'query',
    'incomingLink',
    'incomingLinks.findOne',
    args,
    []
  )
  IncomingLink.findMany = <T extends FindManyIncomingLinkArgs>(args: Subset<T, FindManyIncomingLinkArgs>) => new IncomingLinkClient<PromiseLike<Array<IncomingLinkGetPayload<ExtractFindManyIncomingLinkArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'incomingLinks',
    'incomingLinks.findMany',
    args,
    []
  )
  IncomingLink.create = <T extends IncomingLinkCreateArgs>(args: Subset<T, IncomingLinkCreateArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingLink',
    'incomingLinks.create',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingLink',
    'incomingLinks.create',
    args,
    []
  )
  IncomingLink.update = <T extends IncomingLinkUpdateArgs>(args: Subset<T, IncomingLinkUpdateArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingLink',
    'incomingLinks.update',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingLink',
    'incomingLinks.update',
    args,
    []
  )
  IncomingLink.updateMany = <T extends IncomingLinkUpdateManyArgs>(args: Subset<T, IncomingLinkUpdateManyArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingLinks',
    'incomingLinks.updateMany',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingLinks',
    'incomingLinks.updateMany',
    args,
    []
  )
  IncomingLink.upsert = <T extends IncomingLinkUpsertArgs>(args: Subset<T, IncomingLinkUpsertArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingLink',
    'incomingLinks.upsert',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingLink',
    'incomingLinks.upsert',
    args,
    []
  )
  IncomingLink.delete = <T extends IncomingLinkDeleteArgs>(args: Subset<T, IncomingLinkDeleteArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingLink',
    'incomingLinks.delete',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingLink',
    'incomingLinks.delete',
    args,
    []
  )
  IncomingLink.deleteMany = <T extends IncomingLinkDeleteManyArgs>(args: Subset<T, IncomingLinkDeleteManyArgs>) => args.select ? new IncomingLinkClient<'select' extends keyof T ? PromiseLike<IncomingLinkGetPayload<ExtractIncomingLinkArgsSelect<T>>> : IncomingLinkClient<IncomingLink>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingLinks',
    'incomingLinks.deleteMany',
    args,
    []
  ) : new IncomingLinkClient<IncomingLink>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingLinks',
    'incomingLinks.deleteMany',
    args,
    []
  )
  return IncomingLink as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class IncomingLinkClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: IncomingLinkArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingLink').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingLink').catch(onrejected)
  }
}


// InputTypes

export type FindOneIncomingLinkArgs = {
  select?: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
}

export type FindOneIncomingLinkArgsWithSelect = {
  select: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
}

type ExtractFindOneIncomingLinkArgsSelect<S extends undefined | boolean | FindOneIncomingLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneIncomingLinkArgsWithSelect
  ? S['select']
  : true


export type FindManyIncomingLinkArgs = {
  select?: IncomingLinkSelect
  where?: IncomingLinkWhereInput
  orderBy?: IncomingLinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyIncomingLinkArgsWithSelect = {
  select: IncomingLinkSelect
  where?: IncomingLinkWhereInput
  orderBy?: IncomingLinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyIncomingLinkArgsSelect<S extends undefined | boolean | FindManyIncomingLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyIncomingLinkArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkCreateArgs = {
  select?: IncomingLinkSelect
  data: IncomingLinkCreateInput
}

export type IncomingLinkCreateArgsWithSelect = {
  select: IncomingLinkSelect
  data: IncomingLinkCreateInput
}

type ExtractIncomingLinkCreateArgsSelect<S extends undefined | boolean | IncomingLinkCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkCreateArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkUpdateArgs = {
  select?: IncomingLinkSelect
  data: IncomingLinkUpdateInput
  where: IncomingLinkWhereUniqueInput
}

export type IncomingLinkUpdateArgsWithSelect = {
  select: IncomingLinkSelect
  data: IncomingLinkUpdateInput
  where: IncomingLinkWhereUniqueInput
}

type ExtractIncomingLinkUpdateArgsSelect<S extends undefined | boolean | IncomingLinkUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkUpdateArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkUpdateManyArgs = {
  select?: IncomingLinkSelect
  data: IncomingLinkUpdateManyMutationInput
  where?: IncomingLinkWhereInput
}

export type IncomingLinkUpdateManyArgsWithSelect = {
  select: IncomingLinkSelect
  data: IncomingLinkUpdateManyMutationInput
  where?: IncomingLinkWhereInput
}

type ExtractIncomingLinkUpdateManyArgsSelect<S extends undefined | boolean | IncomingLinkUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkUpdateManyArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkUpsertArgs = {
  select?: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
  create: IncomingLinkCreateInput
  update: IncomingLinkUpdateInput
}

export type IncomingLinkUpsertArgsWithSelect = {
  select: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
  create: IncomingLinkCreateInput
  update: IncomingLinkUpdateInput
}

type ExtractIncomingLinkUpsertArgsSelect<S extends undefined | boolean | IncomingLinkUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkUpsertArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkDeleteArgs = {
  select?: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
}

export type IncomingLinkDeleteArgsWithSelect = {
  select: IncomingLinkSelect
  where: IncomingLinkWhereUniqueInput
}

type ExtractIncomingLinkDeleteArgsSelect<S extends undefined | boolean | IncomingLinkDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkDeleteArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkDeleteManyArgs = {
  select?: IncomingLinkSelect
  where?: IncomingLinkWhereInput
}

export type IncomingLinkDeleteManyArgsWithSelect = {
  select: IncomingLinkSelect
  where?: IncomingLinkWhereInput
}

type ExtractIncomingLinkDeleteManyArgsSelect<S extends undefined | boolean | IncomingLinkDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkDeleteManyArgsWithSelect
  ? S['select']
  : true


export type IncomingLinkArgs = {
  select?: IncomingLinkSelect
}

export type IncomingLinkArgsWithSelect = {
  select: IncomingLinkSelect
}

type ExtractIncomingLinkArgsSelect<S extends undefined | boolean | IncomingLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingLinkArgsWithSelect
  ? S['select']
  : true



/**
 * Model IncomingReferer
 */

export type IncomingReferer = {
  id: number
  incomingDomainId: number
  path: string
}

export type IncomingRefererScalars = 'id' | 'incomingDomainId' | 'path'


export type IncomingRefererSelect = {
  id?: boolean
  incomingDomainId?: boolean
  path?: boolean
}

type IncomingRefererDefault = {
  id: true
  incomingDomainId: true
  path: true
}


type IncomingRefererGetPayload<S extends boolean | IncomingRefererSelect> = S extends true
  ? IncomingReferer
  : S extends IncomingRefererSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<IncomingRefererDefault, S>>]: P extends IncomingRefererScalars
        ? IncomingReferer[P]
        : never
    }
   : never

export interface IncomingRefererDelegate {
  <T extends FindManyIncomingRefererArgs>(args?: Subset<T, FindManyIncomingRefererArgs>): PromiseLike<Array<IncomingRefererGetPayload<ExtractFindManyIncomingRefererArgsSelect<T>>>>
  findOne<T extends FindOneIncomingRefererArgs>(
    args: Subset<T, FindOneIncomingRefererArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractFindOneIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  findMany<T extends FindManyIncomingRefererArgs>(
    args?: Subset<T, FindManyIncomingRefererArgs>
  ): PromiseLike<Array<IncomingRefererGetPayload<ExtractFindManyIncomingRefererArgsSelect<T>>>>
  create<T extends IncomingRefererCreateArgs>(
    args: Subset<T, IncomingRefererCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererCreateArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  update<T extends IncomingRefererUpdateArgs>(
    args: Subset<T, IncomingRefererUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererUpdateArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  updateMany<T extends IncomingRefererUpdateManyArgs>(
    args: Subset<T, IncomingRefererUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererUpdateManyArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  upsert<T extends IncomingRefererUpsertArgs>(
    args: Subset<T, IncomingRefererUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererUpsertArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  delete<T extends IncomingRefererDeleteArgs>(
    args: Subset<T, IncomingRefererDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererDeleteArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
  deleteMany<T extends IncomingRefererDeleteManyArgs>(
    args: Subset<T, IncomingRefererDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererDeleteManyArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>
}
function IncomingRefererDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): IncomingRefererDelegate {
  const IncomingReferer = <T extends FindManyIncomingRefererArgs>(args: Subset<T, FindManyIncomingRefererArgs>) => new IncomingRefererClient<PromiseLike<Array<IncomingRefererGetPayload<ExtractFindManyIncomingRefererArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'incomingReferers', 'incomingReferers', args, [])
  IncomingReferer.findOne = <T extends FindOneIncomingRefererArgs>(args: Subset<T, FindOneIncomingRefererArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'query',
    'incomingReferer',
    'incomingReferers.findOne',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'query',
    'incomingReferer',
    'incomingReferers.findOne',
    args,
    []
  )
  IncomingReferer.findMany = <T extends FindManyIncomingRefererArgs>(args: Subset<T, FindManyIncomingRefererArgs>) => new IncomingRefererClient<PromiseLike<Array<IncomingRefererGetPayload<ExtractFindManyIncomingRefererArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'incomingReferers',
    'incomingReferers.findMany',
    args,
    []
  )
  IncomingReferer.create = <T extends IncomingRefererCreateArgs>(args: Subset<T, IncomingRefererCreateArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingReferer',
    'incomingReferers.create',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'createIncomingReferer',
    'incomingReferers.create',
    args,
    []
  )
  IncomingReferer.update = <T extends IncomingRefererUpdateArgs>(args: Subset<T, IncomingRefererUpdateArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingReferer',
    'incomingReferers.update',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'updateIncomingReferer',
    'incomingReferers.update',
    args,
    []
  )
  IncomingReferer.updateMany = <T extends IncomingRefererUpdateManyArgs>(args: Subset<T, IncomingRefererUpdateManyArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingReferers',
    'incomingReferers.updateMany',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyIncomingReferers',
    'incomingReferers.updateMany',
    args,
    []
  )
  IncomingReferer.upsert = <T extends IncomingRefererUpsertArgs>(args: Subset<T, IncomingRefererUpsertArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingReferer',
    'incomingReferers.upsert',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'upsertIncomingReferer',
    'incomingReferers.upsert',
    args,
    []
  )
  IncomingReferer.delete = <T extends IncomingRefererDeleteArgs>(args: Subset<T, IncomingRefererDeleteArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingReferer',
    'incomingReferers.delete',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteIncomingReferer',
    'incomingReferers.delete',
    args,
    []
  )
  IncomingReferer.deleteMany = <T extends IncomingRefererDeleteManyArgs>(args: Subset<T, IncomingRefererDeleteManyArgs>) => args.select ? new IncomingRefererClient<'select' extends keyof T ? PromiseLike<IncomingRefererGetPayload<ExtractIncomingRefererArgsSelect<T>>> : IncomingRefererClient<IncomingReferer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingReferers',
    'incomingReferers.deleteMany',
    args,
    []
  ) : new IncomingRefererClient<IncomingReferer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyIncomingReferers',
    'incomingReferers.deleteMany',
    args,
    []
  )
  return IncomingReferer as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class IncomingRefererClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: IncomingRefererArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingReferer').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'IncomingReferer').catch(onrejected)
  }
}


// InputTypes

export type FindOneIncomingRefererArgs = {
  select?: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
}

export type FindOneIncomingRefererArgsWithSelect = {
  select: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
}

type ExtractFindOneIncomingRefererArgsSelect<S extends undefined | boolean | FindOneIncomingRefererArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneIncomingRefererArgsWithSelect
  ? S['select']
  : true


export type FindManyIncomingRefererArgs = {
  select?: IncomingRefererSelect
  where?: IncomingRefererWhereInput
  orderBy?: IncomingRefererOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyIncomingRefererArgsWithSelect = {
  select: IncomingRefererSelect
  where?: IncomingRefererWhereInput
  orderBy?: IncomingRefererOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyIncomingRefererArgsSelect<S extends undefined | boolean | FindManyIncomingRefererArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyIncomingRefererArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererCreateArgs = {
  select?: IncomingRefererSelect
  data: IncomingRefererCreateInput
}

export type IncomingRefererCreateArgsWithSelect = {
  select: IncomingRefererSelect
  data: IncomingRefererCreateInput
}

type ExtractIncomingRefererCreateArgsSelect<S extends undefined | boolean | IncomingRefererCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererCreateArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererUpdateArgs = {
  select?: IncomingRefererSelect
  data: IncomingRefererUpdateInput
  where: IncomingRefererWhereUniqueInput
}

export type IncomingRefererUpdateArgsWithSelect = {
  select: IncomingRefererSelect
  data: IncomingRefererUpdateInput
  where: IncomingRefererWhereUniqueInput
}

type ExtractIncomingRefererUpdateArgsSelect<S extends undefined | boolean | IncomingRefererUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererUpdateArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererUpdateManyArgs = {
  select?: IncomingRefererSelect
  data: IncomingRefererUpdateManyMutationInput
  where?: IncomingRefererWhereInput
}

export type IncomingRefererUpdateManyArgsWithSelect = {
  select: IncomingRefererSelect
  data: IncomingRefererUpdateManyMutationInput
  where?: IncomingRefererWhereInput
}

type ExtractIncomingRefererUpdateManyArgsSelect<S extends undefined | boolean | IncomingRefererUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererUpdateManyArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererUpsertArgs = {
  select?: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
  create: IncomingRefererCreateInput
  update: IncomingRefererUpdateInput
}

export type IncomingRefererUpsertArgsWithSelect = {
  select: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
  create: IncomingRefererCreateInput
  update: IncomingRefererUpdateInput
}

type ExtractIncomingRefererUpsertArgsSelect<S extends undefined | boolean | IncomingRefererUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererUpsertArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererDeleteArgs = {
  select?: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
}

export type IncomingRefererDeleteArgsWithSelect = {
  select: IncomingRefererSelect
  where: IncomingRefererWhereUniqueInput
}

type ExtractIncomingRefererDeleteArgsSelect<S extends undefined | boolean | IncomingRefererDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererDeleteArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererDeleteManyArgs = {
  select?: IncomingRefererSelect
  where?: IncomingRefererWhereInput
}

export type IncomingRefererDeleteManyArgsWithSelect = {
  select: IncomingRefererSelect
  where?: IncomingRefererWhereInput
}

type ExtractIncomingRefererDeleteManyArgsSelect<S extends undefined | boolean | IncomingRefererDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererDeleteManyArgsWithSelect
  ? S['select']
  : true


export type IncomingRefererArgs = {
  select?: IncomingRefererSelect
}

export type IncomingRefererArgsWithSelect = {
  select: IncomingRefererSelect
}

type ExtractIncomingRefererArgsSelect<S extends undefined | boolean | IncomingRefererArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends IncomingRefererArgsWithSelect
  ? S['select']
  : true



/**
 * Model InstagramUserInfo
 */

export type InstagramUserInfo = {
  id: number
  createdAt: string
  instagramUserId: number | null
  screenName: string | null
  updatedAt: string
  userId: number | null
}

export type InstagramUserInfoScalars = 'id' | 'createdAt' | 'instagramUserId' | 'screenName' | 'updatedAt' | 'userId'


export type InstagramUserInfoSelect = {
  id?: boolean
  createdAt?: boolean
  instagramUserId?: boolean
  screenName?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type InstagramUserInfoDefault = {
  id: true
  createdAt: true
  instagramUserId: true
  screenName: true
  updatedAt: true
  userId: true
}


type InstagramUserInfoGetPayload<S extends boolean | InstagramUserInfoSelect> = S extends true
  ? InstagramUserInfo
  : S extends InstagramUserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<InstagramUserInfoDefault, S>>]: P extends InstagramUserInfoScalars
        ? InstagramUserInfo[P]
        : never
    }
   : never

export interface InstagramUserInfoDelegate {
  <T extends FindManyInstagramUserInfoArgs>(args?: Subset<T, FindManyInstagramUserInfoArgs>): PromiseLike<Array<InstagramUserInfoGetPayload<ExtractFindManyInstagramUserInfoArgsSelect<T>>>>
  findOne<T extends FindOneInstagramUserInfoArgs>(
    args: Subset<T, FindOneInstagramUserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractFindOneInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  findMany<T extends FindManyInstagramUserInfoArgs>(
    args?: Subset<T, FindManyInstagramUserInfoArgs>
  ): PromiseLike<Array<InstagramUserInfoGetPayload<ExtractFindManyInstagramUserInfoArgsSelect<T>>>>
  create<T extends InstagramUserInfoCreateArgs>(
    args: Subset<T, InstagramUserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoCreateArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  update<T extends InstagramUserInfoUpdateArgs>(
    args: Subset<T, InstagramUserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoUpdateArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  updateMany<T extends InstagramUserInfoUpdateManyArgs>(
    args: Subset<T, InstagramUserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoUpdateManyArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  upsert<T extends InstagramUserInfoUpsertArgs>(
    args: Subset<T, InstagramUserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoUpsertArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  delete<T extends InstagramUserInfoDeleteArgs>(
    args: Subset<T, InstagramUserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoDeleteArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
  deleteMany<T extends InstagramUserInfoDeleteManyArgs>(
    args: Subset<T, InstagramUserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoDeleteManyArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>
}
function InstagramUserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): InstagramUserInfoDelegate {
  const InstagramUserInfo = <T extends FindManyInstagramUserInfoArgs>(args: Subset<T, FindManyInstagramUserInfoArgs>) => new InstagramUserInfoClient<PromiseLike<Array<InstagramUserInfoGetPayload<ExtractFindManyInstagramUserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'instagramUserInfoes', 'instagramUserInfoes', args, [])
  InstagramUserInfo.findOne = <T extends FindOneInstagramUserInfoArgs>(args: Subset<T, FindOneInstagramUserInfoArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'query',
    'instagramUserInfo',
    'instagramUserInfoes.findOne',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'query',
    'instagramUserInfo',
    'instagramUserInfoes.findOne',
    args,
    []
  )
  InstagramUserInfo.findMany = <T extends FindManyInstagramUserInfoArgs>(args: Subset<T, FindManyInstagramUserInfoArgs>) => new InstagramUserInfoClient<PromiseLike<Array<InstagramUserInfoGetPayload<ExtractFindManyInstagramUserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'instagramUserInfoes',
    'instagramUserInfoes.findMany',
    args,
    []
  )
  InstagramUserInfo.create = <T extends InstagramUserInfoCreateArgs>(args: Subset<T, InstagramUserInfoCreateArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createInstagramUserInfo',
    'instagramUserInfoes.create',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createInstagramUserInfo',
    'instagramUserInfoes.create',
    args,
    []
  )
  InstagramUserInfo.update = <T extends InstagramUserInfoUpdateArgs>(args: Subset<T, InstagramUserInfoUpdateArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateInstagramUserInfo',
    'instagramUserInfoes.update',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateInstagramUserInfo',
    'instagramUserInfoes.update',
    args,
    []
  )
  InstagramUserInfo.updateMany = <T extends InstagramUserInfoUpdateManyArgs>(args: Subset<T, InstagramUserInfoUpdateManyArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInstagramUserInfoes',
    'instagramUserInfoes.updateMany',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInstagramUserInfoes',
    'instagramUserInfoes.updateMany',
    args,
    []
  )
  InstagramUserInfo.upsert = <T extends InstagramUserInfoUpsertArgs>(args: Subset<T, InstagramUserInfoUpsertArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInstagramUserInfo',
    'instagramUserInfoes.upsert',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInstagramUserInfo',
    'instagramUserInfoes.upsert',
    args,
    []
  )
  InstagramUserInfo.delete = <T extends InstagramUserInfoDeleteArgs>(args: Subset<T, InstagramUserInfoDeleteArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInstagramUserInfo',
    'instagramUserInfoes.delete',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInstagramUserInfo',
    'instagramUserInfoes.delete',
    args,
    []
  )
  InstagramUserInfo.deleteMany = <T extends InstagramUserInfoDeleteManyArgs>(args: Subset<T, InstagramUserInfoDeleteManyArgs>) => args.select ? new InstagramUserInfoClient<'select' extends keyof T ? PromiseLike<InstagramUserInfoGetPayload<ExtractInstagramUserInfoArgsSelect<T>>> : InstagramUserInfoClient<InstagramUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInstagramUserInfoes',
    'instagramUserInfoes.deleteMany',
    args,
    []
  ) : new InstagramUserInfoClient<InstagramUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInstagramUserInfoes',
    'instagramUserInfoes.deleteMany',
    args,
    []
  )
  return InstagramUserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class InstagramUserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: InstagramUserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'InstagramUserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'InstagramUserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneInstagramUserInfoArgs = {
  select?: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
}

export type FindOneInstagramUserInfoArgsWithSelect = {
  select: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
}

type ExtractFindOneInstagramUserInfoArgsSelect<S extends undefined | boolean | FindOneInstagramUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneInstagramUserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyInstagramUserInfoArgs = {
  select?: InstagramUserInfoSelect
  where?: InstagramUserInfoWhereInput
  orderBy?: InstagramUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyInstagramUserInfoArgsWithSelect = {
  select: InstagramUserInfoSelect
  where?: InstagramUserInfoWhereInput
  orderBy?: InstagramUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyInstagramUserInfoArgsSelect<S extends undefined | boolean | FindManyInstagramUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyInstagramUserInfoArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoCreateArgs = {
  select?: InstagramUserInfoSelect
  data: InstagramUserInfoCreateInput
}

export type InstagramUserInfoCreateArgsWithSelect = {
  select: InstagramUserInfoSelect
  data: InstagramUserInfoCreateInput
}

type ExtractInstagramUserInfoCreateArgsSelect<S extends undefined | boolean | InstagramUserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoUpdateArgs = {
  select?: InstagramUserInfoSelect
  data: InstagramUserInfoUpdateInput
  where: InstagramUserInfoWhereUniqueInput
}

export type InstagramUserInfoUpdateArgsWithSelect = {
  select: InstagramUserInfoSelect
  data: InstagramUserInfoUpdateInput
  where: InstagramUserInfoWhereUniqueInput
}

type ExtractInstagramUserInfoUpdateArgsSelect<S extends undefined | boolean | InstagramUserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoUpdateManyArgs = {
  select?: InstagramUserInfoSelect
  data: InstagramUserInfoUpdateManyMutationInput
  where?: InstagramUserInfoWhereInput
}

export type InstagramUserInfoUpdateManyArgsWithSelect = {
  select: InstagramUserInfoSelect
  data: InstagramUserInfoUpdateManyMutationInput
  where?: InstagramUserInfoWhereInput
}

type ExtractInstagramUserInfoUpdateManyArgsSelect<S extends undefined | boolean | InstagramUserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoUpsertArgs = {
  select?: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
  create: InstagramUserInfoCreateInput
  update: InstagramUserInfoUpdateInput
}

export type InstagramUserInfoUpsertArgsWithSelect = {
  select: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
  create: InstagramUserInfoCreateInput
  update: InstagramUserInfoUpdateInput
}

type ExtractInstagramUserInfoUpsertArgsSelect<S extends undefined | boolean | InstagramUserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoDeleteArgs = {
  select?: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
}

export type InstagramUserInfoDeleteArgsWithSelect = {
  select: InstagramUserInfoSelect
  where: InstagramUserInfoWhereUniqueInput
}

type ExtractInstagramUserInfoDeleteArgsSelect<S extends undefined | boolean | InstagramUserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoDeleteManyArgs = {
  select?: InstagramUserInfoSelect
  where?: InstagramUserInfoWhereInput
}

export type InstagramUserInfoDeleteManyArgsWithSelect = {
  select: InstagramUserInfoSelect
  where?: InstagramUserInfoWhereInput
}

type ExtractInstagramUserInfoDeleteManyArgsSelect<S extends undefined | boolean | InstagramUserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type InstagramUserInfoArgs = {
  select?: InstagramUserInfoSelect
}

export type InstagramUserInfoArgsWithSelect = {
  select: InstagramUserInfoSelect
}

type ExtractInstagramUserInfoArgsSelect<S extends undefined | boolean | InstagramUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InstagramUserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model Invite
 */

export type Invite = {
  id: number
  createdAt: string
  customMessage: string | null
  deletedAt: string | null
  deletedById: number | null
  email: string | null
  invalidatedAt: string | null
  invitedById: number
  inviteKey: string
  moderator: boolean
  redeemedAt: string | null
  updatedAt: string
  userId: number | null
}

export type InviteScalars = 'id' | 'createdAt' | 'customMessage' | 'deletedAt' | 'deletedById' | 'email' | 'invalidatedAt' | 'invitedById' | 'inviteKey' | 'moderator' | 'redeemedAt' | 'updatedAt' | 'userId'


export type InviteSelect = {
  id?: boolean
  createdAt?: boolean
  customMessage?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  email?: boolean
  invalidatedAt?: boolean
  invitedById?: boolean
  inviteKey?: boolean
  moderator?: boolean
  redeemedAt?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type InviteDefault = {
  id: true
  createdAt: true
  customMessage: true
  deletedAt: true
  deletedById: true
  email: true
  invalidatedAt: true
  invitedById: true
  inviteKey: true
  moderator: true
  redeemedAt: true
  updatedAt: true
  userId: true
}


type InviteGetPayload<S extends boolean | InviteSelect> = S extends true
  ? Invite
  : S extends InviteSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<InviteDefault, S>>]: P extends InviteScalars
        ? Invite[P]
        : never
    }
   : never

export interface InviteDelegate {
  <T extends FindManyInviteArgs>(args?: Subset<T, FindManyInviteArgs>): PromiseLike<Array<InviteGetPayload<ExtractFindManyInviteArgsSelect<T>>>>
  findOne<T extends FindOneInviteArgs>(
    args: Subset<T, FindOneInviteArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractFindOneInviteArgsSelect<T>>> : InviteClient<Invite>
  findMany<T extends FindManyInviteArgs>(
    args?: Subset<T, FindManyInviteArgs>
  ): PromiseLike<Array<InviteGetPayload<ExtractFindManyInviteArgsSelect<T>>>>
  create<T extends InviteCreateArgs>(
    args: Subset<T, InviteCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteCreateArgsSelect<T>>> : InviteClient<Invite>
  update<T extends InviteUpdateArgs>(
    args: Subset<T, InviteUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteUpdateArgsSelect<T>>> : InviteClient<Invite>
  updateMany<T extends InviteUpdateManyArgs>(
    args: Subset<T, InviteUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteUpdateManyArgsSelect<T>>> : InviteClient<Invite>
  upsert<T extends InviteUpsertArgs>(
    args: Subset<T, InviteUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteUpsertArgsSelect<T>>> : InviteClient<Invite>
  delete<T extends InviteDeleteArgs>(
    args: Subset<T, InviteDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteDeleteArgsSelect<T>>> : InviteClient<Invite>
  deleteMany<T extends InviteDeleteManyArgs>(
    args: Subset<T, InviteDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteDeleteManyArgsSelect<T>>> : InviteClient<Invite>
}
function InviteDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): InviteDelegate {
  const Invite = <T extends FindManyInviteArgs>(args: Subset<T, FindManyInviteArgs>) => new InviteClient<PromiseLike<Array<InviteGetPayload<ExtractFindManyInviteArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'invites', 'invites', args, [])
  Invite.findOne = <T extends FindOneInviteArgs>(args: Subset<T, FindOneInviteArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'query',
    'invite',
    'invites.findOne',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'query',
    'invite',
    'invites.findOne',
    args,
    []
  )
  Invite.findMany = <T extends FindManyInviteArgs>(args: Subset<T, FindManyInviteArgs>) => new InviteClient<PromiseLike<Array<InviteGetPayload<ExtractFindManyInviteArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'invites',
    'invites.findMany',
    args,
    []
  )
  Invite.create = <T extends InviteCreateArgs>(args: Subset<T, InviteCreateArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'createInvite',
    'invites.create',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'createInvite',
    'invites.create',
    args,
    []
  )
  Invite.update = <T extends InviteUpdateArgs>(args: Subset<T, InviteUpdateArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'updateInvite',
    'invites.update',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'updateInvite',
    'invites.update',
    args,
    []
  )
  Invite.updateMany = <T extends InviteUpdateManyArgs>(args: Subset<T, InviteUpdateManyArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInvites',
    'invites.updateMany',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInvites',
    'invites.updateMany',
    args,
    []
  )
  Invite.upsert = <T extends InviteUpsertArgs>(args: Subset<T, InviteUpsertArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInvite',
    'invites.upsert',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInvite',
    'invites.upsert',
    args,
    []
  )
  Invite.delete = <T extends InviteDeleteArgs>(args: Subset<T, InviteDeleteArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInvite',
    'invites.delete',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInvite',
    'invites.delete',
    args,
    []
  )
  Invite.deleteMany = <T extends InviteDeleteManyArgs>(args: Subset<T, InviteDeleteManyArgs>) => args.select ? new InviteClient<'select' extends keyof T ? PromiseLike<InviteGetPayload<ExtractInviteArgsSelect<T>>> : InviteClient<Invite>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInvites',
    'invites.deleteMany',
    args,
    []
  ) : new InviteClient<Invite>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInvites',
    'invites.deleteMany',
    args,
    []
  )
  return Invite as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class InviteClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: InviteArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Invite').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Invite').catch(onrejected)
  }
}


// InputTypes

export type FindOneInviteArgs = {
  select?: InviteSelect
  where: InviteWhereUniqueInput
}

export type FindOneInviteArgsWithSelect = {
  select: InviteSelect
  where: InviteWhereUniqueInput
}

type ExtractFindOneInviteArgsSelect<S extends undefined | boolean | FindOneInviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneInviteArgsWithSelect
  ? S['select']
  : true


export type FindManyInviteArgs = {
  select?: InviteSelect
  where?: InviteWhereInput
  orderBy?: InviteOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyInviteArgsWithSelect = {
  select: InviteSelect
  where?: InviteWhereInput
  orderBy?: InviteOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyInviteArgsSelect<S extends undefined | boolean | FindManyInviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyInviteArgsWithSelect
  ? S['select']
  : true


export type InviteCreateArgs = {
  select?: InviteSelect
  data: InviteCreateInput
}

export type InviteCreateArgsWithSelect = {
  select: InviteSelect
  data: InviteCreateInput
}

type ExtractInviteCreateArgsSelect<S extends undefined | boolean | InviteCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteCreateArgsWithSelect
  ? S['select']
  : true


export type InviteUpdateArgs = {
  select?: InviteSelect
  data: InviteUpdateInput
  where: InviteWhereUniqueInput
}

export type InviteUpdateArgsWithSelect = {
  select: InviteSelect
  data: InviteUpdateInput
  where: InviteWhereUniqueInput
}

type ExtractInviteUpdateArgsSelect<S extends undefined | boolean | InviteUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteUpdateArgsWithSelect
  ? S['select']
  : true


export type InviteUpdateManyArgs = {
  select?: InviteSelect
  data: InviteUpdateManyMutationInput
  where?: InviteWhereInput
}

export type InviteUpdateManyArgsWithSelect = {
  select: InviteSelect
  data: InviteUpdateManyMutationInput
  where?: InviteWhereInput
}

type ExtractInviteUpdateManyArgsSelect<S extends undefined | boolean | InviteUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteUpdateManyArgsWithSelect
  ? S['select']
  : true


export type InviteUpsertArgs = {
  select?: InviteSelect
  where: InviteWhereUniqueInput
  create: InviteCreateInput
  update: InviteUpdateInput
}

export type InviteUpsertArgsWithSelect = {
  select: InviteSelect
  where: InviteWhereUniqueInput
  create: InviteCreateInput
  update: InviteUpdateInput
}

type ExtractInviteUpsertArgsSelect<S extends undefined | boolean | InviteUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteUpsertArgsWithSelect
  ? S['select']
  : true


export type InviteDeleteArgs = {
  select?: InviteSelect
  where: InviteWhereUniqueInput
}

export type InviteDeleteArgsWithSelect = {
  select: InviteSelect
  where: InviteWhereUniqueInput
}

type ExtractInviteDeleteArgsSelect<S extends undefined | boolean | InviteDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteDeleteArgsWithSelect
  ? S['select']
  : true


export type InviteDeleteManyArgs = {
  select?: InviteSelect
  where?: InviteWhereInput
}

export type InviteDeleteManyArgsWithSelect = {
  select: InviteSelect
  where?: InviteWhereInput
}

type ExtractInviteDeleteManyArgsSelect<S extends undefined | boolean | InviteDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteDeleteManyArgsWithSelect
  ? S['select']
  : true


export type InviteArgs = {
  select?: InviteSelect
}

export type InviteArgsWithSelect = {
  select: InviteSelect
}

type ExtractInviteArgsSelect<S extends undefined | boolean | InviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InviteArgsWithSelect
  ? S['select']
  : true



/**
 * Model InvitedGroup
 */

export type InvitedGroup = {
  id: number
  createdAt: string
  groupId: number | null
  inviteId: number | null
  updatedAt: string
}

export type InvitedGroupScalars = 'id' | 'createdAt' | 'groupId' | 'inviteId' | 'updatedAt'


export type InvitedGroupSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  inviteId?: boolean
  updatedAt?: boolean
}

type InvitedGroupDefault = {
  id: true
  createdAt: true
  groupId: true
  inviteId: true
  updatedAt: true
}


type InvitedGroupGetPayload<S extends boolean | InvitedGroupSelect> = S extends true
  ? InvitedGroup
  : S extends InvitedGroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<InvitedGroupDefault, S>>]: P extends InvitedGroupScalars
        ? InvitedGroup[P]
        : never
    }
   : never

export interface InvitedGroupDelegate {
  <T extends FindManyInvitedGroupArgs>(args?: Subset<T, FindManyInvitedGroupArgs>): PromiseLike<Array<InvitedGroupGetPayload<ExtractFindManyInvitedGroupArgsSelect<T>>>>
  findOne<T extends FindOneInvitedGroupArgs>(
    args: Subset<T, FindOneInvitedGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractFindOneInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  findMany<T extends FindManyInvitedGroupArgs>(
    args?: Subset<T, FindManyInvitedGroupArgs>
  ): PromiseLike<Array<InvitedGroupGetPayload<ExtractFindManyInvitedGroupArgsSelect<T>>>>
  create<T extends InvitedGroupCreateArgs>(
    args: Subset<T, InvitedGroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupCreateArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  update<T extends InvitedGroupUpdateArgs>(
    args: Subset<T, InvitedGroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupUpdateArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  updateMany<T extends InvitedGroupUpdateManyArgs>(
    args: Subset<T, InvitedGroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupUpdateManyArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  upsert<T extends InvitedGroupUpsertArgs>(
    args: Subset<T, InvitedGroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupUpsertArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  delete<T extends InvitedGroupDeleteArgs>(
    args: Subset<T, InvitedGroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupDeleteArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
  deleteMany<T extends InvitedGroupDeleteManyArgs>(
    args: Subset<T, InvitedGroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupDeleteManyArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>
}
function InvitedGroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): InvitedGroupDelegate {
  const InvitedGroup = <T extends FindManyInvitedGroupArgs>(args: Subset<T, FindManyInvitedGroupArgs>) => new InvitedGroupClient<PromiseLike<Array<InvitedGroupGetPayload<ExtractFindManyInvitedGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'invitedGroups', 'invitedGroups', args, [])
  InvitedGroup.findOne = <T extends FindOneInvitedGroupArgs>(args: Subset<T, FindOneInvitedGroupArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'query',
    'invitedGroup',
    'invitedGroups.findOne',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'query',
    'invitedGroup',
    'invitedGroups.findOne',
    args,
    []
  )
  InvitedGroup.findMany = <T extends FindManyInvitedGroupArgs>(args: Subset<T, FindManyInvitedGroupArgs>) => new InvitedGroupClient<PromiseLike<Array<InvitedGroupGetPayload<ExtractFindManyInvitedGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'invitedGroups',
    'invitedGroups.findMany',
    args,
    []
  )
  InvitedGroup.create = <T extends InvitedGroupCreateArgs>(args: Subset<T, InvitedGroupCreateArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'createInvitedGroup',
    'invitedGroups.create',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'createInvitedGroup',
    'invitedGroups.create',
    args,
    []
  )
  InvitedGroup.update = <T extends InvitedGroupUpdateArgs>(args: Subset<T, InvitedGroupUpdateArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateInvitedGroup',
    'invitedGroups.update',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateInvitedGroup',
    'invitedGroups.update',
    args,
    []
  )
  InvitedGroup.updateMany = <T extends InvitedGroupUpdateManyArgs>(args: Subset<T, InvitedGroupUpdateManyArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInvitedGroups',
    'invitedGroups.updateMany',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyInvitedGroups',
    'invitedGroups.updateMany',
    args,
    []
  )
  InvitedGroup.upsert = <T extends InvitedGroupUpsertArgs>(args: Subset<T, InvitedGroupUpsertArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInvitedGroup',
    'invitedGroups.upsert',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'upsertInvitedGroup',
    'invitedGroups.upsert',
    args,
    []
  )
  InvitedGroup.delete = <T extends InvitedGroupDeleteArgs>(args: Subset<T, InvitedGroupDeleteArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInvitedGroup',
    'invitedGroups.delete',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteInvitedGroup',
    'invitedGroups.delete',
    args,
    []
  )
  InvitedGroup.deleteMany = <T extends InvitedGroupDeleteManyArgs>(args: Subset<T, InvitedGroupDeleteManyArgs>) => args.select ? new InvitedGroupClient<'select' extends keyof T ? PromiseLike<InvitedGroupGetPayload<ExtractInvitedGroupArgsSelect<T>>> : InvitedGroupClient<InvitedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInvitedGroups',
    'invitedGroups.deleteMany',
    args,
    []
  ) : new InvitedGroupClient<InvitedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyInvitedGroups',
    'invitedGroups.deleteMany',
    args,
    []
  )
  return InvitedGroup as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class InvitedGroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: InvitedGroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'InvitedGroup').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'InvitedGroup').catch(onrejected)
  }
}


// InputTypes

export type FindOneInvitedGroupArgs = {
  select?: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
}

export type FindOneInvitedGroupArgsWithSelect = {
  select: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
}

type ExtractFindOneInvitedGroupArgsSelect<S extends undefined | boolean | FindOneInvitedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneInvitedGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyInvitedGroupArgs = {
  select?: InvitedGroupSelect
  where?: InvitedGroupWhereInput
  orderBy?: InvitedGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyInvitedGroupArgsWithSelect = {
  select: InvitedGroupSelect
  where?: InvitedGroupWhereInput
  orderBy?: InvitedGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyInvitedGroupArgsSelect<S extends undefined | boolean | FindManyInvitedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyInvitedGroupArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupCreateArgs = {
  select?: InvitedGroupSelect
  data: InvitedGroupCreateInput
}

export type InvitedGroupCreateArgsWithSelect = {
  select: InvitedGroupSelect
  data: InvitedGroupCreateInput
}

type ExtractInvitedGroupCreateArgsSelect<S extends undefined | boolean | InvitedGroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupCreateArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupUpdateArgs = {
  select?: InvitedGroupSelect
  data: InvitedGroupUpdateInput
  where: InvitedGroupWhereUniqueInput
}

export type InvitedGroupUpdateArgsWithSelect = {
  select: InvitedGroupSelect
  data: InvitedGroupUpdateInput
  where: InvitedGroupWhereUniqueInput
}

type ExtractInvitedGroupUpdateArgsSelect<S extends undefined | boolean | InvitedGroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupUpdateArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupUpdateManyArgs = {
  select?: InvitedGroupSelect
  data: InvitedGroupUpdateManyMutationInput
  where?: InvitedGroupWhereInput
}

export type InvitedGroupUpdateManyArgsWithSelect = {
  select: InvitedGroupSelect
  data: InvitedGroupUpdateManyMutationInput
  where?: InvitedGroupWhereInput
}

type ExtractInvitedGroupUpdateManyArgsSelect<S extends undefined | boolean | InvitedGroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupUpsertArgs = {
  select?: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
  create: InvitedGroupCreateInput
  update: InvitedGroupUpdateInput
}

export type InvitedGroupUpsertArgsWithSelect = {
  select: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
  create: InvitedGroupCreateInput
  update: InvitedGroupUpdateInput
}

type ExtractInvitedGroupUpsertArgsSelect<S extends undefined | boolean | InvitedGroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupUpsertArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupDeleteArgs = {
  select?: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
}

export type InvitedGroupDeleteArgsWithSelect = {
  select: InvitedGroupSelect
  where: InvitedGroupWhereUniqueInput
}

type ExtractInvitedGroupDeleteArgsSelect<S extends undefined | boolean | InvitedGroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupDeleteArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupDeleteManyArgs = {
  select?: InvitedGroupSelect
  where?: InvitedGroupWhereInput
}

export type InvitedGroupDeleteManyArgsWithSelect = {
  select: InvitedGroupSelect
  where?: InvitedGroupWhereInput
}

type ExtractInvitedGroupDeleteManyArgsSelect<S extends undefined | boolean | InvitedGroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type InvitedGroupArgs = {
  select?: InvitedGroupSelect
}

export type InvitedGroupArgsWithSelect = {
  select: InvitedGroupSelect
}

type ExtractInvitedGroupArgsSelect<S extends undefined | boolean | InvitedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends InvitedGroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model JavascriptCach
 */

export type JavascriptCach = {
  id: number
  content: string
  createdAt: string
  digest: string | null
  themeFieldId: number
  updatedAt: string
}

export type JavascriptCachScalars = 'id' | 'content' | 'createdAt' | 'digest' | 'themeFieldId' | 'updatedAt'


export type JavascriptCachSelect = {
  id?: boolean
  content?: boolean
  createdAt?: boolean
  digest?: boolean
  themeFieldId?: boolean
  updatedAt?: boolean
}

type JavascriptCachDefault = {
  id: true
  content: true
  createdAt: true
  digest: true
  themeFieldId: true
  updatedAt: true
}


type JavascriptCachGetPayload<S extends boolean | JavascriptCachSelect> = S extends true
  ? JavascriptCach
  : S extends JavascriptCachSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<JavascriptCachDefault, S>>]: P extends JavascriptCachScalars
        ? JavascriptCach[P]
        : never
    }
   : never

export interface JavascriptCachDelegate {
  <T extends FindManyJavascriptCachArgs>(args?: Subset<T, FindManyJavascriptCachArgs>): PromiseLike<Array<JavascriptCachGetPayload<ExtractFindManyJavascriptCachArgsSelect<T>>>>
  findOne<T extends FindOneJavascriptCachArgs>(
    args: Subset<T, FindOneJavascriptCachArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractFindOneJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  findMany<T extends FindManyJavascriptCachArgs>(
    args?: Subset<T, FindManyJavascriptCachArgs>
  ): PromiseLike<Array<JavascriptCachGetPayload<ExtractFindManyJavascriptCachArgsSelect<T>>>>
  create<T extends JavascriptCachCreateArgs>(
    args: Subset<T, JavascriptCachCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachCreateArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  update<T extends JavascriptCachUpdateArgs>(
    args: Subset<T, JavascriptCachUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachUpdateArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  updateMany<T extends JavascriptCachUpdateManyArgs>(
    args: Subset<T, JavascriptCachUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachUpdateManyArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  upsert<T extends JavascriptCachUpsertArgs>(
    args: Subset<T, JavascriptCachUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachUpsertArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  delete<T extends JavascriptCachDeleteArgs>(
    args: Subset<T, JavascriptCachDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachDeleteArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
  deleteMany<T extends JavascriptCachDeleteManyArgs>(
    args: Subset<T, JavascriptCachDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachDeleteManyArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>
}
function JavascriptCachDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): JavascriptCachDelegate {
  const JavascriptCach = <T extends FindManyJavascriptCachArgs>(args: Subset<T, FindManyJavascriptCachArgs>) => new JavascriptCachClient<PromiseLike<Array<JavascriptCachGetPayload<ExtractFindManyJavascriptCachArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'javascriptCaches', 'javascriptCaches', args, [])
  JavascriptCach.findOne = <T extends FindOneJavascriptCachArgs>(args: Subset<T, FindOneJavascriptCachArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'query',
    'javascriptCach',
    'javascriptCaches.findOne',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'query',
    'javascriptCach',
    'javascriptCaches.findOne',
    args,
    []
  )
  JavascriptCach.findMany = <T extends FindManyJavascriptCachArgs>(args: Subset<T, FindManyJavascriptCachArgs>) => new JavascriptCachClient<PromiseLike<Array<JavascriptCachGetPayload<ExtractFindManyJavascriptCachArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'javascriptCaches',
    'javascriptCaches.findMany',
    args,
    []
  )
  JavascriptCach.create = <T extends JavascriptCachCreateArgs>(args: Subset<T, JavascriptCachCreateArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'createJavascriptCach',
    'javascriptCaches.create',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'createJavascriptCach',
    'javascriptCaches.create',
    args,
    []
  )
  JavascriptCach.update = <T extends JavascriptCachUpdateArgs>(args: Subset<T, JavascriptCachUpdateArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'updateJavascriptCach',
    'javascriptCaches.update',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'updateJavascriptCach',
    'javascriptCaches.update',
    args,
    []
  )
  JavascriptCach.updateMany = <T extends JavascriptCachUpdateManyArgs>(args: Subset<T, JavascriptCachUpdateManyArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyJavascriptCaches',
    'javascriptCaches.updateMany',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyJavascriptCaches',
    'javascriptCaches.updateMany',
    args,
    []
  )
  JavascriptCach.upsert = <T extends JavascriptCachUpsertArgs>(args: Subset<T, JavascriptCachUpsertArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertJavascriptCach',
    'javascriptCaches.upsert',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'upsertJavascriptCach',
    'javascriptCaches.upsert',
    args,
    []
  )
  JavascriptCach.delete = <T extends JavascriptCachDeleteArgs>(args: Subset<T, JavascriptCachDeleteArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteJavascriptCach',
    'javascriptCaches.delete',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'deleteJavascriptCach',
    'javascriptCaches.delete',
    args,
    []
  )
  JavascriptCach.deleteMany = <T extends JavascriptCachDeleteManyArgs>(args: Subset<T, JavascriptCachDeleteManyArgs>) => args.select ? new JavascriptCachClient<'select' extends keyof T ? PromiseLike<JavascriptCachGetPayload<ExtractJavascriptCachArgsSelect<T>>> : JavascriptCachClient<JavascriptCach>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyJavascriptCaches',
    'javascriptCaches.deleteMany',
    args,
    []
  ) : new JavascriptCachClient<JavascriptCach>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyJavascriptCaches',
    'javascriptCaches.deleteMany',
    args,
    []
  )
  return JavascriptCach as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class JavascriptCachClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: JavascriptCachArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'JavascriptCach').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'JavascriptCach').catch(onrejected)
  }
}


// InputTypes

export type FindOneJavascriptCachArgs = {
  select?: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
}

export type FindOneJavascriptCachArgsWithSelect = {
  select: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
}

type ExtractFindOneJavascriptCachArgsSelect<S extends undefined | boolean | FindOneJavascriptCachArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneJavascriptCachArgsWithSelect
  ? S['select']
  : true


export type FindManyJavascriptCachArgs = {
  select?: JavascriptCachSelect
  where?: JavascriptCachWhereInput
  orderBy?: JavascriptCachOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyJavascriptCachArgsWithSelect = {
  select: JavascriptCachSelect
  where?: JavascriptCachWhereInput
  orderBy?: JavascriptCachOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyJavascriptCachArgsSelect<S extends undefined | boolean | FindManyJavascriptCachArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyJavascriptCachArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachCreateArgs = {
  select?: JavascriptCachSelect
  data: JavascriptCachCreateInput
}

export type JavascriptCachCreateArgsWithSelect = {
  select: JavascriptCachSelect
  data: JavascriptCachCreateInput
}

type ExtractJavascriptCachCreateArgsSelect<S extends undefined | boolean | JavascriptCachCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachCreateArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachUpdateArgs = {
  select?: JavascriptCachSelect
  data: JavascriptCachUpdateInput
  where: JavascriptCachWhereUniqueInput
}

export type JavascriptCachUpdateArgsWithSelect = {
  select: JavascriptCachSelect
  data: JavascriptCachUpdateInput
  where: JavascriptCachWhereUniqueInput
}

type ExtractJavascriptCachUpdateArgsSelect<S extends undefined | boolean | JavascriptCachUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachUpdateArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachUpdateManyArgs = {
  select?: JavascriptCachSelect
  data: JavascriptCachUpdateManyMutationInput
  where?: JavascriptCachWhereInput
}

export type JavascriptCachUpdateManyArgsWithSelect = {
  select: JavascriptCachSelect
  data: JavascriptCachUpdateManyMutationInput
  where?: JavascriptCachWhereInput
}

type ExtractJavascriptCachUpdateManyArgsSelect<S extends undefined | boolean | JavascriptCachUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachUpdateManyArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachUpsertArgs = {
  select?: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
  create: JavascriptCachCreateInput
  update: JavascriptCachUpdateInput
}

export type JavascriptCachUpsertArgsWithSelect = {
  select: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
  create: JavascriptCachCreateInput
  update: JavascriptCachUpdateInput
}

type ExtractJavascriptCachUpsertArgsSelect<S extends undefined | boolean | JavascriptCachUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachUpsertArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachDeleteArgs = {
  select?: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
}

export type JavascriptCachDeleteArgsWithSelect = {
  select: JavascriptCachSelect
  where: JavascriptCachWhereUniqueInput
}

type ExtractJavascriptCachDeleteArgsSelect<S extends undefined | boolean | JavascriptCachDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachDeleteArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachDeleteManyArgs = {
  select?: JavascriptCachSelect
  where?: JavascriptCachWhereInput
}

export type JavascriptCachDeleteManyArgsWithSelect = {
  select: JavascriptCachSelect
  where?: JavascriptCachWhereInput
}

type ExtractJavascriptCachDeleteManyArgsSelect<S extends undefined | boolean | JavascriptCachDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachDeleteManyArgsWithSelect
  ? S['select']
  : true


export type JavascriptCachArgs = {
  select?: JavascriptCachSelect
}

export type JavascriptCachArgsWithSelect = {
  select: JavascriptCachSelect
}

type ExtractJavascriptCachArgsSelect<S extends undefined | boolean | JavascriptCachArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends JavascriptCachArgsWithSelect
  ? S['select']
  : true



/**
 * Model MessageBus
 */

export type MessageBus = {
  id: number
  context: string | null
  createdAt: string
  data: string | null
  name: string | null
}

export type MessageBusScalars = 'id' | 'context' | 'createdAt' | 'data' | 'name'


export type MessageBusSelect = {
  id?: boolean
  context?: boolean
  createdAt?: boolean
  data?: boolean
  name?: boolean
}

type MessageBusDefault = {
  id: true
  context: true
  createdAt: true
  data: true
  name: true
}


type MessageBusGetPayload<S extends boolean | MessageBusSelect> = S extends true
  ? MessageBus
  : S extends MessageBusSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<MessageBusDefault, S>>]: P extends MessageBusScalars
        ? MessageBus[P]
        : never
    }
   : never

export interface MessageBusDelegate {
  <T extends FindManyMessageBusArgs>(args?: Subset<T, FindManyMessageBusArgs>): PromiseLike<Array<MessageBusGetPayload<ExtractFindManyMessageBusArgsSelect<T>>>>
  findOne<T extends FindOneMessageBusArgs>(
    args: Subset<T, FindOneMessageBusArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractFindOneMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>
  findMany<T extends FindManyMessageBusArgs>(
    args?: Subset<T, FindManyMessageBusArgs>
  ): PromiseLike<Array<MessageBusGetPayload<ExtractFindManyMessageBusArgsSelect<T>>>>
  create<T extends MessageBusCreateArgs>(
    args: Subset<T, MessageBusCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusCreateArgsSelect<T>>> : MessageBusClient<MessageBus>
  update<T extends MessageBusUpdateArgs>(
    args: Subset<T, MessageBusUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusUpdateArgsSelect<T>>> : MessageBusClient<MessageBus>
  updateMany<T extends MessageBusUpdateManyArgs>(
    args: Subset<T, MessageBusUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusUpdateManyArgsSelect<T>>> : MessageBusClient<MessageBus>
  upsert<T extends MessageBusUpsertArgs>(
    args: Subset<T, MessageBusUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusUpsertArgsSelect<T>>> : MessageBusClient<MessageBus>
  delete<T extends MessageBusDeleteArgs>(
    args: Subset<T, MessageBusDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusDeleteArgsSelect<T>>> : MessageBusClient<MessageBus>
  deleteMany<T extends MessageBusDeleteManyArgs>(
    args: Subset<T, MessageBusDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusDeleteManyArgsSelect<T>>> : MessageBusClient<MessageBus>
}
function MessageBusDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): MessageBusDelegate {
  const MessageBus = <T extends FindManyMessageBusArgs>(args: Subset<T, FindManyMessageBusArgs>) => new MessageBusClient<PromiseLike<Array<MessageBusGetPayload<ExtractFindManyMessageBusArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'messageBuses', 'messageBuses', args, [])
  MessageBus.findOne = <T extends FindOneMessageBusArgs>(args: Subset<T, FindOneMessageBusArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'query',
    'messageBus',
    'messageBuses.findOne',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'query',
    'messageBus',
    'messageBuses.findOne',
    args,
    []
  )
  MessageBus.findMany = <T extends FindManyMessageBusArgs>(args: Subset<T, FindManyMessageBusArgs>) => new MessageBusClient<PromiseLike<Array<MessageBusGetPayload<ExtractFindManyMessageBusArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'messageBuses',
    'messageBuses.findMany',
    args,
    []
  )
  MessageBus.create = <T extends MessageBusCreateArgs>(args: Subset<T, MessageBusCreateArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'createMessageBus',
    'messageBuses.create',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'createMessageBus',
    'messageBuses.create',
    args,
    []
  )
  MessageBus.update = <T extends MessageBusUpdateArgs>(args: Subset<T, MessageBusUpdateArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'updateMessageBus',
    'messageBuses.update',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'updateMessageBus',
    'messageBuses.update',
    args,
    []
  )
  MessageBus.updateMany = <T extends MessageBusUpdateManyArgs>(args: Subset<T, MessageBusUpdateManyArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyMessageBuses',
    'messageBuses.updateMany',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyMessageBuses',
    'messageBuses.updateMany',
    args,
    []
  )
  MessageBus.upsert = <T extends MessageBusUpsertArgs>(args: Subset<T, MessageBusUpsertArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertMessageBus',
    'messageBuses.upsert',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'upsertMessageBus',
    'messageBuses.upsert',
    args,
    []
  )
  MessageBus.delete = <T extends MessageBusDeleteArgs>(args: Subset<T, MessageBusDeleteArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteMessageBus',
    'messageBuses.delete',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'deleteMessageBus',
    'messageBuses.delete',
    args,
    []
  )
  MessageBus.deleteMany = <T extends MessageBusDeleteManyArgs>(args: Subset<T, MessageBusDeleteManyArgs>) => args.select ? new MessageBusClient<'select' extends keyof T ? PromiseLike<MessageBusGetPayload<ExtractMessageBusArgsSelect<T>>> : MessageBusClient<MessageBus>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyMessageBuses',
    'messageBuses.deleteMany',
    args,
    []
  ) : new MessageBusClient<MessageBus>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyMessageBuses',
    'messageBuses.deleteMany',
    args,
    []
  )
  return MessageBus as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class MessageBusClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: MessageBusArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'MessageBus').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'MessageBus').catch(onrejected)
  }
}


// InputTypes

export type FindOneMessageBusArgs = {
  select?: MessageBusSelect
  where: MessageBusWhereUniqueInput
}

export type FindOneMessageBusArgsWithSelect = {
  select: MessageBusSelect
  where: MessageBusWhereUniqueInput
}

type ExtractFindOneMessageBusArgsSelect<S extends undefined | boolean | FindOneMessageBusArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneMessageBusArgsWithSelect
  ? S['select']
  : true


export type FindManyMessageBusArgs = {
  select?: MessageBusSelect
  where?: MessageBusWhereInput
  orderBy?: MessageBusOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyMessageBusArgsWithSelect = {
  select: MessageBusSelect
  where?: MessageBusWhereInput
  orderBy?: MessageBusOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyMessageBusArgsSelect<S extends undefined | boolean | FindManyMessageBusArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyMessageBusArgsWithSelect
  ? S['select']
  : true


export type MessageBusCreateArgs = {
  select?: MessageBusSelect
  data: MessageBusCreateInput
}

export type MessageBusCreateArgsWithSelect = {
  select: MessageBusSelect
  data: MessageBusCreateInput
}

type ExtractMessageBusCreateArgsSelect<S extends undefined | boolean | MessageBusCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusCreateArgsWithSelect
  ? S['select']
  : true


export type MessageBusUpdateArgs = {
  select?: MessageBusSelect
  data: MessageBusUpdateInput
  where: MessageBusWhereUniqueInput
}

export type MessageBusUpdateArgsWithSelect = {
  select: MessageBusSelect
  data: MessageBusUpdateInput
  where: MessageBusWhereUniqueInput
}

type ExtractMessageBusUpdateArgsSelect<S extends undefined | boolean | MessageBusUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusUpdateArgsWithSelect
  ? S['select']
  : true


export type MessageBusUpdateManyArgs = {
  select?: MessageBusSelect
  data: MessageBusUpdateManyMutationInput
  where?: MessageBusWhereInput
}

export type MessageBusUpdateManyArgsWithSelect = {
  select: MessageBusSelect
  data: MessageBusUpdateManyMutationInput
  where?: MessageBusWhereInput
}

type ExtractMessageBusUpdateManyArgsSelect<S extends undefined | boolean | MessageBusUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusUpdateManyArgsWithSelect
  ? S['select']
  : true


export type MessageBusUpsertArgs = {
  select?: MessageBusSelect
  where: MessageBusWhereUniqueInput
  create: MessageBusCreateInput
  update: MessageBusUpdateInput
}

export type MessageBusUpsertArgsWithSelect = {
  select: MessageBusSelect
  where: MessageBusWhereUniqueInput
  create: MessageBusCreateInput
  update: MessageBusUpdateInput
}

type ExtractMessageBusUpsertArgsSelect<S extends undefined | boolean | MessageBusUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusUpsertArgsWithSelect
  ? S['select']
  : true


export type MessageBusDeleteArgs = {
  select?: MessageBusSelect
  where: MessageBusWhereUniqueInput
}

export type MessageBusDeleteArgsWithSelect = {
  select: MessageBusSelect
  where: MessageBusWhereUniqueInput
}

type ExtractMessageBusDeleteArgsSelect<S extends undefined | boolean | MessageBusDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusDeleteArgsWithSelect
  ? S['select']
  : true


export type MessageBusDeleteManyArgs = {
  select?: MessageBusSelect
  where?: MessageBusWhereInput
}

export type MessageBusDeleteManyArgsWithSelect = {
  select: MessageBusSelect
  where?: MessageBusWhereInput
}

type ExtractMessageBusDeleteManyArgsSelect<S extends undefined | boolean | MessageBusDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusDeleteManyArgsWithSelect
  ? S['select']
  : true


export type MessageBusArgs = {
  select?: MessageBusSelect
}

export type MessageBusArgsWithSelect = {
  select: MessageBusSelect
}

type ExtractMessageBusArgsSelect<S extends undefined | boolean | MessageBusArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MessageBusArgsWithSelect
  ? S['select']
  : true



/**
 * Model MutedUser
 */

export type MutedUser = {
  id: number
  createdAt: string | null
  mutedUserId: number
  updatedAt: string | null
  userId: number
}

export type MutedUserScalars = 'id' | 'createdAt' | 'mutedUserId' | 'updatedAt' | 'userId'


export type MutedUserSelect = {
  id?: boolean
  createdAt?: boolean
  mutedUserId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type MutedUserDefault = {
  id: true
  createdAt: true
  mutedUserId: true
  updatedAt: true
  userId: true
}


type MutedUserGetPayload<S extends boolean | MutedUserSelect> = S extends true
  ? MutedUser
  : S extends MutedUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<MutedUserDefault, S>>]: P extends MutedUserScalars
        ? MutedUser[P]
        : never
    }
   : never

export interface MutedUserDelegate {
  <T extends FindManyMutedUserArgs>(args?: Subset<T, FindManyMutedUserArgs>): PromiseLike<Array<MutedUserGetPayload<ExtractFindManyMutedUserArgsSelect<T>>>>
  findOne<T extends FindOneMutedUserArgs>(
    args: Subset<T, FindOneMutedUserArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractFindOneMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>
  findMany<T extends FindManyMutedUserArgs>(
    args?: Subset<T, FindManyMutedUserArgs>
  ): PromiseLike<Array<MutedUserGetPayload<ExtractFindManyMutedUserArgsSelect<T>>>>
  create<T extends MutedUserCreateArgs>(
    args: Subset<T, MutedUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserCreateArgsSelect<T>>> : MutedUserClient<MutedUser>
  update<T extends MutedUserUpdateArgs>(
    args: Subset<T, MutedUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserUpdateArgsSelect<T>>> : MutedUserClient<MutedUser>
  updateMany<T extends MutedUserUpdateManyArgs>(
    args: Subset<T, MutedUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserUpdateManyArgsSelect<T>>> : MutedUserClient<MutedUser>
  upsert<T extends MutedUserUpsertArgs>(
    args: Subset<T, MutedUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserUpsertArgsSelect<T>>> : MutedUserClient<MutedUser>
  delete<T extends MutedUserDeleteArgs>(
    args: Subset<T, MutedUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserDeleteArgsSelect<T>>> : MutedUserClient<MutedUser>
  deleteMany<T extends MutedUserDeleteManyArgs>(
    args: Subset<T, MutedUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserDeleteManyArgsSelect<T>>> : MutedUserClient<MutedUser>
}
function MutedUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): MutedUserDelegate {
  const MutedUser = <T extends FindManyMutedUserArgs>(args: Subset<T, FindManyMutedUserArgs>) => new MutedUserClient<PromiseLike<Array<MutedUserGetPayload<ExtractFindManyMutedUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'mutedUsers', 'mutedUsers', args, [])
  MutedUser.findOne = <T extends FindOneMutedUserArgs>(args: Subset<T, FindOneMutedUserArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'query',
    'mutedUser',
    'mutedUsers.findOne',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'query',
    'mutedUser',
    'mutedUsers.findOne',
    args,
    []
  )
  MutedUser.findMany = <T extends FindManyMutedUserArgs>(args: Subset<T, FindManyMutedUserArgs>) => new MutedUserClient<PromiseLike<Array<MutedUserGetPayload<ExtractFindManyMutedUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'mutedUsers',
    'mutedUsers.findMany',
    args,
    []
  )
  MutedUser.create = <T extends MutedUserCreateArgs>(args: Subset<T, MutedUserCreateArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createMutedUser',
    'mutedUsers.create',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'createMutedUser',
    'mutedUsers.create',
    args,
    []
  )
  MutedUser.update = <T extends MutedUserUpdateArgs>(args: Subset<T, MutedUserUpdateArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateMutedUser',
    'mutedUsers.update',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateMutedUser',
    'mutedUsers.update',
    args,
    []
  )
  MutedUser.updateMany = <T extends MutedUserUpdateManyArgs>(args: Subset<T, MutedUserUpdateManyArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyMutedUsers',
    'mutedUsers.updateMany',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyMutedUsers',
    'mutedUsers.updateMany',
    args,
    []
  )
  MutedUser.upsert = <T extends MutedUserUpsertArgs>(args: Subset<T, MutedUserUpsertArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertMutedUser',
    'mutedUsers.upsert',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertMutedUser',
    'mutedUsers.upsert',
    args,
    []
  )
  MutedUser.delete = <T extends MutedUserDeleteArgs>(args: Subset<T, MutedUserDeleteArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteMutedUser',
    'mutedUsers.delete',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteMutedUser',
    'mutedUsers.delete',
    args,
    []
  )
  MutedUser.deleteMany = <T extends MutedUserDeleteManyArgs>(args: Subset<T, MutedUserDeleteManyArgs>) => args.select ? new MutedUserClient<'select' extends keyof T ? PromiseLike<MutedUserGetPayload<ExtractMutedUserArgsSelect<T>>> : MutedUserClient<MutedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyMutedUsers',
    'mutedUsers.deleteMany',
    args,
    []
  ) : new MutedUserClient<MutedUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyMutedUsers',
    'mutedUsers.deleteMany',
    args,
    []
  )
  return MutedUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class MutedUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: MutedUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'MutedUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'MutedUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneMutedUserArgs = {
  select?: MutedUserSelect
  where: MutedUserWhereUniqueInput
}

export type FindOneMutedUserArgsWithSelect = {
  select: MutedUserSelect
  where: MutedUserWhereUniqueInput
}

type ExtractFindOneMutedUserArgsSelect<S extends undefined | boolean | FindOneMutedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneMutedUserArgsWithSelect
  ? S['select']
  : true


export type FindManyMutedUserArgs = {
  select?: MutedUserSelect
  where?: MutedUserWhereInput
  orderBy?: MutedUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyMutedUserArgsWithSelect = {
  select: MutedUserSelect
  where?: MutedUserWhereInput
  orderBy?: MutedUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyMutedUserArgsSelect<S extends undefined | boolean | FindManyMutedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyMutedUserArgsWithSelect
  ? S['select']
  : true


export type MutedUserCreateArgs = {
  select?: MutedUserSelect
  data: MutedUserCreateInput
}

export type MutedUserCreateArgsWithSelect = {
  select: MutedUserSelect
  data: MutedUserCreateInput
}

type ExtractMutedUserCreateArgsSelect<S extends undefined | boolean | MutedUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserCreateArgsWithSelect
  ? S['select']
  : true


export type MutedUserUpdateArgs = {
  select?: MutedUserSelect
  data: MutedUserUpdateInput
  where: MutedUserWhereUniqueInput
}

export type MutedUserUpdateArgsWithSelect = {
  select: MutedUserSelect
  data: MutedUserUpdateInput
  where: MutedUserWhereUniqueInput
}

type ExtractMutedUserUpdateArgsSelect<S extends undefined | boolean | MutedUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserUpdateArgsWithSelect
  ? S['select']
  : true


export type MutedUserUpdateManyArgs = {
  select?: MutedUserSelect
  data: MutedUserUpdateManyMutationInput
  where?: MutedUserWhereInput
}

export type MutedUserUpdateManyArgsWithSelect = {
  select: MutedUserSelect
  data: MutedUserUpdateManyMutationInput
  where?: MutedUserWhereInput
}

type ExtractMutedUserUpdateManyArgsSelect<S extends undefined | boolean | MutedUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type MutedUserUpsertArgs = {
  select?: MutedUserSelect
  where: MutedUserWhereUniqueInput
  create: MutedUserCreateInput
  update: MutedUserUpdateInput
}

export type MutedUserUpsertArgsWithSelect = {
  select: MutedUserSelect
  where: MutedUserWhereUniqueInput
  create: MutedUserCreateInput
  update: MutedUserUpdateInput
}

type ExtractMutedUserUpsertArgsSelect<S extends undefined | boolean | MutedUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserUpsertArgsWithSelect
  ? S['select']
  : true


export type MutedUserDeleteArgs = {
  select?: MutedUserSelect
  where: MutedUserWhereUniqueInput
}

export type MutedUserDeleteArgsWithSelect = {
  select: MutedUserSelect
  where: MutedUserWhereUniqueInput
}

type ExtractMutedUserDeleteArgsSelect<S extends undefined | boolean | MutedUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserDeleteArgsWithSelect
  ? S['select']
  : true


export type MutedUserDeleteManyArgs = {
  select?: MutedUserSelect
  where?: MutedUserWhereInput
}

export type MutedUserDeleteManyArgsWithSelect = {
  select: MutedUserSelect
  where?: MutedUserWhereInput
}

type ExtractMutedUserDeleteManyArgsSelect<S extends undefined | boolean | MutedUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type MutedUserArgs = {
  select?: MutedUserSelect
}

export type MutedUserArgsWithSelect = {
  select: MutedUserSelect
}

type ExtractMutedUserArgsSelect<S extends undefined | boolean | MutedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends MutedUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model Notification
 */

export type Notification = {
  id: number
  createdAt: string
  data: string
  notificationType: number
  postActionId: number | null
  postNumber: number | null
  read: boolean
  topicId: number | null
  updatedAt: string
  userId: number
}

export type NotificationScalars = 'id' | 'createdAt' | 'data' | 'notificationType' | 'postActionId' | 'postNumber' | 'read' | 'topicId' | 'updatedAt' | 'userId'


export type NotificationSelect = {
  id?: boolean
  createdAt?: boolean
  data?: boolean
  notificationType?: boolean
  postActionId?: boolean
  postNumber?: boolean
  read?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type NotificationDefault = {
  id: true
  createdAt: true
  data: true
  notificationType: true
  postActionId: true
  postNumber: true
  read: true
  topicId: true
  updatedAt: true
  userId: true
}


type NotificationGetPayload<S extends boolean | NotificationSelect> = S extends true
  ? Notification
  : S extends NotificationSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<NotificationDefault, S>>]: P extends NotificationScalars
        ? Notification[P]
        : never
    }
   : never

export interface NotificationDelegate {
  <T extends FindManyNotificationArgs>(args?: Subset<T, FindManyNotificationArgs>): PromiseLike<Array<NotificationGetPayload<ExtractFindManyNotificationArgsSelect<T>>>>
  findOne<T extends FindOneNotificationArgs>(
    args: Subset<T, FindOneNotificationArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractFindOneNotificationArgsSelect<T>>> : NotificationClient<Notification>
  findMany<T extends FindManyNotificationArgs>(
    args?: Subset<T, FindManyNotificationArgs>
  ): PromiseLike<Array<NotificationGetPayload<ExtractFindManyNotificationArgsSelect<T>>>>
  create<T extends NotificationCreateArgs>(
    args: Subset<T, NotificationCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationCreateArgsSelect<T>>> : NotificationClient<Notification>
  update<T extends NotificationUpdateArgs>(
    args: Subset<T, NotificationUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationUpdateArgsSelect<T>>> : NotificationClient<Notification>
  updateMany<T extends NotificationUpdateManyArgs>(
    args: Subset<T, NotificationUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationUpdateManyArgsSelect<T>>> : NotificationClient<Notification>
  upsert<T extends NotificationUpsertArgs>(
    args: Subset<T, NotificationUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationUpsertArgsSelect<T>>> : NotificationClient<Notification>
  delete<T extends NotificationDeleteArgs>(
    args: Subset<T, NotificationDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationDeleteArgsSelect<T>>> : NotificationClient<Notification>
  deleteMany<T extends NotificationDeleteManyArgs>(
    args: Subset<T, NotificationDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationDeleteManyArgsSelect<T>>> : NotificationClient<Notification>
}
function NotificationDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): NotificationDelegate {
  const Notification = <T extends FindManyNotificationArgs>(args: Subset<T, FindManyNotificationArgs>) => new NotificationClient<PromiseLike<Array<NotificationGetPayload<ExtractFindManyNotificationArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'notifications', 'notifications', args, [])
  Notification.findOne = <T extends FindOneNotificationArgs>(args: Subset<T, FindOneNotificationArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'query',
    'notification',
    'notifications.findOne',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'query',
    'notification',
    'notifications.findOne',
    args,
    []
  )
  Notification.findMany = <T extends FindManyNotificationArgs>(args: Subset<T, FindManyNotificationArgs>) => new NotificationClient<PromiseLike<Array<NotificationGetPayload<ExtractFindManyNotificationArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'notifications',
    'notifications.findMany',
    args,
    []
  )
  Notification.create = <T extends NotificationCreateArgs>(args: Subset<T, NotificationCreateArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'createNotification',
    'notifications.create',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'createNotification',
    'notifications.create',
    args,
    []
  )
  Notification.update = <T extends NotificationUpdateArgs>(args: Subset<T, NotificationUpdateArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'updateNotification',
    'notifications.update',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'updateNotification',
    'notifications.update',
    args,
    []
  )
  Notification.updateMany = <T extends NotificationUpdateManyArgs>(args: Subset<T, NotificationUpdateManyArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyNotifications',
    'notifications.updateMany',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyNotifications',
    'notifications.updateMany',
    args,
    []
  )
  Notification.upsert = <T extends NotificationUpsertArgs>(args: Subset<T, NotificationUpsertArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertNotification',
    'notifications.upsert',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'upsertNotification',
    'notifications.upsert',
    args,
    []
  )
  Notification.delete = <T extends NotificationDeleteArgs>(args: Subset<T, NotificationDeleteArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteNotification',
    'notifications.delete',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'deleteNotification',
    'notifications.delete',
    args,
    []
  )
  Notification.deleteMany = <T extends NotificationDeleteManyArgs>(args: Subset<T, NotificationDeleteManyArgs>) => args.select ? new NotificationClient<'select' extends keyof T ? PromiseLike<NotificationGetPayload<ExtractNotificationArgsSelect<T>>> : NotificationClient<Notification>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyNotifications',
    'notifications.deleteMany',
    args,
    []
  ) : new NotificationClient<Notification>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyNotifications',
    'notifications.deleteMany',
    args,
    []
  )
  return Notification as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class NotificationClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: NotificationArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Notification').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Notification').catch(onrejected)
  }
}


// InputTypes

export type FindOneNotificationArgs = {
  select?: NotificationSelect
  where: NotificationWhereUniqueInput
}

export type FindOneNotificationArgsWithSelect = {
  select: NotificationSelect
  where: NotificationWhereUniqueInput
}

type ExtractFindOneNotificationArgsSelect<S extends undefined | boolean | FindOneNotificationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneNotificationArgsWithSelect
  ? S['select']
  : true


export type FindManyNotificationArgs = {
  select?: NotificationSelect
  where?: NotificationWhereInput
  orderBy?: NotificationOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyNotificationArgsWithSelect = {
  select: NotificationSelect
  where?: NotificationWhereInput
  orderBy?: NotificationOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyNotificationArgsSelect<S extends undefined | boolean | FindManyNotificationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyNotificationArgsWithSelect
  ? S['select']
  : true


export type NotificationCreateArgs = {
  select?: NotificationSelect
  data: NotificationCreateInput
}

export type NotificationCreateArgsWithSelect = {
  select: NotificationSelect
  data: NotificationCreateInput
}

type ExtractNotificationCreateArgsSelect<S extends undefined | boolean | NotificationCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationCreateArgsWithSelect
  ? S['select']
  : true


export type NotificationUpdateArgs = {
  select?: NotificationSelect
  data: NotificationUpdateInput
  where: NotificationWhereUniqueInput
}

export type NotificationUpdateArgsWithSelect = {
  select: NotificationSelect
  data: NotificationUpdateInput
  where: NotificationWhereUniqueInput
}

type ExtractNotificationUpdateArgsSelect<S extends undefined | boolean | NotificationUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationUpdateArgsWithSelect
  ? S['select']
  : true


export type NotificationUpdateManyArgs = {
  select?: NotificationSelect
  data: NotificationUpdateManyMutationInput
  where?: NotificationWhereInput
}

export type NotificationUpdateManyArgsWithSelect = {
  select: NotificationSelect
  data: NotificationUpdateManyMutationInput
  where?: NotificationWhereInput
}

type ExtractNotificationUpdateManyArgsSelect<S extends undefined | boolean | NotificationUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationUpdateManyArgsWithSelect
  ? S['select']
  : true


export type NotificationUpsertArgs = {
  select?: NotificationSelect
  where: NotificationWhereUniqueInput
  create: NotificationCreateInput
  update: NotificationUpdateInput
}

export type NotificationUpsertArgsWithSelect = {
  select: NotificationSelect
  where: NotificationWhereUniqueInput
  create: NotificationCreateInput
  update: NotificationUpdateInput
}

type ExtractNotificationUpsertArgsSelect<S extends undefined | boolean | NotificationUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationUpsertArgsWithSelect
  ? S['select']
  : true


export type NotificationDeleteArgs = {
  select?: NotificationSelect
  where: NotificationWhereUniqueInput
}

export type NotificationDeleteArgsWithSelect = {
  select: NotificationSelect
  where: NotificationWhereUniqueInput
}

type ExtractNotificationDeleteArgsSelect<S extends undefined | boolean | NotificationDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationDeleteArgsWithSelect
  ? S['select']
  : true


export type NotificationDeleteManyArgs = {
  select?: NotificationSelect
  where?: NotificationWhereInput
}

export type NotificationDeleteManyArgsWithSelect = {
  select: NotificationSelect
  where?: NotificationWhereInput
}

type ExtractNotificationDeleteManyArgsSelect<S extends undefined | boolean | NotificationDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationDeleteManyArgsWithSelect
  ? S['select']
  : true


export type NotificationArgs = {
  select?: NotificationSelect
}

export type NotificationArgsWithSelect = {
  select: NotificationSelect
}

type ExtractNotificationArgsSelect<S extends undefined | boolean | NotificationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends NotificationArgsWithSelect
  ? S['select']
  : true



/**
 * Model Oauth2UserInfo
 */

export type Oauth2UserInfo = {
  id: number
  createdAt: string
  email: string | null
  name: string | null
  provider: string
  uid: string
  updatedAt: string
  userId: number
}

export type Oauth2UserInfoScalars = 'id' | 'createdAt' | 'email' | 'name' | 'provider' | 'uid' | 'updatedAt' | 'userId'


export type Oauth2UserInfoSelect = {
  id?: boolean
  createdAt?: boolean
  email?: boolean
  name?: boolean
  provider?: boolean
  uid?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type Oauth2UserInfoDefault = {
  id: true
  createdAt: true
  email: true
  name: true
  provider: true
  uid: true
  updatedAt: true
  userId: true
}


type Oauth2UserInfoGetPayload<S extends boolean | Oauth2UserInfoSelect> = S extends true
  ? Oauth2UserInfo
  : S extends Oauth2UserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<Oauth2UserInfoDefault, S>>]: P extends Oauth2UserInfoScalars
        ? Oauth2UserInfo[P]
        : never
    }
   : never

export interface Oauth2UserInfoDelegate {
  <T extends FindManyOauth2UserInfoArgs>(args?: Subset<T, FindManyOauth2UserInfoArgs>): PromiseLike<Array<Oauth2UserInfoGetPayload<ExtractFindManyOauth2UserInfoArgsSelect<T>>>>
  findOne<T extends FindOneOauth2UserInfoArgs>(
    args: Subset<T, FindOneOauth2UserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractFindOneOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  findMany<T extends FindManyOauth2UserInfoArgs>(
    args?: Subset<T, FindManyOauth2UserInfoArgs>
  ): PromiseLike<Array<Oauth2UserInfoGetPayload<ExtractFindManyOauth2UserInfoArgsSelect<T>>>>
  create<T extends Oauth2UserInfoCreateArgs>(
    args: Subset<T, Oauth2UserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoCreateArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  update<T extends Oauth2UserInfoUpdateArgs>(
    args: Subset<T, Oauth2UserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoUpdateArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  updateMany<T extends Oauth2UserInfoUpdateManyArgs>(
    args: Subset<T, Oauth2UserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoUpdateManyArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  upsert<T extends Oauth2UserInfoUpsertArgs>(
    args: Subset<T, Oauth2UserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoUpsertArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  delete<T extends Oauth2UserInfoDeleteArgs>(
    args: Subset<T, Oauth2UserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoDeleteArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
  deleteMany<T extends Oauth2UserInfoDeleteManyArgs>(
    args: Subset<T, Oauth2UserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoDeleteManyArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>
}
function Oauth2UserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): Oauth2UserInfoDelegate {
  const Oauth2UserInfo = <T extends FindManyOauth2UserInfoArgs>(args: Subset<T, FindManyOauth2UserInfoArgs>) => new Oauth2UserInfoClient<PromiseLike<Array<Oauth2UserInfoGetPayload<ExtractFindManyOauth2UserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'oauth2UserInfoes', 'oauth2UserInfoes', args, [])
  Oauth2UserInfo.findOne = <T extends FindOneOauth2UserInfoArgs>(args: Subset<T, FindOneOauth2UserInfoArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'query',
    'oauth2UserInfo',
    'oauth2UserInfoes.findOne',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'query',
    'oauth2UserInfo',
    'oauth2UserInfoes.findOne',
    args,
    []
  )
  Oauth2UserInfo.findMany = <T extends FindManyOauth2UserInfoArgs>(args: Subset<T, FindManyOauth2UserInfoArgs>) => new Oauth2UserInfoClient<PromiseLike<Array<Oauth2UserInfoGetPayload<ExtractFindManyOauth2UserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'oauth2UserInfoes',
    'oauth2UserInfoes.findMany',
    args,
    []
  )
  Oauth2UserInfo.create = <T extends Oauth2UserInfoCreateArgs>(args: Subset<T, Oauth2UserInfoCreateArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createOauth2UserInfo',
    'oauth2UserInfoes.create',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createOauth2UserInfo',
    'oauth2UserInfoes.create',
    args,
    []
  )
  Oauth2UserInfo.update = <T extends Oauth2UserInfoUpdateArgs>(args: Subset<T, Oauth2UserInfoUpdateArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateOauth2UserInfo',
    'oauth2UserInfoes.update',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateOauth2UserInfo',
    'oauth2UserInfoes.update',
    args,
    []
  )
  Oauth2UserInfo.updateMany = <T extends Oauth2UserInfoUpdateManyArgs>(args: Subset<T, Oauth2UserInfoUpdateManyArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOauth2UserInfoes',
    'oauth2UserInfoes.updateMany',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOauth2UserInfoes',
    'oauth2UserInfoes.updateMany',
    args,
    []
  )
  Oauth2UserInfo.upsert = <T extends Oauth2UserInfoUpsertArgs>(args: Subset<T, Oauth2UserInfoUpsertArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOauth2UserInfo',
    'oauth2UserInfoes.upsert',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOauth2UserInfo',
    'oauth2UserInfoes.upsert',
    args,
    []
  )
  Oauth2UserInfo.delete = <T extends Oauth2UserInfoDeleteArgs>(args: Subset<T, Oauth2UserInfoDeleteArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOauth2UserInfo',
    'oauth2UserInfoes.delete',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOauth2UserInfo',
    'oauth2UserInfoes.delete',
    args,
    []
  )
  Oauth2UserInfo.deleteMany = <T extends Oauth2UserInfoDeleteManyArgs>(args: Subset<T, Oauth2UserInfoDeleteManyArgs>) => args.select ? new Oauth2UserInfoClient<'select' extends keyof T ? PromiseLike<Oauth2UserInfoGetPayload<ExtractOauth2UserInfoArgsSelect<T>>> : Oauth2UserInfoClient<Oauth2UserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOauth2UserInfoes',
    'oauth2UserInfoes.deleteMany',
    args,
    []
  ) : new Oauth2UserInfoClient<Oauth2UserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOauth2UserInfoes',
    'oauth2UserInfoes.deleteMany',
    args,
    []
  )
  return Oauth2UserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class Oauth2UserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: Oauth2UserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Oauth2UserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Oauth2UserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneOauth2UserInfoArgs = {
  select?: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
}

export type FindOneOauth2UserInfoArgsWithSelect = {
  select: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
}

type ExtractFindOneOauth2UserInfoArgsSelect<S extends undefined | boolean | FindOneOauth2UserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneOauth2UserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyOauth2UserInfoArgs = {
  select?: Oauth2UserInfoSelect
  where?: Oauth2UserInfoWhereInput
  orderBy?: Oauth2UserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyOauth2UserInfoArgsWithSelect = {
  select: Oauth2UserInfoSelect
  where?: Oauth2UserInfoWhereInput
  orderBy?: Oauth2UserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyOauth2UserInfoArgsSelect<S extends undefined | boolean | FindManyOauth2UserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyOauth2UserInfoArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoCreateArgs = {
  select?: Oauth2UserInfoSelect
  data: Oauth2UserInfoCreateInput
}

export type Oauth2UserInfoCreateArgsWithSelect = {
  select: Oauth2UserInfoSelect
  data: Oauth2UserInfoCreateInput
}

type ExtractOauth2UserInfoCreateArgsSelect<S extends undefined | boolean | Oauth2UserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoUpdateArgs = {
  select?: Oauth2UserInfoSelect
  data: Oauth2UserInfoUpdateInput
  where: Oauth2UserInfoWhereUniqueInput
}

export type Oauth2UserInfoUpdateArgsWithSelect = {
  select: Oauth2UserInfoSelect
  data: Oauth2UserInfoUpdateInput
  where: Oauth2UserInfoWhereUniqueInput
}

type ExtractOauth2UserInfoUpdateArgsSelect<S extends undefined | boolean | Oauth2UserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoUpdateManyArgs = {
  select?: Oauth2UserInfoSelect
  data: Oauth2UserInfoUpdateManyMutationInput
  where?: Oauth2UserInfoWhereInput
}

export type Oauth2UserInfoUpdateManyArgsWithSelect = {
  select: Oauth2UserInfoSelect
  data: Oauth2UserInfoUpdateManyMutationInput
  where?: Oauth2UserInfoWhereInput
}

type ExtractOauth2UserInfoUpdateManyArgsSelect<S extends undefined | boolean | Oauth2UserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoUpsertArgs = {
  select?: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
  create: Oauth2UserInfoCreateInput
  update: Oauth2UserInfoUpdateInput
}

export type Oauth2UserInfoUpsertArgsWithSelect = {
  select: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
  create: Oauth2UserInfoCreateInput
  update: Oauth2UserInfoUpdateInput
}

type ExtractOauth2UserInfoUpsertArgsSelect<S extends undefined | boolean | Oauth2UserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoDeleteArgs = {
  select?: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
}

export type Oauth2UserInfoDeleteArgsWithSelect = {
  select: Oauth2UserInfoSelect
  where: Oauth2UserInfoWhereUniqueInput
}

type ExtractOauth2UserInfoDeleteArgsSelect<S extends undefined | boolean | Oauth2UserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoDeleteManyArgs = {
  select?: Oauth2UserInfoSelect
  where?: Oauth2UserInfoWhereInput
}

export type Oauth2UserInfoDeleteManyArgsWithSelect = {
  select: Oauth2UserInfoSelect
  where?: Oauth2UserInfoWhereInput
}

type ExtractOauth2UserInfoDeleteManyArgsSelect<S extends undefined | boolean | Oauth2UserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type Oauth2UserInfoArgs = {
  select?: Oauth2UserInfoSelect
}

export type Oauth2UserInfoArgsWithSelect = {
  select: Oauth2UserInfoSelect
}

type ExtractOauth2UserInfoArgsSelect<S extends undefined | boolean | Oauth2UserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends Oauth2UserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model OnceoffLog
 */

export type OnceoffLog = {
  id: number
  createdAt: string
  jobName: string | null
  updatedAt: string
}

export type OnceoffLogScalars = 'id' | 'createdAt' | 'jobName' | 'updatedAt'


export type OnceoffLogSelect = {
  id?: boolean
  createdAt?: boolean
  jobName?: boolean
  updatedAt?: boolean
}

type OnceoffLogDefault = {
  id: true
  createdAt: true
  jobName: true
  updatedAt: true
}


type OnceoffLogGetPayload<S extends boolean | OnceoffLogSelect> = S extends true
  ? OnceoffLog
  : S extends OnceoffLogSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<OnceoffLogDefault, S>>]: P extends OnceoffLogScalars
        ? OnceoffLog[P]
        : never
    }
   : never

export interface OnceoffLogDelegate {
  <T extends FindManyOnceoffLogArgs>(args?: Subset<T, FindManyOnceoffLogArgs>): PromiseLike<Array<OnceoffLogGetPayload<ExtractFindManyOnceoffLogArgsSelect<T>>>>
  findOne<T extends FindOneOnceoffLogArgs>(
    args: Subset<T, FindOneOnceoffLogArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractFindOneOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  findMany<T extends FindManyOnceoffLogArgs>(
    args?: Subset<T, FindManyOnceoffLogArgs>
  ): PromiseLike<Array<OnceoffLogGetPayload<ExtractFindManyOnceoffLogArgsSelect<T>>>>
  create<T extends OnceoffLogCreateArgs>(
    args: Subset<T, OnceoffLogCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogCreateArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  update<T extends OnceoffLogUpdateArgs>(
    args: Subset<T, OnceoffLogUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogUpdateArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  updateMany<T extends OnceoffLogUpdateManyArgs>(
    args: Subset<T, OnceoffLogUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogUpdateManyArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  upsert<T extends OnceoffLogUpsertArgs>(
    args: Subset<T, OnceoffLogUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogUpsertArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  delete<T extends OnceoffLogDeleteArgs>(
    args: Subset<T, OnceoffLogDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogDeleteArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
  deleteMany<T extends OnceoffLogDeleteManyArgs>(
    args: Subset<T, OnceoffLogDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogDeleteManyArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>
}
function OnceoffLogDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): OnceoffLogDelegate {
  const OnceoffLog = <T extends FindManyOnceoffLogArgs>(args: Subset<T, FindManyOnceoffLogArgs>) => new OnceoffLogClient<PromiseLike<Array<OnceoffLogGetPayload<ExtractFindManyOnceoffLogArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'onceoffLogs', 'onceoffLogs', args, [])
  OnceoffLog.findOne = <T extends FindOneOnceoffLogArgs>(args: Subset<T, FindOneOnceoffLogArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'query',
    'onceoffLog',
    'onceoffLogs.findOne',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'query',
    'onceoffLog',
    'onceoffLogs.findOne',
    args,
    []
  )
  OnceoffLog.findMany = <T extends FindManyOnceoffLogArgs>(args: Subset<T, FindManyOnceoffLogArgs>) => new OnceoffLogClient<PromiseLike<Array<OnceoffLogGetPayload<ExtractFindManyOnceoffLogArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'onceoffLogs',
    'onceoffLogs.findMany',
    args,
    []
  )
  OnceoffLog.create = <T extends OnceoffLogCreateArgs>(args: Subset<T, OnceoffLogCreateArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'createOnceoffLog',
    'onceoffLogs.create',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'createOnceoffLog',
    'onceoffLogs.create',
    args,
    []
  )
  OnceoffLog.update = <T extends OnceoffLogUpdateArgs>(args: Subset<T, OnceoffLogUpdateArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateOnceoffLog',
    'onceoffLogs.update',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateOnceoffLog',
    'onceoffLogs.update',
    args,
    []
  )
  OnceoffLog.updateMany = <T extends OnceoffLogUpdateManyArgs>(args: Subset<T, OnceoffLogUpdateManyArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOnceoffLogs',
    'onceoffLogs.updateMany',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOnceoffLogs',
    'onceoffLogs.updateMany',
    args,
    []
  )
  OnceoffLog.upsert = <T extends OnceoffLogUpsertArgs>(args: Subset<T, OnceoffLogUpsertArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOnceoffLog',
    'onceoffLogs.upsert',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOnceoffLog',
    'onceoffLogs.upsert',
    args,
    []
  )
  OnceoffLog.delete = <T extends OnceoffLogDeleteArgs>(args: Subset<T, OnceoffLogDeleteArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOnceoffLog',
    'onceoffLogs.delete',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOnceoffLog',
    'onceoffLogs.delete',
    args,
    []
  )
  OnceoffLog.deleteMany = <T extends OnceoffLogDeleteManyArgs>(args: Subset<T, OnceoffLogDeleteManyArgs>) => args.select ? new OnceoffLogClient<'select' extends keyof T ? PromiseLike<OnceoffLogGetPayload<ExtractOnceoffLogArgsSelect<T>>> : OnceoffLogClient<OnceoffLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOnceoffLogs',
    'onceoffLogs.deleteMany',
    args,
    []
  ) : new OnceoffLogClient<OnceoffLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOnceoffLogs',
    'onceoffLogs.deleteMany',
    args,
    []
  )
  return OnceoffLog as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class OnceoffLogClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: OnceoffLogArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'OnceoffLog').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'OnceoffLog').catch(onrejected)
  }
}


// InputTypes

export type FindOneOnceoffLogArgs = {
  select?: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
}

export type FindOneOnceoffLogArgsWithSelect = {
  select: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
}

type ExtractFindOneOnceoffLogArgsSelect<S extends undefined | boolean | FindOneOnceoffLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneOnceoffLogArgsWithSelect
  ? S['select']
  : true


export type FindManyOnceoffLogArgs = {
  select?: OnceoffLogSelect
  where?: OnceoffLogWhereInput
  orderBy?: OnceoffLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyOnceoffLogArgsWithSelect = {
  select: OnceoffLogSelect
  where?: OnceoffLogWhereInput
  orderBy?: OnceoffLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyOnceoffLogArgsSelect<S extends undefined | boolean | FindManyOnceoffLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyOnceoffLogArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogCreateArgs = {
  select?: OnceoffLogSelect
  data: OnceoffLogCreateInput
}

export type OnceoffLogCreateArgsWithSelect = {
  select: OnceoffLogSelect
  data: OnceoffLogCreateInput
}

type ExtractOnceoffLogCreateArgsSelect<S extends undefined | boolean | OnceoffLogCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogCreateArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogUpdateArgs = {
  select?: OnceoffLogSelect
  data: OnceoffLogUpdateInput
  where: OnceoffLogWhereUniqueInput
}

export type OnceoffLogUpdateArgsWithSelect = {
  select: OnceoffLogSelect
  data: OnceoffLogUpdateInput
  where: OnceoffLogWhereUniqueInput
}

type ExtractOnceoffLogUpdateArgsSelect<S extends undefined | boolean | OnceoffLogUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogUpdateArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogUpdateManyArgs = {
  select?: OnceoffLogSelect
  data: OnceoffLogUpdateManyMutationInput
  where?: OnceoffLogWhereInput
}

export type OnceoffLogUpdateManyArgsWithSelect = {
  select: OnceoffLogSelect
  data: OnceoffLogUpdateManyMutationInput
  where?: OnceoffLogWhereInput
}

type ExtractOnceoffLogUpdateManyArgsSelect<S extends undefined | boolean | OnceoffLogUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogUpdateManyArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogUpsertArgs = {
  select?: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
  create: OnceoffLogCreateInput
  update: OnceoffLogUpdateInput
}

export type OnceoffLogUpsertArgsWithSelect = {
  select: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
  create: OnceoffLogCreateInput
  update: OnceoffLogUpdateInput
}

type ExtractOnceoffLogUpsertArgsSelect<S extends undefined | boolean | OnceoffLogUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogUpsertArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogDeleteArgs = {
  select?: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
}

export type OnceoffLogDeleteArgsWithSelect = {
  select: OnceoffLogSelect
  where: OnceoffLogWhereUniqueInput
}

type ExtractOnceoffLogDeleteArgsSelect<S extends undefined | boolean | OnceoffLogDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogDeleteArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogDeleteManyArgs = {
  select?: OnceoffLogSelect
  where?: OnceoffLogWhereInput
}

export type OnceoffLogDeleteManyArgsWithSelect = {
  select: OnceoffLogSelect
  where?: OnceoffLogWhereInput
}

type ExtractOnceoffLogDeleteManyArgsSelect<S extends undefined | boolean | OnceoffLogDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogDeleteManyArgsWithSelect
  ? S['select']
  : true


export type OnceoffLogArgs = {
  select?: OnceoffLogSelect
}

export type OnceoffLogArgsWithSelect = {
  select: OnceoffLogSelect
}

type ExtractOnceoffLogArgsSelect<S extends undefined | boolean | OnceoffLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OnceoffLogArgsWithSelect
  ? S['select']
  : true



/**
 * Model OptimizedImage
 */

export type OptimizedImage = {
  id: number
  extension: string
  filesize: number | null
  height: number
  sha1: string
  uploadId: number
  url: string
  width: number
}

export type OptimizedImageScalars = 'id' | 'extension' | 'filesize' | 'height' | 'sha1' | 'uploadId' | 'url' | 'width'


export type OptimizedImageSelect = {
  id?: boolean
  extension?: boolean
  filesize?: boolean
  height?: boolean
  sha1?: boolean
  uploadId?: boolean
  url?: boolean
  width?: boolean
}

type OptimizedImageDefault = {
  id: true
  extension: true
  filesize: true
  height: true
  sha1: true
  uploadId: true
  url: true
  width: true
}


type OptimizedImageGetPayload<S extends boolean | OptimizedImageSelect> = S extends true
  ? OptimizedImage
  : S extends OptimizedImageSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<OptimizedImageDefault, S>>]: P extends OptimizedImageScalars
        ? OptimizedImage[P]
        : never
    }
   : never

export interface OptimizedImageDelegate {
  <T extends FindManyOptimizedImageArgs>(args?: Subset<T, FindManyOptimizedImageArgs>): PromiseLike<Array<OptimizedImageGetPayload<ExtractFindManyOptimizedImageArgsSelect<T>>>>
  findOne<T extends FindOneOptimizedImageArgs>(
    args: Subset<T, FindOneOptimizedImageArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractFindOneOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  findMany<T extends FindManyOptimizedImageArgs>(
    args?: Subset<T, FindManyOptimizedImageArgs>
  ): PromiseLike<Array<OptimizedImageGetPayload<ExtractFindManyOptimizedImageArgsSelect<T>>>>
  create<T extends OptimizedImageCreateArgs>(
    args: Subset<T, OptimizedImageCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageCreateArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  update<T extends OptimizedImageUpdateArgs>(
    args: Subset<T, OptimizedImageUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageUpdateArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  updateMany<T extends OptimizedImageUpdateManyArgs>(
    args: Subset<T, OptimizedImageUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageUpdateManyArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  upsert<T extends OptimizedImageUpsertArgs>(
    args: Subset<T, OptimizedImageUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageUpsertArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  delete<T extends OptimizedImageDeleteArgs>(
    args: Subset<T, OptimizedImageDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageDeleteArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
  deleteMany<T extends OptimizedImageDeleteManyArgs>(
    args: Subset<T, OptimizedImageDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageDeleteManyArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>
}
function OptimizedImageDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): OptimizedImageDelegate {
  const OptimizedImage = <T extends FindManyOptimizedImageArgs>(args: Subset<T, FindManyOptimizedImageArgs>) => new OptimizedImageClient<PromiseLike<Array<OptimizedImageGetPayload<ExtractFindManyOptimizedImageArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'optimizedImages', 'optimizedImages', args, [])
  OptimizedImage.findOne = <T extends FindOneOptimizedImageArgs>(args: Subset<T, FindOneOptimizedImageArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'query',
    'optimizedImage',
    'optimizedImages.findOne',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'query',
    'optimizedImage',
    'optimizedImages.findOne',
    args,
    []
  )
  OptimizedImage.findMany = <T extends FindManyOptimizedImageArgs>(args: Subset<T, FindManyOptimizedImageArgs>) => new OptimizedImageClient<PromiseLike<Array<OptimizedImageGetPayload<ExtractFindManyOptimizedImageArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'optimizedImages',
    'optimizedImages.findMany',
    args,
    []
  )
  OptimizedImage.create = <T extends OptimizedImageCreateArgs>(args: Subset<T, OptimizedImageCreateArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'createOptimizedImage',
    'optimizedImages.create',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'createOptimizedImage',
    'optimizedImages.create',
    args,
    []
  )
  OptimizedImage.update = <T extends OptimizedImageUpdateArgs>(args: Subset<T, OptimizedImageUpdateArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateOptimizedImage',
    'optimizedImages.update',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'updateOptimizedImage',
    'optimizedImages.update',
    args,
    []
  )
  OptimizedImage.updateMany = <T extends OptimizedImageUpdateManyArgs>(args: Subset<T, OptimizedImageUpdateManyArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOptimizedImages',
    'optimizedImages.updateMany',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyOptimizedImages',
    'optimizedImages.updateMany',
    args,
    []
  )
  OptimizedImage.upsert = <T extends OptimizedImageUpsertArgs>(args: Subset<T, OptimizedImageUpsertArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOptimizedImage',
    'optimizedImages.upsert',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'upsertOptimizedImage',
    'optimizedImages.upsert',
    args,
    []
  )
  OptimizedImage.delete = <T extends OptimizedImageDeleteArgs>(args: Subset<T, OptimizedImageDeleteArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOptimizedImage',
    'optimizedImages.delete',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteOptimizedImage',
    'optimizedImages.delete',
    args,
    []
  )
  OptimizedImage.deleteMany = <T extends OptimizedImageDeleteManyArgs>(args: Subset<T, OptimizedImageDeleteManyArgs>) => args.select ? new OptimizedImageClient<'select' extends keyof T ? PromiseLike<OptimizedImageGetPayload<ExtractOptimizedImageArgsSelect<T>>> : OptimizedImageClient<OptimizedImage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOptimizedImages',
    'optimizedImages.deleteMany',
    args,
    []
  ) : new OptimizedImageClient<OptimizedImage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyOptimizedImages',
    'optimizedImages.deleteMany',
    args,
    []
  )
  return OptimizedImage as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class OptimizedImageClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: OptimizedImageArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'OptimizedImage').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'OptimizedImage').catch(onrejected)
  }
}


// InputTypes

export type FindOneOptimizedImageArgs = {
  select?: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
}

export type FindOneOptimizedImageArgsWithSelect = {
  select: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
}

type ExtractFindOneOptimizedImageArgsSelect<S extends undefined | boolean | FindOneOptimizedImageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneOptimizedImageArgsWithSelect
  ? S['select']
  : true


export type FindManyOptimizedImageArgs = {
  select?: OptimizedImageSelect
  where?: OptimizedImageWhereInput
  orderBy?: OptimizedImageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyOptimizedImageArgsWithSelect = {
  select: OptimizedImageSelect
  where?: OptimizedImageWhereInput
  orderBy?: OptimizedImageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyOptimizedImageArgsSelect<S extends undefined | boolean | FindManyOptimizedImageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyOptimizedImageArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageCreateArgs = {
  select?: OptimizedImageSelect
  data: OptimizedImageCreateInput
}

export type OptimizedImageCreateArgsWithSelect = {
  select: OptimizedImageSelect
  data: OptimizedImageCreateInput
}

type ExtractOptimizedImageCreateArgsSelect<S extends undefined | boolean | OptimizedImageCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageCreateArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageUpdateArgs = {
  select?: OptimizedImageSelect
  data: OptimizedImageUpdateInput
  where: OptimizedImageWhereUniqueInput
}

export type OptimizedImageUpdateArgsWithSelect = {
  select: OptimizedImageSelect
  data: OptimizedImageUpdateInput
  where: OptimizedImageWhereUniqueInput
}

type ExtractOptimizedImageUpdateArgsSelect<S extends undefined | boolean | OptimizedImageUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageUpdateArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageUpdateManyArgs = {
  select?: OptimizedImageSelect
  data: OptimizedImageUpdateManyMutationInput
  where?: OptimizedImageWhereInput
}

export type OptimizedImageUpdateManyArgsWithSelect = {
  select: OptimizedImageSelect
  data: OptimizedImageUpdateManyMutationInput
  where?: OptimizedImageWhereInput
}

type ExtractOptimizedImageUpdateManyArgsSelect<S extends undefined | boolean | OptimizedImageUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageUpdateManyArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageUpsertArgs = {
  select?: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
  create: OptimizedImageCreateInput
  update: OptimizedImageUpdateInput
}

export type OptimizedImageUpsertArgsWithSelect = {
  select: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
  create: OptimizedImageCreateInput
  update: OptimizedImageUpdateInput
}

type ExtractOptimizedImageUpsertArgsSelect<S extends undefined | boolean | OptimizedImageUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageUpsertArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageDeleteArgs = {
  select?: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
}

export type OptimizedImageDeleteArgsWithSelect = {
  select: OptimizedImageSelect
  where: OptimizedImageWhereUniqueInput
}

type ExtractOptimizedImageDeleteArgsSelect<S extends undefined | boolean | OptimizedImageDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageDeleteArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageDeleteManyArgs = {
  select?: OptimizedImageSelect
  where?: OptimizedImageWhereInput
}

export type OptimizedImageDeleteManyArgsWithSelect = {
  select: OptimizedImageSelect
  where?: OptimizedImageWhereInput
}

type ExtractOptimizedImageDeleteManyArgsSelect<S extends undefined | boolean | OptimizedImageDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageDeleteManyArgsWithSelect
  ? S['select']
  : true


export type OptimizedImageArgs = {
  select?: OptimizedImageSelect
}

export type OptimizedImageArgsWithSelect = {
  select: OptimizedImageSelect
}

type ExtractOptimizedImageArgsSelect<S extends undefined | boolean | OptimizedImageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends OptimizedImageArgsWithSelect
  ? S['select']
  : true



/**
 * Model Permalink
 */

export type Permalink = {
  id: number
  categoryId: number | null
  createdAt: string | null
  externalUrl: string | null
  postId: number | null
  topicId: number | null
  updatedAt: string | null
  url: string
}

export type PermalinkScalars = 'id' | 'categoryId' | 'createdAt' | 'externalUrl' | 'postId' | 'topicId' | 'updatedAt' | 'url'


export type PermalinkSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  externalUrl?: boolean
  postId?: boolean
  topicId?: boolean
  updatedAt?: boolean
  url?: boolean
}

type PermalinkDefault = {
  id: true
  categoryId: true
  createdAt: true
  externalUrl: true
  postId: true
  topicId: true
  updatedAt: true
  url: true
}


type PermalinkGetPayload<S extends boolean | PermalinkSelect> = S extends true
  ? Permalink
  : S extends PermalinkSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PermalinkDefault, S>>]: P extends PermalinkScalars
        ? Permalink[P]
        : never
    }
   : never

export interface PermalinkDelegate {
  <T extends FindManyPermalinkArgs>(args?: Subset<T, FindManyPermalinkArgs>): PromiseLike<Array<PermalinkGetPayload<ExtractFindManyPermalinkArgsSelect<T>>>>
  findOne<T extends FindOnePermalinkArgs>(
    args: Subset<T, FindOnePermalinkArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractFindOnePermalinkArgsSelect<T>>> : PermalinkClient<Permalink>
  findMany<T extends FindManyPermalinkArgs>(
    args?: Subset<T, FindManyPermalinkArgs>
  ): PromiseLike<Array<PermalinkGetPayload<ExtractFindManyPermalinkArgsSelect<T>>>>
  create<T extends PermalinkCreateArgs>(
    args: Subset<T, PermalinkCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkCreateArgsSelect<T>>> : PermalinkClient<Permalink>
  update<T extends PermalinkUpdateArgs>(
    args: Subset<T, PermalinkUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkUpdateArgsSelect<T>>> : PermalinkClient<Permalink>
  updateMany<T extends PermalinkUpdateManyArgs>(
    args: Subset<T, PermalinkUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkUpdateManyArgsSelect<T>>> : PermalinkClient<Permalink>
  upsert<T extends PermalinkUpsertArgs>(
    args: Subset<T, PermalinkUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkUpsertArgsSelect<T>>> : PermalinkClient<Permalink>
  delete<T extends PermalinkDeleteArgs>(
    args: Subset<T, PermalinkDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkDeleteArgsSelect<T>>> : PermalinkClient<Permalink>
  deleteMany<T extends PermalinkDeleteManyArgs>(
    args: Subset<T, PermalinkDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkDeleteManyArgsSelect<T>>> : PermalinkClient<Permalink>
}
function PermalinkDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PermalinkDelegate {
  const Permalink = <T extends FindManyPermalinkArgs>(args: Subset<T, FindManyPermalinkArgs>) => new PermalinkClient<PromiseLike<Array<PermalinkGetPayload<ExtractFindManyPermalinkArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'permalinks', 'permalinks', args, [])
  Permalink.findOne = <T extends FindOnePermalinkArgs>(args: Subset<T, FindOnePermalinkArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'query',
    'permalink',
    'permalinks.findOne',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'query',
    'permalink',
    'permalinks.findOne',
    args,
    []
  )
  Permalink.findMany = <T extends FindManyPermalinkArgs>(args: Subset<T, FindManyPermalinkArgs>) => new PermalinkClient<PromiseLike<Array<PermalinkGetPayload<ExtractFindManyPermalinkArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'permalinks',
    'permalinks.findMany',
    args,
    []
  )
  Permalink.create = <T extends PermalinkCreateArgs>(args: Subset<T, PermalinkCreateArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'createPermalink',
    'permalinks.create',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'createPermalink',
    'permalinks.create',
    args,
    []
  )
  Permalink.update = <T extends PermalinkUpdateArgs>(args: Subset<T, PermalinkUpdateArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePermalink',
    'permalinks.update',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'updatePermalink',
    'permalinks.update',
    args,
    []
  )
  Permalink.updateMany = <T extends PermalinkUpdateManyArgs>(args: Subset<T, PermalinkUpdateManyArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPermalinks',
    'permalinks.updateMany',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPermalinks',
    'permalinks.updateMany',
    args,
    []
  )
  Permalink.upsert = <T extends PermalinkUpsertArgs>(args: Subset<T, PermalinkUpsertArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPermalink',
    'permalinks.upsert',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPermalink',
    'permalinks.upsert',
    args,
    []
  )
  Permalink.delete = <T extends PermalinkDeleteArgs>(args: Subset<T, PermalinkDeleteArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePermalink',
    'permalinks.delete',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'deletePermalink',
    'permalinks.delete',
    args,
    []
  )
  Permalink.deleteMany = <T extends PermalinkDeleteManyArgs>(args: Subset<T, PermalinkDeleteManyArgs>) => args.select ? new PermalinkClient<'select' extends keyof T ? PromiseLike<PermalinkGetPayload<ExtractPermalinkArgsSelect<T>>> : PermalinkClient<Permalink>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPermalinks',
    'permalinks.deleteMany',
    args,
    []
  ) : new PermalinkClient<Permalink>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPermalinks',
    'permalinks.deleteMany',
    args,
    []
  )
  return Permalink as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PermalinkClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PermalinkArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Permalink').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Permalink').catch(onrejected)
  }
}


// InputTypes

export type FindOnePermalinkArgs = {
  select?: PermalinkSelect
  where: PermalinkWhereUniqueInput
}

export type FindOnePermalinkArgsWithSelect = {
  select: PermalinkSelect
  where: PermalinkWhereUniqueInput
}

type ExtractFindOnePermalinkArgsSelect<S extends undefined | boolean | FindOnePermalinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePermalinkArgsWithSelect
  ? S['select']
  : true


export type FindManyPermalinkArgs = {
  select?: PermalinkSelect
  where?: PermalinkWhereInput
  orderBy?: PermalinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPermalinkArgsWithSelect = {
  select: PermalinkSelect
  where?: PermalinkWhereInput
  orderBy?: PermalinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPermalinkArgsSelect<S extends undefined | boolean | FindManyPermalinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPermalinkArgsWithSelect
  ? S['select']
  : true


export type PermalinkCreateArgs = {
  select?: PermalinkSelect
  data: PermalinkCreateInput
}

export type PermalinkCreateArgsWithSelect = {
  select: PermalinkSelect
  data: PermalinkCreateInput
}

type ExtractPermalinkCreateArgsSelect<S extends undefined | boolean | PermalinkCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkCreateArgsWithSelect
  ? S['select']
  : true


export type PermalinkUpdateArgs = {
  select?: PermalinkSelect
  data: PermalinkUpdateInput
  where: PermalinkWhereUniqueInput
}

export type PermalinkUpdateArgsWithSelect = {
  select: PermalinkSelect
  data: PermalinkUpdateInput
  where: PermalinkWhereUniqueInput
}

type ExtractPermalinkUpdateArgsSelect<S extends undefined | boolean | PermalinkUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkUpdateArgsWithSelect
  ? S['select']
  : true


export type PermalinkUpdateManyArgs = {
  select?: PermalinkSelect
  data: PermalinkUpdateManyMutationInput
  where?: PermalinkWhereInput
}

export type PermalinkUpdateManyArgsWithSelect = {
  select: PermalinkSelect
  data: PermalinkUpdateManyMutationInput
  where?: PermalinkWhereInput
}

type ExtractPermalinkUpdateManyArgsSelect<S extends undefined | boolean | PermalinkUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PermalinkUpsertArgs = {
  select?: PermalinkSelect
  where: PermalinkWhereUniqueInput
  create: PermalinkCreateInput
  update: PermalinkUpdateInput
}

export type PermalinkUpsertArgsWithSelect = {
  select: PermalinkSelect
  where: PermalinkWhereUniqueInput
  create: PermalinkCreateInput
  update: PermalinkUpdateInput
}

type ExtractPermalinkUpsertArgsSelect<S extends undefined | boolean | PermalinkUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkUpsertArgsWithSelect
  ? S['select']
  : true


export type PermalinkDeleteArgs = {
  select?: PermalinkSelect
  where: PermalinkWhereUniqueInput
}

export type PermalinkDeleteArgsWithSelect = {
  select: PermalinkSelect
  where: PermalinkWhereUniqueInput
}

type ExtractPermalinkDeleteArgsSelect<S extends undefined | boolean | PermalinkDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkDeleteArgsWithSelect
  ? S['select']
  : true


export type PermalinkDeleteManyArgs = {
  select?: PermalinkSelect
  where?: PermalinkWhereInput
}

export type PermalinkDeleteManyArgsWithSelect = {
  select: PermalinkSelect
  where?: PermalinkWhereInput
}

type ExtractPermalinkDeleteManyArgsSelect<S extends undefined | boolean | PermalinkDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PermalinkArgs = {
  select?: PermalinkSelect
}

export type PermalinkArgsWithSelect = {
  select: PermalinkSelect
}

type ExtractPermalinkArgsSelect<S extends undefined | boolean | PermalinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PermalinkArgsWithSelect
  ? S['select']
  : true



/**
 * Model PluginStoreRow
 */

export type PluginStoreRow = {
  id: number
  key: string
  pluginName: string
  typeName: string
  value: string | null
}

export type PluginStoreRowScalars = 'id' | 'key' | 'pluginName' | 'typeName' | 'value'


export type PluginStoreRowSelect = {
  id?: boolean
  key?: boolean
  pluginName?: boolean
  typeName?: boolean
  value?: boolean
}

type PluginStoreRowDefault = {
  id: true
  key: true
  pluginName: true
  typeName: true
  value: true
}


type PluginStoreRowGetPayload<S extends boolean | PluginStoreRowSelect> = S extends true
  ? PluginStoreRow
  : S extends PluginStoreRowSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PluginStoreRowDefault, S>>]: P extends PluginStoreRowScalars
        ? PluginStoreRow[P]
        : never
    }
   : never

export interface PluginStoreRowDelegate {
  <T extends FindManyPluginStoreRowArgs>(args?: Subset<T, FindManyPluginStoreRowArgs>): PromiseLike<Array<PluginStoreRowGetPayload<ExtractFindManyPluginStoreRowArgsSelect<T>>>>
  findOne<T extends FindOnePluginStoreRowArgs>(
    args: Subset<T, FindOnePluginStoreRowArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractFindOnePluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  findMany<T extends FindManyPluginStoreRowArgs>(
    args?: Subset<T, FindManyPluginStoreRowArgs>
  ): PromiseLike<Array<PluginStoreRowGetPayload<ExtractFindManyPluginStoreRowArgsSelect<T>>>>
  create<T extends PluginStoreRowCreateArgs>(
    args: Subset<T, PluginStoreRowCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowCreateArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  update<T extends PluginStoreRowUpdateArgs>(
    args: Subset<T, PluginStoreRowUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowUpdateArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  updateMany<T extends PluginStoreRowUpdateManyArgs>(
    args: Subset<T, PluginStoreRowUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowUpdateManyArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  upsert<T extends PluginStoreRowUpsertArgs>(
    args: Subset<T, PluginStoreRowUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowUpsertArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  delete<T extends PluginStoreRowDeleteArgs>(
    args: Subset<T, PluginStoreRowDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowDeleteArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
  deleteMany<T extends PluginStoreRowDeleteManyArgs>(
    args: Subset<T, PluginStoreRowDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowDeleteManyArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>
}
function PluginStoreRowDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PluginStoreRowDelegate {
  const PluginStoreRow = <T extends FindManyPluginStoreRowArgs>(args: Subset<T, FindManyPluginStoreRowArgs>) => new PluginStoreRowClient<PromiseLike<Array<PluginStoreRowGetPayload<ExtractFindManyPluginStoreRowArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'pluginStoreRows', 'pluginStoreRows', args, [])
  PluginStoreRow.findOne = <T extends FindOnePluginStoreRowArgs>(args: Subset<T, FindOnePluginStoreRowArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'query',
    'pluginStoreRow',
    'pluginStoreRows.findOne',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'query',
    'pluginStoreRow',
    'pluginStoreRows.findOne',
    args,
    []
  )
  PluginStoreRow.findMany = <T extends FindManyPluginStoreRowArgs>(args: Subset<T, FindManyPluginStoreRowArgs>) => new PluginStoreRowClient<PromiseLike<Array<PluginStoreRowGetPayload<ExtractFindManyPluginStoreRowArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'pluginStoreRows',
    'pluginStoreRows.findMany',
    args,
    []
  )
  PluginStoreRow.create = <T extends PluginStoreRowCreateArgs>(args: Subset<T, PluginStoreRowCreateArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'createPluginStoreRow',
    'pluginStoreRows.create',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'createPluginStoreRow',
    'pluginStoreRows.create',
    args,
    []
  )
  PluginStoreRow.update = <T extends PluginStoreRowUpdateArgs>(args: Subset<T, PluginStoreRowUpdateArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePluginStoreRow',
    'pluginStoreRows.update',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'updatePluginStoreRow',
    'pluginStoreRows.update',
    args,
    []
  )
  PluginStoreRow.updateMany = <T extends PluginStoreRowUpdateManyArgs>(args: Subset<T, PluginStoreRowUpdateManyArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPluginStoreRows',
    'pluginStoreRows.updateMany',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPluginStoreRows',
    'pluginStoreRows.updateMany',
    args,
    []
  )
  PluginStoreRow.upsert = <T extends PluginStoreRowUpsertArgs>(args: Subset<T, PluginStoreRowUpsertArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPluginStoreRow',
    'pluginStoreRows.upsert',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPluginStoreRow',
    'pluginStoreRows.upsert',
    args,
    []
  )
  PluginStoreRow.delete = <T extends PluginStoreRowDeleteArgs>(args: Subset<T, PluginStoreRowDeleteArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePluginStoreRow',
    'pluginStoreRows.delete',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'deletePluginStoreRow',
    'pluginStoreRows.delete',
    args,
    []
  )
  PluginStoreRow.deleteMany = <T extends PluginStoreRowDeleteManyArgs>(args: Subset<T, PluginStoreRowDeleteManyArgs>) => args.select ? new PluginStoreRowClient<'select' extends keyof T ? PromiseLike<PluginStoreRowGetPayload<ExtractPluginStoreRowArgsSelect<T>>> : PluginStoreRowClient<PluginStoreRow>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPluginStoreRows',
    'pluginStoreRows.deleteMany',
    args,
    []
  ) : new PluginStoreRowClient<PluginStoreRow>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPluginStoreRows',
    'pluginStoreRows.deleteMany',
    args,
    []
  )
  return PluginStoreRow as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PluginStoreRowClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PluginStoreRowArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PluginStoreRow').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PluginStoreRow').catch(onrejected)
  }
}


// InputTypes

export type FindOnePluginStoreRowArgs = {
  select?: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
}

export type FindOnePluginStoreRowArgsWithSelect = {
  select: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
}

type ExtractFindOnePluginStoreRowArgsSelect<S extends undefined | boolean | FindOnePluginStoreRowArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePluginStoreRowArgsWithSelect
  ? S['select']
  : true


export type FindManyPluginStoreRowArgs = {
  select?: PluginStoreRowSelect
  where?: PluginStoreRowWhereInput
  orderBy?: PluginStoreRowOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPluginStoreRowArgsWithSelect = {
  select: PluginStoreRowSelect
  where?: PluginStoreRowWhereInput
  orderBy?: PluginStoreRowOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPluginStoreRowArgsSelect<S extends undefined | boolean | FindManyPluginStoreRowArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPluginStoreRowArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowCreateArgs = {
  select?: PluginStoreRowSelect
  data: PluginStoreRowCreateInput
}

export type PluginStoreRowCreateArgsWithSelect = {
  select: PluginStoreRowSelect
  data: PluginStoreRowCreateInput
}

type ExtractPluginStoreRowCreateArgsSelect<S extends undefined | boolean | PluginStoreRowCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowCreateArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowUpdateArgs = {
  select?: PluginStoreRowSelect
  data: PluginStoreRowUpdateInput
  where: PluginStoreRowWhereUniqueInput
}

export type PluginStoreRowUpdateArgsWithSelect = {
  select: PluginStoreRowSelect
  data: PluginStoreRowUpdateInput
  where: PluginStoreRowWhereUniqueInput
}

type ExtractPluginStoreRowUpdateArgsSelect<S extends undefined | boolean | PluginStoreRowUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowUpdateArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowUpdateManyArgs = {
  select?: PluginStoreRowSelect
  data: PluginStoreRowUpdateManyMutationInput
  where?: PluginStoreRowWhereInput
}

export type PluginStoreRowUpdateManyArgsWithSelect = {
  select: PluginStoreRowSelect
  data: PluginStoreRowUpdateManyMutationInput
  where?: PluginStoreRowWhereInput
}

type ExtractPluginStoreRowUpdateManyArgsSelect<S extends undefined | boolean | PluginStoreRowUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowUpsertArgs = {
  select?: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
  create: PluginStoreRowCreateInput
  update: PluginStoreRowUpdateInput
}

export type PluginStoreRowUpsertArgsWithSelect = {
  select: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
  create: PluginStoreRowCreateInput
  update: PluginStoreRowUpdateInput
}

type ExtractPluginStoreRowUpsertArgsSelect<S extends undefined | boolean | PluginStoreRowUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowUpsertArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowDeleteArgs = {
  select?: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
}

export type PluginStoreRowDeleteArgsWithSelect = {
  select: PluginStoreRowSelect
  where: PluginStoreRowWhereUniqueInput
}

type ExtractPluginStoreRowDeleteArgsSelect<S extends undefined | boolean | PluginStoreRowDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowDeleteArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowDeleteManyArgs = {
  select?: PluginStoreRowSelect
  where?: PluginStoreRowWhereInput
}

export type PluginStoreRowDeleteManyArgsWithSelect = {
  select: PluginStoreRowSelect
  where?: PluginStoreRowWhereInput
}

type ExtractPluginStoreRowDeleteManyArgsSelect<S extends undefined | boolean | PluginStoreRowDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PluginStoreRowArgs = {
  select?: PluginStoreRowSelect
}

export type PluginStoreRowArgsWithSelect = {
  select: PluginStoreRowSelect
}

type ExtractPluginStoreRowArgsSelect<S extends undefined | boolean | PluginStoreRowArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PluginStoreRowArgsWithSelect
  ? S['select']
  : true



/**
 * Model Post
 */

export type Post = {
  id: number
  actionCode: string | null
  avgTime: number | null
  bakedAt: string | null
  bakedVersion: number | null
  bookmarkCount: number
  cooked: string
  cookMethod: number
  createdAt: string
  deletedAt: string | null
  deletedById: number | null
  editReason: string | null
  hidden: boolean
  hiddenAt: string | null
  hiddenReasonId: number | null
  illegalCount: number
  imageUrl: string | null
  inappropriateCount: number
  incomingLinkCount: number
  lastEditorId: number | null
  lastVersionAt: string
  likeCount: number
  likeScore: number
  lockedById: number | null
  notifyModeratorsCount: number
  notifyUserCount: number
  offTopicCount: number
  percentRank: number | null
  postNumber: number
  postType: number
  publicVersion: number
  quoteCount: number
  raw: string
  rawEmail: string | null
  reads: number
  replyCount: number
  replyQuoted: boolean
  replyToPostNumber: number | null
  replyToUserId: number | null
  score: number | null
  selfEdits: number
  sortOrder: number | null
  spamCount: number
  topicId: number
  updatedAt: string
  userDeleted: boolean
  userId: number | null
  version: number
  viaEmail: boolean
  wiki: boolean
  wordCount: number | null
}

export type PostScalars = 'id' | 'actionCode' | 'avgTime' | 'bakedAt' | 'bakedVersion' | 'bookmarkCount' | 'cooked' | 'cookMethod' | 'createdAt' | 'deletedAt' | 'deletedById' | 'editReason' | 'hidden' | 'hiddenAt' | 'hiddenReasonId' | 'illegalCount' | 'imageUrl' | 'inappropriateCount' | 'incomingLinkCount' | 'lastEditorId' | 'lastVersionAt' | 'likeCount' | 'likeScore' | 'lockedById' | 'notifyModeratorsCount' | 'notifyUserCount' | 'offTopicCount' | 'percentRank' | 'postNumber' | 'postType' | 'publicVersion' | 'quoteCount' | 'raw' | 'rawEmail' | 'reads' | 'replyCount' | 'replyQuoted' | 'replyToPostNumber' | 'replyToUserId' | 'score' | 'selfEdits' | 'sortOrder' | 'spamCount' | 'topicId' | 'updatedAt' | 'userDeleted' | 'userId' | 'version' | 'viaEmail' | 'wiki' | 'wordCount'


export type PostSelect = {
  id?: boolean
  actionCode?: boolean
  avgTime?: boolean
  bakedAt?: boolean
  bakedVersion?: boolean
  bookmarkCount?: boolean
  cooked?: boolean
  cookMethod?: boolean
  createdAt?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  editReason?: boolean
  hidden?: boolean
  hiddenAt?: boolean
  hiddenReasonId?: boolean
  illegalCount?: boolean
  imageUrl?: boolean
  inappropriateCount?: boolean
  incomingLinkCount?: boolean
  lastEditorId?: boolean
  lastVersionAt?: boolean
  likeCount?: boolean
  likeScore?: boolean
  lockedById?: boolean
  notifyModeratorsCount?: boolean
  notifyUserCount?: boolean
  offTopicCount?: boolean
  percentRank?: boolean
  postNumber?: boolean
  postType?: boolean
  publicVersion?: boolean
  quoteCount?: boolean
  raw?: boolean
  rawEmail?: boolean
  reads?: boolean
  replyCount?: boolean
  replyQuoted?: boolean
  replyToPostNumber?: boolean
  replyToUserId?: boolean
  score?: boolean
  selfEdits?: boolean
  sortOrder?: boolean
  spamCount?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userDeleted?: boolean
  userId?: boolean
  version?: boolean
  viaEmail?: boolean
  wiki?: boolean
  wordCount?: boolean
}

type PostDefault = {
  id: true
  actionCode: true
  avgTime: true
  bakedAt: true
  bakedVersion: true
  bookmarkCount: true
  cooked: true
  cookMethod: true
  createdAt: true
  deletedAt: true
  deletedById: true
  editReason: true
  hidden: true
  hiddenAt: true
  hiddenReasonId: true
  illegalCount: true
  imageUrl: true
  inappropriateCount: true
  incomingLinkCount: true
  lastEditorId: true
  lastVersionAt: true
  likeCount: true
  likeScore: true
  lockedById: true
  notifyModeratorsCount: true
  notifyUserCount: true
  offTopicCount: true
  percentRank: true
  postNumber: true
  postType: true
  publicVersion: true
  quoteCount: true
  raw: true
  rawEmail: true
  reads: true
  replyCount: true
  replyQuoted: true
  replyToPostNumber: true
  replyToUserId: true
  score: true
  selfEdits: true
  sortOrder: true
  spamCount: true
  topicId: true
  updatedAt: true
  userDeleted: true
  userId: true
  version: true
  viaEmail: true
  wiki: true
  wordCount: true
}


type PostGetPayload<S extends boolean | PostSelect> = S extends true
  ? Post
  : S extends PostSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostDefault, S>>]: P extends PostScalars
        ? Post[P]
        : never
    }
   : never

export interface PostDelegate {
  <T extends FindManyPostArgs>(args?: Subset<T, FindManyPostArgs>): PromiseLike<Array<PostGetPayload<ExtractFindManyPostArgsSelect<T>>>>
  findOne<T extends FindOnePostArgs>(
    args: Subset<T, FindOnePostArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractFindOnePostArgsSelect<T>>> : PostClient<Post>
  findMany<T extends FindManyPostArgs>(
    args?: Subset<T, FindManyPostArgs>
  ): PromiseLike<Array<PostGetPayload<ExtractFindManyPostArgsSelect<T>>>>
  create<T extends PostCreateArgs>(
    args: Subset<T, PostCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostCreateArgsSelect<T>>> : PostClient<Post>
  update<T extends PostUpdateArgs>(
    args: Subset<T, PostUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostUpdateArgsSelect<T>>> : PostClient<Post>
  updateMany<T extends PostUpdateManyArgs>(
    args: Subset<T, PostUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostUpdateManyArgsSelect<T>>> : PostClient<Post>
  upsert<T extends PostUpsertArgs>(
    args: Subset<T, PostUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostUpsertArgsSelect<T>>> : PostClient<Post>
  delete<T extends PostDeleteArgs>(
    args: Subset<T, PostDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostDeleteArgsSelect<T>>> : PostClient<Post>
  deleteMany<T extends PostDeleteManyArgs>(
    args: Subset<T, PostDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostDeleteManyArgsSelect<T>>> : PostClient<Post>
}
function PostDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostDelegate {
  const Post = <T extends FindManyPostArgs>(args: Subset<T, FindManyPostArgs>) => new PostClient<PromiseLike<Array<PostGetPayload<ExtractFindManyPostArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'posts', 'posts', args, [])
  Post.findOne = <T extends FindOnePostArgs>(args: Subset<T, FindOnePostArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'query',
    'post',
    'posts.findOne',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'query',
    'post',
    'posts.findOne',
    args,
    []
  )
  Post.findMany = <T extends FindManyPostArgs>(args: Subset<T, FindManyPostArgs>) => new PostClient<PromiseLike<Array<PostGetPayload<ExtractFindManyPostArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'posts',
    'posts.findMany',
    args,
    []
  )
  Post.create = <T extends PostCreateArgs>(args: Subset<T, PostCreateArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'createPost',
    'posts.create',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'createPost',
    'posts.create',
    args,
    []
  )
  Post.update = <T extends PostUpdateArgs>(args: Subset<T, PostUpdateArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePost',
    'posts.update',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'updatePost',
    'posts.update',
    args,
    []
  )
  Post.updateMany = <T extends PostUpdateManyArgs>(args: Subset<T, PostUpdateManyArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPosts',
    'posts.updateMany',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPosts',
    'posts.updateMany',
    args,
    []
  )
  Post.upsert = <T extends PostUpsertArgs>(args: Subset<T, PostUpsertArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPost',
    'posts.upsert',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPost',
    'posts.upsert',
    args,
    []
  )
  Post.delete = <T extends PostDeleteArgs>(args: Subset<T, PostDeleteArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePost',
    'posts.delete',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'deletePost',
    'posts.delete',
    args,
    []
  )
  Post.deleteMany = <T extends PostDeleteManyArgs>(args: Subset<T, PostDeleteManyArgs>) => args.select ? new PostClient<'select' extends keyof T ? PromiseLike<PostGetPayload<ExtractPostArgsSelect<T>>> : PostClient<Post>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPosts',
    'posts.deleteMany',
    args,
    []
  ) : new PostClient<Post>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPosts',
    'posts.deleteMany',
    args,
    []
  )
  return Post as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Post').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Post').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostArgs = {
  select?: PostSelect
  where: PostWhereUniqueInput
}

export type FindOnePostArgsWithSelect = {
  select: PostSelect
  where: PostWhereUniqueInput
}

type ExtractFindOnePostArgsSelect<S extends undefined | boolean | FindOnePostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostArgsWithSelect
  ? S['select']
  : true


export type FindManyPostArgs = {
  select?: PostSelect
  where?: PostWhereInput
  orderBy?: PostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostArgsWithSelect = {
  select: PostSelect
  where?: PostWhereInput
  orderBy?: PostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostArgsSelect<S extends undefined | boolean | FindManyPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostArgsWithSelect
  ? S['select']
  : true


export type PostCreateArgs = {
  select?: PostSelect
  data: PostCreateInput
}

export type PostCreateArgsWithSelect = {
  select: PostSelect
  data: PostCreateInput
}

type ExtractPostCreateArgsSelect<S extends undefined | boolean | PostCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCreateArgsWithSelect
  ? S['select']
  : true


export type PostUpdateArgs = {
  select?: PostSelect
  data: PostUpdateInput
  where: PostWhereUniqueInput
}

export type PostUpdateArgsWithSelect = {
  select: PostSelect
  data: PostUpdateInput
  where: PostWhereUniqueInput
}

type ExtractPostUpdateArgsSelect<S extends undefined | boolean | PostUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUpdateArgsWithSelect
  ? S['select']
  : true


export type PostUpdateManyArgs = {
  select?: PostSelect
  data: PostUpdateManyMutationInput
  where?: PostWhereInput
}

export type PostUpdateManyArgsWithSelect = {
  select: PostSelect
  data: PostUpdateManyMutationInput
  where?: PostWhereInput
}

type ExtractPostUpdateManyArgsSelect<S extends undefined | boolean | PostUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostUpsertArgs = {
  select?: PostSelect
  where: PostWhereUniqueInput
  create: PostCreateInput
  update: PostUpdateInput
}

export type PostUpsertArgsWithSelect = {
  select: PostSelect
  where: PostWhereUniqueInput
  create: PostCreateInput
  update: PostUpdateInput
}

type ExtractPostUpsertArgsSelect<S extends undefined | boolean | PostUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUpsertArgsWithSelect
  ? S['select']
  : true


export type PostDeleteArgs = {
  select?: PostSelect
  where: PostWhereUniqueInput
}

export type PostDeleteArgsWithSelect = {
  select: PostSelect
  where: PostWhereUniqueInput
}

type ExtractPostDeleteArgsSelect<S extends undefined | boolean | PostDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDeleteArgsWithSelect
  ? S['select']
  : true


export type PostDeleteManyArgs = {
  select?: PostSelect
  where?: PostWhereInput
}

export type PostDeleteManyArgsWithSelect = {
  select: PostSelect
  where?: PostWhereInput
}

type ExtractPostDeleteManyArgsSelect<S extends undefined | boolean | PostDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostArgs = {
  select?: PostSelect
}

export type PostArgsWithSelect = {
  select: PostSelect
}

type ExtractPostArgsSelect<S extends undefined | boolean | PostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostAction
 */

export type PostAction = {
  id: number
  agreedAt: string | null
  agreedById: number | null
  createdAt: string
  deferredAt: string | null
  deferredById: number | null
  deletedAt: string | null
  deletedById: number | null
  disagreedAt: string | null
  disagreedById: number | null
  postActionTypeId: number
  postId: number
  relatedPostId: number | null
  staffTookAction: boolean
  targetsTopic: boolean
  updatedAt: string
  userId: number
}

export type PostActionScalars = 'id' | 'agreedAt' | 'agreedById' | 'createdAt' | 'deferredAt' | 'deferredById' | 'deletedAt' | 'deletedById' | 'disagreedAt' | 'disagreedById' | 'postActionTypeId' | 'postId' | 'relatedPostId' | 'staffTookAction' | 'targetsTopic' | 'updatedAt' | 'userId'


export type PostActionSelect = {
  id?: boolean
  agreedAt?: boolean
  agreedById?: boolean
  createdAt?: boolean
  deferredAt?: boolean
  deferredById?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  disagreedAt?: boolean
  disagreedById?: boolean
  postActionTypeId?: boolean
  postId?: boolean
  relatedPostId?: boolean
  staffTookAction?: boolean
  targetsTopic?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type PostActionDefault = {
  id: true
  agreedAt: true
  agreedById: true
  createdAt: true
  deferredAt: true
  deferredById: true
  deletedAt: true
  deletedById: true
  disagreedAt: true
  disagreedById: true
  postActionTypeId: true
  postId: true
  relatedPostId: true
  staffTookAction: true
  targetsTopic: true
  updatedAt: true
  userId: true
}


type PostActionGetPayload<S extends boolean | PostActionSelect> = S extends true
  ? PostAction
  : S extends PostActionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostActionDefault, S>>]: P extends PostActionScalars
        ? PostAction[P]
        : never
    }
   : never

export interface PostActionDelegate {
  <T extends FindManyPostActionArgs>(args?: Subset<T, FindManyPostActionArgs>): PromiseLike<Array<PostActionGetPayload<ExtractFindManyPostActionArgsSelect<T>>>>
  findOne<T extends FindOnePostActionArgs>(
    args: Subset<T, FindOnePostActionArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractFindOnePostActionArgsSelect<T>>> : PostActionClient<PostAction>
  findMany<T extends FindManyPostActionArgs>(
    args?: Subset<T, FindManyPostActionArgs>
  ): PromiseLike<Array<PostActionGetPayload<ExtractFindManyPostActionArgsSelect<T>>>>
  create<T extends PostActionCreateArgs>(
    args: Subset<T, PostActionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionCreateArgsSelect<T>>> : PostActionClient<PostAction>
  update<T extends PostActionUpdateArgs>(
    args: Subset<T, PostActionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionUpdateArgsSelect<T>>> : PostActionClient<PostAction>
  updateMany<T extends PostActionUpdateManyArgs>(
    args: Subset<T, PostActionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionUpdateManyArgsSelect<T>>> : PostActionClient<PostAction>
  upsert<T extends PostActionUpsertArgs>(
    args: Subset<T, PostActionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionUpsertArgsSelect<T>>> : PostActionClient<PostAction>
  delete<T extends PostActionDeleteArgs>(
    args: Subset<T, PostActionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionDeleteArgsSelect<T>>> : PostActionClient<PostAction>
  deleteMany<T extends PostActionDeleteManyArgs>(
    args: Subset<T, PostActionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionDeleteManyArgsSelect<T>>> : PostActionClient<PostAction>
}
function PostActionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostActionDelegate {
  const PostAction = <T extends FindManyPostActionArgs>(args: Subset<T, FindManyPostActionArgs>) => new PostActionClient<PromiseLike<Array<PostActionGetPayload<ExtractFindManyPostActionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postActions', 'postActions', args, [])
  PostAction.findOne = <T extends FindOnePostActionArgs>(args: Subset<T, FindOnePostActionArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'query',
    'postAction',
    'postActions.findOne',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'query',
    'postAction',
    'postActions.findOne',
    args,
    []
  )
  PostAction.findMany = <T extends FindManyPostActionArgs>(args: Subset<T, FindManyPostActionArgs>) => new PostActionClient<PromiseLike<Array<PostActionGetPayload<ExtractFindManyPostActionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postActions',
    'postActions.findMany',
    args,
    []
  )
  PostAction.create = <T extends PostActionCreateArgs>(args: Subset<T, PostActionCreateArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostAction',
    'postActions.create',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'createPostAction',
    'postActions.create',
    args,
    []
  )
  PostAction.update = <T extends PostActionUpdateArgs>(args: Subset<T, PostActionUpdateArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostAction',
    'postActions.update',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostAction',
    'postActions.update',
    args,
    []
  )
  PostAction.updateMany = <T extends PostActionUpdateManyArgs>(args: Subset<T, PostActionUpdateManyArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostActions',
    'postActions.updateMany',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostActions',
    'postActions.updateMany',
    args,
    []
  )
  PostAction.upsert = <T extends PostActionUpsertArgs>(args: Subset<T, PostActionUpsertArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostAction',
    'postActions.upsert',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostAction',
    'postActions.upsert',
    args,
    []
  )
  PostAction.delete = <T extends PostActionDeleteArgs>(args: Subset<T, PostActionDeleteArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostAction',
    'postActions.delete',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostAction',
    'postActions.delete',
    args,
    []
  )
  PostAction.deleteMany = <T extends PostActionDeleteManyArgs>(args: Subset<T, PostActionDeleteManyArgs>) => args.select ? new PostActionClient<'select' extends keyof T ? PromiseLike<PostActionGetPayload<ExtractPostActionArgsSelect<T>>> : PostActionClient<PostAction>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostActions',
    'postActions.deleteMany',
    args,
    []
  ) : new PostActionClient<PostAction>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostActions',
    'postActions.deleteMany',
    args,
    []
  )
  return PostAction as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostActionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostActionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostAction').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostAction').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostActionArgs = {
  select?: PostActionSelect
  where: PostActionWhereUniqueInput
}

export type FindOnePostActionArgsWithSelect = {
  select: PostActionSelect
  where: PostActionWhereUniqueInput
}

type ExtractFindOnePostActionArgsSelect<S extends undefined | boolean | FindOnePostActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostActionArgsWithSelect
  ? S['select']
  : true


export type FindManyPostActionArgs = {
  select?: PostActionSelect
  where?: PostActionWhereInput
  orderBy?: PostActionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostActionArgsWithSelect = {
  select: PostActionSelect
  where?: PostActionWhereInput
  orderBy?: PostActionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostActionArgsSelect<S extends undefined | boolean | FindManyPostActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostActionArgsWithSelect
  ? S['select']
  : true


export type PostActionCreateArgs = {
  select?: PostActionSelect
  data: PostActionCreateInput
}

export type PostActionCreateArgsWithSelect = {
  select: PostActionSelect
  data: PostActionCreateInput
}

type ExtractPostActionCreateArgsSelect<S extends undefined | boolean | PostActionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionCreateArgsWithSelect
  ? S['select']
  : true


export type PostActionUpdateArgs = {
  select?: PostActionSelect
  data: PostActionUpdateInput
  where: PostActionWhereUniqueInput
}

export type PostActionUpdateArgsWithSelect = {
  select: PostActionSelect
  data: PostActionUpdateInput
  where: PostActionWhereUniqueInput
}

type ExtractPostActionUpdateArgsSelect<S extends undefined | boolean | PostActionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionUpdateArgsWithSelect
  ? S['select']
  : true


export type PostActionUpdateManyArgs = {
  select?: PostActionSelect
  data: PostActionUpdateManyMutationInput
  where?: PostActionWhereInput
}

export type PostActionUpdateManyArgsWithSelect = {
  select: PostActionSelect
  data: PostActionUpdateManyMutationInput
  where?: PostActionWhereInput
}

type ExtractPostActionUpdateManyArgsSelect<S extends undefined | boolean | PostActionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostActionUpsertArgs = {
  select?: PostActionSelect
  where: PostActionWhereUniqueInput
  create: PostActionCreateInput
  update: PostActionUpdateInput
}

export type PostActionUpsertArgsWithSelect = {
  select: PostActionSelect
  where: PostActionWhereUniqueInput
  create: PostActionCreateInput
  update: PostActionUpdateInput
}

type ExtractPostActionUpsertArgsSelect<S extends undefined | boolean | PostActionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionUpsertArgsWithSelect
  ? S['select']
  : true


export type PostActionDeleteArgs = {
  select?: PostActionSelect
  where: PostActionWhereUniqueInput
}

export type PostActionDeleteArgsWithSelect = {
  select: PostActionSelect
  where: PostActionWhereUniqueInput
}

type ExtractPostActionDeleteArgsSelect<S extends undefined | boolean | PostActionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionDeleteArgsWithSelect
  ? S['select']
  : true


export type PostActionDeleteManyArgs = {
  select?: PostActionSelect
  where?: PostActionWhereInput
}

export type PostActionDeleteManyArgsWithSelect = {
  select: PostActionSelect
  where?: PostActionWhereInput
}

type ExtractPostActionDeleteManyArgsSelect<S extends undefined | boolean | PostActionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostActionArgs = {
  select?: PostActionSelect
}

export type PostActionArgsWithSelect = {
  select: PostActionSelect
}

type ExtractPostActionArgsSelect<S extends undefined | boolean | PostActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostActionType
 */

export type PostActionType = {
  id: number
  createdAt: string
  icon: string | null
  isFlag: boolean
  nameKey: string
  position: number
  updatedAt: string
}

export type PostActionTypeScalars = 'id' | 'createdAt' | 'icon' | 'isFlag' | 'nameKey' | 'position' | 'updatedAt'


export type PostActionTypeSelect = {
  id?: boolean
  createdAt?: boolean
  icon?: boolean
  isFlag?: boolean
  nameKey?: boolean
  position?: boolean
  updatedAt?: boolean
}

type PostActionTypeDefault = {
  id: true
  createdAt: true
  icon: true
  isFlag: true
  nameKey: true
  position: true
  updatedAt: true
}


type PostActionTypeGetPayload<S extends boolean | PostActionTypeSelect> = S extends true
  ? PostActionType
  : S extends PostActionTypeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostActionTypeDefault, S>>]: P extends PostActionTypeScalars
        ? PostActionType[P]
        : never
    }
   : never

export interface PostActionTypeDelegate {
  <T extends FindManyPostActionTypeArgs>(args?: Subset<T, FindManyPostActionTypeArgs>): PromiseLike<Array<PostActionTypeGetPayload<ExtractFindManyPostActionTypeArgsSelect<T>>>>
  findOne<T extends FindOnePostActionTypeArgs>(
    args: Subset<T, FindOnePostActionTypeArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractFindOnePostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  findMany<T extends FindManyPostActionTypeArgs>(
    args?: Subset<T, FindManyPostActionTypeArgs>
  ): PromiseLike<Array<PostActionTypeGetPayload<ExtractFindManyPostActionTypeArgsSelect<T>>>>
  create<T extends PostActionTypeCreateArgs>(
    args: Subset<T, PostActionTypeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeCreateArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  update<T extends PostActionTypeUpdateArgs>(
    args: Subset<T, PostActionTypeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeUpdateArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  updateMany<T extends PostActionTypeUpdateManyArgs>(
    args: Subset<T, PostActionTypeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeUpdateManyArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  upsert<T extends PostActionTypeUpsertArgs>(
    args: Subset<T, PostActionTypeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeUpsertArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  delete<T extends PostActionTypeDeleteArgs>(
    args: Subset<T, PostActionTypeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeDeleteArgsSelect<T>>> : PostActionTypeClient<PostActionType>
  deleteMany<T extends PostActionTypeDeleteManyArgs>(
    args: Subset<T, PostActionTypeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeDeleteManyArgsSelect<T>>> : PostActionTypeClient<PostActionType>
}
function PostActionTypeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostActionTypeDelegate {
  const PostActionType = <T extends FindManyPostActionTypeArgs>(args: Subset<T, FindManyPostActionTypeArgs>) => new PostActionTypeClient<PromiseLike<Array<PostActionTypeGetPayload<ExtractFindManyPostActionTypeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postActionTypes', 'postActionTypes', args, [])
  PostActionType.findOne = <T extends FindOnePostActionTypeArgs>(args: Subset<T, FindOnePostActionTypeArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'query',
    'postActionType',
    'postActionTypes.findOne',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'query',
    'postActionType',
    'postActionTypes.findOne',
    args,
    []
  )
  PostActionType.findMany = <T extends FindManyPostActionTypeArgs>(args: Subset<T, FindManyPostActionTypeArgs>) => new PostActionTypeClient<PromiseLike<Array<PostActionTypeGetPayload<ExtractFindManyPostActionTypeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postActionTypes',
    'postActionTypes.findMany',
    args,
    []
  )
  PostActionType.create = <T extends PostActionTypeCreateArgs>(args: Subset<T, PostActionTypeCreateArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostActionType',
    'postActionTypes.create',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'createPostActionType',
    'postActionTypes.create',
    args,
    []
  )
  PostActionType.update = <T extends PostActionTypeUpdateArgs>(args: Subset<T, PostActionTypeUpdateArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostActionType',
    'postActionTypes.update',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostActionType',
    'postActionTypes.update',
    args,
    []
  )
  PostActionType.updateMany = <T extends PostActionTypeUpdateManyArgs>(args: Subset<T, PostActionTypeUpdateManyArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostActionTypes',
    'postActionTypes.updateMany',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostActionTypes',
    'postActionTypes.updateMany',
    args,
    []
  )
  PostActionType.upsert = <T extends PostActionTypeUpsertArgs>(args: Subset<T, PostActionTypeUpsertArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostActionType',
    'postActionTypes.upsert',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostActionType',
    'postActionTypes.upsert',
    args,
    []
  )
  PostActionType.delete = <T extends PostActionTypeDeleteArgs>(args: Subset<T, PostActionTypeDeleteArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostActionType',
    'postActionTypes.delete',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostActionType',
    'postActionTypes.delete',
    args,
    []
  )
  PostActionType.deleteMany = <T extends PostActionTypeDeleteManyArgs>(args: Subset<T, PostActionTypeDeleteManyArgs>) => args.select ? new PostActionTypeClient<'select' extends keyof T ? PromiseLike<PostActionTypeGetPayload<ExtractPostActionTypeArgsSelect<T>>> : PostActionTypeClient<PostActionType>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostActionTypes',
    'postActionTypes.deleteMany',
    args,
    []
  ) : new PostActionTypeClient<PostActionType>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostActionTypes',
    'postActionTypes.deleteMany',
    args,
    []
  )
  return PostActionType as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostActionTypeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostActionTypeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostActionType').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostActionType').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostActionTypeArgs = {
  select?: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
}

export type FindOnePostActionTypeArgsWithSelect = {
  select: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
}

type ExtractFindOnePostActionTypeArgsSelect<S extends undefined | boolean | FindOnePostActionTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostActionTypeArgsWithSelect
  ? S['select']
  : true


export type FindManyPostActionTypeArgs = {
  select?: PostActionTypeSelect
  where?: PostActionTypeWhereInput
  orderBy?: PostActionTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostActionTypeArgsWithSelect = {
  select: PostActionTypeSelect
  where?: PostActionTypeWhereInput
  orderBy?: PostActionTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostActionTypeArgsSelect<S extends undefined | boolean | FindManyPostActionTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostActionTypeArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeCreateArgs = {
  select?: PostActionTypeSelect
  data: PostActionTypeCreateInput
}

export type PostActionTypeCreateArgsWithSelect = {
  select: PostActionTypeSelect
  data: PostActionTypeCreateInput
}

type ExtractPostActionTypeCreateArgsSelect<S extends undefined | boolean | PostActionTypeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeCreateArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeUpdateArgs = {
  select?: PostActionTypeSelect
  data: PostActionTypeUpdateInput
  where: PostActionTypeWhereUniqueInput
}

export type PostActionTypeUpdateArgsWithSelect = {
  select: PostActionTypeSelect
  data: PostActionTypeUpdateInput
  where: PostActionTypeWhereUniqueInput
}

type ExtractPostActionTypeUpdateArgsSelect<S extends undefined | boolean | PostActionTypeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeUpdateArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeUpdateManyArgs = {
  select?: PostActionTypeSelect
  data: PostActionTypeUpdateManyMutationInput
  where?: PostActionTypeWhereInput
}

export type PostActionTypeUpdateManyArgsWithSelect = {
  select: PostActionTypeSelect
  data: PostActionTypeUpdateManyMutationInput
  where?: PostActionTypeWhereInput
}

type ExtractPostActionTypeUpdateManyArgsSelect<S extends undefined | boolean | PostActionTypeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeUpsertArgs = {
  select?: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
  create: PostActionTypeCreateInput
  update: PostActionTypeUpdateInput
}

export type PostActionTypeUpsertArgsWithSelect = {
  select: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
  create: PostActionTypeCreateInput
  update: PostActionTypeUpdateInput
}

type ExtractPostActionTypeUpsertArgsSelect<S extends undefined | boolean | PostActionTypeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeUpsertArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeDeleteArgs = {
  select?: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
}

export type PostActionTypeDeleteArgsWithSelect = {
  select: PostActionTypeSelect
  where: PostActionTypeWhereUniqueInput
}

type ExtractPostActionTypeDeleteArgsSelect<S extends undefined | boolean | PostActionTypeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeDeleteArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeDeleteManyArgs = {
  select?: PostActionTypeSelect
  where?: PostActionTypeWhereInput
}

export type PostActionTypeDeleteManyArgsWithSelect = {
  select: PostActionTypeSelect
  where?: PostActionTypeWhereInput
}

type ExtractPostActionTypeDeleteManyArgsSelect<S extends undefined | boolean | PostActionTypeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostActionTypeArgs = {
  select?: PostActionTypeSelect
}

export type PostActionTypeArgsWithSelect = {
  select: PostActionTypeSelect
}

type ExtractPostActionTypeArgsSelect<S extends undefined | boolean | PostActionTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostActionTypeArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostCustomField
 */

export type PostCustomField = {
  id: number
  createdAt: string
  name: string
  postId: number
  updatedAt: string
  value: string | null
}

export type PostCustomFieldScalars = 'id' | 'createdAt' | 'name' | 'postId' | 'updatedAt' | 'value'


export type PostCustomFieldSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  postId?: boolean
  updatedAt?: boolean
  value?: boolean
}

type PostCustomFieldDefault = {
  id: true
  createdAt: true
  name: true
  postId: true
  updatedAt: true
  value: true
}


type PostCustomFieldGetPayload<S extends boolean | PostCustomFieldSelect> = S extends true
  ? PostCustomField
  : S extends PostCustomFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostCustomFieldDefault, S>>]: P extends PostCustomFieldScalars
        ? PostCustomField[P]
        : never
    }
   : never

export interface PostCustomFieldDelegate {
  <T extends FindManyPostCustomFieldArgs>(args?: Subset<T, FindManyPostCustomFieldArgs>): PromiseLike<Array<PostCustomFieldGetPayload<ExtractFindManyPostCustomFieldArgsSelect<T>>>>
  findOne<T extends FindOnePostCustomFieldArgs>(
    args: Subset<T, FindOnePostCustomFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractFindOnePostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  findMany<T extends FindManyPostCustomFieldArgs>(
    args?: Subset<T, FindManyPostCustomFieldArgs>
  ): PromiseLike<Array<PostCustomFieldGetPayload<ExtractFindManyPostCustomFieldArgsSelect<T>>>>
  create<T extends PostCustomFieldCreateArgs>(
    args: Subset<T, PostCustomFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldCreateArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  update<T extends PostCustomFieldUpdateArgs>(
    args: Subset<T, PostCustomFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldUpdateArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  updateMany<T extends PostCustomFieldUpdateManyArgs>(
    args: Subset<T, PostCustomFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldUpdateManyArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  upsert<T extends PostCustomFieldUpsertArgs>(
    args: Subset<T, PostCustomFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldUpsertArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  delete<T extends PostCustomFieldDeleteArgs>(
    args: Subset<T, PostCustomFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldDeleteArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
  deleteMany<T extends PostCustomFieldDeleteManyArgs>(
    args: Subset<T, PostCustomFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldDeleteManyArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>
}
function PostCustomFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostCustomFieldDelegate {
  const PostCustomField = <T extends FindManyPostCustomFieldArgs>(args: Subset<T, FindManyPostCustomFieldArgs>) => new PostCustomFieldClient<PromiseLike<Array<PostCustomFieldGetPayload<ExtractFindManyPostCustomFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postCustomFields', 'postCustomFields', args, [])
  PostCustomField.findOne = <T extends FindOnePostCustomFieldArgs>(args: Subset<T, FindOnePostCustomFieldArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'query',
    'postCustomField',
    'postCustomFields.findOne',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'query',
    'postCustomField',
    'postCustomFields.findOne',
    args,
    []
  )
  PostCustomField.findMany = <T extends FindManyPostCustomFieldArgs>(args: Subset<T, FindManyPostCustomFieldArgs>) => new PostCustomFieldClient<PromiseLike<Array<PostCustomFieldGetPayload<ExtractFindManyPostCustomFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postCustomFields',
    'postCustomFields.findMany',
    args,
    []
  )
  PostCustomField.create = <T extends PostCustomFieldCreateArgs>(args: Subset<T, PostCustomFieldCreateArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostCustomField',
    'postCustomFields.create',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'createPostCustomField',
    'postCustomFields.create',
    args,
    []
  )
  PostCustomField.update = <T extends PostCustomFieldUpdateArgs>(args: Subset<T, PostCustomFieldUpdateArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostCustomField',
    'postCustomFields.update',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostCustomField',
    'postCustomFields.update',
    args,
    []
  )
  PostCustomField.updateMany = <T extends PostCustomFieldUpdateManyArgs>(args: Subset<T, PostCustomFieldUpdateManyArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostCustomFields',
    'postCustomFields.updateMany',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostCustomFields',
    'postCustomFields.updateMany',
    args,
    []
  )
  PostCustomField.upsert = <T extends PostCustomFieldUpsertArgs>(args: Subset<T, PostCustomFieldUpsertArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostCustomField',
    'postCustomFields.upsert',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostCustomField',
    'postCustomFields.upsert',
    args,
    []
  )
  PostCustomField.delete = <T extends PostCustomFieldDeleteArgs>(args: Subset<T, PostCustomFieldDeleteArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostCustomField',
    'postCustomFields.delete',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostCustomField',
    'postCustomFields.delete',
    args,
    []
  )
  PostCustomField.deleteMany = <T extends PostCustomFieldDeleteManyArgs>(args: Subset<T, PostCustomFieldDeleteManyArgs>) => args.select ? new PostCustomFieldClient<'select' extends keyof T ? PromiseLike<PostCustomFieldGetPayload<ExtractPostCustomFieldArgsSelect<T>>> : PostCustomFieldClient<PostCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostCustomFields',
    'postCustomFields.deleteMany',
    args,
    []
  ) : new PostCustomFieldClient<PostCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostCustomFields',
    'postCustomFields.deleteMany',
    args,
    []
  )
  return PostCustomField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostCustomFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostCustomFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostCustomField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostCustomField').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostCustomFieldArgs = {
  select?: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
}

export type FindOnePostCustomFieldArgsWithSelect = {
  select: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
}

type ExtractFindOnePostCustomFieldArgsSelect<S extends undefined | boolean | FindOnePostCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostCustomFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyPostCustomFieldArgs = {
  select?: PostCustomFieldSelect
  where?: PostCustomFieldWhereInput
  orderBy?: PostCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostCustomFieldArgsWithSelect = {
  select: PostCustomFieldSelect
  where?: PostCustomFieldWhereInput
  orderBy?: PostCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostCustomFieldArgsSelect<S extends undefined | boolean | FindManyPostCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostCustomFieldArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldCreateArgs = {
  select?: PostCustomFieldSelect
  data: PostCustomFieldCreateInput
}

export type PostCustomFieldCreateArgsWithSelect = {
  select: PostCustomFieldSelect
  data: PostCustomFieldCreateInput
}

type ExtractPostCustomFieldCreateArgsSelect<S extends undefined | boolean | PostCustomFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldCreateArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldUpdateArgs = {
  select?: PostCustomFieldSelect
  data: PostCustomFieldUpdateInput
  where: PostCustomFieldWhereUniqueInput
}

export type PostCustomFieldUpdateArgsWithSelect = {
  select: PostCustomFieldSelect
  data: PostCustomFieldUpdateInput
  where: PostCustomFieldWhereUniqueInput
}

type ExtractPostCustomFieldUpdateArgsSelect<S extends undefined | boolean | PostCustomFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldUpdateManyArgs = {
  select?: PostCustomFieldSelect
  data: PostCustomFieldUpdateManyMutationInput
  where?: PostCustomFieldWhereInput
}

export type PostCustomFieldUpdateManyArgsWithSelect = {
  select: PostCustomFieldSelect
  data: PostCustomFieldUpdateManyMutationInput
  where?: PostCustomFieldWhereInput
}

type ExtractPostCustomFieldUpdateManyArgsSelect<S extends undefined | boolean | PostCustomFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldUpsertArgs = {
  select?: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
  create: PostCustomFieldCreateInput
  update: PostCustomFieldUpdateInput
}

export type PostCustomFieldUpsertArgsWithSelect = {
  select: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
  create: PostCustomFieldCreateInput
  update: PostCustomFieldUpdateInput
}

type ExtractPostCustomFieldUpsertArgsSelect<S extends undefined | boolean | PostCustomFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldDeleteArgs = {
  select?: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
}

export type PostCustomFieldDeleteArgsWithSelect = {
  select: PostCustomFieldSelect
  where: PostCustomFieldWhereUniqueInput
}

type ExtractPostCustomFieldDeleteArgsSelect<S extends undefined | boolean | PostCustomFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldDeleteManyArgs = {
  select?: PostCustomFieldSelect
  where?: PostCustomFieldWhereInput
}

export type PostCustomFieldDeleteManyArgsWithSelect = {
  select: PostCustomFieldSelect
  where?: PostCustomFieldWhereInput
}

type ExtractPostCustomFieldDeleteManyArgsSelect<S extends undefined | boolean | PostCustomFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostCustomFieldArgs = {
  select?: PostCustomFieldSelect
}

export type PostCustomFieldArgsWithSelect = {
  select: PostCustomFieldSelect
}

type ExtractPostCustomFieldArgsSelect<S extends undefined | boolean | PostCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostCustomFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostDetail
 */

export type PostDetail = {
  id: number
  createdAt: string
  extra: string | null
  key: string | null
  postId: number | null
  updatedAt: string
  value: string | null
}

export type PostDetailScalars = 'id' | 'createdAt' | 'extra' | 'key' | 'postId' | 'updatedAt' | 'value'


export type PostDetailSelect = {
  id?: boolean
  createdAt?: boolean
  extra?: boolean
  key?: boolean
  postId?: boolean
  updatedAt?: boolean
  value?: boolean
}

type PostDetailDefault = {
  id: true
  createdAt: true
  extra: true
  key: true
  postId: true
  updatedAt: true
  value: true
}


type PostDetailGetPayload<S extends boolean | PostDetailSelect> = S extends true
  ? PostDetail
  : S extends PostDetailSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostDetailDefault, S>>]: P extends PostDetailScalars
        ? PostDetail[P]
        : never
    }
   : never

export interface PostDetailDelegate {
  <T extends FindManyPostDetailArgs>(args?: Subset<T, FindManyPostDetailArgs>): PromiseLike<Array<PostDetailGetPayload<ExtractFindManyPostDetailArgsSelect<T>>>>
  findOne<T extends FindOnePostDetailArgs>(
    args: Subset<T, FindOnePostDetailArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractFindOnePostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>
  findMany<T extends FindManyPostDetailArgs>(
    args?: Subset<T, FindManyPostDetailArgs>
  ): PromiseLike<Array<PostDetailGetPayload<ExtractFindManyPostDetailArgsSelect<T>>>>
  create<T extends PostDetailCreateArgs>(
    args: Subset<T, PostDetailCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailCreateArgsSelect<T>>> : PostDetailClient<PostDetail>
  update<T extends PostDetailUpdateArgs>(
    args: Subset<T, PostDetailUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailUpdateArgsSelect<T>>> : PostDetailClient<PostDetail>
  updateMany<T extends PostDetailUpdateManyArgs>(
    args: Subset<T, PostDetailUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailUpdateManyArgsSelect<T>>> : PostDetailClient<PostDetail>
  upsert<T extends PostDetailUpsertArgs>(
    args: Subset<T, PostDetailUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailUpsertArgsSelect<T>>> : PostDetailClient<PostDetail>
  delete<T extends PostDetailDeleteArgs>(
    args: Subset<T, PostDetailDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailDeleteArgsSelect<T>>> : PostDetailClient<PostDetail>
  deleteMany<T extends PostDetailDeleteManyArgs>(
    args: Subset<T, PostDetailDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailDeleteManyArgsSelect<T>>> : PostDetailClient<PostDetail>
}
function PostDetailDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostDetailDelegate {
  const PostDetail = <T extends FindManyPostDetailArgs>(args: Subset<T, FindManyPostDetailArgs>) => new PostDetailClient<PromiseLike<Array<PostDetailGetPayload<ExtractFindManyPostDetailArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postDetails', 'postDetails', args, [])
  PostDetail.findOne = <T extends FindOnePostDetailArgs>(args: Subset<T, FindOnePostDetailArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'query',
    'postDetail',
    'postDetails.findOne',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'query',
    'postDetail',
    'postDetails.findOne',
    args,
    []
  )
  PostDetail.findMany = <T extends FindManyPostDetailArgs>(args: Subset<T, FindManyPostDetailArgs>) => new PostDetailClient<PromiseLike<Array<PostDetailGetPayload<ExtractFindManyPostDetailArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postDetails',
    'postDetails.findMany',
    args,
    []
  )
  PostDetail.create = <T extends PostDetailCreateArgs>(args: Subset<T, PostDetailCreateArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostDetail',
    'postDetails.create',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'createPostDetail',
    'postDetails.create',
    args,
    []
  )
  PostDetail.update = <T extends PostDetailUpdateArgs>(args: Subset<T, PostDetailUpdateArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostDetail',
    'postDetails.update',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostDetail',
    'postDetails.update',
    args,
    []
  )
  PostDetail.updateMany = <T extends PostDetailUpdateManyArgs>(args: Subset<T, PostDetailUpdateManyArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostDetails',
    'postDetails.updateMany',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostDetails',
    'postDetails.updateMany',
    args,
    []
  )
  PostDetail.upsert = <T extends PostDetailUpsertArgs>(args: Subset<T, PostDetailUpsertArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostDetail',
    'postDetails.upsert',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostDetail',
    'postDetails.upsert',
    args,
    []
  )
  PostDetail.delete = <T extends PostDetailDeleteArgs>(args: Subset<T, PostDetailDeleteArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostDetail',
    'postDetails.delete',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostDetail',
    'postDetails.delete',
    args,
    []
  )
  PostDetail.deleteMany = <T extends PostDetailDeleteManyArgs>(args: Subset<T, PostDetailDeleteManyArgs>) => args.select ? new PostDetailClient<'select' extends keyof T ? PromiseLike<PostDetailGetPayload<ExtractPostDetailArgsSelect<T>>> : PostDetailClient<PostDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostDetails',
    'postDetails.deleteMany',
    args,
    []
  ) : new PostDetailClient<PostDetail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostDetails',
    'postDetails.deleteMany',
    args,
    []
  )
  return PostDetail as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostDetailClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostDetailArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostDetail').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostDetail').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostDetailArgs = {
  select?: PostDetailSelect
  where: PostDetailWhereUniqueInput
}

export type FindOnePostDetailArgsWithSelect = {
  select: PostDetailSelect
  where: PostDetailWhereUniqueInput
}

type ExtractFindOnePostDetailArgsSelect<S extends undefined | boolean | FindOnePostDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostDetailArgsWithSelect
  ? S['select']
  : true


export type FindManyPostDetailArgs = {
  select?: PostDetailSelect
  where?: PostDetailWhereInput
  orderBy?: PostDetailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostDetailArgsWithSelect = {
  select: PostDetailSelect
  where?: PostDetailWhereInput
  orderBy?: PostDetailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostDetailArgsSelect<S extends undefined | boolean | FindManyPostDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostDetailArgsWithSelect
  ? S['select']
  : true


export type PostDetailCreateArgs = {
  select?: PostDetailSelect
  data: PostDetailCreateInput
}

export type PostDetailCreateArgsWithSelect = {
  select: PostDetailSelect
  data: PostDetailCreateInput
}

type ExtractPostDetailCreateArgsSelect<S extends undefined | boolean | PostDetailCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailCreateArgsWithSelect
  ? S['select']
  : true


export type PostDetailUpdateArgs = {
  select?: PostDetailSelect
  data: PostDetailUpdateInput
  where: PostDetailWhereUniqueInput
}

export type PostDetailUpdateArgsWithSelect = {
  select: PostDetailSelect
  data: PostDetailUpdateInput
  where: PostDetailWhereUniqueInput
}

type ExtractPostDetailUpdateArgsSelect<S extends undefined | boolean | PostDetailUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailUpdateArgsWithSelect
  ? S['select']
  : true


export type PostDetailUpdateManyArgs = {
  select?: PostDetailSelect
  data: PostDetailUpdateManyMutationInput
  where?: PostDetailWhereInput
}

export type PostDetailUpdateManyArgsWithSelect = {
  select: PostDetailSelect
  data: PostDetailUpdateManyMutationInput
  where?: PostDetailWhereInput
}

type ExtractPostDetailUpdateManyArgsSelect<S extends undefined | boolean | PostDetailUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostDetailUpsertArgs = {
  select?: PostDetailSelect
  where: PostDetailWhereUniqueInput
  create: PostDetailCreateInput
  update: PostDetailUpdateInput
}

export type PostDetailUpsertArgsWithSelect = {
  select: PostDetailSelect
  where: PostDetailWhereUniqueInput
  create: PostDetailCreateInput
  update: PostDetailUpdateInput
}

type ExtractPostDetailUpsertArgsSelect<S extends undefined | boolean | PostDetailUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailUpsertArgsWithSelect
  ? S['select']
  : true


export type PostDetailDeleteArgs = {
  select?: PostDetailSelect
  where: PostDetailWhereUniqueInput
}

export type PostDetailDeleteArgsWithSelect = {
  select: PostDetailSelect
  where: PostDetailWhereUniqueInput
}

type ExtractPostDetailDeleteArgsSelect<S extends undefined | boolean | PostDetailDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailDeleteArgsWithSelect
  ? S['select']
  : true


export type PostDetailDeleteManyArgs = {
  select?: PostDetailSelect
  where?: PostDetailWhereInput
}

export type PostDetailDeleteManyArgsWithSelect = {
  select: PostDetailSelect
  where?: PostDetailWhereInput
}

type ExtractPostDetailDeleteManyArgsSelect<S extends undefined | boolean | PostDetailDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostDetailArgs = {
  select?: PostDetailSelect
}

export type PostDetailArgsWithSelect = {
  select: PostDetailSelect
}

type ExtractPostDetailArgsSelect<S extends undefined | boolean | PostDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostDetailArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostReplyKey
 */

export type PostReplyKey = {
  id: number
  createdAt: string
  postId: number
  replyKey: string
  updatedAt: string
  userId: number
}

export type PostReplyKeyScalars = 'id' | 'createdAt' | 'postId' | 'replyKey' | 'updatedAt' | 'userId'


export type PostReplyKeySelect = {
  id?: boolean
  createdAt?: boolean
  postId?: boolean
  replyKey?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type PostReplyKeyDefault = {
  id: true
  createdAt: true
  postId: true
  replyKey: true
  updatedAt: true
  userId: true
}


type PostReplyKeyGetPayload<S extends boolean | PostReplyKeySelect> = S extends true
  ? PostReplyKey
  : S extends PostReplyKeySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostReplyKeyDefault, S>>]: P extends PostReplyKeyScalars
        ? PostReplyKey[P]
        : never
    }
   : never

export interface PostReplyKeyDelegate {
  <T extends FindManyPostReplyKeyArgs>(args?: Subset<T, FindManyPostReplyKeyArgs>): PromiseLike<Array<PostReplyKeyGetPayload<ExtractFindManyPostReplyKeyArgsSelect<T>>>>
  findOne<T extends FindOnePostReplyKeyArgs>(
    args: Subset<T, FindOnePostReplyKeyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractFindOnePostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  findMany<T extends FindManyPostReplyKeyArgs>(
    args?: Subset<T, FindManyPostReplyKeyArgs>
  ): PromiseLike<Array<PostReplyKeyGetPayload<ExtractFindManyPostReplyKeyArgsSelect<T>>>>
  create<T extends PostReplyKeyCreateArgs>(
    args: Subset<T, PostReplyKeyCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyCreateArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  update<T extends PostReplyKeyUpdateArgs>(
    args: Subset<T, PostReplyKeyUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyUpdateArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  updateMany<T extends PostReplyKeyUpdateManyArgs>(
    args: Subset<T, PostReplyKeyUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyUpdateManyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  upsert<T extends PostReplyKeyUpsertArgs>(
    args: Subset<T, PostReplyKeyUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyUpsertArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  delete<T extends PostReplyKeyDeleteArgs>(
    args: Subset<T, PostReplyKeyDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyDeleteArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
  deleteMany<T extends PostReplyKeyDeleteManyArgs>(
    args: Subset<T, PostReplyKeyDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyDeleteManyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>
}
function PostReplyKeyDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostReplyKeyDelegate {
  const PostReplyKey = <T extends FindManyPostReplyKeyArgs>(args: Subset<T, FindManyPostReplyKeyArgs>) => new PostReplyKeyClient<PromiseLike<Array<PostReplyKeyGetPayload<ExtractFindManyPostReplyKeyArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postReplyKeys', 'postReplyKeys', args, [])
  PostReplyKey.findOne = <T extends FindOnePostReplyKeyArgs>(args: Subset<T, FindOnePostReplyKeyArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'query',
    'postReplyKey',
    'postReplyKeys.findOne',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'query',
    'postReplyKey',
    'postReplyKeys.findOne',
    args,
    []
  )
  PostReplyKey.findMany = <T extends FindManyPostReplyKeyArgs>(args: Subset<T, FindManyPostReplyKeyArgs>) => new PostReplyKeyClient<PromiseLike<Array<PostReplyKeyGetPayload<ExtractFindManyPostReplyKeyArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postReplyKeys',
    'postReplyKeys.findMany',
    args,
    []
  )
  PostReplyKey.create = <T extends PostReplyKeyCreateArgs>(args: Subset<T, PostReplyKeyCreateArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostReplyKey',
    'postReplyKeys.create',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'createPostReplyKey',
    'postReplyKeys.create',
    args,
    []
  )
  PostReplyKey.update = <T extends PostReplyKeyUpdateArgs>(args: Subset<T, PostReplyKeyUpdateArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostReplyKey',
    'postReplyKeys.update',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostReplyKey',
    'postReplyKeys.update',
    args,
    []
  )
  PostReplyKey.updateMany = <T extends PostReplyKeyUpdateManyArgs>(args: Subset<T, PostReplyKeyUpdateManyArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostReplyKeys',
    'postReplyKeys.updateMany',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostReplyKeys',
    'postReplyKeys.updateMany',
    args,
    []
  )
  PostReplyKey.upsert = <T extends PostReplyKeyUpsertArgs>(args: Subset<T, PostReplyKeyUpsertArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostReplyKey',
    'postReplyKeys.upsert',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostReplyKey',
    'postReplyKeys.upsert',
    args,
    []
  )
  PostReplyKey.delete = <T extends PostReplyKeyDeleteArgs>(args: Subset<T, PostReplyKeyDeleteArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostReplyKey',
    'postReplyKeys.delete',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostReplyKey',
    'postReplyKeys.delete',
    args,
    []
  )
  PostReplyKey.deleteMany = <T extends PostReplyKeyDeleteManyArgs>(args: Subset<T, PostReplyKeyDeleteManyArgs>) => args.select ? new PostReplyKeyClient<'select' extends keyof T ? PromiseLike<PostReplyKeyGetPayload<ExtractPostReplyKeyArgsSelect<T>>> : PostReplyKeyClient<PostReplyKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostReplyKeys',
    'postReplyKeys.deleteMany',
    args,
    []
  ) : new PostReplyKeyClient<PostReplyKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostReplyKeys',
    'postReplyKeys.deleteMany',
    args,
    []
  )
  return PostReplyKey as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostReplyKeyClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostReplyKeyArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostReplyKey').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostReplyKey').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostReplyKeyArgs = {
  select?: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
}

export type FindOnePostReplyKeyArgsWithSelect = {
  select: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
}

type ExtractFindOnePostReplyKeyArgsSelect<S extends undefined | boolean | FindOnePostReplyKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostReplyKeyArgsWithSelect
  ? S['select']
  : true


export type FindManyPostReplyKeyArgs = {
  select?: PostReplyKeySelect
  where?: PostReplyKeyWhereInput
  orderBy?: PostReplyKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostReplyKeyArgsWithSelect = {
  select: PostReplyKeySelect
  where?: PostReplyKeyWhereInput
  orderBy?: PostReplyKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostReplyKeyArgsSelect<S extends undefined | boolean | FindManyPostReplyKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostReplyKeyArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyCreateArgs = {
  select?: PostReplyKeySelect
  data: PostReplyKeyCreateInput
}

export type PostReplyKeyCreateArgsWithSelect = {
  select: PostReplyKeySelect
  data: PostReplyKeyCreateInput
}

type ExtractPostReplyKeyCreateArgsSelect<S extends undefined | boolean | PostReplyKeyCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyCreateArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyUpdateArgs = {
  select?: PostReplyKeySelect
  data: PostReplyKeyUpdateInput
  where: PostReplyKeyWhereUniqueInput
}

export type PostReplyKeyUpdateArgsWithSelect = {
  select: PostReplyKeySelect
  data: PostReplyKeyUpdateInput
  where: PostReplyKeyWhereUniqueInput
}

type ExtractPostReplyKeyUpdateArgsSelect<S extends undefined | boolean | PostReplyKeyUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyUpdateArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyUpdateManyArgs = {
  select?: PostReplyKeySelect
  data: PostReplyKeyUpdateManyMutationInput
  where?: PostReplyKeyWhereInput
}

export type PostReplyKeyUpdateManyArgsWithSelect = {
  select: PostReplyKeySelect
  data: PostReplyKeyUpdateManyMutationInput
  where?: PostReplyKeyWhereInput
}

type ExtractPostReplyKeyUpdateManyArgsSelect<S extends undefined | boolean | PostReplyKeyUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyUpsertArgs = {
  select?: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
  create: PostReplyKeyCreateInput
  update: PostReplyKeyUpdateInput
}

export type PostReplyKeyUpsertArgsWithSelect = {
  select: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
  create: PostReplyKeyCreateInput
  update: PostReplyKeyUpdateInput
}

type ExtractPostReplyKeyUpsertArgsSelect<S extends undefined | boolean | PostReplyKeyUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyUpsertArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyDeleteArgs = {
  select?: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
}

export type PostReplyKeyDeleteArgsWithSelect = {
  select: PostReplyKeySelect
  where: PostReplyKeyWhereUniqueInput
}

type ExtractPostReplyKeyDeleteArgsSelect<S extends undefined | boolean | PostReplyKeyDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyDeleteArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyDeleteManyArgs = {
  select?: PostReplyKeySelect
  where?: PostReplyKeyWhereInput
}

export type PostReplyKeyDeleteManyArgsWithSelect = {
  select: PostReplyKeySelect
  where?: PostReplyKeyWhereInput
}

type ExtractPostReplyKeyDeleteManyArgsSelect<S extends undefined | boolean | PostReplyKeyDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostReplyKeyArgs = {
  select?: PostReplyKeySelect
}

export type PostReplyKeyArgsWithSelect = {
  select: PostReplyKeySelect
}

type ExtractPostReplyKeyArgsSelect<S extends undefined | boolean | PostReplyKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostReplyKeyArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostRevision
 */

export type PostRevision = {
  id: number
  createdAt: string
  hidden: boolean
  modifications: string | null
  number: number | null
  postId: number | null
  updatedAt: string
  userId: number | null
}

export type PostRevisionScalars = 'id' | 'createdAt' | 'hidden' | 'modifications' | 'number' | 'postId' | 'updatedAt' | 'userId'


export type PostRevisionSelect = {
  id?: boolean
  createdAt?: boolean
  hidden?: boolean
  modifications?: boolean
  number?: boolean
  postId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type PostRevisionDefault = {
  id: true
  createdAt: true
  hidden: true
  modifications: true
  number: true
  postId: true
  updatedAt: true
  userId: true
}


type PostRevisionGetPayload<S extends boolean | PostRevisionSelect> = S extends true
  ? PostRevision
  : S extends PostRevisionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostRevisionDefault, S>>]: P extends PostRevisionScalars
        ? PostRevision[P]
        : never
    }
   : never

export interface PostRevisionDelegate {
  <T extends FindManyPostRevisionArgs>(args?: Subset<T, FindManyPostRevisionArgs>): PromiseLike<Array<PostRevisionGetPayload<ExtractFindManyPostRevisionArgsSelect<T>>>>
  findOne<T extends FindOnePostRevisionArgs>(
    args: Subset<T, FindOnePostRevisionArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractFindOnePostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>
  findMany<T extends FindManyPostRevisionArgs>(
    args?: Subset<T, FindManyPostRevisionArgs>
  ): PromiseLike<Array<PostRevisionGetPayload<ExtractFindManyPostRevisionArgsSelect<T>>>>
  create<T extends PostRevisionCreateArgs>(
    args: Subset<T, PostRevisionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionCreateArgsSelect<T>>> : PostRevisionClient<PostRevision>
  update<T extends PostRevisionUpdateArgs>(
    args: Subset<T, PostRevisionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionUpdateArgsSelect<T>>> : PostRevisionClient<PostRevision>
  updateMany<T extends PostRevisionUpdateManyArgs>(
    args: Subset<T, PostRevisionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionUpdateManyArgsSelect<T>>> : PostRevisionClient<PostRevision>
  upsert<T extends PostRevisionUpsertArgs>(
    args: Subset<T, PostRevisionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionUpsertArgsSelect<T>>> : PostRevisionClient<PostRevision>
  delete<T extends PostRevisionDeleteArgs>(
    args: Subset<T, PostRevisionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionDeleteArgsSelect<T>>> : PostRevisionClient<PostRevision>
  deleteMany<T extends PostRevisionDeleteManyArgs>(
    args: Subset<T, PostRevisionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionDeleteManyArgsSelect<T>>> : PostRevisionClient<PostRevision>
}
function PostRevisionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostRevisionDelegate {
  const PostRevision = <T extends FindManyPostRevisionArgs>(args: Subset<T, FindManyPostRevisionArgs>) => new PostRevisionClient<PromiseLike<Array<PostRevisionGetPayload<ExtractFindManyPostRevisionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postRevisions', 'postRevisions', args, [])
  PostRevision.findOne = <T extends FindOnePostRevisionArgs>(args: Subset<T, FindOnePostRevisionArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'query',
    'postRevision',
    'postRevisions.findOne',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'query',
    'postRevision',
    'postRevisions.findOne',
    args,
    []
  )
  PostRevision.findMany = <T extends FindManyPostRevisionArgs>(args: Subset<T, FindManyPostRevisionArgs>) => new PostRevisionClient<PromiseLike<Array<PostRevisionGetPayload<ExtractFindManyPostRevisionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postRevisions',
    'postRevisions.findMany',
    args,
    []
  )
  PostRevision.create = <T extends PostRevisionCreateArgs>(args: Subset<T, PostRevisionCreateArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostRevision',
    'postRevisions.create',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'createPostRevision',
    'postRevisions.create',
    args,
    []
  )
  PostRevision.update = <T extends PostRevisionUpdateArgs>(args: Subset<T, PostRevisionUpdateArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostRevision',
    'postRevisions.update',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostRevision',
    'postRevisions.update',
    args,
    []
  )
  PostRevision.updateMany = <T extends PostRevisionUpdateManyArgs>(args: Subset<T, PostRevisionUpdateManyArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostRevisions',
    'postRevisions.updateMany',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostRevisions',
    'postRevisions.updateMany',
    args,
    []
  )
  PostRevision.upsert = <T extends PostRevisionUpsertArgs>(args: Subset<T, PostRevisionUpsertArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostRevision',
    'postRevisions.upsert',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostRevision',
    'postRevisions.upsert',
    args,
    []
  )
  PostRevision.delete = <T extends PostRevisionDeleteArgs>(args: Subset<T, PostRevisionDeleteArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostRevision',
    'postRevisions.delete',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostRevision',
    'postRevisions.delete',
    args,
    []
  )
  PostRevision.deleteMany = <T extends PostRevisionDeleteManyArgs>(args: Subset<T, PostRevisionDeleteManyArgs>) => args.select ? new PostRevisionClient<'select' extends keyof T ? PromiseLike<PostRevisionGetPayload<ExtractPostRevisionArgsSelect<T>>> : PostRevisionClient<PostRevision>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostRevisions',
    'postRevisions.deleteMany',
    args,
    []
  ) : new PostRevisionClient<PostRevision>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostRevisions',
    'postRevisions.deleteMany',
    args,
    []
  )
  return PostRevision as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostRevisionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostRevisionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostRevision').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostRevision').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostRevisionArgs = {
  select?: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
}

export type FindOnePostRevisionArgsWithSelect = {
  select: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
}

type ExtractFindOnePostRevisionArgsSelect<S extends undefined | boolean | FindOnePostRevisionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostRevisionArgsWithSelect
  ? S['select']
  : true


export type FindManyPostRevisionArgs = {
  select?: PostRevisionSelect
  where?: PostRevisionWhereInput
  orderBy?: PostRevisionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostRevisionArgsWithSelect = {
  select: PostRevisionSelect
  where?: PostRevisionWhereInput
  orderBy?: PostRevisionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostRevisionArgsSelect<S extends undefined | boolean | FindManyPostRevisionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostRevisionArgsWithSelect
  ? S['select']
  : true


export type PostRevisionCreateArgs = {
  select?: PostRevisionSelect
  data: PostRevisionCreateInput
}

export type PostRevisionCreateArgsWithSelect = {
  select: PostRevisionSelect
  data: PostRevisionCreateInput
}

type ExtractPostRevisionCreateArgsSelect<S extends undefined | boolean | PostRevisionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionCreateArgsWithSelect
  ? S['select']
  : true


export type PostRevisionUpdateArgs = {
  select?: PostRevisionSelect
  data: PostRevisionUpdateInput
  where: PostRevisionWhereUniqueInput
}

export type PostRevisionUpdateArgsWithSelect = {
  select: PostRevisionSelect
  data: PostRevisionUpdateInput
  where: PostRevisionWhereUniqueInput
}

type ExtractPostRevisionUpdateArgsSelect<S extends undefined | boolean | PostRevisionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionUpdateArgsWithSelect
  ? S['select']
  : true


export type PostRevisionUpdateManyArgs = {
  select?: PostRevisionSelect
  data: PostRevisionUpdateManyMutationInput
  where?: PostRevisionWhereInput
}

export type PostRevisionUpdateManyArgsWithSelect = {
  select: PostRevisionSelect
  data: PostRevisionUpdateManyMutationInput
  where?: PostRevisionWhereInput
}

type ExtractPostRevisionUpdateManyArgsSelect<S extends undefined | boolean | PostRevisionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostRevisionUpsertArgs = {
  select?: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
  create: PostRevisionCreateInput
  update: PostRevisionUpdateInput
}

export type PostRevisionUpsertArgsWithSelect = {
  select: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
  create: PostRevisionCreateInput
  update: PostRevisionUpdateInput
}

type ExtractPostRevisionUpsertArgsSelect<S extends undefined | boolean | PostRevisionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionUpsertArgsWithSelect
  ? S['select']
  : true


export type PostRevisionDeleteArgs = {
  select?: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
}

export type PostRevisionDeleteArgsWithSelect = {
  select: PostRevisionSelect
  where: PostRevisionWhereUniqueInput
}

type ExtractPostRevisionDeleteArgsSelect<S extends undefined | boolean | PostRevisionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionDeleteArgsWithSelect
  ? S['select']
  : true


export type PostRevisionDeleteManyArgs = {
  select?: PostRevisionSelect
  where?: PostRevisionWhereInput
}

export type PostRevisionDeleteManyArgsWithSelect = {
  select: PostRevisionSelect
  where?: PostRevisionWhereInput
}

type ExtractPostRevisionDeleteManyArgsSelect<S extends undefined | boolean | PostRevisionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostRevisionArgs = {
  select?: PostRevisionSelect
}

export type PostRevisionArgsWithSelect = {
  select: PostRevisionSelect
}

type ExtractPostRevisionArgsSelect<S extends undefined | boolean | PostRevisionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostRevisionArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostSearchDatum
 */

export type PostSearchDatum = {
  post_id: number
  locale: string | null
  rawData: string | null
  version: number | null
}

export type PostSearchDatumScalars = 'post_id' | 'locale' | 'rawData' | 'version'


export type PostSearchDatumSelect = {
  post_id?: boolean
  locale?: boolean
  rawData?: boolean
  version?: boolean
}

type PostSearchDatumDefault = {
  post_id: true
  locale: true
  rawData: true
  version: true
}


type PostSearchDatumGetPayload<S extends boolean | PostSearchDatumSelect> = S extends true
  ? PostSearchDatum
  : S extends PostSearchDatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostSearchDatumDefault, S>>]: P extends PostSearchDatumScalars
        ? PostSearchDatum[P]
        : never
    }
   : never

export interface PostSearchDatumDelegate {
  <T extends FindManyPostSearchDatumArgs>(args?: Subset<T, FindManyPostSearchDatumArgs>): PromiseLike<Array<PostSearchDatumGetPayload<ExtractFindManyPostSearchDatumArgsSelect<T>>>>
  findMany<T extends FindManyPostSearchDatumArgs>(
    args?: Subset<T, FindManyPostSearchDatumArgs>
  ): PromiseLike<Array<PostSearchDatumGetPayload<ExtractFindManyPostSearchDatumArgsSelect<T>>>>
  create<T extends PostSearchDatumCreateArgs>(
    args: Subset<T, PostSearchDatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumCreateArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>
  updateMany<T extends PostSearchDatumUpdateManyArgs>(
    args: Subset<T, PostSearchDatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumUpdateManyArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>
  deleteMany<T extends PostSearchDatumDeleteManyArgs>(
    args: Subset<T, PostSearchDatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumDeleteManyArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>
}
function PostSearchDatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostSearchDatumDelegate {
  const PostSearchDatum = <T extends FindManyPostSearchDatumArgs>(args: Subset<T, FindManyPostSearchDatumArgs>) => new PostSearchDatumClient<PromiseLike<Array<PostSearchDatumGetPayload<ExtractFindManyPostSearchDatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postSearchData', 'postSearchData', args, [])
  PostSearchDatum.findMany = <T extends FindManyPostSearchDatumArgs>(args: Subset<T, FindManyPostSearchDatumArgs>) => new PostSearchDatumClient<PromiseLike<Array<PostSearchDatumGetPayload<ExtractFindManyPostSearchDatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postSearchData',
    'postSearchData.findMany',
    args,
    []
  )
  PostSearchDatum.create = <T extends PostSearchDatumCreateArgs>(args: Subset<T, PostSearchDatumCreateArgs>) => args.select ? new PostSearchDatumClient<'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostSearchDatum',
    'postSearchData.create',
    args,
    []
  ) : new PostSearchDatumClient<PostSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'createPostSearchDatum',
    'postSearchData.create',
    args,
    []
  )
  PostSearchDatum.updateMany = <T extends PostSearchDatumUpdateManyArgs>(args: Subset<T, PostSearchDatumUpdateManyArgs>) => args.select ? new PostSearchDatumClient<'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostSearchData',
    'postSearchData.updateMany',
    args,
    []
  ) : new PostSearchDatumClient<PostSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostSearchData',
    'postSearchData.updateMany',
    args,
    []
  )
  PostSearchDatum.deleteMany = <T extends PostSearchDatumDeleteManyArgs>(args: Subset<T, PostSearchDatumDeleteManyArgs>) => args.select ? new PostSearchDatumClient<'select' extends keyof T ? PromiseLike<PostSearchDatumGetPayload<ExtractPostSearchDatumArgsSelect<T>>> : PostSearchDatumClient<PostSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostSearchData',
    'postSearchData.deleteMany',
    args,
    []
  ) : new PostSearchDatumClient<PostSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostSearchData',
    'postSearchData.deleteMany',
    args,
    []
  )
  return PostSearchDatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostSearchDatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostSearchDatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostSearchDatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostSearchDatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyPostSearchDatumArgs = {
  select?: PostSearchDatumSelect
  where?: PostSearchDatumWhereInput
  orderBy?: PostSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostSearchDatumArgsWithSelect = {
  select: PostSearchDatumSelect
  where?: PostSearchDatumWhereInput
  orderBy?: PostSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostSearchDatumArgsSelect<S extends undefined | boolean | FindManyPostSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostSearchDatumArgsWithSelect
  ? S['select']
  : true


export type PostSearchDatumCreateArgs = {
  select?: PostSearchDatumSelect
  data: PostSearchDatumCreateInput
}

export type PostSearchDatumCreateArgsWithSelect = {
  select: PostSearchDatumSelect
  data: PostSearchDatumCreateInput
}

type ExtractPostSearchDatumCreateArgsSelect<S extends undefined | boolean | PostSearchDatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostSearchDatumCreateArgsWithSelect
  ? S['select']
  : true


export type PostSearchDatumUpdateManyArgs = {
  select?: PostSearchDatumSelect
  data: PostSearchDatumUpdateManyMutationInput
  where?: PostSearchDatumWhereInput
}

export type PostSearchDatumUpdateManyArgsWithSelect = {
  select: PostSearchDatumSelect
  data: PostSearchDatumUpdateManyMutationInput
  where?: PostSearchDatumWhereInput
}

type ExtractPostSearchDatumUpdateManyArgsSelect<S extends undefined | boolean | PostSearchDatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostSearchDatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostSearchDatumDeleteManyArgs = {
  select?: PostSearchDatumSelect
  where?: PostSearchDatumWhereInput
}

export type PostSearchDatumDeleteManyArgsWithSelect = {
  select: PostSearchDatumSelect
  where?: PostSearchDatumWhereInput
}

type ExtractPostSearchDatumDeleteManyArgsSelect<S extends undefined | boolean | PostSearchDatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostSearchDatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostSearchDatumArgs = {
  select?: PostSearchDatumSelect
}

export type PostSearchDatumArgsWithSelect = {
  select: PostSearchDatumSelect
}

type ExtractPostSearchDatumArgsSelect<S extends undefined | boolean | PostSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostSearchDatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostStat
 */

export type PostStat = {
  id: number
  composerOpenDurationMsecs: number | null
  createdAt: string | null
  draftsSaved: number | null
  postId: number | null
  typingDurationMsecs: number | null
  updatedAt: string | null
}

export type PostStatScalars = 'id' | 'composerOpenDurationMsecs' | 'createdAt' | 'draftsSaved' | 'postId' | 'typingDurationMsecs' | 'updatedAt'


export type PostStatSelect = {
  id?: boolean
  composerOpenDurationMsecs?: boolean
  createdAt?: boolean
  draftsSaved?: boolean
  postId?: boolean
  typingDurationMsecs?: boolean
  updatedAt?: boolean
}

type PostStatDefault = {
  id: true
  composerOpenDurationMsecs: true
  createdAt: true
  draftsSaved: true
  postId: true
  typingDurationMsecs: true
  updatedAt: true
}


type PostStatGetPayload<S extends boolean | PostStatSelect> = S extends true
  ? PostStat
  : S extends PostStatSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostStatDefault, S>>]: P extends PostStatScalars
        ? PostStat[P]
        : never
    }
   : never

export interface PostStatDelegate {
  <T extends FindManyPostStatArgs>(args?: Subset<T, FindManyPostStatArgs>): PromiseLike<Array<PostStatGetPayload<ExtractFindManyPostStatArgsSelect<T>>>>
  findOne<T extends FindOnePostStatArgs>(
    args: Subset<T, FindOnePostStatArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractFindOnePostStatArgsSelect<T>>> : PostStatClient<PostStat>
  findMany<T extends FindManyPostStatArgs>(
    args?: Subset<T, FindManyPostStatArgs>
  ): PromiseLike<Array<PostStatGetPayload<ExtractFindManyPostStatArgsSelect<T>>>>
  create<T extends PostStatCreateArgs>(
    args: Subset<T, PostStatCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatCreateArgsSelect<T>>> : PostStatClient<PostStat>
  update<T extends PostStatUpdateArgs>(
    args: Subset<T, PostStatUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatUpdateArgsSelect<T>>> : PostStatClient<PostStat>
  updateMany<T extends PostStatUpdateManyArgs>(
    args: Subset<T, PostStatUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatUpdateManyArgsSelect<T>>> : PostStatClient<PostStat>
  upsert<T extends PostStatUpsertArgs>(
    args: Subset<T, PostStatUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatUpsertArgsSelect<T>>> : PostStatClient<PostStat>
  delete<T extends PostStatDeleteArgs>(
    args: Subset<T, PostStatDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatDeleteArgsSelect<T>>> : PostStatClient<PostStat>
  deleteMany<T extends PostStatDeleteManyArgs>(
    args: Subset<T, PostStatDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatDeleteManyArgsSelect<T>>> : PostStatClient<PostStat>
}
function PostStatDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostStatDelegate {
  const PostStat = <T extends FindManyPostStatArgs>(args: Subset<T, FindManyPostStatArgs>) => new PostStatClient<PromiseLike<Array<PostStatGetPayload<ExtractFindManyPostStatArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postStats', 'postStats', args, [])
  PostStat.findOne = <T extends FindOnePostStatArgs>(args: Subset<T, FindOnePostStatArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'query',
    'postStat',
    'postStats.findOne',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'query',
    'postStat',
    'postStats.findOne',
    args,
    []
  )
  PostStat.findMany = <T extends FindManyPostStatArgs>(args: Subset<T, FindManyPostStatArgs>) => new PostStatClient<PromiseLike<Array<PostStatGetPayload<ExtractFindManyPostStatArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postStats',
    'postStats.findMany',
    args,
    []
  )
  PostStat.create = <T extends PostStatCreateArgs>(args: Subset<T, PostStatCreateArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostStat',
    'postStats.create',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'createPostStat',
    'postStats.create',
    args,
    []
  )
  PostStat.update = <T extends PostStatUpdateArgs>(args: Subset<T, PostStatUpdateArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostStat',
    'postStats.update',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostStat',
    'postStats.update',
    args,
    []
  )
  PostStat.updateMany = <T extends PostStatUpdateManyArgs>(args: Subset<T, PostStatUpdateManyArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostStats',
    'postStats.updateMany',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostStats',
    'postStats.updateMany',
    args,
    []
  )
  PostStat.upsert = <T extends PostStatUpsertArgs>(args: Subset<T, PostStatUpsertArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostStat',
    'postStats.upsert',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostStat',
    'postStats.upsert',
    args,
    []
  )
  PostStat.delete = <T extends PostStatDeleteArgs>(args: Subset<T, PostStatDeleteArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostStat',
    'postStats.delete',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostStat',
    'postStats.delete',
    args,
    []
  )
  PostStat.deleteMany = <T extends PostStatDeleteManyArgs>(args: Subset<T, PostStatDeleteManyArgs>) => args.select ? new PostStatClient<'select' extends keyof T ? PromiseLike<PostStatGetPayload<ExtractPostStatArgsSelect<T>>> : PostStatClient<PostStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostStats',
    'postStats.deleteMany',
    args,
    []
  ) : new PostStatClient<PostStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostStats',
    'postStats.deleteMany',
    args,
    []
  )
  return PostStat as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostStatClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostStatArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostStat').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostStat').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostStatArgs = {
  select?: PostStatSelect
  where: PostStatWhereUniqueInput
}

export type FindOnePostStatArgsWithSelect = {
  select: PostStatSelect
  where: PostStatWhereUniqueInput
}

type ExtractFindOnePostStatArgsSelect<S extends undefined | boolean | FindOnePostStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostStatArgsWithSelect
  ? S['select']
  : true


export type FindManyPostStatArgs = {
  select?: PostStatSelect
  where?: PostStatWhereInput
  orderBy?: PostStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostStatArgsWithSelect = {
  select: PostStatSelect
  where?: PostStatWhereInput
  orderBy?: PostStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostStatArgsSelect<S extends undefined | boolean | FindManyPostStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostStatArgsWithSelect
  ? S['select']
  : true


export type PostStatCreateArgs = {
  select?: PostStatSelect
  data: PostStatCreateInput
}

export type PostStatCreateArgsWithSelect = {
  select: PostStatSelect
  data: PostStatCreateInput
}

type ExtractPostStatCreateArgsSelect<S extends undefined | boolean | PostStatCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatCreateArgsWithSelect
  ? S['select']
  : true


export type PostStatUpdateArgs = {
  select?: PostStatSelect
  data: PostStatUpdateInput
  where: PostStatWhereUniqueInput
}

export type PostStatUpdateArgsWithSelect = {
  select: PostStatSelect
  data: PostStatUpdateInput
  where: PostStatWhereUniqueInput
}

type ExtractPostStatUpdateArgsSelect<S extends undefined | boolean | PostStatUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatUpdateArgsWithSelect
  ? S['select']
  : true


export type PostStatUpdateManyArgs = {
  select?: PostStatSelect
  data: PostStatUpdateManyMutationInput
  where?: PostStatWhereInput
}

export type PostStatUpdateManyArgsWithSelect = {
  select: PostStatSelect
  data: PostStatUpdateManyMutationInput
  where?: PostStatWhereInput
}

type ExtractPostStatUpdateManyArgsSelect<S extends undefined | boolean | PostStatUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostStatUpsertArgs = {
  select?: PostStatSelect
  where: PostStatWhereUniqueInput
  create: PostStatCreateInput
  update: PostStatUpdateInput
}

export type PostStatUpsertArgsWithSelect = {
  select: PostStatSelect
  where: PostStatWhereUniqueInput
  create: PostStatCreateInput
  update: PostStatUpdateInput
}

type ExtractPostStatUpsertArgsSelect<S extends undefined | boolean | PostStatUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatUpsertArgsWithSelect
  ? S['select']
  : true


export type PostStatDeleteArgs = {
  select?: PostStatSelect
  where: PostStatWhereUniqueInput
}

export type PostStatDeleteArgsWithSelect = {
  select: PostStatSelect
  where: PostStatWhereUniqueInput
}

type ExtractPostStatDeleteArgsSelect<S extends undefined | boolean | PostStatDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatDeleteArgsWithSelect
  ? S['select']
  : true


export type PostStatDeleteManyArgs = {
  select?: PostStatSelect
  where?: PostStatWhereInput
}

export type PostStatDeleteManyArgsWithSelect = {
  select: PostStatSelect
  where?: PostStatWhereInput
}

type ExtractPostStatDeleteManyArgsSelect<S extends undefined | boolean | PostStatDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostStatArgs = {
  select?: PostStatSelect
}

export type PostStatArgsWithSelect = {
  select: PostStatSelect
}

type ExtractPostStatArgsSelect<S extends undefined | boolean | PostStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostStatArgsWithSelect
  ? S['select']
  : true



/**
 * Model PostUpload
 */

export type PostUpload = {
  id: number
  postId: number
  uploadId: number
}

export type PostUploadScalars = 'id' | 'postId' | 'uploadId'


export type PostUploadSelect = {
  id?: boolean
  postId?: boolean
  uploadId?: boolean
}

type PostUploadDefault = {
  id: true
  postId: true
  uploadId: true
}


type PostUploadGetPayload<S extends boolean | PostUploadSelect> = S extends true
  ? PostUpload
  : S extends PostUploadSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PostUploadDefault, S>>]: P extends PostUploadScalars
        ? PostUpload[P]
        : never
    }
   : never

export interface PostUploadDelegate {
  <T extends FindManyPostUploadArgs>(args?: Subset<T, FindManyPostUploadArgs>): PromiseLike<Array<PostUploadGetPayload<ExtractFindManyPostUploadArgsSelect<T>>>>
  findOne<T extends FindOnePostUploadArgs>(
    args: Subset<T, FindOnePostUploadArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractFindOnePostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>
  findMany<T extends FindManyPostUploadArgs>(
    args?: Subset<T, FindManyPostUploadArgs>
  ): PromiseLike<Array<PostUploadGetPayload<ExtractFindManyPostUploadArgsSelect<T>>>>
  create<T extends PostUploadCreateArgs>(
    args: Subset<T, PostUploadCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadCreateArgsSelect<T>>> : PostUploadClient<PostUpload>
  update<T extends PostUploadUpdateArgs>(
    args: Subset<T, PostUploadUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadUpdateArgsSelect<T>>> : PostUploadClient<PostUpload>
  updateMany<T extends PostUploadUpdateManyArgs>(
    args: Subset<T, PostUploadUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadUpdateManyArgsSelect<T>>> : PostUploadClient<PostUpload>
  upsert<T extends PostUploadUpsertArgs>(
    args: Subset<T, PostUploadUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadUpsertArgsSelect<T>>> : PostUploadClient<PostUpload>
  delete<T extends PostUploadDeleteArgs>(
    args: Subset<T, PostUploadDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadDeleteArgsSelect<T>>> : PostUploadClient<PostUpload>
  deleteMany<T extends PostUploadDeleteManyArgs>(
    args: Subset<T, PostUploadDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadDeleteManyArgsSelect<T>>> : PostUploadClient<PostUpload>
}
function PostUploadDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PostUploadDelegate {
  const PostUpload = <T extends FindManyPostUploadArgs>(args: Subset<T, FindManyPostUploadArgs>) => new PostUploadClient<PromiseLike<Array<PostUploadGetPayload<ExtractFindManyPostUploadArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'postUploads', 'postUploads', args, [])
  PostUpload.findOne = <T extends FindOnePostUploadArgs>(args: Subset<T, FindOnePostUploadArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'query',
    'postUpload',
    'postUploads.findOne',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'query',
    'postUpload',
    'postUploads.findOne',
    args,
    []
  )
  PostUpload.findMany = <T extends FindManyPostUploadArgs>(args: Subset<T, FindManyPostUploadArgs>) => new PostUploadClient<PromiseLike<Array<PostUploadGetPayload<ExtractFindManyPostUploadArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'postUploads',
    'postUploads.findMany',
    args,
    []
  )
  PostUpload.create = <T extends PostUploadCreateArgs>(args: Subset<T, PostUploadCreateArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'createPostUpload',
    'postUploads.create',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'createPostUpload',
    'postUploads.create',
    args,
    []
  )
  PostUpload.update = <T extends PostUploadUpdateArgs>(args: Subset<T, PostUploadUpdateArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostUpload',
    'postUploads.update',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'updatePostUpload',
    'postUploads.update',
    args,
    []
  )
  PostUpload.updateMany = <T extends PostUploadUpdateManyArgs>(args: Subset<T, PostUploadUpdateManyArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostUploads',
    'postUploads.updateMany',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPostUploads',
    'postUploads.updateMany',
    args,
    []
  )
  PostUpload.upsert = <T extends PostUploadUpsertArgs>(args: Subset<T, PostUploadUpsertArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostUpload',
    'postUploads.upsert',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPostUpload',
    'postUploads.upsert',
    args,
    []
  )
  PostUpload.delete = <T extends PostUploadDeleteArgs>(args: Subset<T, PostUploadDeleteArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostUpload',
    'postUploads.delete',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'deletePostUpload',
    'postUploads.delete',
    args,
    []
  )
  PostUpload.deleteMany = <T extends PostUploadDeleteManyArgs>(args: Subset<T, PostUploadDeleteManyArgs>) => args.select ? new PostUploadClient<'select' extends keyof T ? PromiseLike<PostUploadGetPayload<ExtractPostUploadArgsSelect<T>>> : PostUploadClient<PostUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostUploads',
    'postUploads.deleteMany',
    args,
    []
  ) : new PostUploadClient<PostUpload>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPostUploads',
    'postUploads.deleteMany',
    args,
    []
  )
  return PostUpload as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PostUploadClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PostUploadArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostUpload').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PostUpload').catch(onrejected)
  }
}


// InputTypes

export type FindOnePostUploadArgs = {
  select?: PostUploadSelect
  where: PostUploadWhereUniqueInput
}

export type FindOnePostUploadArgsWithSelect = {
  select: PostUploadSelect
  where: PostUploadWhereUniqueInput
}

type ExtractFindOnePostUploadArgsSelect<S extends undefined | boolean | FindOnePostUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePostUploadArgsWithSelect
  ? S['select']
  : true


export type FindManyPostUploadArgs = {
  select?: PostUploadSelect
  where?: PostUploadWhereInput
  orderBy?: PostUploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPostUploadArgsWithSelect = {
  select: PostUploadSelect
  where?: PostUploadWhereInput
  orderBy?: PostUploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPostUploadArgsSelect<S extends undefined | boolean | FindManyPostUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPostUploadArgsWithSelect
  ? S['select']
  : true


export type PostUploadCreateArgs = {
  select?: PostUploadSelect
  data: PostUploadCreateInput
}

export type PostUploadCreateArgsWithSelect = {
  select: PostUploadSelect
  data: PostUploadCreateInput
}

type ExtractPostUploadCreateArgsSelect<S extends undefined | boolean | PostUploadCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadCreateArgsWithSelect
  ? S['select']
  : true


export type PostUploadUpdateArgs = {
  select?: PostUploadSelect
  data: PostUploadUpdateInput
  where: PostUploadWhereUniqueInput
}

export type PostUploadUpdateArgsWithSelect = {
  select: PostUploadSelect
  data: PostUploadUpdateInput
  where: PostUploadWhereUniqueInput
}

type ExtractPostUploadUpdateArgsSelect<S extends undefined | boolean | PostUploadUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadUpdateArgsWithSelect
  ? S['select']
  : true


export type PostUploadUpdateManyArgs = {
  select?: PostUploadSelect
  data: PostUploadUpdateManyMutationInput
  where?: PostUploadWhereInput
}

export type PostUploadUpdateManyArgsWithSelect = {
  select: PostUploadSelect
  data: PostUploadUpdateManyMutationInput
  where?: PostUploadWhereInput
}

type ExtractPostUploadUpdateManyArgsSelect<S extends undefined | boolean | PostUploadUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PostUploadUpsertArgs = {
  select?: PostUploadSelect
  where: PostUploadWhereUniqueInput
  create: PostUploadCreateInput
  update: PostUploadUpdateInput
}

export type PostUploadUpsertArgsWithSelect = {
  select: PostUploadSelect
  where: PostUploadWhereUniqueInput
  create: PostUploadCreateInput
  update: PostUploadUpdateInput
}

type ExtractPostUploadUpsertArgsSelect<S extends undefined | boolean | PostUploadUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadUpsertArgsWithSelect
  ? S['select']
  : true


export type PostUploadDeleteArgs = {
  select?: PostUploadSelect
  where: PostUploadWhereUniqueInput
}

export type PostUploadDeleteArgsWithSelect = {
  select: PostUploadSelect
  where: PostUploadWhereUniqueInput
}

type ExtractPostUploadDeleteArgsSelect<S extends undefined | boolean | PostUploadDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadDeleteArgsWithSelect
  ? S['select']
  : true


export type PostUploadDeleteManyArgs = {
  select?: PostUploadSelect
  where?: PostUploadWhereInput
}

export type PostUploadDeleteManyArgsWithSelect = {
  select: PostUploadSelect
  where?: PostUploadWhereInput
}

type ExtractPostUploadDeleteManyArgsSelect<S extends undefined | boolean | PostUploadDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PostUploadArgs = {
  select?: PostUploadSelect
}

export type PostUploadArgsWithSelect = {
  select: PostUploadSelect
}

type ExtractPostUploadArgsSelect<S extends undefined | boolean | PostUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PostUploadArgsWithSelect
  ? S['select']
  : true



/**
 * Model PushSubscription
 */

export type PushSubscription = {
  id: number
  createdAt: string
  data: string
  updatedAt: string
  userId: number
}

export type PushSubscriptionScalars = 'id' | 'createdAt' | 'data' | 'updatedAt' | 'userId'


export type PushSubscriptionSelect = {
  id?: boolean
  createdAt?: boolean
  data?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type PushSubscriptionDefault = {
  id: true
  createdAt: true
  data: true
  updatedAt: true
  userId: true
}


type PushSubscriptionGetPayload<S extends boolean | PushSubscriptionSelect> = S extends true
  ? PushSubscription
  : S extends PushSubscriptionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<PushSubscriptionDefault, S>>]: P extends PushSubscriptionScalars
        ? PushSubscription[P]
        : never
    }
   : never

export interface PushSubscriptionDelegate {
  <T extends FindManyPushSubscriptionArgs>(args?: Subset<T, FindManyPushSubscriptionArgs>): PromiseLike<Array<PushSubscriptionGetPayload<ExtractFindManyPushSubscriptionArgsSelect<T>>>>
  findOne<T extends FindOnePushSubscriptionArgs>(
    args: Subset<T, FindOnePushSubscriptionArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractFindOnePushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  findMany<T extends FindManyPushSubscriptionArgs>(
    args?: Subset<T, FindManyPushSubscriptionArgs>
  ): PromiseLike<Array<PushSubscriptionGetPayload<ExtractFindManyPushSubscriptionArgsSelect<T>>>>
  create<T extends PushSubscriptionCreateArgs>(
    args: Subset<T, PushSubscriptionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionCreateArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  update<T extends PushSubscriptionUpdateArgs>(
    args: Subset<T, PushSubscriptionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionUpdateArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  updateMany<T extends PushSubscriptionUpdateManyArgs>(
    args: Subset<T, PushSubscriptionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionUpdateManyArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  upsert<T extends PushSubscriptionUpsertArgs>(
    args: Subset<T, PushSubscriptionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionUpsertArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  delete<T extends PushSubscriptionDeleteArgs>(
    args: Subset<T, PushSubscriptionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionDeleteArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
  deleteMany<T extends PushSubscriptionDeleteManyArgs>(
    args: Subset<T, PushSubscriptionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionDeleteManyArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>
}
function PushSubscriptionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): PushSubscriptionDelegate {
  const PushSubscription = <T extends FindManyPushSubscriptionArgs>(args: Subset<T, FindManyPushSubscriptionArgs>) => new PushSubscriptionClient<PromiseLike<Array<PushSubscriptionGetPayload<ExtractFindManyPushSubscriptionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'pushSubscriptions', 'pushSubscriptions', args, [])
  PushSubscription.findOne = <T extends FindOnePushSubscriptionArgs>(args: Subset<T, FindOnePushSubscriptionArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'query',
    'pushSubscription',
    'pushSubscriptions.findOne',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'query',
    'pushSubscription',
    'pushSubscriptions.findOne',
    args,
    []
  )
  PushSubscription.findMany = <T extends FindManyPushSubscriptionArgs>(args: Subset<T, FindManyPushSubscriptionArgs>) => new PushSubscriptionClient<PromiseLike<Array<PushSubscriptionGetPayload<ExtractFindManyPushSubscriptionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'pushSubscriptions',
    'pushSubscriptions.findMany',
    args,
    []
  )
  PushSubscription.create = <T extends PushSubscriptionCreateArgs>(args: Subset<T, PushSubscriptionCreateArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'createPushSubscription',
    'pushSubscriptions.create',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'createPushSubscription',
    'pushSubscriptions.create',
    args,
    []
  )
  PushSubscription.update = <T extends PushSubscriptionUpdateArgs>(args: Subset<T, PushSubscriptionUpdateArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'updatePushSubscription',
    'pushSubscriptions.update',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'updatePushSubscription',
    'pushSubscriptions.update',
    args,
    []
  )
  PushSubscription.updateMany = <T extends PushSubscriptionUpdateManyArgs>(args: Subset<T, PushSubscriptionUpdateManyArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPushSubscriptions',
    'pushSubscriptions.updateMany',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyPushSubscriptions',
    'pushSubscriptions.updateMany',
    args,
    []
  )
  PushSubscription.upsert = <T extends PushSubscriptionUpsertArgs>(args: Subset<T, PushSubscriptionUpsertArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPushSubscription',
    'pushSubscriptions.upsert',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'upsertPushSubscription',
    'pushSubscriptions.upsert',
    args,
    []
  )
  PushSubscription.delete = <T extends PushSubscriptionDeleteArgs>(args: Subset<T, PushSubscriptionDeleteArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'deletePushSubscription',
    'pushSubscriptions.delete',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'deletePushSubscription',
    'pushSubscriptions.delete',
    args,
    []
  )
  PushSubscription.deleteMany = <T extends PushSubscriptionDeleteManyArgs>(args: Subset<T, PushSubscriptionDeleteManyArgs>) => args.select ? new PushSubscriptionClient<'select' extends keyof T ? PromiseLike<PushSubscriptionGetPayload<ExtractPushSubscriptionArgsSelect<T>>> : PushSubscriptionClient<PushSubscription>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPushSubscriptions',
    'pushSubscriptions.deleteMany',
    args,
    []
  ) : new PushSubscriptionClient<PushSubscription>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyPushSubscriptions',
    'pushSubscriptions.deleteMany',
    args,
    []
  )
  return PushSubscription as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class PushSubscriptionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: PushSubscriptionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PushSubscription').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'PushSubscription').catch(onrejected)
  }
}


// InputTypes

export type FindOnePushSubscriptionArgs = {
  select?: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
}

export type FindOnePushSubscriptionArgsWithSelect = {
  select: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
}

type ExtractFindOnePushSubscriptionArgsSelect<S extends undefined | boolean | FindOnePushSubscriptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOnePushSubscriptionArgsWithSelect
  ? S['select']
  : true


export type FindManyPushSubscriptionArgs = {
  select?: PushSubscriptionSelect
  where?: PushSubscriptionWhereInput
  orderBy?: PushSubscriptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyPushSubscriptionArgsWithSelect = {
  select: PushSubscriptionSelect
  where?: PushSubscriptionWhereInput
  orderBy?: PushSubscriptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyPushSubscriptionArgsSelect<S extends undefined | boolean | FindManyPushSubscriptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyPushSubscriptionArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionCreateArgs = {
  select?: PushSubscriptionSelect
  data: PushSubscriptionCreateInput
}

export type PushSubscriptionCreateArgsWithSelect = {
  select: PushSubscriptionSelect
  data: PushSubscriptionCreateInput
}

type ExtractPushSubscriptionCreateArgsSelect<S extends undefined | boolean | PushSubscriptionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionCreateArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionUpdateArgs = {
  select?: PushSubscriptionSelect
  data: PushSubscriptionUpdateInput
  where: PushSubscriptionWhereUniqueInput
}

export type PushSubscriptionUpdateArgsWithSelect = {
  select: PushSubscriptionSelect
  data: PushSubscriptionUpdateInput
  where: PushSubscriptionWhereUniqueInput
}

type ExtractPushSubscriptionUpdateArgsSelect<S extends undefined | boolean | PushSubscriptionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionUpdateArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionUpdateManyArgs = {
  select?: PushSubscriptionSelect
  data: PushSubscriptionUpdateManyMutationInput
  where?: PushSubscriptionWhereInput
}

export type PushSubscriptionUpdateManyArgsWithSelect = {
  select: PushSubscriptionSelect
  data: PushSubscriptionUpdateManyMutationInput
  where?: PushSubscriptionWhereInput
}

type ExtractPushSubscriptionUpdateManyArgsSelect<S extends undefined | boolean | PushSubscriptionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionUpsertArgs = {
  select?: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
  create: PushSubscriptionCreateInput
  update: PushSubscriptionUpdateInput
}

export type PushSubscriptionUpsertArgsWithSelect = {
  select: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
  create: PushSubscriptionCreateInput
  update: PushSubscriptionUpdateInput
}

type ExtractPushSubscriptionUpsertArgsSelect<S extends undefined | boolean | PushSubscriptionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionUpsertArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionDeleteArgs = {
  select?: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
}

export type PushSubscriptionDeleteArgsWithSelect = {
  select: PushSubscriptionSelect
  where: PushSubscriptionWhereUniqueInput
}

type ExtractPushSubscriptionDeleteArgsSelect<S extends undefined | boolean | PushSubscriptionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionDeleteArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionDeleteManyArgs = {
  select?: PushSubscriptionSelect
  where?: PushSubscriptionWhereInput
}

export type PushSubscriptionDeleteManyArgsWithSelect = {
  select: PushSubscriptionSelect
  where?: PushSubscriptionWhereInput
}

type ExtractPushSubscriptionDeleteManyArgsSelect<S extends undefined | boolean | PushSubscriptionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type PushSubscriptionArgs = {
  select?: PushSubscriptionSelect
}

export type PushSubscriptionArgsWithSelect = {
  select: PushSubscriptionSelect
}

type ExtractPushSubscriptionArgsSelect<S extends undefined | boolean | PushSubscriptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends PushSubscriptionArgsWithSelect
  ? S['select']
  : true



/**
 * Model QueuedPost
 */

export type QueuedPost = {
  id: number
  approvedAt: string | null
  approvedById: number | null
  createdAt: string | null
  queue: string
  raw: string
  rejectedAt: string | null
  rejectedById: number | null
  state: number
  topicId: number | null
  updatedAt: string | null
  userId: number
}

export type QueuedPostScalars = 'id' | 'approvedAt' | 'approvedById' | 'createdAt' | 'queue' | 'raw' | 'rejectedAt' | 'rejectedById' | 'state' | 'topicId' | 'updatedAt' | 'userId'


export type QueuedPostSelect = {
  id?: boolean
  approvedAt?: boolean
  approvedById?: boolean
  createdAt?: boolean
  queue?: boolean
  raw?: boolean
  rejectedAt?: boolean
  rejectedById?: boolean
  state?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type QueuedPostDefault = {
  id: true
  approvedAt: true
  approvedById: true
  createdAt: true
  queue: true
  raw: true
  rejectedAt: true
  rejectedById: true
  state: true
  topicId: true
  updatedAt: true
  userId: true
}


type QueuedPostGetPayload<S extends boolean | QueuedPostSelect> = S extends true
  ? QueuedPost
  : S extends QueuedPostSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<QueuedPostDefault, S>>]: P extends QueuedPostScalars
        ? QueuedPost[P]
        : never
    }
   : never

export interface QueuedPostDelegate {
  <T extends FindManyQueuedPostArgs>(args?: Subset<T, FindManyQueuedPostArgs>): PromiseLike<Array<QueuedPostGetPayload<ExtractFindManyQueuedPostArgsSelect<T>>>>
  findOne<T extends FindOneQueuedPostArgs>(
    args: Subset<T, FindOneQueuedPostArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractFindOneQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  findMany<T extends FindManyQueuedPostArgs>(
    args?: Subset<T, FindManyQueuedPostArgs>
  ): PromiseLike<Array<QueuedPostGetPayload<ExtractFindManyQueuedPostArgsSelect<T>>>>
  create<T extends QueuedPostCreateArgs>(
    args: Subset<T, QueuedPostCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostCreateArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  update<T extends QueuedPostUpdateArgs>(
    args: Subset<T, QueuedPostUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostUpdateArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  updateMany<T extends QueuedPostUpdateManyArgs>(
    args: Subset<T, QueuedPostUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostUpdateManyArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  upsert<T extends QueuedPostUpsertArgs>(
    args: Subset<T, QueuedPostUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostUpsertArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  delete<T extends QueuedPostDeleteArgs>(
    args: Subset<T, QueuedPostDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostDeleteArgsSelect<T>>> : QueuedPostClient<QueuedPost>
  deleteMany<T extends QueuedPostDeleteManyArgs>(
    args: Subset<T, QueuedPostDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostDeleteManyArgsSelect<T>>> : QueuedPostClient<QueuedPost>
}
function QueuedPostDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): QueuedPostDelegate {
  const QueuedPost = <T extends FindManyQueuedPostArgs>(args: Subset<T, FindManyQueuedPostArgs>) => new QueuedPostClient<PromiseLike<Array<QueuedPostGetPayload<ExtractFindManyQueuedPostArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'queuedPosts', 'queuedPosts', args, [])
  QueuedPost.findOne = <T extends FindOneQueuedPostArgs>(args: Subset<T, FindOneQueuedPostArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'query',
    'queuedPost',
    'queuedPosts.findOne',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'query',
    'queuedPost',
    'queuedPosts.findOne',
    args,
    []
  )
  QueuedPost.findMany = <T extends FindManyQueuedPostArgs>(args: Subset<T, FindManyQueuedPostArgs>) => new QueuedPostClient<PromiseLike<Array<QueuedPostGetPayload<ExtractFindManyQueuedPostArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'queuedPosts',
    'queuedPosts.findMany',
    args,
    []
  )
  QueuedPost.create = <T extends QueuedPostCreateArgs>(args: Subset<T, QueuedPostCreateArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'createQueuedPost',
    'queuedPosts.create',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'createQueuedPost',
    'queuedPosts.create',
    args,
    []
  )
  QueuedPost.update = <T extends QueuedPostUpdateArgs>(args: Subset<T, QueuedPostUpdateArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateQueuedPost',
    'queuedPosts.update',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'updateQueuedPost',
    'queuedPosts.update',
    args,
    []
  )
  QueuedPost.updateMany = <T extends QueuedPostUpdateManyArgs>(args: Subset<T, QueuedPostUpdateManyArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyQueuedPosts',
    'queuedPosts.updateMany',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyQueuedPosts',
    'queuedPosts.updateMany',
    args,
    []
  )
  QueuedPost.upsert = <T extends QueuedPostUpsertArgs>(args: Subset<T, QueuedPostUpsertArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertQueuedPost',
    'queuedPosts.upsert',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'upsertQueuedPost',
    'queuedPosts.upsert',
    args,
    []
  )
  QueuedPost.delete = <T extends QueuedPostDeleteArgs>(args: Subset<T, QueuedPostDeleteArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteQueuedPost',
    'queuedPosts.delete',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteQueuedPost',
    'queuedPosts.delete',
    args,
    []
  )
  QueuedPost.deleteMany = <T extends QueuedPostDeleteManyArgs>(args: Subset<T, QueuedPostDeleteManyArgs>) => args.select ? new QueuedPostClient<'select' extends keyof T ? PromiseLike<QueuedPostGetPayload<ExtractQueuedPostArgsSelect<T>>> : QueuedPostClient<QueuedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyQueuedPosts',
    'queuedPosts.deleteMany',
    args,
    []
  ) : new QueuedPostClient<QueuedPost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyQueuedPosts',
    'queuedPosts.deleteMany',
    args,
    []
  )
  return QueuedPost as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class QueuedPostClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: QueuedPostArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'QueuedPost').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'QueuedPost').catch(onrejected)
  }
}


// InputTypes

export type FindOneQueuedPostArgs = {
  select?: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
}

export type FindOneQueuedPostArgsWithSelect = {
  select: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
}

type ExtractFindOneQueuedPostArgsSelect<S extends undefined | boolean | FindOneQueuedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneQueuedPostArgsWithSelect
  ? S['select']
  : true


export type FindManyQueuedPostArgs = {
  select?: QueuedPostSelect
  where?: QueuedPostWhereInput
  orderBy?: QueuedPostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyQueuedPostArgsWithSelect = {
  select: QueuedPostSelect
  where?: QueuedPostWhereInput
  orderBy?: QueuedPostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyQueuedPostArgsSelect<S extends undefined | boolean | FindManyQueuedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyQueuedPostArgsWithSelect
  ? S['select']
  : true


export type QueuedPostCreateArgs = {
  select?: QueuedPostSelect
  data: QueuedPostCreateInput
}

export type QueuedPostCreateArgsWithSelect = {
  select: QueuedPostSelect
  data: QueuedPostCreateInput
}

type ExtractQueuedPostCreateArgsSelect<S extends undefined | boolean | QueuedPostCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostCreateArgsWithSelect
  ? S['select']
  : true


export type QueuedPostUpdateArgs = {
  select?: QueuedPostSelect
  data: QueuedPostUpdateInput
  where: QueuedPostWhereUniqueInput
}

export type QueuedPostUpdateArgsWithSelect = {
  select: QueuedPostSelect
  data: QueuedPostUpdateInput
  where: QueuedPostWhereUniqueInput
}

type ExtractQueuedPostUpdateArgsSelect<S extends undefined | boolean | QueuedPostUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostUpdateArgsWithSelect
  ? S['select']
  : true


export type QueuedPostUpdateManyArgs = {
  select?: QueuedPostSelect
  data: QueuedPostUpdateManyMutationInput
  where?: QueuedPostWhereInput
}

export type QueuedPostUpdateManyArgsWithSelect = {
  select: QueuedPostSelect
  data: QueuedPostUpdateManyMutationInput
  where?: QueuedPostWhereInput
}

type ExtractQueuedPostUpdateManyArgsSelect<S extends undefined | boolean | QueuedPostUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostUpdateManyArgsWithSelect
  ? S['select']
  : true


export type QueuedPostUpsertArgs = {
  select?: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
  create: QueuedPostCreateInput
  update: QueuedPostUpdateInput
}

export type QueuedPostUpsertArgsWithSelect = {
  select: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
  create: QueuedPostCreateInput
  update: QueuedPostUpdateInput
}

type ExtractQueuedPostUpsertArgsSelect<S extends undefined | boolean | QueuedPostUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostUpsertArgsWithSelect
  ? S['select']
  : true


export type QueuedPostDeleteArgs = {
  select?: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
}

export type QueuedPostDeleteArgsWithSelect = {
  select: QueuedPostSelect
  where: QueuedPostWhereUniqueInput
}

type ExtractQueuedPostDeleteArgsSelect<S extends undefined | boolean | QueuedPostDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostDeleteArgsWithSelect
  ? S['select']
  : true


export type QueuedPostDeleteManyArgs = {
  select?: QueuedPostSelect
  where?: QueuedPostWhereInput
}

export type QueuedPostDeleteManyArgsWithSelect = {
  select: QueuedPostSelect
  where?: QueuedPostWhereInput
}

type ExtractQueuedPostDeleteManyArgsSelect<S extends undefined | boolean | QueuedPostDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostDeleteManyArgsWithSelect
  ? S['select']
  : true


export type QueuedPostArgs = {
  select?: QueuedPostSelect
}

export type QueuedPostArgsWithSelect = {
  select: QueuedPostSelect
}

type ExtractQueuedPostArgsSelect<S extends undefined | boolean | QueuedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QueuedPostArgsWithSelect
  ? S['select']
  : true



/**
 * Model QuotedPost
 */

export type QuotedPost = {
  id: number
  createdAt: string
  postId: number
  quotedPostId: number
  updatedAt: string
}

export type QuotedPostScalars = 'id' | 'createdAt' | 'postId' | 'quotedPostId' | 'updatedAt'


export type QuotedPostSelect = {
  id?: boolean
  createdAt?: boolean
  postId?: boolean
  quotedPostId?: boolean
  updatedAt?: boolean
}

type QuotedPostDefault = {
  id: true
  createdAt: true
  postId: true
  quotedPostId: true
  updatedAt: true
}


type QuotedPostGetPayload<S extends boolean | QuotedPostSelect> = S extends true
  ? QuotedPost
  : S extends QuotedPostSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<QuotedPostDefault, S>>]: P extends QuotedPostScalars
        ? QuotedPost[P]
        : never
    }
   : never

export interface QuotedPostDelegate {
  <T extends FindManyQuotedPostArgs>(args?: Subset<T, FindManyQuotedPostArgs>): PromiseLike<Array<QuotedPostGetPayload<ExtractFindManyQuotedPostArgsSelect<T>>>>
  findOne<T extends FindOneQuotedPostArgs>(
    args: Subset<T, FindOneQuotedPostArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractFindOneQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  findMany<T extends FindManyQuotedPostArgs>(
    args?: Subset<T, FindManyQuotedPostArgs>
  ): PromiseLike<Array<QuotedPostGetPayload<ExtractFindManyQuotedPostArgsSelect<T>>>>
  create<T extends QuotedPostCreateArgs>(
    args: Subset<T, QuotedPostCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostCreateArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  update<T extends QuotedPostUpdateArgs>(
    args: Subset<T, QuotedPostUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostUpdateArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  updateMany<T extends QuotedPostUpdateManyArgs>(
    args: Subset<T, QuotedPostUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostUpdateManyArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  upsert<T extends QuotedPostUpsertArgs>(
    args: Subset<T, QuotedPostUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostUpsertArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  delete<T extends QuotedPostDeleteArgs>(
    args: Subset<T, QuotedPostDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostDeleteArgsSelect<T>>> : QuotedPostClient<QuotedPost>
  deleteMany<T extends QuotedPostDeleteManyArgs>(
    args: Subset<T, QuotedPostDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostDeleteManyArgsSelect<T>>> : QuotedPostClient<QuotedPost>
}
function QuotedPostDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): QuotedPostDelegate {
  const QuotedPost = <T extends FindManyQuotedPostArgs>(args: Subset<T, FindManyQuotedPostArgs>) => new QuotedPostClient<PromiseLike<Array<QuotedPostGetPayload<ExtractFindManyQuotedPostArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'quotedPosts', 'quotedPosts', args, [])
  QuotedPost.findOne = <T extends FindOneQuotedPostArgs>(args: Subset<T, FindOneQuotedPostArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'query',
    'quotedPost',
    'quotedPosts.findOne',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'query',
    'quotedPost',
    'quotedPosts.findOne',
    args,
    []
  )
  QuotedPost.findMany = <T extends FindManyQuotedPostArgs>(args: Subset<T, FindManyQuotedPostArgs>) => new QuotedPostClient<PromiseLike<Array<QuotedPostGetPayload<ExtractFindManyQuotedPostArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'quotedPosts',
    'quotedPosts.findMany',
    args,
    []
  )
  QuotedPost.create = <T extends QuotedPostCreateArgs>(args: Subset<T, QuotedPostCreateArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'createQuotedPost',
    'quotedPosts.create',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'createQuotedPost',
    'quotedPosts.create',
    args,
    []
  )
  QuotedPost.update = <T extends QuotedPostUpdateArgs>(args: Subset<T, QuotedPostUpdateArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateQuotedPost',
    'quotedPosts.update',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'updateQuotedPost',
    'quotedPosts.update',
    args,
    []
  )
  QuotedPost.updateMany = <T extends QuotedPostUpdateManyArgs>(args: Subset<T, QuotedPostUpdateManyArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyQuotedPosts',
    'quotedPosts.updateMany',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyQuotedPosts',
    'quotedPosts.updateMany',
    args,
    []
  )
  QuotedPost.upsert = <T extends QuotedPostUpsertArgs>(args: Subset<T, QuotedPostUpsertArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertQuotedPost',
    'quotedPosts.upsert',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'upsertQuotedPost',
    'quotedPosts.upsert',
    args,
    []
  )
  QuotedPost.delete = <T extends QuotedPostDeleteArgs>(args: Subset<T, QuotedPostDeleteArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteQuotedPost',
    'quotedPosts.delete',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteQuotedPost',
    'quotedPosts.delete',
    args,
    []
  )
  QuotedPost.deleteMany = <T extends QuotedPostDeleteManyArgs>(args: Subset<T, QuotedPostDeleteManyArgs>) => args.select ? new QuotedPostClient<'select' extends keyof T ? PromiseLike<QuotedPostGetPayload<ExtractQuotedPostArgsSelect<T>>> : QuotedPostClient<QuotedPost>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyQuotedPosts',
    'quotedPosts.deleteMany',
    args,
    []
  ) : new QuotedPostClient<QuotedPost>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyQuotedPosts',
    'quotedPosts.deleteMany',
    args,
    []
  )
  return QuotedPost as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class QuotedPostClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: QuotedPostArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'QuotedPost').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'QuotedPost').catch(onrejected)
  }
}


// InputTypes

export type FindOneQuotedPostArgs = {
  select?: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
}

export type FindOneQuotedPostArgsWithSelect = {
  select: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
}

type ExtractFindOneQuotedPostArgsSelect<S extends undefined | boolean | FindOneQuotedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneQuotedPostArgsWithSelect
  ? S['select']
  : true


export type FindManyQuotedPostArgs = {
  select?: QuotedPostSelect
  where?: QuotedPostWhereInput
  orderBy?: QuotedPostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyQuotedPostArgsWithSelect = {
  select: QuotedPostSelect
  where?: QuotedPostWhereInput
  orderBy?: QuotedPostOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyQuotedPostArgsSelect<S extends undefined | boolean | FindManyQuotedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyQuotedPostArgsWithSelect
  ? S['select']
  : true


export type QuotedPostCreateArgs = {
  select?: QuotedPostSelect
  data: QuotedPostCreateInput
}

export type QuotedPostCreateArgsWithSelect = {
  select: QuotedPostSelect
  data: QuotedPostCreateInput
}

type ExtractQuotedPostCreateArgsSelect<S extends undefined | boolean | QuotedPostCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostCreateArgsWithSelect
  ? S['select']
  : true


export type QuotedPostUpdateArgs = {
  select?: QuotedPostSelect
  data: QuotedPostUpdateInput
  where: QuotedPostWhereUniqueInput
}

export type QuotedPostUpdateArgsWithSelect = {
  select: QuotedPostSelect
  data: QuotedPostUpdateInput
  where: QuotedPostWhereUniqueInput
}

type ExtractQuotedPostUpdateArgsSelect<S extends undefined | boolean | QuotedPostUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostUpdateArgsWithSelect
  ? S['select']
  : true


export type QuotedPostUpdateManyArgs = {
  select?: QuotedPostSelect
  data: QuotedPostUpdateManyMutationInput
  where?: QuotedPostWhereInput
}

export type QuotedPostUpdateManyArgsWithSelect = {
  select: QuotedPostSelect
  data: QuotedPostUpdateManyMutationInput
  where?: QuotedPostWhereInput
}

type ExtractQuotedPostUpdateManyArgsSelect<S extends undefined | boolean | QuotedPostUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostUpdateManyArgsWithSelect
  ? S['select']
  : true


export type QuotedPostUpsertArgs = {
  select?: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
  create: QuotedPostCreateInput
  update: QuotedPostUpdateInput
}

export type QuotedPostUpsertArgsWithSelect = {
  select: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
  create: QuotedPostCreateInput
  update: QuotedPostUpdateInput
}

type ExtractQuotedPostUpsertArgsSelect<S extends undefined | boolean | QuotedPostUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostUpsertArgsWithSelect
  ? S['select']
  : true


export type QuotedPostDeleteArgs = {
  select?: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
}

export type QuotedPostDeleteArgsWithSelect = {
  select: QuotedPostSelect
  where: QuotedPostWhereUniqueInput
}

type ExtractQuotedPostDeleteArgsSelect<S extends undefined | boolean | QuotedPostDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostDeleteArgsWithSelect
  ? S['select']
  : true


export type QuotedPostDeleteManyArgs = {
  select?: QuotedPostSelect
  where?: QuotedPostWhereInput
}

export type QuotedPostDeleteManyArgsWithSelect = {
  select: QuotedPostSelect
  where?: QuotedPostWhereInput
}

type ExtractQuotedPostDeleteManyArgsSelect<S extends undefined | boolean | QuotedPostDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostDeleteManyArgsWithSelect
  ? S['select']
  : true


export type QuotedPostArgs = {
  select?: QuotedPostSelect
}

export type QuotedPostArgsWithSelect = {
  select: QuotedPostSelect
}

type ExtractQuotedPostArgsSelect<S extends undefined | boolean | QuotedPostArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends QuotedPostArgsWithSelect
  ? S['select']
  : true



/**
 * Model RemoteTheme
 */

export type RemoteTheme = {
  id: number
  aboutUrl: string | null
  branch: string | null
  commitsBehind: number | null
  createdAt: string | null
  lastErrorText: string | null
  licenseUrl: string | null
  localVersion: string | null
  privateKey: string | null
  remoteUpdatedAt: string | null
  remoteUrl: string
  remoteVersion: string | null
  updatedAt: string | null
}

export type RemoteThemeScalars = 'id' | 'aboutUrl' | 'branch' | 'commitsBehind' | 'createdAt' | 'lastErrorText' | 'licenseUrl' | 'localVersion' | 'privateKey' | 'remoteUpdatedAt' | 'remoteUrl' | 'remoteVersion' | 'updatedAt'


export type RemoteThemeSelect = {
  id?: boolean
  aboutUrl?: boolean
  branch?: boolean
  commitsBehind?: boolean
  createdAt?: boolean
  lastErrorText?: boolean
  licenseUrl?: boolean
  localVersion?: boolean
  privateKey?: boolean
  remoteUpdatedAt?: boolean
  remoteUrl?: boolean
  remoteVersion?: boolean
  updatedAt?: boolean
}

type RemoteThemeDefault = {
  id: true
  aboutUrl: true
  branch: true
  commitsBehind: true
  createdAt: true
  lastErrorText: true
  licenseUrl: true
  localVersion: true
  privateKey: true
  remoteUpdatedAt: true
  remoteUrl: true
  remoteVersion: true
  updatedAt: true
}


type RemoteThemeGetPayload<S extends boolean | RemoteThemeSelect> = S extends true
  ? RemoteTheme
  : S extends RemoteThemeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<RemoteThemeDefault, S>>]: P extends RemoteThemeScalars
        ? RemoteTheme[P]
        : never
    }
   : never

export interface RemoteThemeDelegate {
  <T extends FindManyRemoteThemeArgs>(args?: Subset<T, FindManyRemoteThemeArgs>): PromiseLike<Array<RemoteThemeGetPayload<ExtractFindManyRemoteThemeArgsSelect<T>>>>
  findOne<T extends FindOneRemoteThemeArgs>(
    args: Subset<T, FindOneRemoteThemeArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractFindOneRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  findMany<T extends FindManyRemoteThemeArgs>(
    args?: Subset<T, FindManyRemoteThemeArgs>
  ): PromiseLike<Array<RemoteThemeGetPayload<ExtractFindManyRemoteThemeArgsSelect<T>>>>
  create<T extends RemoteThemeCreateArgs>(
    args: Subset<T, RemoteThemeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeCreateArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  update<T extends RemoteThemeUpdateArgs>(
    args: Subset<T, RemoteThemeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeUpdateArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  updateMany<T extends RemoteThemeUpdateManyArgs>(
    args: Subset<T, RemoteThemeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeUpdateManyArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  upsert<T extends RemoteThemeUpsertArgs>(
    args: Subset<T, RemoteThemeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeUpsertArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  delete<T extends RemoteThemeDeleteArgs>(
    args: Subset<T, RemoteThemeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeDeleteArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
  deleteMany<T extends RemoteThemeDeleteManyArgs>(
    args: Subset<T, RemoteThemeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeDeleteManyArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>
}
function RemoteThemeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): RemoteThemeDelegate {
  const RemoteTheme = <T extends FindManyRemoteThemeArgs>(args: Subset<T, FindManyRemoteThemeArgs>) => new RemoteThemeClient<PromiseLike<Array<RemoteThemeGetPayload<ExtractFindManyRemoteThemeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'remoteThemes', 'remoteThemes', args, [])
  RemoteTheme.findOne = <T extends FindOneRemoteThemeArgs>(args: Subset<T, FindOneRemoteThemeArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'query',
    'remoteTheme',
    'remoteThemes.findOne',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'query',
    'remoteTheme',
    'remoteThemes.findOne',
    args,
    []
  )
  RemoteTheme.findMany = <T extends FindManyRemoteThemeArgs>(args: Subset<T, FindManyRemoteThemeArgs>) => new RemoteThemeClient<PromiseLike<Array<RemoteThemeGetPayload<ExtractFindManyRemoteThemeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'remoteThemes',
    'remoteThemes.findMany',
    args,
    []
  )
  RemoteTheme.create = <T extends RemoteThemeCreateArgs>(args: Subset<T, RemoteThemeCreateArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'createRemoteTheme',
    'remoteThemes.create',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'createRemoteTheme',
    'remoteThemes.create',
    args,
    []
  )
  RemoteTheme.update = <T extends RemoteThemeUpdateArgs>(args: Subset<T, RemoteThemeUpdateArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateRemoteTheme',
    'remoteThemes.update',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateRemoteTheme',
    'remoteThemes.update',
    args,
    []
  )
  RemoteTheme.updateMany = <T extends RemoteThemeUpdateManyArgs>(args: Subset<T, RemoteThemeUpdateManyArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyRemoteThemes',
    'remoteThemes.updateMany',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyRemoteThemes',
    'remoteThemes.updateMany',
    args,
    []
  )
  RemoteTheme.upsert = <T extends RemoteThemeUpsertArgs>(args: Subset<T, RemoteThemeUpsertArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertRemoteTheme',
    'remoteThemes.upsert',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'upsertRemoteTheme',
    'remoteThemes.upsert',
    args,
    []
  )
  RemoteTheme.delete = <T extends RemoteThemeDeleteArgs>(args: Subset<T, RemoteThemeDeleteArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteRemoteTheme',
    'remoteThemes.delete',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteRemoteTheme',
    'remoteThemes.delete',
    args,
    []
  )
  RemoteTheme.deleteMany = <T extends RemoteThemeDeleteManyArgs>(args: Subset<T, RemoteThemeDeleteManyArgs>) => args.select ? new RemoteThemeClient<'select' extends keyof T ? PromiseLike<RemoteThemeGetPayload<ExtractRemoteThemeArgsSelect<T>>> : RemoteThemeClient<RemoteTheme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyRemoteThemes',
    'remoteThemes.deleteMany',
    args,
    []
  ) : new RemoteThemeClient<RemoteTheme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyRemoteThemes',
    'remoteThemes.deleteMany',
    args,
    []
  )
  return RemoteTheme as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class RemoteThemeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: RemoteThemeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'RemoteTheme').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'RemoteTheme').catch(onrejected)
  }
}


// InputTypes

export type FindOneRemoteThemeArgs = {
  select?: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
}

export type FindOneRemoteThemeArgsWithSelect = {
  select: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
}

type ExtractFindOneRemoteThemeArgsSelect<S extends undefined | boolean | FindOneRemoteThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneRemoteThemeArgsWithSelect
  ? S['select']
  : true


export type FindManyRemoteThemeArgs = {
  select?: RemoteThemeSelect
  where?: RemoteThemeWhereInput
  orderBy?: RemoteThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyRemoteThemeArgsWithSelect = {
  select: RemoteThemeSelect
  where?: RemoteThemeWhereInput
  orderBy?: RemoteThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyRemoteThemeArgsSelect<S extends undefined | boolean | FindManyRemoteThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyRemoteThemeArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeCreateArgs = {
  select?: RemoteThemeSelect
  data: RemoteThemeCreateInput
}

export type RemoteThemeCreateArgsWithSelect = {
  select: RemoteThemeSelect
  data: RemoteThemeCreateInput
}

type ExtractRemoteThemeCreateArgsSelect<S extends undefined | boolean | RemoteThemeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeCreateArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeUpdateArgs = {
  select?: RemoteThemeSelect
  data: RemoteThemeUpdateInput
  where: RemoteThemeWhereUniqueInput
}

export type RemoteThemeUpdateArgsWithSelect = {
  select: RemoteThemeSelect
  data: RemoteThemeUpdateInput
  where: RemoteThemeWhereUniqueInput
}

type ExtractRemoteThemeUpdateArgsSelect<S extends undefined | boolean | RemoteThemeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeUpdateArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeUpdateManyArgs = {
  select?: RemoteThemeSelect
  data: RemoteThemeUpdateManyMutationInput
  where?: RemoteThemeWhereInput
}

export type RemoteThemeUpdateManyArgsWithSelect = {
  select: RemoteThemeSelect
  data: RemoteThemeUpdateManyMutationInput
  where?: RemoteThemeWhereInput
}

type ExtractRemoteThemeUpdateManyArgsSelect<S extends undefined | boolean | RemoteThemeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeUpsertArgs = {
  select?: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
  create: RemoteThemeCreateInput
  update: RemoteThemeUpdateInput
}

export type RemoteThemeUpsertArgsWithSelect = {
  select: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
  create: RemoteThemeCreateInput
  update: RemoteThemeUpdateInput
}

type ExtractRemoteThemeUpsertArgsSelect<S extends undefined | boolean | RemoteThemeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeUpsertArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeDeleteArgs = {
  select?: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
}

export type RemoteThemeDeleteArgsWithSelect = {
  select: RemoteThemeSelect
  where: RemoteThemeWhereUniqueInput
}

type ExtractRemoteThemeDeleteArgsSelect<S extends undefined | boolean | RemoteThemeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeDeleteArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeDeleteManyArgs = {
  select?: RemoteThemeSelect
  where?: RemoteThemeWhereInput
}

export type RemoteThemeDeleteManyArgsWithSelect = {
  select: RemoteThemeSelect
  where?: RemoteThemeWhereInput
}

type ExtractRemoteThemeDeleteManyArgsSelect<S extends undefined | boolean | RemoteThemeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type RemoteThemeArgs = {
  select?: RemoteThemeSelect
}

export type RemoteThemeArgsWithSelect = {
  select: RemoteThemeSelect
}

type ExtractRemoteThemeArgsSelect<S extends undefined | boolean | RemoteThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends RemoteThemeArgsWithSelect
  ? S['select']
  : true



/**
 * Model SchedulerStat
 */

export type SchedulerStat = {
  id: number
  durationMs: number | null
  error: string | null
  hostname: string
  liveSlotsFinish: number | null
  liveSlotsStart: number | null
  name: string
  pid: number
  startedAt: string
  success: boolean | null
}

export type SchedulerStatScalars = 'id' | 'durationMs' | 'error' | 'hostname' | 'liveSlotsFinish' | 'liveSlotsStart' | 'name' | 'pid' | 'startedAt' | 'success'


export type SchedulerStatSelect = {
  id?: boolean
  durationMs?: boolean
  error?: boolean
  hostname?: boolean
  liveSlotsFinish?: boolean
  liveSlotsStart?: boolean
  name?: boolean
  pid?: boolean
  startedAt?: boolean
  success?: boolean
}

type SchedulerStatDefault = {
  id: true
  durationMs: true
  error: true
  hostname: true
  liveSlotsFinish: true
  liveSlotsStart: true
  name: true
  pid: true
  startedAt: true
  success: true
}


type SchedulerStatGetPayload<S extends boolean | SchedulerStatSelect> = S extends true
  ? SchedulerStat
  : S extends SchedulerStatSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SchedulerStatDefault, S>>]: P extends SchedulerStatScalars
        ? SchedulerStat[P]
        : never
    }
   : never

export interface SchedulerStatDelegate {
  <T extends FindManySchedulerStatArgs>(args?: Subset<T, FindManySchedulerStatArgs>): PromiseLike<Array<SchedulerStatGetPayload<ExtractFindManySchedulerStatArgsSelect<T>>>>
  findOne<T extends FindOneSchedulerStatArgs>(
    args: Subset<T, FindOneSchedulerStatArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractFindOneSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  findMany<T extends FindManySchedulerStatArgs>(
    args?: Subset<T, FindManySchedulerStatArgs>
  ): PromiseLike<Array<SchedulerStatGetPayload<ExtractFindManySchedulerStatArgsSelect<T>>>>
  create<T extends SchedulerStatCreateArgs>(
    args: Subset<T, SchedulerStatCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatCreateArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  update<T extends SchedulerStatUpdateArgs>(
    args: Subset<T, SchedulerStatUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatUpdateArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  updateMany<T extends SchedulerStatUpdateManyArgs>(
    args: Subset<T, SchedulerStatUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatUpdateManyArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  upsert<T extends SchedulerStatUpsertArgs>(
    args: Subset<T, SchedulerStatUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatUpsertArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  delete<T extends SchedulerStatDeleteArgs>(
    args: Subset<T, SchedulerStatDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatDeleteArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
  deleteMany<T extends SchedulerStatDeleteManyArgs>(
    args: Subset<T, SchedulerStatDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatDeleteManyArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>
}
function SchedulerStatDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SchedulerStatDelegate {
  const SchedulerStat = <T extends FindManySchedulerStatArgs>(args: Subset<T, FindManySchedulerStatArgs>) => new SchedulerStatClient<PromiseLike<Array<SchedulerStatGetPayload<ExtractFindManySchedulerStatArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'schedulerStats', 'schedulerStats', args, [])
  SchedulerStat.findOne = <T extends FindOneSchedulerStatArgs>(args: Subset<T, FindOneSchedulerStatArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'query',
    'schedulerStat',
    'schedulerStats.findOne',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'query',
    'schedulerStat',
    'schedulerStats.findOne',
    args,
    []
  )
  SchedulerStat.findMany = <T extends FindManySchedulerStatArgs>(args: Subset<T, FindManySchedulerStatArgs>) => new SchedulerStatClient<PromiseLike<Array<SchedulerStatGetPayload<ExtractFindManySchedulerStatArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'schedulerStats',
    'schedulerStats.findMany',
    args,
    []
  )
  SchedulerStat.create = <T extends SchedulerStatCreateArgs>(args: Subset<T, SchedulerStatCreateArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'createSchedulerStat',
    'schedulerStats.create',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'createSchedulerStat',
    'schedulerStats.create',
    args,
    []
  )
  SchedulerStat.update = <T extends SchedulerStatUpdateArgs>(args: Subset<T, SchedulerStatUpdateArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchedulerStat',
    'schedulerStats.update',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchedulerStat',
    'schedulerStats.update',
    args,
    []
  )
  SchedulerStat.updateMany = <T extends SchedulerStatUpdateManyArgs>(args: Subset<T, SchedulerStatUpdateManyArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchedulerStats',
    'schedulerStats.updateMany',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchedulerStats',
    'schedulerStats.updateMany',
    args,
    []
  )
  SchedulerStat.upsert = <T extends SchedulerStatUpsertArgs>(args: Subset<T, SchedulerStatUpsertArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchedulerStat',
    'schedulerStats.upsert',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchedulerStat',
    'schedulerStats.upsert',
    args,
    []
  )
  SchedulerStat.delete = <T extends SchedulerStatDeleteArgs>(args: Subset<T, SchedulerStatDeleteArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchedulerStat',
    'schedulerStats.delete',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchedulerStat',
    'schedulerStats.delete',
    args,
    []
  )
  SchedulerStat.deleteMany = <T extends SchedulerStatDeleteManyArgs>(args: Subset<T, SchedulerStatDeleteManyArgs>) => args.select ? new SchedulerStatClient<'select' extends keyof T ? PromiseLike<SchedulerStatGetPayload<ExtractSchedulerStatArgsSelect<T>>> : SchedulerStatClient<SchedulerStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchedulerStats',
    'schedulerStats.deleteMany',
    args,
    []
  ) : new SchedulerStatClient<SchedulerStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchedulerStats',
    'schedulerStats.deleteMany',
    args,
    []
  )
  return SchedulerStat as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SchedulerStatClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SchedulerStatArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchedulerStat').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchedulerStat').catch(onrejected)
  }
}


// InputTypes

export type FindOneSchedulerStatArgs = {
  select?: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
}

export type FindOneSchedulerStatArgsWithSelect = {
  select: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
}

type ExtractFindOneSchedulerStatArgsSelect<S extends undefined | boolean | FindOneSchedulerStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSchedulerStatArgsWithSelect
  ? S['select']
  : true


export type FindManySchedulerStatArgs = {
  select?: SchedulerStatSelect
  where?: SchedulerStatWhereInput
  orderBy?: SchedulerStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySchedulerStatArgsWithSelect = {
  select: SchedulerStatSelect
  where?: SchedulerStatWhereInput
  orderBy?: SchedulerStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySchedulerStatArgsSelect<S extends undefined | boolean | FindManySchedulerStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySchedulerStatArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatCreateArgs = {
  select?: SchedulerStatSelect
  data: SchedulerStatCreateInput
}

export type SchedulerStatCreateArgsWithSelect = {
  select: SchedulerStatSelect
  data: SchedulerStatCreateInput
}

type ExtractSchedulerStatCreateArgsSelect<S extends undefined | boolean | SchedulerStatCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatCreateArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatUpdateArgs = {
  select?: SchedulerStatSelect
  data: SchedulerStatUpdateInput
  where: SchedulerStatWhereUniqueInput
}

export type SchedulerStatUpdateArgsWithSelect = {
  select: SchedulerStatSelect
  data: SchedulerStatUpdateInput
  where: SchedulerStatWhereUniqueInput
}

type ExtractSchedulerStatUpdateArgsSelect<S extends undefined | boolean | SchedulerStatUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatUpdateArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatUpdateManyArgs = {
  select?: SchedulerStatSelect
  data: SchedulerStatUpdateManyMutationInput
  where?: SchedulerStatWhereInput
}

export type SchedulerStatUpdateManyArgsWithSelect = {
  select: SchedulerStatSelect
  data: SchedulerStatUpdateManyMutationInput
  where?: SchedulerStatWhereInput
}

type ExtractSchedulerStatUpdateManyArgsSelect<S extends undefined | boolean | SchedulerStatUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatUpsertArgs = {
  select?: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
  create: SchedulerStatCreateInput
  update: SchedulerStatUpdateInput
}

export type SchedulerStatUpsertArgsWithSelect = {
  select: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
  create: SchedulerStatCreateInput
  update: SchedulerStatUpdateInput
}

type ExtractSchedulerStatUpsertArgsSelect<S extends undefined | boolean | SchedulerStatUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatUpsertArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatDeleteArgs = {
  select?: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
}

export type SchedulerStatDeleteArgsWithSelect = {
  select: SchedulerStatSelect
  where: SchedulerStatWhereUniqueInput
}

type ExtractSchedulerStatDeleteArgsSelect<S extends undefined | boolean | SchedulerStatDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatDeleteArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatDeleteManyArgs = {
  select?: SchedulerStatSelect
  where?: SchedulerStatWhereInput
}

export type SchedulerStatDeleteManyArgsWithSelect = {
  select: SchedulerStatSelect
  where?: SchedulerStatWhereInput
}

type ExtractSchedulerStatDeleteManyArgsSelect<S extends undefined | boolean | SchedulerStatDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SchedulerStatArgs = {
  select?: SchedulerStatSelect
}

export type SchedulerStatArgsWithSelect = {
  select: SchedulerStatSelect
}

type ExtractSchedulerStatArgsSelect<S extends undefined | boolean | SchedulerStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchedulerStatArgsWithSelect
  ? S['select']
  : true



/**
 * Model SchemaMigration
 */

export type SchemaMigration = {
  version: string
}

export type SchemaMigrationScalars = 'version'


export type SchemaMigrationSelect = {
  version?: boolean
}

type SchemaMigrationDefault = {
  version: true
}


type SchemaMigrationGetPayload<S extends boolean | SchemaMigrationSelect> = S extends true
  ? SchemaMigration
  : S extends SchemaMigrationSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SchemaMigrationDefault, S>>]: P extends SchemaMigrationScalars
        ? SchemaMigration[P]
        : never
    }
   : never

export interface SchemaMigrationDelegate {
  <T extends FindManySchemaMigrationArgs>(args?: Subset<T, FindManySchemaMigrationArgs>): PromiseLike<Array<SchemaMigrationGetPayload<ExtractFindManySchemaMigrationArgsSelect<T>>>>
  findOne<T extends FindOneSchemaMigrationArgs>(
    args: Subset<T, FindOneSchemaMigrationArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractFindOneSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  findMany<T extends FindManySchemaMigrationArgs>(
    args?: Subset<T, FindManySchemaMigrationArgs>
  ): PromiseLike<Array<SchemaMigrationGetPayload<ExtractFindManySchemaMigrationArgsSelect<T>>>>
  create<T extends SchemaMigrationCreateArgs>(
    args: Subset<T, SchemaMigrationCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationCreateArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  update<T extends SchemaMigrationUpdateArgs>(
    args: Subset<T, SchemaMigrationUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationUpdateArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  updateMany<T extends SchemaMigrationUpdateManyArgs>(
    args: Subset<T, SchemaMigrationUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationUpdateManyArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  upsert<T extends SchemaMigrationUpsertArgs>(
    args: Subset<T, SchemaMigrationUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationUpsertArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  delete<T extends SchemaMigrationDeleteArgs>(
    args: Subset<T, SchemaMigrationDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationDeleteArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
  deleteMany<T extends SchemaMigrationDeleteManyArgs>(
    args: Subset<T, SchemaMigrationDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationDeleteManyArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>
}
function SchemaMigrationDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SchemaMigrationDelegate {
  const SchemaMigration = <T extends FindManySchemaMigrationArgs>(args: Subset<T, FindManySchemaMigrationArgs>) => new SchemaMigrationClient<PromiseLike<Array<SchemaMigrationGetPayload<ExtractFindManySchemaMigrationArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'schemaMigrations', 'schemaMigrations', args, [])
  SchemaMigration.findOne = <T extends FindOneSchemaMigrationArgs>(args: Subset<T, FindOneSchemaMigrationArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'query',
    'schemaMigration',
    'schemaMigrations.findOne',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'query',
    'schemaMigration',
    'schemaMigrations.findOne',
    args,
    []
  )
  SchemaMigration.findMany = <T extends FindManySchemaMigrationArgs>(args: Subset<T, FindManySchemaMigrationArgs>) => new SchemaMigrationClient<PromiseLike<Array<SchemaMigrationGetPayload<ExtractFindManySchemaMigrationArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'schemaMigrations',
    'schemaMigrations.findMany',
    args,
    []
  )
  SchemaMigration.create = <T extends SchemaMigrationCreateArgs>(args: Subset<T, SchemaMigrationCreateArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'createSchemaMigration',
    'schemaMigrations.create',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'createSchemaMigration',
    'schemaMigrations.create',
    args,
    []
  )
  SchemaMigration.update = <T extends SchemaMigrationUpdateArgs>(args: Subset<T, SchemaMigrationUpdateArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchemaMigration',
    'schemaMigrations.update',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchemaMigration',
    'schemaMigrations.update',
    args,
    []
  )
  SchemaMigration.updateMany = <T extends SchemaMigrationUpdateManyArgs>(args: Subset<T, SchemaMigrationUpdateManyArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchemaMigrations',
    'schemaMigrations.updateMany',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchemaMigrations',
    'schemaMigrations.updateMany',
    args,
    []
  )
  SchemaMigration.upsert = <T extends SchemaMigrationUpsertArgs>(args: Subset<T, SchemaMigrationUpsertArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchemaMigration',
    'schemaMigrations.upsert',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchemaMigration',
    'schemaMigrations.upsert',
    args,
    []
  )
  SchemaMigration.delete = <T extends SchemaMigrationDeleteArgs>(args: Subset<T, SchemaMigrationDeleteArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchemaMigration',
    'schemaMigrations.delete',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchemaMigration',
    'schemaMigrations.delete',
    args,
    []
  )
  SchemaMigration.deleteMany = <T extends SchemaMigrationDeleteManyArgs>(args: Subset<T, SchemaMigrationDeleteManyArgs>) => args.select ? new SchemaMigrationClient<'select' extends keyof T ? PromiseLike<SchemaMigrationGetPayload<ExtractSchemaMigrationArgsSelect<T>>> : SchemaMigrationClient<SchemaMigration>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchemaMigrations',
    'schemaMigrations.deleteMany',
    args,
    []
  ) : new SchemaMigrationClient<SchemaMigration>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchemaMigrations',
    'schemaMigrations.deleteMany',
    args,
    []
  )
  return SchemaMigration as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SchemaMigrationClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SchemaMigrationArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchemaMigration').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchemaMigration').catch(onrejected)
  }
}


// InputTypes

export type FindOneSchemaMigrationArgs = {
  select?: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
}

export type FindOneSchemaMigrationArgsWithSelect = {
  select: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
}

type ExtractFindOneSchemaMigrationArgsSelect<S extends undefined | boolean | FindOneSchemaMigrationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSchemaMigrationArgsWithSelect
  ? S['select']
  : true


export type FindManySchemaMigrationArgs = {
  select?: SchemaMigrationSelect
  where?: SchemaMigrationWhereInput
  orderBy?: SchemaMigrationOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySchemaMigrationArgsWithSelect = {
  select: SchemaMigrationSelect
  where?: SchemaMigrationWhereInput
  orderBy?: SchemaMigrationOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySchemaMigrationArgsSelect<S extends undefined | boolean | FindManySchemaMigrationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySchemaMigrationArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationCreateArgs = {
  select?: SchemaMigrationSelect
  data: SchemaMigrationCreateInput
}

export type SchemaMigrationCreateArgsWithSelect = {
  select: SchemaMigrationSelect
  data: SchemaMigrationCreateInput
}

type ExtractSchemaMigrationCreateArgsSelect<S extends undefined | boolean | SchemaMigrationCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationCreateArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationUpdateArgs = {
  select?: SchemaMigrationSelect
  data: SchemaMigrationUpdateInput
  where: SchemaMigrationWhereUniqueInput
}

export type SchemaMigrationUpdateArgsWithSelect = {
  select: SchemaMigrationSelect
  data: SchemaMigrationUpdateInput
  where: SchemaMigrationWhereUniqueInput
}

type ExtractSchemaMigrationUpdateArgsSelect<S extends undefined | boolean | SchemaMigrationUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationUpdateArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationUpdateManyArgs = {
  select?: SchemaMigrationSelect
  data: SchemaMigrationUpdateManyMutationInput
  where?: SchemaMigrationWhereInput
}

export type SchemaMigrationUpdateManyArgsWithSelect = {
  select: SchemaMigrationSelect
  data: SchemaMigrationUpdateManyMutationInput
  where?: SchemaMigrationWhereInput
}

type ExtractSchemaMigrationUpdateManyArgsSelect<S extends undefined | boolean | SchemaMigrationUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationUpsertArgs = {
  select?: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
  create: SchemaMigrationCreateInput
  update: SchemaMigrationUpdateInput
}

export type SchemaMigrationUpsertArgsWithSelect = {
  select: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
  create: SchemaMigrationCreateInput
  update: SchemaMigrationUpdateInput
}

type ExtractSchemaMigrationUpsertArgsSelect<S extends undefined | boolean | SchemaMigrationUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationUpsertArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDeleteArgs = {
  select?: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
}

export type SchemaMigrationDeleteArgsWithSelect = {
  select: SchemaMigrationSelect
  where: SchemaMigrationWhereUniqueInput
}

type ExtractSchemaMigrationDeleteArgsSelect<S extends undefined | boolean | SchemaMigrationDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDeleteArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDeleteManyArgs = {
  select?: SchemaMigrationSelect
  where?: SchemaMigrationWhereInput
}

export type SchemaMigrationDeleteManyArgsWithSelect = {
  select: SchemaMigrationSelect
  where?: SchemaMigrationWhereInput
}

type ExtractSchemaMigrationDeleteManyArgsSelect<S extends undefined | boolean | SchemaMigrationDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationArgs = {
  select?: SchemaMigrationSelect
}

export type SchemaMigrationArgsWithSelect = {
  select: SchemaMigrationSelect
}

type ExtractSchemaMigrationArgsSelect<S extends undefined | boolean | SchemaMigrationArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationArgsWithSelect
  ? S['select']
  : true



/**
 * Model SchemaMigrationDetail
 */

export type SchemaMigrationDetail = {
  id: number
  createdAt: string
  direction: string | null
  duration: number | null
  gitVersion: string | null
  hostname: string | null
  name: string | null
  railsVersion: string | null
  version: string
}

export type SchemaMigrationDetailScalars = 'id' | 'createdAt' | 'direction' | 'duration' | 'gitVersion' | 'hostname' | 'name' | 'railsVersion' | 'version'


export type SchemaMigrationDetailSelect = {
  id?: boolean
  createdAt?: boolean
  direction?: boolean
  duration?: boolean
  gitVersion?: boolean
  hostname?: boolean
  name?: boolean
  railsVersion?: boolean
  version?: boolean
}

type SchemaMigrationDetailDefault = {
  id: true
  createdAt: true
  direction: true
  duration: true
  gitVersion: true
  hostname: true
  name: true
  railsVersion: true
  version: true
}


type SchemaMigrationDetailGetPayload<S extends boolean | SchemaMigrationDetailSelect> = S extends true
  ? SchemaMigrationDetail
  : S extends SchemaMigrationDetailSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SchemaMigrationDetailDefault, S>>]: P extends SchemaMigrationDetailScalars
        ? SchemaMigrationDetail[P]
        : never
    }
   : never

export interface SchemaMigrationDetailDelegate {
  <T extends FindManySchemaMigrationDetailArgs>(args?: Subset<T, FindManySchemaMigrationDetailArgs>): PromiseLike<Array<SchemaMigrationDetailGetPayload<ExtractFindManySchemaMigrationDetailArgsSelect<T>>>>
  findOne<T extends FindOneSchemaMigrationDetailArgs>(
    args: Subset<T, FindOneSchemaMigrationDetailArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractFindOneSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  findMany<T extends FindManySchemaMigrationDetailArgs>(
    args?: Subset<T, FindManySchemaMigrationDetailArgs>
  ): PromiseLike<Array<SchemaMigrationDetailGetPayload<ExtractFindManySchemaMigrationDetailArgsSelect<T>>>>
  create<T extends SchemaMigrationDetailCreateArgs>(
    args: Subset<T, SchemaMigrationDetailCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailCreateArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  update<T extends SchemaMigrationDetailUpdateArgs>(
    args: Subset<T, SchemaMigrationDetailUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailUpdateArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  updateMany<T extends SchemaMigrationDetailUpdateManyArgs>(
    args: Subset<T, SchemaMigrationDetailUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailUpdateManyArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  upsert<T extends SchemaMigrationDetailUpsertArgs>(
    args: Subset<T, SchemaMigrationDetailUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailUpsertArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  delete<T extends SchemaMigrationDetailDeleteArgs>(
    args: Subset<T, SchemaMigrationDetailDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailDeleteArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
  deleteMany<T extends SchemaMigrationDetailDeleteManyArgs>(
    args: Subset<T, SchemaMigrationDetailDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailDeleteManyArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>
}
function SchemaMigrationDetailDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SchemaMigrationDetailDelegate {
  const SchemaMigrationDetail = <T extends FindManySchemaMigrationDetailArgs>(args: Subset<T, FindManySchemaMigrationDetailArgs>) => new SchemaMigrationDetailClient<PromiseLike<Array<SchemaMigrationDetailGetPayload<ExtractFindManySchemaMigrationDetailArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'schemaMigrationDetails', 'schemaMigrationDetails', args, [])
  SchemaMigrationDetail.findOne = <T extends FindOneSchemaMigrationDetailArgs>(args: Subset<T, FindOneSchemaMigrationDetailArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'query',
    'schemaMigrationDetail',
    'schemaMigrationDetails.findOne',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'query',
    'schemaMigrationDetail',
    'schemaMigrationDetails.findOne',
    args,
    []
  )
  SchemaMigrationDetail.findMany = <T extends FindManySchemaMigrationDetailArgs>(args: Subset<T, FindManySchemaMigrationDetailArgs>) => new SchemaMigrationDetailClient<PromiseLike<Array<SchemaMigrationDetailGetPayload<ExtractFindManySchemaMigrationDetailArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'schemaMigrationDetails',
    'schemaMigrationDetails.findMany',
    args,
    []
  )
  SchemaMigrationDetail.create = <T extends SchemaMigrationDetailCreateArgs>(args: Subset<T, SchemaMigrationDetailCreateArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'createSchemaMigrationDetail',
    'schemaMigrationDetails.create',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'createSchemaMigrationDetail',
    'schemaMigrationDetails.create',
    args,
    []
  )
  SchemaMigrationDetail.update = <T extends SchemaMigrationDetailUpdateArgs>(args: Subset<T, SchemaMigrationDetailUpdateArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchemaMigrationDetail',
    'schemaMigrationDetails.update',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'updateSchemaMigrationDetail',
    'schemaMigrationDetails.update',
    args,
    []
  )
  SchemaMigrationDetail.updateMany = <T extends SchemaMigrationDetailUpdateManyArgs>(args: Subset<T, SchemaMigrationDetailUpdateManyArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchemaMigrationDetails',
    'schemaMigrationDetails.updateMany',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySchemaMigrationDetails',
    'schemaMigrationDetails.updateMany',
    args,
    []
  )
  SchemaMigrationDetail.upsert = <T extends SchemaMigrationDetailUpsertArgs>(args: Subset<T, SchemaMigrationDetailUpsertArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchemaMigrationDetail',
    'schemaMigrationDetails.upsert',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSchemaMigrationDetail',
    'schemaMigrationDetails.upsert',
    args,
    []
  )
  SchemaMigrationDetail.delete = <T extends SchemaMigrationDetailDeleteArgs>(args: Subset<T, SchemaMigrationDetailDeleteArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchemaMigrationDetail',
    'schemaMigrationDetails.delete',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSchemaMigrationDetail',
    'schemaMigrationDetails.delete',
    args,
    []
  )
  SchemaMigrationDetail.deleteMany = <T extends SchemaMigrationDetailDeleteManyArgs>(args: Subset<T, SchemaMigrationDetailDeleteManyArgs>) => args.select ? new SchemaMigrationDetailClient<'select' extends keyof T ? PromiseLike<SchemaMigrationDetailGetPayload<ExtractSchemaMigrationDetailArgsSelect<T>>> : SchemaMigrationDetailClient<SchemaMigrationDetail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchemaMigrationDetails',
    'schemaMigrationDetails.deleteMany',
    args,
    []
  ) : new SchemaMigrationDetailClient<SchemaMigrationDetail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySchemaMigrationDetails',
    'schemaMigrationDetails.deleteMany',
    args,
    []
  )
  return SchemaMigrationDetail as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SchemaMigrationDetailClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SchemaMigrationDetailArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchemaMigrationDetail').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SchemaMigrationDetail').catch(onrejected)
  }
}


// InputTypes

export type FindOneSchemaMigrationDetailArgs = {
  select?: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
}

export type FindOneSchemaMigrationDetailArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
}

type ExtractFindOneSchemaMigrationDetailArgsSelect<S extends undefined | boolean | FindOneSchemaMigrationDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSchemaMigrationDetailArgsWithSelect
  ? S['select']
  : true


export type FindManySchemaMigrationDetailArgs = {
  select?: SchemaMigrationDetailSelect
  where?: SchemaMigrationDetailWhereInput
  orderBy?: SchemaMigrationDetailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySchemaMigrationDetailArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  where?: SchemaMigrationDetailWhereInput
  orderBy?: SchemaMigrationDetailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySchemaMigrationDetailArgsSelect<S extends undefined | boolean | FindManySchemaMigrationDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySchemaMigrationDetailArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailCreateArgs = {
  select?: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailCreateInput
}

export type SchemaMigrationDetailCreateArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailCreateInput
}

type ExtractSchemaMigrationDetailCreateArgsSelect<S extends undefined | boolean | SchemaMigrationDetailCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailCreateArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailUpdateArgs = {
  select?: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailUpdateInput
  where: SchemaMigrationDetailWhereUniqueInput
}

export type SchemaMigrationDetailUpdateArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailUpdateInput
  where: SchemaMigrationDetailWhereUniqueInput
}

type ExtractSchemaMigrationDetailUpdateArgsSelect<S extends undefined | boolean | SchemaMigrationDetailUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailUpdateArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailUpdateManyArgs = {
  select?: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailUpdateManyMutationInput
  where?: SchemaMigrationDetailWhereInput
}

export type SchemaMigrationDetailUpdateManyArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  data: SchemaMigrationDetailUpdateManyMutationInput
  where?: SchemaMigrationDetailWhereInput
}

type ExtractSchemaMigrationDetailUpdateManyArgsSelect<S extends undefined | boolean | SchemaMigrationDetailUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailUpsertArgs = {
  select?: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
  create: SchemaMigrationDetailCreateInput
  update: SchemaMigrationDetailUpdateInput
}

export type SchemaMigrationDetailUpsertArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
  create: SchemaMigrationDetailCreateInput
  update: SchemaMigrationDetailUpdateInput
}

type ExtractSchemaMigrationDetailUpsertArgsSelect<S extends undefined | boolean | SchemaMigrationDetailUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailUpsertArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailDeleteArgs = {
  select?: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
}

export type SchemaMigrationDetailDeleteArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  where: SchemaMigrationDetailWhereUniqueInput
}

type ExtractSchemaMigrationDetailDeleteArgsSelect<S extends undefined | boolean | SchemaMigrationDetailDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailDeleteArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailDeleteManyArgs = {
  select?: SchemaMigrationDetailSelect
  where?: SchemaMigrationDetailWhereInput
}

export type SchemaMigrationDetailDeleteManyArgsWithSelect = {
  select: SchemaMigrationDetailSelect
  where?: SchemaMigrationDetailWhereInput
}

type ExtractSchemaMigrationDetailDeleteManyArgsSelect<S extends undefined | boolean | SchemaMigrationDetailDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SchemaMigrationDetailArgs = {
  select?: SchemaMigrationDetailSelect
}

export type SchemaMigrationDetailArgsWithSelect = {
  select: SchemaMigrationDetailSelect
}

type ExtractSchemaMigrationDetailArgsSelect<S extends undefined | boolean | SchemaMigrationDetailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SchemaMigrationDetailArgsWithSelect
  ? S['select']
  : true



/**
 * Model ScreenedEmail
 */

export type ScreenedEmail = {
  id: number
  actionType: number
  createdAt: string
  email: string
  lastMatchAt: string | null
  matchCount: number
  updatedAt: string
}

export type ScreenedEmailScalars = 'id' | 'actionType' | 'createdAt' | 'email' | 'lastMatchAt' | 'matchCount' | 'updatedAt'


export type ScreenedEmailSelect = {
  id?: boolean
  actionType?: boolean
  createdAt?: boolean
  email?: boolean
  lastMatchAt?: boolean
  matchCount?: boolean
  updatedAt?: boolean
}

type ScreenedEmailDefault = {
  id: true
  actionType: true
  createdAt: true
  email: true
  lastMatchAt: true
  matchCount: true
  updatedAt: true
}


type ScreenedEmailGetPayload<S extends boolean | ScreenedEmailSelect> = S extends true
  ? ScreenedEmail
  : S extends ScreenedEmailSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ScreenedEmailDefault, S>>]: P extends ScreenedEmailScalars
        ? ScreenedEmail[P]
        : never
    }
   : never

export interface ScreenedEmailDelegate {
  <T extends FindManyScreenedEmailArgs>(args?: Subset<T, FindManyScreenedEmailArgs>): PromiseLike<Array<ScreenedEmailGetPayload<ExtractFindManyScreenedEmailArgsSelect<T>>>>
  findOne<T extends FindOneScreenedEmailArgs>(
    args: Subset<T, FindOneScreenedEmailArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractFindOneScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  findMany<T extends FindManyScreenedEmailArgs>(
    args?: Subset<T, FindManyScreenedEmailArgs>
  ): PromiseLike<Array<ScreenedEmailGetPayload<ExtractFindManyScreenedEmailArgsSelect<T>>>>
  create<T extends ScreenedEmailCreateArgs>(
    args: Subset<T, ScreenedEmailCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailCreateArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  update<T extends ScreenedEmailUpdateArgs>(
    args: Subset<T, ScreenedEmailUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailUpdateArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  updateMany<T extends ScreenedEmailUpdateManyArgs>(
    args: Subset<T, ScreenedEmailUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailUpdateManyArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  upsert<T extends ScreenedEmailUpsertArgs>(
    args: Subset<T, ScreenedEmailUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailUpsertArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  delete<T extends ScreenedEmailDeleteArgs>(
    args: Subset<T, ScreenedEmailDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailDeleteArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
  deleteMany<T extends ScreenedEmailDeleteManyArgs>(
    args: Subset<T, ScreenedEmailDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailDeleteManyArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>
}
function ScreenedEmailDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ScreenedEmailDelegate {
  const ScreenedEmail = <T extends FindManyScreenedEmailArgs>(args: Subset<T, FindManyScreenedEmailArgs>) => new ScreenedEmailClient<PromiseLike<Array<ScreenedEmailGetPayload<ExtractFindManyScreenedEmailArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'screenedEmails', 'screenedEmails', args, [])
  ScreenedEmail.findOne = <T extends FindOneScreenedEmailArgs>(args: Subset<T, FindOneScreenedEmailArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'query',
    'screenedEmail',
    'screenedEmails.findOne',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'query',
    'screenedEmail',
    'screenedEmails.findOne',
    args,
    []
  )
  ScreenedEmail.findMany = <T extends FindManyScreenedEmailArgs>(args: Subset<T, FindManyScreenedEmailArgs>) => new ScreenedEmailClient<PromiseLike<Array<ScreenedEmailGetPayload<ExtractFindManyScreenedEmailArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'screenedEmails',
    'screenedEmails.findMany',
    args,
    []
  )
  ScreenedEmail.create = <T extends ScreenedEmailCreateArgs>(args: Subset<T, ScreenedEmailCreateArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedEmail',
    'screenedEmails.create',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedEmail',
    'screenedEmails.create',
    args,
    []
  )
  ScreenedEmail.update = <T extends ScreenedEmailUpdateArgs>(args: Subset<T, ScreenedEmailUpdateArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedEmail',
    'screenedEmails.update',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedEmail',
    'screenedEmails.update',
    args,
    []
  )
  ScreenedEmail.updateMany = <T extends ScreenedEmailUpdateManyArgs>(args: Subset<T, ScreenedEmailUpdateManyArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedEmails',
    'screenedEmails.updateMany',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedEmails',
    'screenedEmails.updateMany',
    args,
    []
  )
  ScreenedEmail.upsert = <T extends ScreenedEmailUpsertArgs>(args: Subset<T, ScreenedEmailUpsertArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedEmail',
    'screenedEmails.upsert',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedEmail',
    'screenedEmails.upsert',
    args,
    []
  )
  ScreenedEmail.delete = <T extends ScreenedEmailDeleteArgs>(args: Subset<T, ScreenedEmailDeleteArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedEmail',
    'screenedEmails.delete',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedEmail',
    'screenedEmails.delete',
    args,
    []
  )
  ScreenedEmail.deleteMany = <T extends ScreenedEmailDeleteManyArgs>(args: Subset<T, ScreenedEmailDeleteManyArgs>) => args.select ? new ScreenedEmailClient<'select' extends keyof T ? PromiseLike<ScreenedEmailGetPayload<ExtractScreenedEmailArgsSelect<T>>> : ScreenedEmailClient<ScreenedEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedEmails',
    'screenedEmails.deleteMany',
    args,
    []
  ) : new ScreenedEmailClient<ScreenedEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedEmails',
    'screenedEmails.deleteMany',
    args,
    []
  )
  return ScreenedEmail as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ScreenedEmailClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ScreenedEmailArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedEmail').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedEmail').catch(onrejected)
  }
}


// InputTypes

export type FindOneScreenedEmailArgs = {
  select?: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
}

export type FindOneScreenedEmailArgsWithSelect = {
  select: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
}

type ExtractFindOneScreenedEmailArgsSelect<S extends undefined | boolean | FindOneScreenedEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneScreenedEmailArgsWithSelect
  ? S['select']
  : true


export type FindManyScreenedEmailArgs = {
  select?: ScreenedEmailSelect
  where?: ScreenedEmailWhereInput
  orderBy?: ScreenedEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyScreenedEmailArgsWithSelect = {
  select: ScreenedEmailSelect
  where?: ScreenedEmailWhereInput
  orderBy?: ScreenedEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyScreenedEmailArgsSelect<S extends undefined | boolean | FindManyScreenedEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyScreenedEmailArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailCreateArgs = {
  select?: ScreenedEmailSelect
  data: ScreenedEmailCreateInput
}

export type ScreenedEmailCreateArgsWithSelect = {
  select: ScreenedEmailSelect
  data: ScreenedEmailCreateInput
}

type ExtractScreenedEmailCreateArgsSelect<S extends undefined | boolean | ScreenedEmailCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailCreateArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailUpdateArgs = {
  select?: ScreenedEmailSelect
  data: ScreenedEmailUpdateInput
  where: ScreenedEmailWhereUniqueInput
}

export type ScreenedEmailUpdateArgsWithSelect = {
  select: ScreenedEmailSelect
  data: ScreenedEmailUpdateInput
  where: ScreenedEmailWhereUniqueInput
}

type ExtractScreenedEmailUpdateArgsSelect<S extends undefined | boolean | ScreenedEmailUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailUpdateArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailUpdateManyArgs = {
  select?: ScreenedEmailSelect
  data: ScreenedEmailUpdateManyMutationInput
  where?: ScreenedEmailWhereInput
}

export type ScreenedEmailUpdateManyArgsWithSelect = {
  select: ScreenedEmailSelect
  data: ScreenedEmailUpdateManyMutationInput
  where?: ScreenedEmailWhereInput
}

type ExtractScreenedEmailUpdateManyArgsSelect<S extends undefined | boolean | ScreenedEmailUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailUpsertArgs = {
  select?: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
  create: ScreenedEmailCreateInput
  update: ScreenedEmailUpdateInput
}

export type ScreenedEmailUpsertArgsWithSelect = {
  select: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
  create: ScreenedEmailCreateInput
  update: ScreenedEmailUpdateInput
}

type ExtractScreenedEmailUpsertArgsSelect<S extends undefined | boolean | ScreenedEmailUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailUpsertArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailDeleteArgs = {
  select?: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
}

export type ScreenedEmailDeleteArgsWithSelect = {
  select: ScreenedEmailSelect
  where: ScreenedEmailWhereUniqueInput
}

type ExtractScreenedEmailDeleteArgsSelect<S extends undefined | boolean | ScreenedEmailDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailDeleteArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailDeleteManyArgs = {
  select?: ScreenedEmailSelect
  where?: ScreenedEmailWhereInput
}

export type ScreenedEmailDeleteManyArgsWithSelect = {
  select: ScreenedEmailSelect
  where?: ScreenedEmailWhereInput
}

type ExtractScreenedEmailDeleteManyArgsSelect<S extends undefined | boolean | ScreenedEmailDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedEmailArgs = {
  select?: ScreenedEmailSelect
}

export type ScreenedEmailArgsWithSelect = {
  select: ScreenedEmailSelect
}

type ExtractScreenedEmailArgsSelect<S extends undefined | boolean | ScreenedEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedEmailArgsWithSelect
  ? S['select']
  : true



/**
 * Model ScreenedIpAddress
 */

export type ScreenedIpAddress = {
  id: number
  actionType: number
  createdAt: string
  lastMatchAt: string | null
  matchCount: number
  updatedAt: string
}

export type ScreenedIpAddressScalars = 'id' | 'actionType' | 'createdAt' | 'lastMatchAt' | 'matchCount' | 'updatedAt'


export type ScreenedIpAddressSelect = {
  id?: boolean
  actionType?: boolean
  createdAt?: boolean
  lastMatchAt?: boolean
  matchCount?: boolean
  updatedAt?: boolean
}

type ScreenedIpAddressDefault = {
  id: true
  actionType: true
  createdAt: true
  lastMatchAt: true
  matchCount: true
  updatedAt: true
}


type ScreenedIpAddressGetPayload<S extends boolean | ScreenedIpAddressSelect> = S extends true
  ? ScreenedIpAddress
  : S extends ScreenedIpAddressSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ScreenedIpAddressDefault, S>>]: P extends ScreenedIpAddressScalars
        ? ScreenedIpAddress[P]
        : never
    }
   : never

export interface ScreenedIpAddressDelegate {
  <T extends FindManyScreenedIpAddressArgs>(args?: Subset<T, FindManyScreenedIpAddressArgs>): PromiseLike<Array<ScreenedIpAddressGetPayload<ExtractFindManyScreenedIpAddressArgsSelect<T>>>>
  findOne<T extends FindOneScreenedIpAddressArgs>(
    args: Subset<T, FindOneScreenedIpAddressArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractFindOneScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  findMany<T extends FindManyScreenedIpAddressArgs>(
    args?: Subset<T, FindManyScreenedIpAddressArgs>
  ): PromiseLike<Array<ScreenedIpAddressGetPayload<ExtractFindManyScreenedIpAddressArgsSelect<T>>>>
  create<T extends ScreenedIpAddressCreateArgs>(
    args: Subset<T, ScreenedIpAddressCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressCreateArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  update<T extends ScreenedIpAddressUpdateArgs>(
    args: Subset<T, ScreenedIpAddressUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressUpdateArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  updateMany<T extends ScreenedIpAddressUpdateManyArgs>(
    args: Subset<T, ScreenedIpAddressUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressUpdateManyArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  upsert<T extends ScreenedIpAddressUpsertArgs>(
    args: Subset<T, ScreenedIpAddressUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressUpsertArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  delete<T extends ScreenedIpAddressDeleteArgs>(
    args: Subset<T, ScreenedIpAddressDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressDeleteArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
  deleteMany<T extends ScreenedIpAddressDeleteManyArgs>(
    args: Subset<T, ScreenedIpAddressDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressDeleteManyArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>
}
function ScreenedIpAddressDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ScreenedIpAddressDelegate {
  const ScreenedIpAddress = <T extends FindManyScreenedIpAddressArgs>(args: Subset<T, FindManyScreenedIpAddressArgs>) => new ScreenedIpAddressClient<PromiseLike<Array<ScreenedIpAddressGetPayload<ExtractFindManyScreenedIpAddressArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'screenedIpAddresses', 'screenedIpAddresses', args, [])
  ScreenedIpAddress.findOne = <T extends FindOneScreenedIpAddressArgs>(args: Subset<T, FindOneScreenedIpAddressArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'query',
    'screenedIpAddress',
    'screenedIpAddresses.findOne',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'query',
    'screenedIpAddress',
    'screenedIpAddresses.findOne',
    args,
    []
  )
  ScreenedIpAddress.findMany = <T extends FindManyScreenedIpAddressArgs>(args: Subset<T, FindManyScreenedIpAddressArgs>) => new ScreenedIpAddressClient<PromiseLike<Array<ScreenedIpAddressGetPayload<ExtractFindManyScreenedIpAddressArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'screenedIpAddresses',
    'screenedIpAddresses.findMany',
    args,
    []
  )
  ScreenedIpAddress.create = <T extends ScreenedIpAddressCreateArgs>(args: Subset<T, ScreenedIpAddressCreateArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedIpAddress',
    'screenedIpAddresses.create',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedIpAddress',
    'screenedIpAddresses.create',
    args,
    []
  )
  ScreenedIpAddress.update = <T extends ScreenedIpAddressUpdateArgs>(args: Subset<T, ScreenedIpAddressUpdateArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedIpAddress',
    'screenedIpAddresses.update',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedIpAddress',
    'screenedIpAddresses.update',
    args,
    []
  )
  ScreenedIpAddress.updateMany = <T extends ScreenedIpAddressUpdateManyArgs>(args: Subset<T, ScreenedIpAddressUpdateManyArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedIpAddresses',
    'screenedIpAddresses.updateMany',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedIpAddresses',
    'screenedIpAddresses.updateMany',
    args,
    []
  )
  ScreenedIpAddress.upsert = <T extends ScreenedIpAddressUpsertArgs>(args: Subset<T, ScreenedIpAddressUpsertArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedIpAddress',
    'screenedIpAddresses.upsert',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedIpAddress',
    'screenedIpAddresses.upsert',
    args,
    []
  )
  ScreenedIpAddress.delete = <T extends ScreenedIpAddressDeleteArgs>(args: Subset<T, ScreenedIpAddressDeleteArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedIpAddress',
    'screenedIpAddresses.delete',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedIpAddress',
    'screenedIpAddresses.delete',
    args,
    []
  )
  ScreenedIpAddress.deleteMany = <T extends ScreenedIpAddressDeleteManyArgs>(args: Subset<T, ScreenedIpAddressDeleteManyArgs>) => args.select ? new ScreenedIpAddressClient<'select' extends keyof T ? PromiseLike<ScreenedIpAddressGetPayload<ExtractScreenedIpAddressArgsSelect<T>>> : ScreenedIpAddressClient<ScreenedIpAddress>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedIpAddresses',
    'screenedIpAddresses.deleteMany',
    args,
    []
  ) : new ScreenedIpAddressClient<ScreenedIpAddress>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedIpAddresses',
    'screenedIpAddresses.deleteMany',
    args,
    []
  )
  return ScreenedIpAddress as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ScreenedIpAddressClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ScreenedIpAddressArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedIpAddress').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedIpAddress').catch(onrejected)
  }
}


// InputTypes

export type FindOneScreenedIpAddressArgs = {
  select?: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
}

export type FindOneScreenedIpAddressArgsWithSelect = {
  select: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
}

type ExtractFindOneScreenedIpAddressArgsSelect<S extends undefined | boolean | FindOneScreenedIpAddressArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneScreenedIpAddressArgsWithSelect
  ? S['select']
  : true


export type FindManyScreenedIpAddressArgs = {
  select?: ScreenedIpAddressSelect
  where?: ScreenedIpAddressWhereInput
  orderBy?: ScreenedIpAddressOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyScreenedIpAddressArgsWithSelect = {
  select: ScreenedIpAddressSelect
  where?: ScreenedIpAddressWhereInput
  orderBy?: ScreenedIpAddressOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyScreenedIpAddressArgsSelect<S extends undefined | boolean | FindManyScreenedIpAddressArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyScreenedIpAddressArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressCreateArgs = {
  select?: ScreenedIpAddressSelect
  data: ScreenedIpAddressCreateInput
}

export type ScreenedIpAddressCreateArgsWithSelect = {
  select: ScreenedIpAddressSelect
  data: ScreenedIpAddressCreateInput
}

type ExtractScreenedIpAddressCreateArgsSelect<S extends undefined | boolean | ScreenedIpAddressCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressCreateArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressUpdateArgs = {
  select?: ScreenedIpAddressSelect
  data: ScreenedIpAddressUpdateInput
  where: ScreenedIpAddressWhereUniqueInput
}

export type ScreenedIpAddressUpdateArgsWithSelect = {
  select: ScreenedIpAddressSelect
  data: ScreenedIpAddressUpdateInput
  where: ScreenedIpAddressWhereUniqueInput
}

type ExtractScreenedIpAddressUpdateArgsSelect<S extends undefined | boolean | ScreenedIpAddressUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressUpdateArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressUpdateManyArgs = {
  select?: ScreenedIpAddressSelect
  data: ScreenedIpAddressUpdateManyMutationInput
  where?: ScreenedIpAddressWhereInput
}

export type ScreenedIpAddressUpdateManyArgsWithSelect = {
  select: ScreenedIpAddressSelect
  data: ScreenedIpAddressUpdateManyMutationInput
  where?: ScreenedIpAddressWhereInput
}

type ExtractScreenedIpAddressUpdateManyArgsSelect<S extends undefined | boolean | ScreenedIpAddressUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressUpsertArgs = {
  select?: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
  create: ScreenedIpAddressCreateInput
  update: ScreenedIpAddressUpdateInput
}

export type ScreenedIpAddressUpsertArgsWithSelect = {
  select: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
  create: ScreenedIpAddressCreateInput
  update: ScreenedIpAddressUpdateInput
}

type ExtractScreenedIpAddressUpsertArgsSelect<S extends undefined | boolean | ScreenedIpAddressUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressUpsertArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressDeleteArgs = {
  select?: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
}

export type ScreenedIpAddressDeleteArgsWithSelect = {
  select: ScreenedIpAddressSelect
  where: ScreenedIpAddressWhereUniqueInput
}

type ExtractScreenedIpAddressDeleteArgsSelect<S extends undefined | boolean | ScreenedIpAddressDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressDeleteArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressDeleteManyArgs = {
  select?: ScreenedIpAddressSelect
  where?: ScreenedIpAddressWhereInput
}

export type ScreenedIpAddressDeleteManyArgsWithSelect = {
  select: ScreenedIpAddressSelect
  where?: ScreenedIpAddressWhereInput
}

type ExtractScreenedIpAddressDeleteManyArgsSelect<S extends undefined | boolean | ScreenedIpAddressDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedIpAddressArgs = {
  select?: ScreenedIpAddressSelect
}

export type ScreenedIpAddressArgsWithSelect = {
  select: ScreenedIpAddressSelect
}

type ExtractScreenedIpAddressArgsSelect<S extends undefined | boolean | ScreenedIpAddressArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedIpAddressArgsWithSelect
  ? S['select']
  : true



/**
 * Model ScreenedUrl
 */

export type ScreenedUrl = {
  id: number
  actionType: number
  createdAt: string
  domain: string
  lastMatchAt: string | null
  matchCount: number
  updatedAt: string
  url: string
}

export type ScreenedUrlScalars = 'id' | 'actionType' | 'createdAt' | 'domain' | 'lastMatchAt' | 'matchCount' | 'updatedAt' | 'url'


export type ScreenedUrlSelect = {
  id?: boolean
  actionType?: boolean
  createdAt?: boolean
  domain?: boolean
  lastMatchAt?: boolean
  matchCount?: boolean
  updatedAt?: boolean
  url?: boolean
}

type ScreenedUrlDefault = {
  id: true
  actionType: true
  createdAt: true
  domain: true
  lastMatchAt: true
  matchCount: true
  updatedAt: true
  url: true
}


type ScreenedUrlGetPayload<S extends boolean | ScreenedUrlSelect> = S extends true
  ? ScreenedUrl
  : S extends ScreenedUrlSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ScreenedUrlDefault, S>>]: P extends ScreenedUrlScalars
        ? ScreenedUrl[P]
        : never
    }
   : never

export interface ScreenedUrlDelegate {
  <T extends FindManyScreenedUrlArgs>(args?: Subset<T, FindManyScreenedUrlArgs>): PromiseLike<Array<ScreenedUrlGetPayload<ExtractFindManyScreenedUrlArgsSelect<T>>>>
  findOne<T extends FindOneScreenedUrlArgs>(
    args: Subset<T, FindOneScreenedUrlArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractFindOneScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  findMany<T extends FindManyScreenedUrlArgs>(
    args?: Subset<T, FindManyScreenedUrlArgs>
  ): PromiseLike<Array<ScreenedUrlGetPayload<ExtractFindManyScreenedUrlArgsSelect<T>>>>
  create<T extends ScreenedUrlCreateArgs>(
    args: Subset<T, ScreenedUrlCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlCreateArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  update<T extends ScreenedUrlUpdateArgs>(
    args: Subset<T, ScreenedUrlUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlUpdateArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  updateMany<T extends ScreenedUrlUpdateManyArgs>(
    args: Subset<T, ScreenedUrlUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlUpdateManyArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  upsert<T extends ScreenedUrlUpsertArgs>(
    args: Subset<T, ScreenedUrlUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlUpsertArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  delete<T extends ScreenedUrlDeleteArgs>(
    args: Subset<T, ScreenedUrlDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlDeleteArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
  deleteMany<T extends ScreenedUrlDeleteManyArgs>(
    args: Subset<T, ScreenedUrlDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlDeleteManyArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>
}
function ScreenedUrlDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ScreenedUrlDelegate {
  const ScreenedUrl = <T extends FindManyScreenedUrlArgs>(args: Subset<T, FindManyScreenedUrlArgs>) => new ScreenedUrlClient<PromiseLike<Array<ScreenedUrlGetPayload<ExtractFindManyScreenedUrlArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'screenedUrls', 'screenedUrls', args, [])
  ScreenedUrl.findOne = <T extends FindOneScreenedUrlArgs>(args: Subset<T, FindOneScreenedUrlArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'query',
    'screenedUrl',
    'screenedUrls.findOne',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'query',
    'screenedUrl',
    'screenedUrls.findOne',
    args,
    []
  )
  ScreenedUrl.findMany = <T extends FindManyScreenedUrlArgs>(args: Subset<T, FindManyScreenedUrlArgs>) => new ScreenedUrlClient<PromiseLike<Array<ScreenedUrlGetPayload<ExtractFindManyScreenedUrlArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'screenedUrls',
    'screenedUrls.findMany',
    args,
    []
  )
  ScreenedUrl.create = <T extends ScreenedUrlCreateArgs>(args: Subset<T, ScreenedUrlCreateArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedUrl',
    'screenedUrls.create',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'createScreenedUrl',
    'screenedUrls.create',
    args,
    []
  )
  ScreenedUrl.update = <T extends ScreenedUrlUpdateArgs>(args: Subset<T, ScreenedUrlUpdateArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedUrl',
    'screenedUrls.update',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'updateScreenedUrl',
    'screenedUrls.update',
    args,
    []
  )
  ScreenedUrl.updateMany = <T extends ScreenedUrlUpdateManyArgs>(args: Subset<T, ScreenedUrlUpdateManyArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedUrls',
    'screenedUrls.updateMany',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyScreenedUrls',
    'screenedUrls.updateMany',
    args,
    []
  )
  ScreenedUrl.upsert = <T extends ScreenedUrlUpsertArgs>(args: Subset<T, ScreenedUrlUpsertArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedUrl',
    'screenedUrls.upsert',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'upsertScreenedUrl',
    'screenedUrls.upsert',
    args,
    []
  )
  ScreenedUrl.delete = <T extends ScreenedUrlDeleteArgs>(args: Subset<T, ScreenedUrlDeleteArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedUrl',
    'screenedUrls.delete',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'deleteScreenedUrl',
    'screenedUrls.delete',
    args,
    []
  )
  ScreenedUrl.deleteMany = <T extends ScreenedUrlDeleteManyArgs>(args: Subset<T, ScreenedUrlDeleteManyArgs>) => args.select ? new ScreenedUrlClient<'select' extends keyof T ? PromiseLike<ScreenedUrlGetPayload<ExtractScreenedUrlArgsSelect<T>>> : ScreenedUrlClient<ScreenedUrl>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedUrls',
    'screenedUrls.deleteMany',
    args,
    []
  ) : new ScreenedUrlClient<ScreenedUrl>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyScreenedUrls',
    'screenedUrls.deleteMany',
    args,
    []
  )
  return ScreenedUrl as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ScreenedUrlClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ScreenedUrlArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedUrl').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ScreenedUrl').catch(onrejected)
  }
}


// InputTypes

export type FindOneScreenedUrlArgs = {
  select?: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
}

export type FindOneScreenedUrlArgsWithSelect = {
  select: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
}

type ExtractFindOneScreenedUrlArgsSelect<S extends undefined | boolean | FindOneScreenedUrlArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneScreenedUrlArgsWithSelect
  ? S['select']
  : true


export type FindManyScreenedUrlArgs = {
  select?: ScreenedUrlSelect
  where?: ScreenedUrlWhereInput
  orderBy?: ScreenedUrlOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyScreenedUrlArgsWithSelect = {
  select: ScreenedUrlSelect
  where?: ScreenedUrlWhereInput
  orderBy?: ScreenedUrlOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyScreenedUrlArgsSelect<S extends undefined | boolean | FindManyScreenedUrlArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyScreenedUrlArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlCreateArgs = {
  select?: ScreenedUrlSelect
  data: ScreenedUrlCreateInput
}

export type ScreenedUrlCreateArgsWithSelect = {
  select: ScreenedUrlSelect
  data: ScreenedUrlCreateInput
}

type ExtractScreenedUrlCreateArgsSelect<S extends undefined | boolean | ScreenedUrlCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlCreateArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlUpdateArgs = {
  select?: ScreenedUrlSelect
  data: ScreenedUrlUpdateInput
  where: ScreenedUrlWhereUniqueInput
}

export type ScreenedUrlUpdateArgsWithSelect = {
  select: ScreenedUrlSelect
  data: ScreenedUrlUpdateInput
  where: ScreenedUrlWhereUniqueInput
}

type ExtractScreenedUrlUpdateArgsSelect<S extends undefined | boolean | ScreenedUrlUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlUpdateArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlUpdateManyArgs = {
  select?: ScreenedUrlSelect
  data: ScreenedUrlUpdateManyMutationInput
  where?: ScreenedUrlWhereInput
}

export type ScreenedUrlUpdateManyArgsWithSelect = {
  select: ScreenedUrlSelect
  data: ScreenedUrlUpdateManyMutationInput
  where?: ScreenedUrlWhereInput
}

type ExtractScreenedUrlUpdateManyArgsSelect<S extends undefined | boolean | ScreenedUrlUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlUpsertArgs = {
  select?: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
  create: ScreenedUrlCreateInput
  update: ScreenedUrlUpdateInput
}

export type ScreenedUrlUpsertArgsWithSelect = {
  select: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
  create: ScreenedUrlCreateInput
  update: ScreenedUrlUpdateInput
}

type ExtractScreenedUrlUpsertArgsSelect<S extends undefined | boolean | ScreenedUrlUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlUpsertArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlDeleteArgs = {
  select?: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
}

export type ScreenedUrlDeleteArgsWithSelect = {
  select: ScreenedUrlSelect
  where: ScreenedUrlWhereUniqueInput
}

type ExtractScreenedUrlDeleteArgsSelect<S extends undefined | boolean | ScreenedUrlDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlDeleteArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlDeleteManyArgs = {
  select?: ScreenedUrlSelect
  where?: ScreenedUrlWhereInput
}

export type ScreenedUrlDeleteManyArgsWithSelect = {
  select: ScreenedUrlSelect
  where?: ScreenedUrlWhereInput
}

type ExtractScreenedUrlDeleteManyArgsSelect<S extends undefined | boolean | ScreenedUrlDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ScreenedUrlArgs = {
  select?: ScreenedUrlSelect
}

export type ScreenedUrlArgsWithSelect = {
  select: ScreenedUrlSelect
}

type ExtractScreenedUrlArgsSelect<S extends undefined | boolean | ScreenedUrlArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ScreenedUrlArgsWithSelect
  ? S['select']
  : true



/**
 * Model SearchLog
 */

export type SearchLog = {
  id: number
  createdAt: string
  searchResultId: number | null
  searchResultType: number | null
  searchType: number
  term: string
  userId: number | null
}

export type SearchLogScalars = 'id' | 'createdAt' | 'searchResultId' | 'searchResultType' | 'searchType' | 'term' | 'userId'


export type SearchLogSelect = {
  id?: boolean
  createdAt?: boolean
  searchResultId?: boolean
  searchResultType?: boolean
  searchType?: boolean
  term?: boolean
  userId?: boolean
}

type SearchLogDefault = {
  id: true
  createdAt: true
  searchResultId: true
  searchResultType: true
  searchType: true
  term: true
  userId: true
}


type SearchLogGetPayload<S extends boolean | SearchLogSelect> = S extends true
  ? SearchLog
  : S extends SearchLogSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SearchLogDefault, S>>]: P extends SearchLogScalars
        ? SearchLog[P]
        : never
    }
   : never

export interface SearchLogDelegate {
  <T extends FindManySearchLogArgs>(args?: Subset<T, FindManySearchLogArgs>): PromiseLike<Array<SearchLogGetPayload<ExtractFindManySearchLogArgsSelect<T>>>>
  findOne<T extends FindOneSearchLogArgs>(
    args: Subset<T, FindOneSearchLogArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractFindOneSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>
  findMany<T extends FindManySearchLogArgs>(
    args?: Subset<T, FindManySearchLogArgs>
  ): PromiseLike<Array<SearchLogGetPayload<ExtractFindManySearchLogArgsSelect<T>>>>
  create<T extends SearchLogCreateArgs>(
    args: Subset<T, SearchLogCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogCreateArgsSelect<T>>> : SearchLogClient<SearchLog>
  update<T extends SearchLogUpdateArgs>(
    args: Subset<T, SearchLogUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogUpdateArgsSelect<T>>> : SearchLogClient<SearchLog>
  updateMany<T extends SearchLogUpdateManyArgs>(
    args: Subset<T, SearchLogUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogUpdateManyArgsSelect<T>>> : SearchLogClient<SearchLog>
  upsert<T extends SearchLogUpsertArgs>(
    args: Subset<T, SearchLogUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogUpsertArgsSelect<T>>> : SearchLogClient<SearchLog>
  delete<T extends SearchLogDeleteArgs>(
    args: Subset<T, SearchLogDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogDeleteArgsSelect<T>>> : SearchLogClient<SearchLog>
  deleteMany<T extends SearchLogDeleteManyArgs>(
    args: Subset<T, SearchLogDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogDeleteManyArgsSelect<T>>> : SearchLogClient<SearchLog>
}
function SearchLogDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SearchLogDelegate {
  const SearchLog = <T extends FindManySearchLogArgs>(args: Subset<T, FindManySearchLogArgs>) => new SearchLogClient<PromiseLike<Array<SearchLogGetPayload<ExtractFindManySearchLogArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'searchLogs', 'searchLogs', args, [])
  SearchLog.findOne = <T extends FindOneSearchLogArgs>(args: Subset<T, FindOneSearchLogArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'query',
    'searchLog',
    'searchLogs.findOne',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'query',
    'searchLog',
    'searchLogs.findOne',
    args,
    []
  )
  SearchLog.findMany = <T extends FindManySearchLogArgs>(args: Subset<T, FindManySearchLogArgs>) => new SearchLogClient<PromiseLike<Array<SearchLogGetPayload<ExtractFindManySearchLogArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'searchLogs',
    'searchLogs.findMany',
    args,
    []
  )
  SearchLog.create = <T extends SearchLogCreateArgs>(args: Subset<T, SearchLogCreateArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'createSearchLog',
    'searchLogs.create',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'createSearchLog',
    'searchLogs.create',
    args,
    []
  )
  SearchLog.update = <T extends SearchLogUpdateArgs>(args: Subset<T, SearchLogUpdateArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSearchLog',
    'searchLogs.update',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateSearchLog',
    'searchLogs.update',
    args,
    []
  )
  SearchLog.updateMany = <T extends SearchLogUpdateManyArgs>(args: Subset<T, SearchLogUpdateManyArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySearchLogs',
    'searchLogs.updateMany',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySearchLogs',
    'searchLogs.updateMany',
    args,
    []
  )
  SearchLog.upsert = <T extends SearchLogUpsertArgs>(args: Subset<T, SearchLogUpsertArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSearchLog',
    'searchLogs.upsert',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSearchLog',
    'searchLogs.upsert',
    args,
    []
  )
  SearchLog.delete = <T extends SearchLogDeleteArgs>(args: Subset<T, SearchLogDeleteArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSearchLog',
    'searchLogs.delete',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSearchLog',
    'searchLogs.delete',
    args,
    []
  )
  SearchLog.deleteMany = <T extends SearchLogDeleteManyArgs>(args: Subset<T, SearchLogDeleteManyArgs>) => args.select ? new SearchLogClient<'select' extends keyof T ? PromiseLike<SearchLogGetPayload<ExtractSearchLogArgsSelect<T>>> : SearchLogClient<SearchLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySearchLogs',
    'searchLogs.deleteMany',
    args,
    []
  ) : new SearchLogClient<SearchLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySearchLogs',
    'searchLogs.deleteMany',
    args,
    []
  )
  return SearchLog as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SearchLogClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SearchLogArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SearchLog').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SearchLog').catch(onrejected)
  }
}


// InputTypes

export type FindOneSearchLogArgs = {
  select?: SearchLogSelect
  where: SearchLogWhereUniqueInput
}

export type FindOneSearchLogArgsWithSelect = {
  select: SearchLogSelect
  where: SearchLogWhereUniqueInput
}

type ExtractFindOneSearchLogArgsSelect<S extends undefined | boolean | FindOneSearchLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSearchLogArgsWithSelect
  ? S['select']
  : true


export type FindManySearchLogArgs = {
  select?: SearchLogSelect
  where?: SearchLogWhereInput
  orderBy?: SearchLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySearchLogArgsWithSelect = {
  select: SearchLogSelect
  where?: SearchLogWhereInput
  orderBy?: SearchLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySearchLogArgsSelect<S extends undefined | boolean | FindManySearchLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySearchLogArgsWithSelect
  ? S['select']
  : true


export type SearchLogCreateArgs = {
  select?: SearchLogSelect
  data: SearchLogCreateInput
}

export type SearchLogCreateArgsWithSelect = {
  select: SearchLogSelect
  data: SearchLogCreateInput
}

type ExtractSearchLogCreateArgsSelect<S extends undefined | boolean | SearchLogCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogCreateArgsWithSelect
  ? S['select']
  : true


export type SearchLogUpdateArgs = {
  select?: SearchLogSelect
  data: SearchLogUpdateInput
  where: SearchLogWhereUniqueInput
}

export type SearchLogUpdateArgsWithSelect = {
  select: SearchLogSelect
  data: SearchLogUpdateInput
  where: SearchLogWhereUniqueInput
}

type ExtractSearchLogUpdateArgsSelect<S extends undefined | boolean | SearchLogUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogUpdateArgsWithSelect
  ? S['select']
  : true


export type SearchLogUpdateManyArgs = {
  select?: SearchLogSelect
  data: SearchLogUpdateManyMutationInput
  where?: SearchLogWhereInput
}

export type SearchLogUpdateManyArgsWithSelect = {
  select: SearchLogSelect
  data: SearchLogUpdateManyMutationInput
  where?: SearchLogWhereInput
}

type ExtractSearchLogUpdateManyArgsSelect<S extends undefined | boolean | SearchLogUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SearchLogUpsertArgs = {
  select?: SearchLogSelect
  where: SearchLogWhereUniqueInput
  create: SearchLogCreateInput
  update: SearchLogUpdateInput
}

export type SearchLogUpsertArgsWithSelect = {
  select: SearchLogSelect
  where: SearchLogWhereUniqueInput
  create: SearchLogCreateInput
  update: SearchLogUpdateInput
}

type ExtractSearchLogUpsertArgsSelect<S extends undefined | boolean | SearchLogUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogUpsertArgsWithSelect
  ? S['select']
  : true


export type SearchLogDeleteArgs = {
  select?: SearchLogSelect
  where: SearchLogWhereUniqueInput
}

export type SearchLogDeleteArgsWithSelect = {
  select: SearchLogSelect
  where: SearchLogWhereUniqueInput
}

type ExtractSearchLogDeleteArgsSelect<S extends undefined | boolean | SearchLogDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogDeleteArgsWithSelect
  ? S['select']
  : true


export type SearchLogDeleteManyArgs = {
  select?: SearchLogSelect
  where?: SearchLogWhereInput
}

export type SearchLogDeleteManyArgsWithSelect = {
  select: SearchLogSelect
  where?: SearchLogWhereInput
}

type ExtractSearchLogDeleteManyArgsSelect<S extends undefined | boolean | SearchLogDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SearchLogArgs = {
  select?: SearchLogSelect
}

export type SearchLogArgsWithSelect = {
  select: SearchLogSelect
}

type ExtractSearchLogArgsSelect<S extends undefined | boolean | SearchLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SearchLogArgsWithSelect
  ? S['select']
  : true



/**
 * Model SharedDraft
 */

export type SharedDraft = {
  id: number
  categoryId: number
  createdAt: string
  topicId: number
  updatedAt: string
}

export type SharedDraftScalars = 'id' | 'categoryId' | 'createdAt' | 'topicId' | 'updatedAt'


export type SharedDraftSelect = {
  id?: boolean
  categoryId?: boolean
  createdAt?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type SharedDraftDefault = {
  id: true
  categoryId: true
  createdAt: true
  topicId: true
  updatedAt: true
}


type SharedDraftGetPayload<S extends boolean | SharedDraftSelect> = S extends true
  ? SharedDraft
  : S extends SharedDraftSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SharedDraftDefault, S>>]: P extends SharedDraftScalars
        ? SharedDraft[P]
        : never
    }
   : never

export interface SharedDraftDelegate {
  <T extends FindManySharedDraftArgs>(args?: Subset<T, FindManySharedDraftArgs>): PromiseLike<Array<SharedDraftGetPayload<ExtractFindManySharedDraftArgsSelect<T>>>>
  findOne<T extends FindOneSharedDraftArgs>(
    args: Subset<T, FindOneSharedDraftArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractFindOneSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  findMany<T extends FindManySharedDraftArgs>(
    args?: Subset<T, FindManySharedDraftArgs>
  ): PromiseLike<Array<SharedDraftGetPayload<ExtractFindManySharedDraftArgsSelect<T>>>>
  create<T extends SharedDraftCreateArgs>(
    args: Subset<T, SharedDraftCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftCreateArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  update<T extends SharedDraftUpdateArgs>(
    args: Subset<T, SharedDraftUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftUpdateArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  updateMany<T extends SharedDraftUpdateManyArgs>(
    args: Subset<T, SharedDraftUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftUpdateManyArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  upsert<T extends SharedDraftUpsertArgs>(
    args: Subset<T, SharedDraftUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftUpsertArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  delete<T extends SharedDraftDeleteArgs>(
    args: Subset<T, SharedDraftDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftDeleteArgsSelect<T>>> : SharedDraftClient<SharedDraft>
  deleteMany<T extends SharedDraftDeleteManyArgs>(
    args: Subset<T, SharedDraftDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftDeleteManyArgsSelect<T>>> : SharedDraftClient<SharedDraft>
}
function SharedDraftDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SharedDraftDelegate {
  const SharedDraft = <T extends FindManySharedDraftArgs>(args: Subset<T, FindManySharedDraftArgs>) => new SharedDraftClient<PromiseLike<Array<SharedDraftGetPayload<ExtractFindManySharedDraftArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'sharedDrafts', 'sharedDrafts', args, [])
  SharedDraft.findOne = <T extends FindOneSharedDraftArgs>(args: Subset<T, FindOneSharedDraftArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'query',
    'sharedDraft',
    'sharedDrafts.findOne',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'query',
    'sharedDraft',
    'sharedDrafts.findOne',
    args,
    []
  )
  SharedDraft.findMany = <T extends FindManySharedDraftArgs>(args: Subset<T, FindManySharedDraftArgs>) => new SharedDraftClient<PromiseLike<Array<SharedDraftGetPayload<ExtractFindManySharedDraftArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'sharedDrafts',
    'sharedDrafts.findMany',
    args,
    []
  )
  SharedDraft.create = <T extends SharedDraftCreateArgs>(args: Subset<T, SharedDraftCreateArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'createSharedDraft',
    'sharedDrafts.create',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'createSharedDraft',
    'sharedDrafts.create',
    args,
    []
  )
  SharedDraft.update = <T extends SharedDraftUpdateArgs>(args: Subset<T, SharedDraftUpdateArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSharedDraft',
    'sharedDrafts.update',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'updateSharedDraft',
    'sharedDrafts.update',
    args,
    []
  )
  SharedDraft.updateMany = <T extends SharedDraftUpdateManyArgs>(args: Subset<T, SharedDraftUpdateManyArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySharedDrafts',
    'sharedDrafts.updateMany',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySharedDrafts',
    'sharedDrafts.updateMany',
    args,
    []
  )
  SharedDraft.upsert = <T extends SharedDraftUpsertArgs>(args: Subset<T, SharedDraftUpsertArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSharedDraft',
    'sharedDrafts.upsert',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSharedDraft',
    'sharedDrafts.upsert',
    args,
    []
  )
  SharedDraft.delete = <T extends SharedDraftDeleteArgs>(args: Subset<T, SharedDraftDeleteArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSharedDraft',
    'sharedDrafts.delete',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSharedDraft',
    'sharedDrafts.delete',
    args,
    []
  )
  SharedDraft.deleteMany = <T extends SharedDraftDeleteManyArgs>(args: Subset<T, SharedDraftDeleteManyArgs>) => args.select ? new SharedDraftClient<'select' extends keyof T ? PromiseLike<SharedDraftGetPayload<ExtractSharedDraftArgsSelect<T>>> : SharedDraftClient<SharedDraft>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySharedDrafts',
    'sharedDrafts.deleteMany',
    args,
    []
  ) : new SharedDraftClient<SharedDraft>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySharedDrafts',
    'sharedDrafts.deleteMany',
    args,
    []
  )
  return SharedDraft as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SharedDraftClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SharedDraftArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SharedDraft').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SharedDraft').catch(onrejected)
  }
}


// InputTypes

export type FindOneSharedDraftArgs = {
  select?: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
}

export type FindOneSharedDraftArgsWithSelect = {
  select: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
}

type ExtractFindOneSharedDraftArgsSelect<S extends undefined | boolean | FindOneSharedDraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSharedDraftArgsWithSelect
  ? S['select']
  : true


export type FindManySharedDraftArgs = {
  select?: SharedDraftSelect
  where?: SharedDraftWhereInput
  orderBy?: SharedDraftOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySharedDraftArgsWithSelect = {
  select: SharedDraftSelect
  where?: SharedDraftWhereInput
  orderBy?: SharedDraftOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySharedDraftArgsSelect<S extends undefined | boolean | FindManySharedDraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySharedDraftArgsWithSelect
  ? S['select']
  : true


export type SharedDraftCreateArgs = {
  select?: SharedDraftSelect
  data: SharedDraftCreateInput
}

export type SharedDraftCreateArgsWithSelect = {
  select: SharedDraftSelect
  data: SharedDraftCreateInput
}

type ExtractSharedDraftCreateArgsSelect<S extends undefined | boolean | SharedDraftCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftCreateArgsWithSelect
  ? S['select']
  : true


export type SharedDraftUpdateArgs = {
  select?: SharedDraftSelect
  data: SharedDraftUpdateInput
  where: SharedDraftWhereUniqueInput
}

export type SharedDraftUpdateArgsWithSelect = {
  select: SharedDraftSelect
  data: SharedDraftUpdateInput
  where: SharedDraftWhereUniqueInput
}

type ExtractSharedDraftUpdateArgsSelect<S extends undefined | boolean | SharedDraftUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftUpdateArgsWithSelect
  ? S['select']
  : true


export type SharedDraftUpdateManyArgs = {
  select?: SharedDraftSelect
  data: SharedDraftUpdateManyMutationInput
  where?: SharedDraftWhereInput
}

export type SharedDraftUpdateManyArgsWithSelect = {
  select: SharedDraftSelect
  data: SharedDraftUpdateManyMutationInput
  where?: SharedDraftWhereInput
}

type ExtractSharedDraftUpdateManyArgsSelect<S extends undefined | boolean | SharedDraftUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SharedDraftUpsertArgs = {
  select?: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
  create: SharedDraftCreateInput
  update: SharedDraftUpdateInput
}

export type SharedDraftUpsertArgsWithSelect = {
  select: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
  create: SharedDraftCreateInput
  update: SharedDraftUpdateInput
}

type ExtractSharedDraftUpsertArgsSelect<S extends undefined | boolean | SharedDraftUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftUpsertArgsWithSelect
  ? S['select']
  : true


export type SharedDraftDeleteArgs = {
  select?: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
}

export type SharedDraftDeleteArgsWithSelect = {
  select: SharedDraftSelect
  where: SharedDraftWhereUniqueInput
}

type ExtractSharedDraftDeleteArgsSelect<S extends undefined | boolean | SharedDraftDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftDeleteArgsWithSelect
  ? S['select']
  : true


export type SharedDraftDeleteManyArgs = {
  select?: SharedDraftSelect
  where?: SharedDraftWhereInput
}

export type SharedDraftDeleteManyArgsWithSelect = {
  select: SharedDraftSelect
  where?: SharedDraftWhereInput
}

type ExtractSharedDraftDeleteManyArgsSelect<S extends undefined | boolean | SharedDraftDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SharedDraftArgs = {
  select?: SharedDraftSelect
}

export type SharedDraftArgsWithSelect = {
  select: SharedDraftSelect
}

type ExtractSharedDraftArgsSelect<S extends undefined | boolean | SharedDraftArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SharedDraftArgsWithSelect
  ? S['select']
  : true



/**
 * Model SingleSignOnRecord
 */

export type SingleSignOnRecord = {
  id: number
  createdAt: string
  externalAvatarUrl: string | null
  externalCardBackgroundUrl: string | null
  externalEmail: string | null
  externalId: string
  externalName: string | null
  externalProfileBackgroundUrl: string | null
  externalUsername: string | null
  lastPayload: string
  updatedAt: string
  userId: number
}

export type SingleSignOnRecordScalars = 'id' | 'createdAt' | 'externalAvatarUrl' | 'externalCardBackgroundUrl' | 'externalEmail' | 'externalId' | 'externalName' | 'externalProfileBackgroundUrl' | 'externalUsername' | 'lastPayload' | 'updatedAt' | 'userId'


export type SingleSignOnRecordSelect = {
  id?: boolean
  createdAt?: boolean
  externalAvatarUrl?: boolean
  externalCardBackgroundUrl?: boolean
  externalEmail?: boolean
  externalId?: boolean
  externalName?: boolean
  externalProfileBackgroundUrl?: boolean
  externalUsername?: boolean
  lastPayload?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type SingleSignOnRecordDefault = {
  id: true
  createdAt: true
  externalAvatarUrl: true
  externalCardBackgroundUrl: true
  externalEmail: true
  externalId: true
  externalName: true
  externalProfileBackgroundUrl: true
  externalUsername: true
  lastPayload: true
  updatedAt: true
  userId: true
}


type SingleSignOnRecordGetPayload<S extends boolean | SingleSignOnRecordSelect> = S extends true
  ? SingleSignOnRecord
  : S extends SingleSignOnRecordSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SingleSignOnRecordDefault, S>>]: P extends SingleSignOnRecordScalars
        ? SingleSignOnRecord[P]
        : never
    }
   : never

export interface SingleSignOnRecordDelegate {
  <T extends FindManySingleSignOnRecordArgs>(args?: Subset<T, FindManySingleSignOnRecordArgs>): PromiseLike<Array<SingleSignOnRecordGetPayload<ExtractFindManySingleSignOnRecordArgsSelect<T>>>>
  findOne<T extends FindOneSingleSignOnRecordArgs>(
    args: Subset<T, FindOneSingleSignOnRecordArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractFindOneSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  findMany<T extends FindManySingleSignOnRecordArgs>(
    args?: Subset<T, FindManySingleSignOnRecordArgs>
  ): PromiseLike<Array<SingleSignOnRecordGetPayload<ExtractFindManySingleSignOnRecordArgsSelect<T>>>>
  create<T extends SingleSignOnRecordCreateArgs>(
    args: Subset<T, SingleSignOnRecordCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordCreateArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  update<T extends SingleSignOnRecordUpdateArgs>(
    args: Subset<T, SingleSignOnRecordUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordUpdateArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  updateMany<T extends SingleSignOnRecordUpdateManyArgs>(
    args: Subset<T, SingleSignOnRecordUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordUpdateManyArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  upsert<T extends SingleSignOnRecordUpsertArgs>(
    args: Subset<T, SingleSignOnRecordUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordUpsertArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  delete<T extends SingleSignOnRecordDeleteArgs>(
    args: Subset<T, SingleSignOnRecordDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordDeleteArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
  deleteMany<T extends SingleSignOnRecordDeleteManyArgs>(
    args: Subset<T, SingleSignOnRecordDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordDeleteManyArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>
}
function SingleSignOnRecordDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SingleSignOnRecordDelegate {
  const SingleSignOnRecord = <T extends FindManySingleSignOnRecordArgs>(args: Subset<T, FindManySingleSignOnRecordArgs>) => new SingleSignOnRecordClient<PromiseLike<Array<SingleSignOnRecordGetPayload<ExtractFindManySingleSignOnRecordArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'singleSignOnRecords', 'singleSignOnRecords', args, [])
  SingleSignOnRecord.findOne = <T extends FindOneSingleSignOnRecordArgs>(args: Subset<T, FindOneSingleSignOnRecordArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'query',
    'singleSignOnRecord',
    'singleSignOnRecords.findOne',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'query',
    'singleSignOnRecord',
    'singleSignOnRecords.findOne',
    args,
    []
  )
  SingleSignOnRecord.findMany = <T extends FindManySingleSignOnRecordArgs>(args: Subset<T, FindManySingleSignOnRecordArgs>) => new SingleSignOnRecordClient<PromiseLike<Array<SingleSignOnRecordGetPayload<ExtractFindManySingleSignOnRecordArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'singleSignOnRecords',
    'singleSignOnRecords.findMany',
    args,
    []
  )
  SingleSignOnRecord.create = <T extends SingleSignOnRecordCreateArgs>(args: Subset<T, SingleSignOnRecordCreateArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'createSingleSignOnRecord',
    'singleSignOnRecords.create',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'createSingleSignOnRecord',
    'singleSignOnRecords.create',
    args,
    []
  )
  SingleSignOnRecord.update = <T extends SingleSignOnRecordUpdateArgs>(args: Subset<T, SingleSignOnRecordUpdateArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSingleSignOnRecord',
    'singleSignOnRecords.update',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'updateSingleSignOnRecord',
    'singleSignOnRecords.update',
    args,
    []
  )
  SingleSignOnRecord.updateMany = <T extends SingleSignOnRecordUpdateManyArgs>(args: Subset<T, SingleSignOnRecordUpdateManyArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySingleSignOnRecords',
    'singleSignOnRecords.updateMany',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySingleSignOnRecords',
    'singleSignOnRecords.updateMany',
    args,
    []
  )
  SingleSignOnRecord.upsert = <T extends SingleSignOnRecordUpsertArgs>(args: Subset<T, SingleSignOnRecordUpsertArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSingleSignOnRecord',
    'singleSignOnRecords.upsert',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSingleSignOnRecord',
    'singleSignOnRecords.upsert',
    args,
    []
  )
  SingleSignOnRecord.delete = <T extends SingleSignOnRecordDeleteArgs>(args: Subset<T, SingleSignOnRecordDeleteArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSingleSignOnRecord',
    'singleSignOnRecords.delete',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSingleSignOnRecord',
    'singleSignOnRecords.delete',
    args,
    []
  )
  SingleSignOnRecord.deleteMany = <T extends SingleSignOnRecordDeleteManyArgs>(args: Subset<T, SingleSignOnRecordDeleteManyArgs>) => args.select ? new SingleSignOnRecordClient<'select' extends keyof T ? PromiseLike<SingleSignOnRecordGetPayload<ExtractSingleSignOnRecordArgsSelect<T>>> : SingleSignOnRecordClient<SingleSignOnRecord>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySingleSignOnRecords',
    'singleSignOnRecords.deleteMany',
    args,
    []
  ) : new SingleSignOnRecordClient<SingleSignOnRecord>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySingleSignOnRecords',
    'singleSignOnRecords.deleteMany',
    args,
    []
  )
  return SingleSignOnRecord as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SingleSignOnRecordClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SingleSignOnRecordArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SingleSignOnRecord').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SingleSignOnRecord').catch(onrejected)
  }
}


// InputTypes

export type FindOneSingleSignOnRecordArgs = {
  select?: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
}

export type FindOneSingleSignOnRecordArgsWithSelect = {
  select: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
}

type ExtractFindOneSingleSignOnRecordArgsSelect<S extends undefined | boolean | FindOneSingleSignOnRecordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSingleSignOnRecordArgsWithSelect
  ? S['select']
  : true


export type FindManySingleSignOnRecordArgs = {
  select?: SingleSignOnRecordSelect
  where?: SingleSignOnRecordWhereInput
  orderBy?: SingleSignOnRecordOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySingleSignOnRecordArgsWithSelect = {
  select: SingleSignOnRecordSelect
  where?: SingleSignOnRecordWhereInput
  orderBy?: SingleSignOnRecordOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySingleSignOnRecordArgsSelect<S extends undefined | boolean | FindManySingleSignOnRecordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySingleSignOnRecordArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordCreateArgs = {
  select?: SingleSignOnRecordSelect
  data: SingleSignOnRecordCreateInput
}

export type SingleSignOnRecordCreateArgsWithSelect = {
  select: SingleSignOnRecordSelect
  data: SingleSignOnRecordCreateInput
}

type ExtractSingleSignOnRecordCreateArgsSelect<S extends undefined | boolean | SingleSignOnRecordCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordCreateArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordUpdateArgs = {
  select?: SingleSignOnRecordSelect
  data: SingleSignOnRecordUpdateInput
  where: SingleSignOnRecordWhereUniqueInput
}

export type SingleSignOnRecordUpdateArgsWithSelect = {
  select: SingleSignOnRecordSelect
  data: SingleSignOnRecordUpdateInput
  where: SingleSignOnRecordWhereUniqueInput
}

type ExtractSingleSignOnRecordUpdateArgsSelect<S extends undefined | boolean | SingleSignOnRecordUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordUpdateArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordUpdateManyArgs = {
  select?: SingleSignOnRecordSelect
  data: SingleSignOnRecordUpdateManyMutationInput
  where?: SingleSignOnRecordWhereInput
}

export type SingleSignOnRecordUpdateManyArgsWithSelect = {
  select: SingleSignOnRecordSelect
  data: SingleSignOnRecordUpdateManyMutationInput
  where?: SingleSignOnRecordWhereInput
}

type ExtractSingleSignOnRecordUpdateManyArgsSelect<S extends undefined | boolean | SingleSignOnRecordUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordUpsertArgs = {
  select?: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
  create: SingleSignOnRecordCreateInput
  update: SingleSignOnRecordUpdateInput
}

export type SingleSignOnRecordUpsertArgsWithSelect = {
  select: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
  create: SingleSignOnRecordCreateInput
  update: SingleSignOnRecordUpdateInput
}

type ExtractSingleSignOnRecordUpsertArgsSelect<S extends undefined | boolean | SingleSignOnRecordUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordUpsertArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordDeleteArgs = {
  select?: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
}

export type SingleSignOnRecordDeleteArgsWithSelect = {
  select: SingleSignOnRecordSelect
  where: SingleSignOnRecordWhereUniqueInput
}

type ExtractSingleSignOnRecordDeleteArgsSelect<S extends undefined | boolean | SingleSignOnRecordDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordDeleteArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordDeleteManyArgs = {
  select?: SingleSignOnRecordSelect
  where?: SingleSignOnRecordWhereInput
}

export type SingleSignOnRecordDeleteManyArgsWithSelect = {
  select: SingleSignOnRecordSelect
  where?: SingleSignOnRecordWhereInput
}

type ExtractSingleSignOnRecordDeleteManyArgsSelect<S extends undefined | boolean | SingleSignOnRecordDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SingleSignOnRecordArgs = {
  select?: SingleSignOnRecordSelect
}

export type SingleSignOnRecordArgsWithSelect = {
  select: SingleSignOnRecordSelect
}

type ExtractSingleSignOnRecordArgsSelect<S extends undefined | boolean | SingleSignOnRecordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SingleSignOnRecordArgsWithSelect
  ? S['select']
  : true



/**
 * Model SiteSetting
 */

export type SiteSetting = {
  id: number
  createdAt: string
  dataType: number
  name: string
  updatedAt: string
  value: string | null
}

export type SiteSettingScalars = 'id' | 'createdAt' | 'dataType' | 'name' | 'updatedAt' | 'value'


export type SiteSettingSelect = {
  id?: boolean
  createdAt?: boolean
  dataType?: boolean
  name?: boolean
  updatedAt?: boolean
  value?: boolean
}

type SiteSettingDefault = {
  id: true
  createdAt: true
  dataType: true
  name: true
  updatedAt: true
  value: true
}


type SiteSettingGetPayload<S extends boolean | SiteSettingSelect> = S extends true
  ? SiteSetting
  : S extends SiteSettingSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SiteSettingDefault, S>>]: P extends SiteSettingScalars
        ? SiteSetting[P]
        : never
    }
   : never

export interface SiteSettingDelegate {
  <T extends FindManySiteSettingArgs>(args?: Subset<T, FindManySiteSettingArgs>): PromiseLike<Array<SiteSettingGetPayload<ExtractFindManySiteSettingArgsSelect<T>>>>
  findOne<T extends FindOneSiteSettingArgs>(
    args: Subset<T, FindOneSiteSettingArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractFindOneSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  findMany<T extends FindManySiteSettingArgs>(
    args?: Subset<T, FindManySiteSettingArgs>
  ): PromiseLike<Array<SiteSettingGetPayload<ExtractFindManySiteSettingArgsSelect<T>>>>
  create<T extends SiteSettingCreateArgs>(
    args: Subset<T, SiteSettingCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingCreateArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  update<T extends SiteSettingUpdateArgs>(
    args: Subset<T, SiteSettingUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingUpdateArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  updateMany<T extends SiteSettingUpdateManyArgs>(
    args: Subset<T, SiteSettingUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingUpdateManyArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  upsert<T extends SiteSettingUpsertArgs>(
    args: Subset<T, SiteSettingUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingUpsertArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  delete<T extends SiteSettingDeleteArgs>(
    args: Subset<T, SiteSettingDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingDeleteArgsSelect<T>>> : SiteSettingClient<SiteSetting>
  deleteMany<T extends SiteSettingDeleteManyArgs>(
    args: Subset<T, SiteSettingDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingDeleteManyArgsSelect<T>>> : SiteSettingClient<SiteSetting>
}
function SiteSettingDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SiteSettingDelegate {
  const SiteSetting = <T extends FindManySiteSettingArgs>(args: Subset<T, FindManySiteSettingArgs>) => new SiteSettingClient<PromiseLike<Array<SiteSettingGetPayload<ExtractFindManySiteSettingArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'siteSettings', 'siteSettings', args, [])
  SiteSetting.findOne = <T extends FindOneSiteSettingArgs>(args: Subset<T, FindOneSiteSettingArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'query',
    'siteSetting',
    'siteSettings.findOne',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'query',
    'siteSetting',
    'siteSettings.findOne',
    args,
    []
  )
  SiteSetting.findMany = <T extends FindManySiteSettingArgs>(args: Subset<T, FindManySiteSettingArgs>) => new SiteSettingClient<PromiseLike<Array<SiteSettingGetPayload<ExtractFindManySiteSettingArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'siteSettings',
    'siteSettings.findMany',
    args,
    []
  )
  SiteSetting.create = <T extends SiteSettingCreateArgs>(args: Subset<T, SiteSettingCreateArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'createSiteSetting',
    'siteSettings.create',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'createSiteSetting',
    'siteSettings.create',
    args,
    []
  )
  SiteSetting.update = <T extends SiteSettingUpdateArgs>(args: Subset<T, SiteSettingUpdateArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSiteSetting',
    'siteSettings.update',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'updateSiteSetting',
    'siteSettings.update',
    args,
    []
  )
  SiteSetting.updateMany = <T extends SiteSettingUpdateManyArgs>(args: Subset<T, SiteSettingUpdateManyArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySiteSettings',
    'siteSettings.updateMany',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySiteSettings',
    'siteSettings.updateMany',
    args,
    []
  )
  SiteSetting.upsert = <T extends SiteSettingUpsertArgs>(args: Subset<T, SiteSettingUpsertArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSiteSetting',
    'siteSettings.upsert',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSiteSetting',
    'siteSettings.upsert',
    args,
    []
  )
  SiteSetting.delete = <T extends SiteSettingDeleteArgs>(args: Subset<T, SiteSettingDeleteArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSiteSetting',
    'siteSettings.delete',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSiteSetting',
    'siteSettings.delete',
    args,
    []
  )
  SiteSetting.deleteMany = <T extends SiteSettingDeleteManyArgs>(args: Subset<T, SiteSettingDeleteManyArgs>) => args.select ? new SiteSettingClient<'select' extends keyof T ? PromiseLike<SiteSettingGetPayload<ExtractSiteSettingArgsSelect<T>>> : SiteSettingClient<SiteSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySiteSettings',
    'siteSettings.deleteMany',
    args,
    []
  ) : new SiteSettingClient<SiteSetting>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySiteSettings',
    'siteSettings.deleteMany',
    args,
    []
  )
  return SiteSetting as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SiteSettingClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SiteSettingArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SiteSetting').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SiteSetting').catch(onrejected)
  }
}


// InputTypes

export type FindOneSiteSettingArgs = {
  select?: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
}

export type FindOneSiteSettingArgsWithSelect = {
  select: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
}

type ExtractFindOneSiteSettingArgsSelect<S extends undefined | boolean | FindOneSiteSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSiteSettingArgsWithSelect
  ? S['select']
  : true


export type FindManySiteSettingArgs = {
  select?: SiteSettingSelect
  where?: SiteSettingWhereInput
  orderBy?: SiteSettingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySiteSettingArgsWithSelect = {
  select: SiteSettingSelect
  where?: SiteSettingWhereInput
  orderBy?: SiteSettingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySiteSettingArgsSelect<S extends undefined | boolean | FindManySiteSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySiteSettingArgsWithSelect
  ? S['select']
  : true


export type SiteSettingCreateArgs = {
  select?: SiteSettingSelect
  data: SiteSettingCreateInput
}

export type SiteSettingCreateArgsWithSelect = {
  select: SiteSettingSelect
  data: SiteSettingCreateInput
}

type ExtractSiteSettingCreateArgsSelect<S extends undefined | boolean | SiteSettingCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingCreateArgsWithSelect
  ? S['select']
  : true


export type SiteSettingUpdateArgs = {
  select?: SiteSettingSelect
  data: SiteSettingUpdateInput
  where: SiteSettingWhereUniqueInput
}

export type SiteSettingUpdateArgsWithSelect = {
  select: SiteSettingSelect
  data: SiteSettingUpdateInput
  where: SiteSettingWhereUniqueInput
}

type ExtractSiteSettingUpdateArgsSelect<S extends undefined | boolean | SiteSettingUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingUpdateArgsWithSelect
  ? S['select']
  : true


export type SiteSettingUpdateManyArgs = {
  select?: SiteSettingSelect
  data: SiteSettingUpdateManyMutationInput
  where?: SiteSettingWhereInput
}

export type SiteSettingUpdateManyArgsWithSelect = {
  select: SiteSettingSelect
  data: SiteSettingUpdateManyMutationInput
  where?: SiteSettingWhereInput
}

type ExtractSiteSettingUpdateManyArgsSelect<S extends undefined | boolean | SiteSettingUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SiteSettingUpsertArgs = {
  select?: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
  create: SiteSettingCreateInput
  update: SiteSettingUpdateInput
}

export type SiteSettingUpsertArgsWithSelect = {
  select: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
  create: SiteSettingCreateInput
  update: SiteSettingUpdateInput
}

type ExtractSiteSettingUpsertArgsSelect<S extends undefined | boolean | SiteSettingUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingUpsertArgsWithSelect
  ? S['select']
  : true


export type SiteSettingDeleteArgs = {
  select?: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
}

export type SiteSettingDeleteArgsWithSelect = {
  select: SiteSettingSelect
  where: SiteSettingWhereUniqueInput
}

type ExtractSiteSettingDeleteArgsSelect<S extends undefined | boolean | SiteSettingDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingDeleteArgsWithSelect
  ? S['select']
  : true


export type SiteSettingDeleteManyArgs = {
  select?: SiteSettingSelect
  where?: SiteSettingWhereInput
}

export type SiteSettingDeleteManyArgsWithSelect = {
  select: SiteSettingSelect
  where?: SiteSettingWhereInput
}

type ExtractSiteSettingDeleteManyArgsSelect<S extends undefined | boolean | SiteSettingDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SiteSettingArgs = {
  select?: SiteSettingSelect
}

export type SiteSettingArgsWithSelect = {
  select: SiteSettingSelect
}

type ExtractSiteSettingArgsSelect<S extends undefined | boolean | SiteSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SiteSettingArgsWithSelect
  ? S['select']
  : true



/**
 * Model SkippedEmailLog
 */

export type SkippedEmailLog = {
  id: number
  createdAt: string
  customReason: string | null
  emailType: string
  postId: number | null
  reasonType: number
  toAddress: string
  updatedAt: string
  userId: number | null
}

export type SkippedEmailLogScalars = 'id' | 'createdAt' | 'customReason' | 'emailType' | 'postId' | 'reasonType' | 'toAddress' | 'updatedAt' | 'userId'


export type SkippedEmailLogSelect = {
  id?: boolean
  createdAt?: boolean
  customReason?: boolean
  emailType?: boolean
  postId?: boolean
  reasonType?: boolean
  toAddress?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type SkippedEmailLogDefault = {
  id: true
  createdAt: true
  customReason: true
  emailType: true
  postId: true
  reasonType: true
  toAddress: true
  updatedAt: true
  userId: true
}


type SkippedEmailLogGetPayload<S extends boolean | SkippedEmailLogSelect> = S extends true
  ? SkippedEmailLog
  : S extends SkippedEmailLogSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<SkippedEmailLogDefault, S>>]: P extends SkippedEmailLogScalars
        ? SkippedEmailLog[P]
        : never
    }
   : never

export interface SkippedEmailLogDelegate {
  <T extends FindManySkippedEmailLogArgs>(args?: Subset<T, FindManySkippedEmailLogArgs>): PromiseLike<Array<SkippedEmailLogGetPayload<ExtractFindManySkippedEmailLogArgsSelect<T>>>>
  findOne<T extends FindOneSkippedEmailLogArgs>(
    args: Subset<T, FindOneSkippedEmailLogArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractFindOneSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  findMany<T extends FindManySkippedEmailLogArgs>(
    args?: Subset<T, FindManySkippedEmailLogArgs>
  ): PromiseLike<Array<SkippedEmailLogGetPayload<ExtractFindManySkippedEmailLogArgsSelect<T>>>>
  create<T extends SkippedEmailLogCreateArgs>(
    args: Subset<T, SkippedEmailLogCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogCreateArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  update<T extends SkippedEmailLogUpdateArgs>(
    args: Subset<T, SkippedEmailLogUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogUpdateArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  updateMany<T extends SkippedEmailLogUpdateManyArgs>(
    args: Subset<T, SkippedEmailLogUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogUpdateManyArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  upsert<T extends SkippedEmailLogUpsertArgs>(
    args: Subset<T, SkippedEmailLogUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogUpsertArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  delete<T extends SkippedEmailLogDeleteArgs>(
    args: Subset<T, SkippedEmailLogDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogDeleteArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
  deleteMany<T extends SkippedEmailLogDeleteManyArgs>(
    args: Subset<T, SkippedEmailLogDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogDeleteManyArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>
}
function SkippedEmailLogDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): SkippedEmailLogDelegate {
  const SkippedEmailLog = <T extends FindManySkippedEmailLogArgs>(args: Subset<T, FindManySkippedEmailLogArgs>) => new SkippedEmailLogClient<PromiseLike<Array<SkippedEmailLogGetPayload<ExtractFindManySkippedEmailLogArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'skippedEmailLogs', 'skippedEmailLogs', args, [])
  SkippedEmailLog.findOne = <T extends FindOneSkippedEmailLogArgs>(args: Subset<T, FindOneSkippedEmailLogArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'query',
    'skippedEmailLog',
    'skippedEmailLogs.findOne',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'query',
    'skippedEmailLog',
    'skippedEmailLogs.findOne',
    args,
    []
  )
  SkippedEmailLog.findMany = <T extends FindManySkippedEmailLogArgs>(args: Subset<T, FindManySkippedEmailLogArgs>) => new SkippedEmailLogClient<PromiseLike<Array<SkippedEmailLogGetPayload<ExtractFindManySkippedEmailLogArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'skippedEmailLogs',
    'skippedEmailLogs.findMany',
    args,
    []
  )
  SkippedEmailLog.create = <T extends SkippedEmailLogCreateArgs>(args: Subset<T, SkippedEmailLogCreateArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'createSkippedEmailLog',
    'skippedEmailLogs.create',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'createSkippedEmailLog',
    'skippedEmailLogs.create',
    args,
    []
  )
  SkippedEmailLog.update = <T extends SkippedEmailLogUpdateArgs>(args: Subset<T, SkippedEmailLogUpdateArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateSkippedEmailLog',
    'skippedEmailLogs.update',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateSkippedEmailLog',
    'skippedEmailLogs.update',
    args,
    []
  )
  SkippedEmailLog.updateMany = <T extends SkippedEmailLogUpdateManyArgs>(args: Subset<T, SkippedEmailLogUpdateManyArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySkippedEmailLogs',
    'skippedEmailLogs.updateMany',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateManySkippedEmailLogs',
    'skippedEmailLogs.updateMany',
    args,
    []
  )
  SkippedEmailLog.upsert = <T extends SkippedEmailLogUpsertArgs>(args: Subset<T, SkippedEmailLogUpsertArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSkippedEmailLog',
    'skippedEmailLogs.upsert',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'upsertSkippedEmailLog',
    'skippedEmailLogs.upsert',
    args,
    []
  )
  SkippedEmailLog.delete = <T extends SkippedEmailLogDeleteArgs>(args: Subset<T, SkippedEmailLogDeleteArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSkippedEmailLog',
    'skippedEmailLogs.delete',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteSkippedEmailLog',
    'skippedEmailLogs.delete',
    args,
    []
  )
  SkippedEmailLog.deleteMany = <T extends SkippedEmailLogDeleteManyArgs>(args: Subset<T, SkippedEmailLogDeleteManyArgs>) => args.select ? new SkippedEmailLogClient<'select' extends keyof T ? PromiseLike<SkippedEmailLogGetPayload<ExtractSkippedEmailLogArgsSelect<T>>> : SkippedEmailLogClient<SkippedEmailLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySkippedEmailLogs',
    'skippedEmailLogs.deleteMany',
    args,
    []
  ) : new SkippedEmailLogClient<SkippedEmailLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManySkippedEmailLogs',
    'skippedEmailLogs.deleteMany',
    args,
    []
  )
  return SkippedEmailLog as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class SkippedEmailLogClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: SkippedEmailLogArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SkippedEmailLog').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'SkippedEmailLog').catch(onrejected)
  }
}


// InputTypes

export type FindOneSkippedEmailLogArgs = {
  select?: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
}

export type FindOneSkippedEmailLogArgsWithSelect = {
  select: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
}

type ExtractFindOneSkippedEmailLogArgsSelect<S extends undefined | boolean | FindOneSkippedEmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneSkippedEmailLogArgsWithSelect
  ? S['select']
  : true


export type FindManySkippedEmailLogArgs = {
  select?: SkippedEmailLogSelect
  where?: SkippedEmailLogWhereInput
  orderBy?: SkippedEmailLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManySkippedEmailLogArgsWithSelect = {
  select: SkippedEmailLogSelect
  where?: SkippedEmailLogWhereInput
  orderBy?: SkippedEmailLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManySkippedEmailLogArgsSelect<S extends undefined | boolean | FindManySkippedEmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManySkippedEmailLogArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogCreateArgs = {
  select?: SkippedEmailLogSelect
  data: SkippedEmailLogCreateInput
}

export type SkippedEmailLogCreateArgsWithSelect = {
  select: SkippedEmailLogSelect
  data: SkippedEmailLogCreateInput
}

type ExtractSkippedEmailLogCreateArgsSelect<S extends undefined | boolean | SkippedEmailLogCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogCreateArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogUpdateArgs = {
  select?: SkippedEmailLogSelect
  data: SkippedEmailLogUpdateInput
  where: SkippedEmailLogWhereUniqueInput
}

export type SkippedEmailLogUpdateArgsWithSelect = {
  select: SkippedEmailLogSelect
  data: SkippedEmailLogUpdateInput
  where: SkippedEmailLogWhereUniqueInput
}

type ExtractSkippedEmailLogUpdateArgsSelect<S extends undefined | boolean | SkippedEmailLogUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogUpdateArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogUpdateManyArgs = {
  select?: SkippedEmailLogSelect
  data: SkippedEmailLogUpdateManyMutationInput
  where?: SkippedEmailLogWhereInput
}

export type SkippedEmailLogUpdateManyArgsWithSelect = {
  select: SkippedEmailLogSelect
  data: SkippedEmailLogUpdateManyMutationInput
  where?: SkippedEmailLogWhereInput
}

type ExtractSkippedEmailLogUpdateManyArgsSelect<S extends undefined | boolean | SkippedEmailLogUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogUpdateManyArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogUpsertArgs = {
  select?: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
  create: SkippedEmailLogCreateInput
  update: SkippedEmailLogUpdateInput
}

export type SkippedEmailLogUpsertArgsWithSelect = {
  select: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
  create: SkippedEmailLogCreateInput
  update: SkippedEmailLogUpdateInput
}

type ExtractSkippedEmailLogUpsertArgsSelect<S extends undefined | boolean | SkippedEmailLogUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogUpsertArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogDeleteArgs = {
  select?: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
}

export type SkippedEmailLogDeleteArgsWithSelect = {
  select: SkippedEmailLogSelect
  where: SkippedEmailLogWhereUniqueInput
}

type ExtractSkippedEmailLogDeleteArgsSelect<S extends undefined | boolean | SkippedEmailLogDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogDeleteArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogDeleteManyArgs = {
  select?: SkippedEmailLogSelect
  where?: SkippedEmailLogWhereInput
}

export type SkippedEmailLogDeleteManyArgsWithSelect = {
  select: SkippedEmailLogSelect
  where?: SkippedEmailLogWhereInput
}

type ExtractSkippedEmailLogDeleteManyArgsSelect<S extends undefined | boolean | SkippedEmailLogDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogDeleteManyArgsWithSelect
  ? S['select']
  : true


export type SkippedEmailLogArgs = {
  select?: SkippedEmailLogSelect
}

export type SkippedEmailLogArgsWithSelect = {
  select: SkippedEmailLogSelect
}

type ExtractSkippedEmailLogArgsSelect<S extends undefined | boolean | SkippedEmailLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends SkippedEmailLogArgsWithSelect
  ? S['select']
  : true



/**
 * Model StylesheetCache
 */

export type StylesheetCache = {
  id: number
  content: string
  createdAt: string | null
  digest: string
  sourceMap: string | null
  target: string
  themeId: number
  updatedAt: string | null
}

export type StylesheetCacheScalars = 'id' | 'content' | 'createdAt' | 'digest' | 'sourceMap' | 'target' | 'themeId' | 'updatedAt'


export type StylesheetCacheSelect = {
  id?: boolean
  content?: boolean
  createdAt?: boolean
  digest?: boolean
  sourceMap?: boolean
  target?: boolean
  themeId?: boolean
  updatedAt?: boolean
}

type StylesheetCacheDefault = {
  id: true
  content: true
  createdAt: true
  digest: true
  sourceMap: true
  target: true
  themeId: true
  updatedAt: true
}


type StylesheetCacheGetPayload<S extends boolean | StylesheetCacheSelect> = S extends true
  ? StylesheetCache
  : S extends StylesheetCacheSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<StylesheetCacheDefault, S>>]: P extends StylesheetCacheScalars
        ? StylesheetCache[P]
        : never
    }
   : never

export interface StylesheetCacheDelegate {
  <T extends FindManyStylesheetCacheArgs>(args?: Subset<T, FindManyStylesheetCacheArgs>): PromiseLike<Array<StylesheetCacheGetPayload<ExtractFindManyStylesheetCacheArgsSelect<T>>>>
  findOne<T extends FindOneStylesheetCacheArgs>(
    args: Subset<T, FindOneStylesheetCacheArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractFindOneStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  findMany<T extends FindManyStylesheetCacheArgs>(
    args?: Subset<T, FindManyStylesheetCacheArgs>
  ): PromiseLike<Array<StylesheetCacheGetPayload<ExtractFindManyStylesheetCacheArgsSelect<T>>>>
  create<T extends StylesheetCacheCreateArgs>(
    args: Subset<T, StylesheetCacheCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheCreateArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  update<T extends StylesheetCacheUpdateArgs>(
    args: Subset<T, StylesheetCacheUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheUpdateArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  updateMany<T extends StylesheetCacheUpdateManyArgs>(
    args: Subset<T, StylesheetCacheUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheUpdateManyArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  upsert<T extends StylesheetCacheUpsertArgs>(
    args: Subset<T, StylesheetCacheUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheUpsertArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  delete<T extends StylesheetCacheDeleteArgs>(
    args: Subset<T, StylesheetCacheDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheDeleteArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
  deleteMany<T extends StylesheetCacheDeleteManyArgs>(
    args: Subset<T, StylesheetCacheDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheDeleteManyArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>
}
function StylesheetCacheDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): StylesheetCacheDelegate {
  const StylesheetCache = <T extends FindManyStylesheetCacheArgs>(args: Subset<T, FindManyStylesheetCacheArgs>) => new StylesheetCacheClient<PromiseLike<Array<StylesheetCacheGetPayload<ExtractFindManyStylesheetCacheArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'stylesheetCaches', 'stylesheetCaches', args, [])
  StylesheetCache.findOne = <T extends FindOneStylesheetCacheArgs>(args: Subset<T, FindOneStylesheetCacheArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'query',
    'stylesheetCache',
    'stylesheetCaches.findOne',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'query',
    'stylesheetCache',
    'stylesheetCaches.findOne',
    args,
    []
  )
  StylesheetCache.findMany = <T extends FindManyStylesheetCacheArgs>(args: Subset<T, FindManyStylesheetCacheArgs>) => new StylesheetCacheClient<PromiseLike<Array<StylesheetCacheGetPayload<ExtractFindManyStylesheetCacheArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'stylesheetCaches',
    'stylesheetCaches.findMany',
    args,
    []
  )
  StylesheetCache.create = <T extends StylesheetCacheCreateArgs>(args: Subset<T, StylesheetCacheCreateArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'createStylesheetCache',
    'stylesheetCaches.create',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'createStylesheetCache',
    'stylesheetCaches.create',
    args,
    []
  )
  StylesheetCache.update = <T extends StylesheetCacheUpdateArgs>(args: Subset<T, StylesheetCacheUpdateArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'updateStylesheetCache',
    'stylesheetCaches.update',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'updateStylesheetCache',
    'stylesheetCaches.update',
    args,
    []
  )
  StylesheetCache.updateMany = <T extends StylesheetCacheUpdateManyArgs>(args: Subset<T, StylesheetCacheUpdateManyArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyStylesheetCaches',
    'stylesheetCaches.updateMany',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyStylesheetCaches',
    'stylesheetCaches.updateMany',
    args,
    []
  )
  StylesheetCache.upsert = <T extends StylesheetCacheUpsertArgs>(args: Subset<T, StylesheetCacheUpsertArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertStylesheetCache',
    'stylesheetCaches.upsert',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'upsertStylesheetCache',
    'stylesheetCaches.upsert',
    args,
    []
  )
  StylesheetCache.delete = <T extends StylesheetCacheDeleteArgs>(args: Subset<T, StylesheetCacheDeleteArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteStylesheetCache',
    'stylesheetCaches.delete',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'deleteStylesheetCache',
    'stylesheetCaches.delete',
    args,
    []
  )
  StylesheetCache.deleteMany = <T extends StylesheetCacheDeleteManyArgs>(args: Subset<T, StylesheetCacheDeleteManyArgs>) => args.select ? new StylesheetCacheClient<'select' extends keyof T ? PromiseLike<StylesheetCacheGetPayload<ExtractStylesheetCacheArgsSelect<T>>> : StylesheetCacheClient<StylesheetCache>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyStylesheetCaches',
    'stylesheetCaches.deleteMany',
    args,
    []
  ) : new StylesheetCacheClient<StylesheetCache>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyStylesheetCaches',
    'stylesheetCaches.deleteMany',
    args,
    []
  )
  return StylesheetCache as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class StylesheetCacheClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: StylesheetCacheArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'StylesheetCache').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'StylesheetCache').catch(onrejected)
  }
}


// InputTypes

export type FindOneStylesheetCacheArgs = {
  select?: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
}

export type FindOneStylesheetCacheArgsWithSelect = {
  select: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
}

type ExtractFindOneStylesheetCacheArgsSelect<S extends undefined | boolean | FindOneStylesheetCacheArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneStylesheetCacheArgsWithSelect
  ? S['select']
  : true


export type FindManyStylesheetCacheArgs = {
  select?: StylesheetCacheSelect
  where?: StylesheetCacheWhereInput
  orderBy?: StylesheetCacheOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyStylesheetCacheArgsWithSelect = {
  select: StylesheetCacheSelect
  where?: StylesheetCacheWhereInput
  orderBy?: StylesheetCacheOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyStylesheetCacheArgsSelect<S extends undefined | boolean | FindManyStylesheetCacheArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyStylesheetCacheArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheCreateArgs = {
  select?: StylesheetCacheSelect
  data: StylesheetCacheCreateInput
}

export type StylesheetCacheCreateArgsWithSelect = {
  select: StylesheetCacheSelect
  data: StylesheetCacheCreateInput
}

type ExtractStylesheetCacheCreateArgsSelect<S extends undefined | boolean | StylesheetCacheCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheCreateArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheUpdateArgs = {
  select?: StylesheetCacheSelect
  data: StylesheetCacheUpdateInput
  where: StylesheetCacheWhereUniqueInput
}

export type StylesheetCacheUpdateArgsWithSelect = {
  select: StylesheetCacheSelect
  data: StylesheetCacheUpdateInput
  where: StylesheetCacheWhereUniqueInput
}

type ExtractStylesheetCacheUpdateArgsSelect<S extends undefined | boolean | StylesheetCacheUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheUpdateArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheUpdateManyArgs = {
  select?: StylesheetCacheSelect
  data: StylesheetCacheUpdateManyMutationInput
  where?: StylesheetCacheWhereInput
}

export type StylesheetCacheUpdateManyArgsWithSelect = {
  select: StylesheetCacheSelect
  data: StylesheetCacheUpdateManyMutationInput
  where?: StylesheetCacheWhereInput
}

type ExtractStylesheetCacheUpdateManyArgsSelect<S extends undefined | boolean | StylesheetCacheUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheUpdateManyArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheUpsertArgs = {
  select?: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
  create: StylesheetCacheCreateInput
  update: StylesheetCacheUpdateInput
}

export type StylesheetCacheUpsertArgsWithSelect = {
  select: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
  create: StylesheetCacheCreateInput
  update: StylesheetCacheUpdateInput
}

type ExtractStylesheetCacheUpsertArgsSelect<S extends undefined | boolean | StylesheetCacheUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheUpsertArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheDeleteArgs = {
  select?: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
}

export type StylesheetCacheDeleteArgsWithSelect = {
  select: StylesheetCacheSelect
  where: StylesheetCacheWhereUniqueInput
}

type ExtractStylesheetCacheDeleteArgsSelect<S extends undefined | boolean | StylesheetCacheDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheDeleteArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheDeleteManyArgs = {
  select?: StylesheetCacheSelect
  where?: StylesheetCacheWhereInput
}

export type StylesheetCacheDeleteManyArgsWithSelect = {
  select: StylesheetCacheSelect
  where?: StylesheetCacheWhereInput
}

type ExtractStylesheetCacheDeleteManyArgsSelect<S extends undefined | boolean | StylesheetCacheDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheDeleteManyArgsWithSelect
  ? S['select']
  : true


export type StylesheetCacheArgs = {
  select?: StylesheetCacheSelect
}

export type StylesheetCacheArgsWithSelect = {
  select: StylesheetCacheSelect
}

type ExtractStylesheetCacheArgsSelect<S extends undefined | boolean | StylesheetCacheArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends StylesheetCacheArgsWithSelect
  ? S['select']
  : true



/**
 * Model Tag
 */

export type Tag = {
  id: number
  createdAt: string | null
  name: string
  pmTopicCount: number
  topicCount: number
  updatedAt: string | null
}

export type TagScalars = 'id' | 'createdAt' | 'name' | 'pmTopicCount' | 'topicCount' | 'updatedAt'


export type TagSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  pmTopicCount?: boolean
  topicCount?: boolean
  updatedAt?: boolean
}

type TagDefault = {
  id: true
  createdAt: true
  name: true
  pmTopicCount: true
  topicCount: true
  updatedAt: true
}


type TagGetPayload<S extends boolean | TagSelect> = S extends true
  ? Tag
  : S extends TagSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagDefault, S>>]: P extends TagScalars
        ? Tag[P]
        : never
    }
   : never

export interface TagDelegate {
  <T extends FindManyTagArgs>(args?: Subset<T, FindManyTagArgs>): PromiseLike<Array<TagGetPayload<ExtractFindManyTagArgsSelect<T>>>>
  findOne<T extends FindOneTagArgs>(
    args: Subset<T, FindOneTagArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractFindOneTagArgsSelect<T>>> : TagClient<Tag>
  findMany<T extends FindManyTagArgs>(
    args?: Subset<T, FindManyTagArgs>
  ): PromiseLike<Array<TagGetPayload<ExtractFindManyTagArgsSelect<T>>>>
  create<T extends TagCreateArgs>(
    args: Subset<T, TagCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagCreateArgsSelect<T>>> : TagClient<Tag>
  update<T extends TagUpdateArgs>(
    args: Subset<T, TagUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagUpdateArgsSelect<T>>> : TagClient<Tag>
  updateMany<T extends TagUpdateManyArgs>(
    args: Subset<T, TagUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagUpdateManyArgsSelect<T>>> : TagClient<Tag>
  upsert<T extends TagUpsertArgs>(
    args: Subset<T, TagUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagUpsertArgsSelect<T>>> : TagClient<Tag>
  delete<T extends TagDeleteArgs>(
    args: Subset<T, TagDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagDeleteArgsSelect<T>>> : TagClient<Tag>
  deleteMany<T extends TagDeleteManyArgs>(
    args: Subset<T, TagDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagDeleteManyArgsSelect<T>>> : TagClient<Tag>
}
function TagDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagDelegate {
  const Tag = <T extends FindManyTagArgs>(args: Subset<T, FindManyTagArgs>) => new TagClient<PromiseLike<Array<TagGetPayload<ExtractFindManyTagArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tags', 'tags', args, [])
  Tag.findOne = <T extends FindOneTagArgs>(args: Subset<T, FindOneTagArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'query',
    'tag',
    'tags.findOne',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'query',
    'tag',
    'tags.findOne',
    args,
    []
  )
  Tag.findMany = <T extends FindManyTagArgs>(args: Subset<T, FindManyTagArgs>) => new TagClient<PromiseLike<Array<TagGetPayload<ExtractFindManyTagArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tags',
    'tags.findMany',
    args,
    []
  )
  Tag.create = <T extends TagCreateArgs>(args: Subset<T, TagCreateArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'createTag',
    'tags.create',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'createTag',
    'tags.create',
    args,
    []
  )
  Tag.update = <T extends TagUpdateArgs>(args: Subset<T, TagUpdateArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTag',
    'tags.update',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'updateTag',
    'tags.update',
    args,
    []
  )
  Tag.updateMany = <T extends TagUpdateManyArgs>(args: Subset<T, TagUpdateManyArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTags',
    'tags.updateMany',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTags',
    'tags.updateMany',
    args,
    []
  )
  Tag.upsert = <T extends TagUpsertArgs>(args: Subset<T, TagUpsertArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTag',
    'tags.upsert',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTag',
    'tags.upsert',
    args,
    []
  )
  Tag.delete = <T extends TagDeleteArgs>(args: Subset<T, TagDeleteArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTag',
    'tags.delete',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTag',
    'tags.delete',
    args,
    []
  )
  Tag.deleteMany = <T extends TagDeleteManyArgs>(args: Subset<T, TagDeleteManyArgs>) => args.select ? new TagClient<'select' extends keyof T ? PromiseLike<TagGetPayload<ExtractTagArgsSelect<T>>> : TagClient<Tag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTags',
    'tags.deleteMany',
    args,
    []
  ) : new TagClient<Tag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTags',
    'tags.deleteMany',
    args,
    []
  )
  return Tag as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Tag').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Tag').catch(onrejected)
  }
}


// InputTypes

export type FindOneTagArgs = {
  select?: TagSelect
  where: TagWhereUniqueInput
}

export type FindOneTagArgsWithSelect = {
  select: TagSelect
  where: TagWhereUniqueInput
}

type ExtractFindOneTagArgsSelect<S extends undefined | boolean | FindOneTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTagArgsWithSelect
  ? S['select']
  : true


export type FindManyTagArgs = {
  select?: TagSelect
  where?: TagWhereInput
  orderBy?: TagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagArgsWithSelect = {
  select: TagSelect
  where?: TagWhereInput
  orderBy?: TagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagArgsSelect<S extends undefined | boolean | FindManyTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagArgsWithSelect
  ? S['select']
  : true


export type TagCreateArgs = {
  select?: TagSelect
  data: TagCreateInput
}

export type TagCreateArgsWithSelect = {
  select: TagSelect
  data: TagCreateInput
}

type ExtractTagCreateArgsSelect<S extends undefined | boolean | TagCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagCreateArgsWithSelect
  ? S['select']
  : true


export type TagUpdateArgs = {
  select?: TagSelect
  data: TagUpdateInput
  where: TagWhereUniqueInput
}

export type TagUpdateArgsWithSelect = {
  select: TagSelect
  data: TagUpdateInput
  where: TagWhereUniqueInput
}

type ExtractTagUpdateArgsSelect<S extends undefined | boolean | TagUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUpdateArgsWithSelect
  ? S['select']
  : true


export type TagUpdateManyArgs = {
  select?: TagSelect
  data: TagUpdateManyMutationInput
  where?: TagWhereInput
}

export type TagUpdateManyArgsWithSelect = {
  select: TagSelect
  data: TagUpdateManyMutationInput
  where?: TagWhereInput
}

type ExtractTagUpdateManyArgsSelect<S extends undefined | boolean | TagUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagUpsertArgs = {
  select?: TagSelect
  where: TagWhereUniqueInput
  create: TagCreateInput
  update: TagUpdateInput
}

export type TagUpsertArgsWithSelect = {
  select: TagSelect
  where: TagWhereUniqueInput
  create: TagCreateInput
  update: TagUpdateInput
}

type ExtractTagUpsertArgsSelect<S extends undefined | boolean | TagUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUpsertArgsWithSelect
  ? S['select']
  : true


export type TagDeleteArgs = {
  select?: TagSelect
  where: TagWhereUniqueInput
}

export type TagDeleteArgsWithSelect = {
  select: TagSelect
  where: TagWhereUniqueInput
}

type ExtractTagDeleteArgsSelect<S extends undefined | boolean | TagDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagDeleteArgsWithSelect
  ? S['select']
  : true


export type TagDeleteManyArgs = {
  select?: TagSelect
  where?: TagWhereInput
}

export type TagDeleteManyArgsWithSelect = {
  select: TagSelect
  where?: TagWhereInput
}

type ExtractTagDeleteManyArgsSelect<S extends undefined | boolean | TagDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagArgs = {
  select?: TagSelect
}

export type TagArgsWithSelect = {
  select: TagSelect
}

type ExtractTagArgsSelect<S extends undefined | boolean | TagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagArgsWithSelect
  ? S['select']
  : true



/**
 * Model TagGroup
 */

export type TagGroup = {
  id: number
  createdAt: string | null
  name: string
  onePerTopic: boolean | null
  parentTagId: number | null
  updatedAt: string | null
}

export type TagGroupScalars = 'id' | 'createdAt' | 'name' | 'onePerTopic' | 'parentTagId' | 'updatedAt'


export type TagGroupSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  onePerTopic?: boolean
  parentTagId?: boolean
  updatedAt?: boolean
}

type TagGroupDefault = {
  id: true
  createdAt: true
  name: true
  onePerTopic: true
  parentTagId: true
  updatedAt: true
}


type TagGroupGetPayload<S extends boolean | TagGroupSelect> = S extends true
  ? TagGroup
  : S extends TagGroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagGroupDefault, S>>]: P extends TagGroupScalars
        ? TagGroup[P]
        : never
    }
   : never

export interface TagGroupDelegate {
  <T extends FindManyTagGroupArgs>(args?: Subset<T, FindManyTagGroupArgs>): PromiseLike<Array<TagGroupGetPayload<ExtractFindManyTagGroupArgsSelect<T>>>>
  findOne<T extends FindOneTagGroupArgs>(
    args: Subset<T, FindOneTagGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractFindOneTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>
  findMany<T extends FindManyTagGroupArgs>(
    args?: Subset<T, FindManyTagGroupArgs>
  ): PromiseLike<Array<TagGroupGetPayload<ExtractFindManyTagGroupArgsSelect<T>>>>
  create<T extends TagGroupCreateArgs>(
    args: Subset<T, TagGroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupCreateArgsSelect<T>>> : TagGroupClient<TagGroup>
  update<T extends TagGroupUpdateArgs>(
    args: Subset<T, TagGroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupUpdateArgsSelect<T>>> : TagGroupClient<TagGroup>
  updateMany<T extends TagGroupUpdateManyArgs>(
    args: Subset<T, TagGroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupUpdateManyArgsSelect<T>>> : TagGroupClient<TagGroup>
  upsert<T extends TagGroupUpsertArgs>(
    args: Subset<T, TagGroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupUpsertArgsSelect<T>>> : TagGroupClient<TagGroup>
  delete<T extends TagGroupDeleteArgs>(
    args: Subset<T, TagGroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupDeleteArgsSelect<T>>> : TagGroupClient<TagGroup>
  deleteMany<T extends TagGroupDeleteManyArgs>(
    args: Subset<T, TagGroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupDeleteManyArgsSelect<T>>> : TagGroupClient<TagGroup>
}
function TagGroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagGroupDelegate {
  const TagGroup = <T extends FindManyTagGroupArgs>(args: Subset<T, FindManyTagGroupArgs>) => new TagGroupClient<PromiseLike<Array<TagGroupGetPayload<ExtractFindManyTagGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tagGroups', 'tagGroups', args, [])
  TagGroup.findOne = <T extends FindOneTagGroupArgs>(args: Subset<T, FindOneTagGroupArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'query',
    'tagGroup',
    'tagGroups.findOne',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'query',
    'tagGroup',
    'tagGroups.findOne',
    args,
    []
  )
  TagGroup.findMany = <T extends FindManyTagGroupArgs>(args: Subset<T, FindManyTagGroupArgs>) => new TagGroupClient<PromiseLike<Array<TagGroupGetPayload<ExtractFindManyTagGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tagGroups',
    'tagGroups.findMany',
    args,
    []
  )
  TagGroup.create = <T extends TagGroupCreateArgs>(args: Subset<T, TagGroupCreateArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroup',
    'tagGroups.create',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroup',
    'tagGroups.create',
    args,
    []
  )
  TagGroup.update = <T extends TagGroupUpdateArgs>(args: Subset<T, TagGroupUpdateArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroup',
    'tagGroups.update',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroup',
    'tagGroups.update',
    args,
    []
  )
  TagGroup.updateMany = <T extends TagGroupUpdateManyArgs>(args: Subset<T, TagGroupUpdateManyArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroups',
    'tagGroups.updateMany',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroups',
    'tagGroups.updateMany',
    args,
    []
  )
  TagGroup.upsert = <T extends TagGroupUpsertArgs>(args: Subset<T, TagGroupUpsertArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroup',
    'tagGroups.upsert',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroup',
    'tagGroups.upsert',
    args,
    []
  )
  TagGroup.delete = <T extends TagGroupDeleteArgs>(args: Subset<T, TagGroupDeleteArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroup',
    'tagGroups.delete',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroup',
    'tagGroups.delete',
    args,
    []
  )
  TagGroup.deleteMany = <T extends TagGroupDeleteManyArgs>(args: Subset<T, TagGroupDeleteManyArgs>) => args.select ? new TagGroupClient<'select' extends keyof T ? PromiseLike<TagGroupGetPayload<ExtractTagGroupArgsSelect<T>>> : TagGroupClient<TagGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroups',
    'tagGroups.deleteMany',
    args,
    []
  ) : new TagGroupClient<TagGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroups',
    'tagGroups.deleteMany',
    args,
    []
  )
  return TagGroup as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagGroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagGroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroup').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroup').catch(onrejected)
  }
}


// InputTypes

export type FindOneTagGroupArgs = {
  select?: TagGroupSelect
  where: TagGroupWhereUniqueInput
}

export type FindOneTagGroupArgsWithSelect = {
  select: TagGroupSelect
  where: TagGroupWhereUniqueInput
}

type ExtractFindOneTagGroupArgsSelect<S extends undefined | boolean | FindOneTagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTagGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyTagGroupArgs = {
  select?: TagGroupSelect
  where?: TagGroupWhereInput
  orderBy?: TagGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagGroupArgsWithSelect = {
  select: TagGroupSelect
  where?: TagGroupWhereInput
  orderBy?: TagGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagGroupArgsSelect<S extends undefined | boolean | FindManyTagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagGroupArgsWithSelect
  ? S['select']
  : true


export type TagGroupCreateArgs = {
  select?: TagGroupSelect
  data: TagGroupCreateInput
}

export type TagGroupCreateArgsWithSelect = {
  select: TagGroupSelect
  data: TagGroupCreateInput
}

type ExtractTagGroupCreateArgsSelect<S extends undefined | boolean | TagGroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupCreateArgsWithSelect
  ? S['select']
  : true


export type TagGroupUpdateArgs = {
  select?: TagGroupSelect
  data: TagGroupUpdateInput
  where: TagGroupWhereUniqueInput
}

export type TagGroupUpdateArgsWithSelect = {
  select: TagGroupSelect
  data: TagGroupUpdateInput
  where: TagGroupWhereUniqueInput
}

type ExtractTagGroupUpdateArgsSelect<S extends undefined | boolean | TagGroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupUpdateArgsWithSelect
  ? S['select']
  : true


export type TagGroupUpdateManyArgs = {
  select?: TagGroupSelect
  data: TagGroupUpdateManyMutationInput
  where?: TagGroupWhereInput
}

export type TagGroupUpdateManyArgsWithSelect = {
  select: TagGroupSelect
  data: TagGroupUpdateManyMutationInput
  where?: TagGroupWhereInput
}

type ExtractTagGroupUpdateManyArgsSelect<S extends undefined | boolean | TagGroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupUpsertArgs = {
  select?: TagGroupSelect
  where: TagGroupWhereUniqueInput
  create: TagGroupCreateInput
  update: TagGroupUpdateInput
}

export type TagGroupUpsertArgsWithSelect = {
  select: TagGroupSelect
  where: TagGroupWhereUniqueInput
  create: TagGroupCreateInput
  update: TagGroupUpdateInput
}

type ExtractTagGroupUpsertArgsSelect<S extends undefined | boolean | TagGroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupUpsertArgsWithSelect
  ? S['select']
  : true


export type TagGroupDeleteArgs = {
  select?: TagGroupSelect
  where: TagGroupWhereUniqueInput
}

export type TagGroupDeleteArgsWithSelect = {
  select: TagGroupSelect
  where: TagGroupWhereUniqueInput
}

type ExtractTagGroupDeleteArgsSelect<S extends undefined | boolean | TagGroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupDeleteArgsWithSelect
  ? S['select']
  : true


export type TagGroupDeleteManyArgs = {
  select?: TagGroupSelect
  where?: TagGroupWhereInput
}

export type TagGroupDeleteManyArgsWithSelect = {
  select: TagGroupSelect
  where?: TagGroupWhereInput
}

type ExtractTagGroupDeleteManyArgsSelect<S extends undefined | boolean | TagGroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupArgs = {
  select?: TagGroupSelect
}

export type TagGroupArgsWithSelect = {
  select: TagGroupSelect
}

type ExtractTagGroupArgsSelect<S extends undefined | boolean | TagGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model TagGroupMembership
 */

export type TagGroupMembership = {
  id: number
  createdAt: string | null
  tagGroupId: number
  tagId: number
  updatedAt: string | null
}

export type TagGroupMembershipScalars = 'id' | 'createdAt' | 'tagGroupId' | 'tagId' | 'updatedAt'


export type TagGroupMembershipSelect = {
  id?: boolean
  createdAt?: boolean
  tagGroupId?: boolean
  tagId?: boolean
  updatedAt?: boolean
}

type TagGroupMembershipDefault = {
  id: true
  createdAt: true
  tagGroupId: true
  tagId: true
  updatedAt: true
}


type TagGroupMembershipGetPayload<S extends boolean | TagGroupMembershipSelect> = S extends true
  ? TagGroupMembership
  : S extends TagGroupMembershipSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagGroupMembershipDefault, S>>]: P extends TagGroupMembershipScalars
        ? TagGroupMembership[P]
        : never
    }
   : never

export interface TagGroupMembershipDelegate {
  <T extends FindManyTagGroupMembershipArgs>(args?: Subset<T, FindManyTagGroupMembershipArgs>): PromiseLike<Array<TagGroupMembershipGetPayload<ExtractFindManyTagGroupMembershipArgsSelect<T>>>>
  findOne<T extends FindOneTagGroupMembershipArgs>(
    args: Subset<T, FindOneTagGroupMembershipArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractFindOneTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  findMany<T extends FindManyTagGroupMembershipArgs>(
    args?: Subset<T, FindManyTagGroupMembershipArgs>
  ): PromiseLike<Array<TagGroupMembershipGetPayload<ExtractFindManyTagGroupMembershipArgsSelect<T>>>>
  create<T extends TagGroupMembershipCreateArgs>(
    args: Subset<T, TagGroupMembershipCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipCreateArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  update<T extends TagGroupMembershipUpdateArgs>(
    args: Subset<T, TagGroupMembershipUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipUpdateArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  updateMany<T extends TagGroupMembershipUpdateManyArgs>(
    args: Subset<T, TagGroupMembershipUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipUpdateManyArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  upsert<T extends TagGroupMembershipUpsertArgs>(
    args: Subset<T, TagGroupMembershipUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipUpsertArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  delete<T extends TagGroupMembershipDeleteArgs>(
    args: Subset<T, TagGroupMembershipDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipDeleteArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
  deleteMany<T extends TagGroupMembershipDeleteManyArgs>(
    args: Subset<T, TagGroupMembershipDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipDeleteManyArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>
}
function TagGroupMembershipDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagGroupMembershipDelegate {
  const TagGroupMembership = <T extends FindManyTagGroupMembershipArgs>(args: Subset<T, FindManyTagGroupMembershipArgs>) => new TagGroupMembershipClient<PromiseLike<Array<TagGroupMembershipGetPayload<ExtractFindManyTagGroupMembershipArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tagGroupMemberships', 'tagGroupMemberships', args, [])
  TagGroupMembership.findOne = <T extends FindOneTagGroupMembershipArgs>(args: Subset<T, FindOneTagGroupMembershipArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'query',
    'tagGroupMembership',
    'tagGroupMemberships.findOne',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'query',
    'tagGroupMembership',
    'tagGroupMemberships.findOne',
    args,
    []
  )
  TagGroupMembership.findMany = <T extends FindManyTagGroupMembershipArgs>(args: Subset<T, FindManyTagGroupMembershipArgs>) => new TagGroupMembershipClient<PromiseLike<Array<TagGroupMembershipGetPayload<ExtractFindManyTagGroupMembershipArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tagGroupMemberships',
    'tagGroupMemberships.findMany',
    args,
    []
  )
  TagGroupMembership.create = <T extends TagGroupMembershipCreateArgs>(args: Subset<T, TagGroupMembershipCreateArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroupMembership',
    'tagGroupMemberships.create',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroupMembership',
    'tagGroupMemberships.create',
    args,
    []
  )
  TagGroupMembership.update = <T extends TagGroupMembershipUpdateArgs>(args: Subset<T, TagGroupMembershipUpdateArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroupMembership',
    'tagGroupMemberships.update',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroupMembership',
    'tagGroupMemberships.update',
    args,
    []
  )
  TagGroupMembership.updateMany = <T extends TagGroupMembershipUpdateManyArgs>(args: Subset<T, TagGroupMembershipUpdateManyArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroupMemberships',
    'tagGroupMemberships.updateMany',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroupMemberships',
    'tagGroupMemberships.updateMany',
    args,
    []
  )
  TagGroupMembership.upsert = <T extends TagGroupMembershipUpsertArgs>(args: Subset<T, TagGroupMembershipUpsertArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroupMembership',
    'tagGroupMemberships.upsert',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroupMembership',
    'tagGroupMemberships.upsert',
    args,
    []
  )
  TagGroupMembership.delete = <T extends TagGroupMembershipDeleteArgs>(args: Subset<T, TagGroupMembershipDeleteArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroupMembership',
    'tagGroupMemberships.delete',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroupMembership',
    'tagGroupMemberships.delete',
    args,
    []
  )
  TagGroupMembership.deleteMany = <T extends TagGroupMembershipDeleteManyArgs>(args: Subset<T, TagGroupMembershipDeleteManyArgs>) => args.select ? new TagGroupMembershipClient<'select' extends keyof T ? PromiseLike<TagGroupMembershipGetPayload<ExtractTagGroupMembershipArgsSelect<T>>> : TagGroupMembershipClient<TagGroupMembership>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroupMemberships',
    'tagGroupMemberships.deleteMany',
    args,
    []
  ) : new TagGroupMembershipClient<TagGroupMembership>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroupMemberships',
    'tagGroupMemberships.deleteMany',
    args,
    []
  )
  return TagGroupMembership as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagGroupMembershipClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagGroupMembershipArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroupMembership').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroupMembership').catch(onrejected)
  }
}


// InputTypes

export type FindOneTagGroupMembershipArgs = {
  select?: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
}

export type FindOneTagGroupMembershipArgsWithSelect = {
  select: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
}

type ExtractFindOneTagGroupMembershipArgsSelect<S extends undefined | boolean | FindOneTagGroupMembershipArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTagGroupMembershipArgsWithSelect
  ? S['select']
  : true


export type FindManyTagGroupMembershipArgs = {
  select?: TagGroupMembershipSelect
  where?: TagGroupMembershipWhereInput
  orderBy?: TagGroupMembershipOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagGroupMembershipArgsWithSelect = {
  select: TagGroupMembershipSelect
  where?: TagGroupMembershipWhereInput
  orderBy?: TagGroupMembershipOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagGroupMembershipArgsSelect<S extends undefined | boolean | FindManyTagGroupMembershipArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagGroupMembershipArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipCreateArgs = {
  select?: TagGroupMembershipSelect
  data: TagGroupMembershipCreateInput
}

export type TagGroupMembershipCreateArgsWithSelect = {
  select: TagGroupMembershipSelect
  data: TagGroupMembershipCreateInput
}

type ExtractTagGroupMembershipCreateArgsSelect<S extends undefined | boolean | TagGroupMembershipCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipCreateArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipUpdateArgs = {
  select?: TagGroupMembershipSelect
  data: TagGroupMembershipUpdateInput
  where: TagGroupMembershipWhereUniqueInput
}

export type TagGroupMembershipUpdateArgsWithSelect = {
  select: TagGroupMembershipSelect
  data: TagGroupMembershipUpdateInput
  where: TagGroupMembershipWhereUniqueInput
}

type ExtractTagGroupMembershipUpdateArgsSelect<S extends undefined | boolean | TagGroupMembershipUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipUpdateArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipUpdateManyArgs = {
  select?: TagGroupMembershipSelect
  data: TagGroupMembershipUpdateManyMutationInput
  where?: TagGroupMembershipWhereInput
}

export type TagGroupMembershipUpdateManyArgsWithSelect = {
  select: TagGroupMembershipSelect
  data: TagGroupMembershipUpdateManyMutationInput
  where?: TagGroupMembershipWhereInput
}

type ExtractTagGroupMembershipUpdateManyArgsSelect<S extends undefined | boolean | TagGroupMembershipUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipUpsertArgs = {
  select?: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
  create: TagGroupMembershipCreateInput
  update: TagGroupMembershipUpdateInput
}

export type TagGroupMembershipUpsertArgsWithSelect = {
  select: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
  create: TagGroupMembershipCreateInput
  update: TagGroupMembershipUpdateInput
}

type ExtractTagGroupMembershipUpsertArgsSelect<S extends undefined | boolean | TagGroupMembershipUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipUpsertArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipDeleteArgs = {
  select?: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
}

export type TagGroupMembershipDeleteArgsWithSelect = {
  select: TagGroupMembershipSelect
  where: TagGroupMembershipWhereUniqueInput
}

type ExtractTagGroupMembershipDeleteArgsSelect<S extends undefined | boolean | TagGroupMembershipDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipDeleteArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipDeleteManyArgs = {
  select?: TagGroupMembershipSelect
  where?: TagGroupMembershipWhereInput
}

export type TagGroupMembershipDeleteManyArgsWithSelect = {
  select: TagGroupMembershipSelect
  where?: TagGroupMembershipWhereInput
}

type ExtractTagGroupMembershipDeleteManyArgsSelect<S extends undefined | boolean | TagGroupMembershipDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupMembershipArgs = {
  select?: TagGroupMembershipSelect
}

export type TagGroupMembershipArgsWithSelect = {
  select: TagGroupMembershipSelect
}

type ExtractTagGroupMembershipArgsSelect<S extends undefined | boolean | TagGroupMembershipArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupMembershipArgsWithSelect
  ? S['select']
  : true



/**
 * Model TagGroupPermission
 */

export type TagGroupPermission = {
  id: number
  createdAt: string
  groupId: number
  permissionType: number
  tagGroupId: number
  updatedAt: string
}

export type TagGroupPermissionScalars = 'id' | 'createdAt' | 'groupId' | 'permissionType' | 'tagGroupId' | 'updatedAt'


export type TagGroupPermissionSelect = {
  id?: boolean
  createdAt?: boolean
  groupId?: boolean
  permissionType?: boolean
  tagGroupId?: boolean
  updatedAt?: boolean
}

type TagGroupPermissionDefault = {
  id: true
  createdAt: true
  groupId: true
  permissionType: true
  tagGroupId: true
  updatedAt: true
}


type TagGroupPermissionGetPayload<S extends boolean | TagGroupPermissionSelect> = S extends true
  ? TagGroupPermission
  : S extends TagGroupPermissionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagGroupPermissionDefault, S>>]: P extends TagGroupPermissionScalars
        ? TagGroupPermission[P]
        : never
    }
   : never

export interface TagGroupPermissionDelegate {
  <T extends FindManyTagGroupPermissionArgs>(args?: Subset<T, FindManyTagGroupPermissionArgs>): PromiseLike<Array<TagGroupPermissionGetPayload<ExtractFindManyTagGroupPermissionArgsSelect<T>>>>
  findOne<T extends FindOneTagGroupPermissionArgs>(
    args: Subset<T, FindOneTagGroupPermissionArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractFindOneTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  findMany<T extends FindManyTagGroupPermissionArgs>(
    args?: Subset<T, FindManyTagGroupPermissionArgs>
  ): PromiseLike<Array<TagGroupPermissionGetPayload<ExtractFindManyTagGroupPermissionArgsSelect<T>>>>
  create<T extends TagGroupPermissionCreateArgs>(
    args: Subset<T, TagGroupPermissionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionCreateArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  update<T extends TagGroupPermissionUpdateArgs>(
    args: Subset<T, TagGroupPermissionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionUpdateArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  updateMany<T extends TagGroupPermissionUpdateManyArgs>(
    args: Subset<T, TagGroupPermissionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionUpdateManyArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  upsert<T extends TagGroupPermissionUpsertArgs>(
    args: Subset<T, TagGroupPermissionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionUpsertArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  delete<T extends TagGroupPermissionDeleteArgs>(
    args: Subset<T, TagGroupPermissionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionDeleteArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
  deleteMany<T extends TagGroupPermissionDeleteManyArgs>(
    args: Subset<T, TagGroupPermissionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionDeleteManyArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>
}
function TagGroupPermissionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagGroupPermissionDelegate {
  const TagGroupPermission = <T extends FindManyTagGroupPermissionArgs>(args: Subset<T, FindManyTagGroupPermissionArgs>) => new TagGroupPermissionClient<PromiseLike<Array<TagGroupPermissionGetPayload<ExtractFindManyTagGroupPermissionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tagGroupPermissions', 'tagGroupPermissions', args, [])
  TagGroupPermission.findOne = <T extends FindOneTagGroupPermissionArgs>(args: Subset<T, FindOneTagGroupPermissionArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'query',
    'tagGroupPermission',
    'tagGroupPermissions.findOne',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'query',
    'tagGroupPermission',
    'tagGroupPermissions.findOne',
    args,
    []
  )
  TagGroupPermission.findMany = <T extends FindManyTagGroupPermissionArgs>(args: Subset<T, FindManyTagGroupPermissionArgs>) => new TagGroupPermissionClient<PromiseLike<Array<TagGroupPermissionGetPayload<ExtractFindManyTagGroupPermissionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tagGroupPermissions',
    'tagGroupPermissions.findMany',
    args,
    []
  )
  TagGroupPermission.create = <T extends TagGroupPermissionCreateArgs>(args: Subset<T, TagGroupPermissionCreateArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroupPermission',
    'tagGroupPermissions.create',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'createTagGroupPermission',
    'tagGroupPermissions.create',
    args,
    []
  )
  TagGroupPermission.update = <T extends TagGroupPermissionUpdateArgs>(args: Subset<T, TagGroupPermissionUpdateArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroupPermission',
    'tagGroupPermissions.update',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagGroupPermission',
    'tagGroupPermissions.update',
    args,
    []
  )
  TagGroupPermission.updateMany = <T extends TagGroupPermissionUpdateManyArgs>(args: Subset<T, TagGroupPermissionUpdateManyArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroupPermissions',
    'tagGroupPermissions.updateMany',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagGroupPermissions',
    'tagGroupPermissions.updateMany',
    args,
    []
  )
  TagGroupPermission.upsert = <T extends TagGroupPermissionUpsertArgs>(args: Subset<T, TagGroupPermissionUpsertArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroupPermission',
    'tagGroupPermissions.upsert',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagGroupPermission',
    'tagGroupPermissions.upsert',
    args,
    []
  )
  TagGroupPermission.delete = <T extends TagGroupPermissionDeleteArgs>(args: Subset<T, TagGroupPermissionDeleteArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroupPermission',
    'tagGroupPermissions.delete',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagGroupPermission',
    'tagGroupPermissions.delete',
    args,
    []
  )
  TagGroupPermission.deleteMany = <T extends TagGroupPermissionDeleteManyArgs>(args: Subset<T, TagGroupPermissionDeleteManyArgs>) => args.select ? new TagGroupPermissionClient<'select' extends keyof T ? PromiseLike<TagGroupPermissionGetPayload<ExtractTagGroupPermissionArgsSelect<T>>> : TagGroupPermissionClient<TagGroupPermission>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroupPermissions',
    'tagGroupPermissions.deleteMany',
    args,
    []
  ) : new TagGroupPermissionClient<TagGroupPermission>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagGroupPermissions',
    'tagGroupPermissions.deleteMany',
    args,
    []
  )
  return TagGroupPermission as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagGroupPermissionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagGroupPermissionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroupPermission').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagGroupPermission').catch(onrejected)
  }
}


// InputTypes

export type FindOneTagGroupPermissionArgs = {
  select?: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
}

export type FindOneTagGroupPermissionArgsWithSelect = {
  select: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
}

type ExtractFindOneTagGroupPermissionArgsSelect<S extends undefined | boolean | FindOneTagGroupPermissionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTagGroupPermissionArgsWithSelect
  ? S['select']
  : true


export type FindManyTagGroupPermissionArgs = {
  select?: TagGroupPermissionSelect
  where?: TagGroupPermissionWhereInput
  orderBy?: TagGroupPermissionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagGroupPermissionArgsWithSelect = {
  select: TagGroupPermissionSelect
  where?: TagGroupPermissionWhereInput
  orderBy?: TagGroupPermissionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagGroupPermissionArgsSelect<S extends undefined | boolean | FindManyTagGroupPermissionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagGroupPermissionArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionCreateArgs = {
  select?: TagGroupPermissionSelect
  data: TagGroupPermissionCreateInput
}

export type TagGroupPermissionCreateArgsWithSelect = {
  select: TagGroupPermissionSelect
  data: TagGroupPermissionCreateInput
}

type ExtractTagGroupPermissionCreateArgsSelect<S extends undefined | boolean | TagGroupPermissionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionCreateArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionUpdateArgs = {
  select?: TagGroupPermissionSelect
  data: TagGroupPermissionUpdateInput
  where: TagGroupPermissionWhereUniqueInput
}

export type TagGroupPermissionUpdateArgsWithSelect = {
  select: TagGroupPermissionSelect
  data: TagGroupPermissionUpdateInput
  where: TagGroupPermissionWhereUniqueInput
}

type ExtractTagGroupPermissionUpdateArgsSelect<S extends undefined | boolean | TagGroupPermissionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionUpdateArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionUpdateManyArgs = {
  select?: TagGroupPermissionSelect
  data: TagGroupPermissionUpdateManyMutationInput
  where?: TagGroupPermissionWhereInput
}

export type TagGroupPermissionUpdateManyArgsWithSelect = {
  select: TagGroupPermissionSelect
  data: TagGroupPermissionUpdateManyMutationInput
  where?: TagGroupPermissionWhereInput
}

type ExtractTagGroupPermissionUpdateManyArgsSelect<S extends undefined | boolean | TagGroupPermissionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionUpsertArgs = {
  select?: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
  create: TagGroupPermissionCreateInput
  update: TagGroupPermissionUpdateInput
}

export type TagGroupPermissionUpsertArgsWithSelect = {
  select: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
  create: TagGroupPermissionCreateInput
  update: TagGroupPermissionUpdateInput
}

type ExtractTagGroupPermissionUpsertArgsSelect<S extends undefined | boolean | TagGroupPermissionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionUpsertArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionDeleteArgs = {
  select?: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
}

export type TagGroupPermissionDeleteArgsWithSelect = {
  select: TagGroupPermissionSelect
  where: TagGroupPermissionWhereUniqueInput
}

type ExtractTagGroupPermissionDeleteArgsSelect<S extends undefined | boolean | TagGroupPermissionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionDeleteArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionDeleteManyArgs = {
  select?: TagGroupPermissionSelect
  where?: TagGroupPermissionWhereInput
}

export type TagGroupPermissionDeleteManyArgsWithSelect = {
  select: TagGroupPermissionSelect
  where?: TagGroupPermissionWhereInput
}

type ExtractTagGroupPermissionDeleteManyArgsSelect<S extends undefined | boolean | TagGroupPermissionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagGroupPermissionArgs = {
  select?: TagGroupPermissionSelect
}

export type TagGroupPermissionArgsWithSelect = {
  select: TagGroupPermissionSelect
}

type ExtractTagGroupPermissionArgsSelect<S extends undefined | boolean | TagGroupPermissionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagGroupPermissionArgsWithSelect
  ? S['select']
  : true



/**
 * Model TagSearchDatum
 */

export type TagSearchDatum = {
  tag_id: number
  locale: string | null
  rawData: string | null
  version: number | null
}

export type TagSearchDatumScalars = 'tag_id' | 'locale' | 'rawData' | 'version'


export type TagSearchDatumSelect = {
  tag_id?: boolean
  locale?: boolean
  rawData?: boolean
  version?: boolean
}

type TagSearchDatumDefault = {
  tag_id: true
  locale: true
  rawData: true
  version: true
}


type TagSearchDatumGetPayload<S extends boolean | TagSearchDatumSelect> = S extends true
  ? TagSearchDatum
  : S extends TagSearchDatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagSearchDatumDefault, S>>]: P extends TagSearchDatumScalars
        ? TagSearchDatum[P]
        : never
    }
   : never

export interface TagSearchDatumDelegate {
  <T extends FindManyTagSearchDatumArgs>(args?: Subset<T, FindManyTagSearchDatumArgs>): PromiseLike<Array<TagSearchDatumGetPayload<ExtractFindManyTagSearchDatumArgsSelect<T>>>>
  findMany<T extends FindManyTagSearchDatumArgs>(
    args?: Subset<T, FindManyTagSearchDatumArgs>
  ): PromiseLike<Array<TagSearchDatumGetPayload<ExtractFindManyTagSearchDatumArgsSelect<T>>>>
  create<T extends TagSearchDatumCreateArgs>(
    args: Subset<T, TagSearchDatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumCreateArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>
  updateMany<T extends TagSearchDatumUpdateManyArgs>(
    args: Subset<T, TagSearchDatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumUpdateManyArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>
  deleteMany<T extends TagSearchDatumDeleteManyArgs>(
    args: Subset<T, TagSearchDatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumDeleteManyArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>
}
function TagSearchDatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagSearchDatumDelegate {
  const TagSearchDatum = <T extends FindManyTagSearchDatumArgs>(args: Subset<T, FindManyTagSearchDatumArgs>) => new TagSearchDatumClient<PromiseLike<Array<TagSearchDatumGetPayload<ExtractFindManyTagSearchDatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tagSearchData', 'tagSearchData', args, [])
  TagSearchDatum.findMany = <T extends FindManyTagSearchDatumArgs>(args: Subset<T, FindManyTagSearchDatumArgs>) => new TagSearchDatumClient<PromiseLike<Array<TagSearchDatumGetPayload<ExtractFindManyTagSearchDatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tagSearchData',
    'tagSearchData.findMany',
    args,
    []
  )
  TagSearchDatum.create = <T extends TagSearchDatumCreateArgs>(args: Subset<T, TagSearchDatumCreateArgs>) => args.select ? new TagSearchDatumClient<'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createTagSearchDatum',
    'tagSearchData.create',
    args,
    []
  ) : new TagSearchDatumClient<TagSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'createTagSearchDatum',
    'tagSearchData.create',
    args,
    []
  )
  TagSearchDatum.updateMany = <T extends TagSearchDatumUpdateManyArgs>(args: Subset<T, TagSearchDatumUpdateManyArgs>) => args.select ? new TagSearchDatumClient<'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagSearchData',
    'tagSearchData.updateMany',
    args,
    []
  ) : new TagSearchDatumClient<TagSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagSearchData',
    'tagSearchData.updateMany',
    args,
    []
  )
  TagSearchDatum.deleteMany = <T extends TagSearchDatumDeleteManyArgs>(args: Subset<T, TagSearchDatumDeleteManyArgs>) => args.select ? new TagSearchDatumClient<'select' extends keyof T ? PromiseLike<TagSearchDatumGetPayload<ExtractTagSearchDatumArgsSelect<T>>> : TagSearchDatumClient<TagSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagSearchData',
    'tagSearchData.deleteMany',
    args,
    []
  ) : new TagSearchDatumClient<TagSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagSearchData',
    'tagSearchData.deleteMany',
    args,
    []
  )
  return TagSearchDatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagSearchDatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagSearchDatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagSearchDatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagSearchDatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyTagSearchDatumArgs = {
  select?: TagSearchDatumSelect
  where?: TagSearchDatumWhereInput
  orderBy?: TagSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagSearchDatumArgsWithSelect = {
  select: TagSearchDatumSelect
  where?: TagSearchDatumWhereInput
  orderBy?: TagSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagSearchDatumArgsSelect<S extends undefined | boolean | FindManyTagSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagSearchDatumArgsWithSelect
  ? S['select']
  : true


export type TagSearchDatumCreateArgs = {
  select?: TagSearchDatumSelect
  data: TagSearchDatumCreateInput
}

export type TagSearchDatumCreateArgsWithSelect = {
  select: TagSearchDatumSelect
  data: TagSearchDatumCreateInput
}

type ExtractTagSearchDatumCreateArgsSelect<S extends undefined | boolean | TagSearchDatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagSearchDatumCreateArgsWithSelect
  ? S['select']
  : true


export type TagSearchDatumUpdateManyArgs = {
  select?: TagSearchDatumSelect
  data: TagSearchDatumUpdateManyMutationInput
  where?: TagSearchDatumWhereInput
}

export type TagSearchDatumUpdateManyArgsWithSelect = {
  select: TagSearchDatumSelect
  data: TagSearchDatumUpdateManyMutationInput
  where?: TagSearchDatumWhereInput
}

type ExtractTagSearchDatumUpdateManyArgsSelect<S extends undefined | boolean | TagSearchDatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagSearchDatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagSearchDatumDeleteManyArgs = {
  select?: TagSearchDatumSelect
  where?: TagSearchDatumWhereInput
}

export type TagSearchDatumDeleteManyArgsWithSelect = {
  select: TagSearchDatumSelect
  where?: TagSearchDatumWhereInput
}

type ExtractTagSearchDatumDeleteManyArgsSelect<S extends undefined | boolean | TagSearchDatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagSearchDatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagSearchDatumArgs = {
  select?: TagSearchDatumSelect
}

export type TagSearchDatumArgsWithSelect = {
  select: TagSearchDatumSelect
}

type ExtractTagSearchDatumArgsSelect<S extends undefined | boolean | TagSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagSearchDatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model TagUser
 */

export type TagUser = {
  id: number
  createdAt: string | null
  notificationLevel: number
  tagId: number
  updatedAt: string | null
  userId: number
}

export type TagUserScalars = 'id' | 'createdAt' | 'notificationLevel' | 'tagId' | 'updatedAt' | 'userId'


export type TagUserSelect = {
  id?: boolean
  createdAt?: boolean
  notificationLevel?: boolean
  tagId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type TagUserDefault = {
  id: true
  createdAt: true
  notificationLevel: true
  tagId: true
  updatedAt: true
  userId: true
}


type TagUserGetPayload<S extends boolean | TagUserSelect> = S extends true
  ? TagUser
  : S extends TagUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TagUserDefault, S>>]: P extends TagUserScalars
        ? TagUser[P]
        : never
    }
   : never

export interface TagUserDelegate {
  <T extends FindManyTagUserArgs>(args?: Subset<T, FindManyTagUserArgs>): PromiseLike<Array<TagUserGetPayload<ExtractFindManyTagUserArgsSelect<T>>>>
  findOne<T extends FindOneTagUserArgs>(
    args: Subset<T, FindOneTagUserArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractFindOneTagUserArgsSelect<T>>> : TagUserClient<TagUser>
  findMany<T extends FindManyTagUserArgs>(
    args?: Subset<T, FindManyTagUserArgs>
  ): PromiseLike<Array<TagUserGetPayload<ExtractFindManyTagUserArgsSelect<T>>>>
  create<T extends TagUserCreateArgs>(
    args: Subset<T, TagUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserCreateArgsSelect<T>>> : TagUserClient<TagUser>
  update<T extends TagUserUpdateArgs>(
    args: Subset<T, TagUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserUpdateArgsSelect<T>>> : TagUserClient<TagUser>
  updateMany<T extends TagUserUpdateManyArgs>(
    args: Subset<T, TagUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserUpdateManyArgsSelect<T>>> : TagUserClient<TagUser>
  upsert<T extends TagUserUpsertArgs>(
    args: Subset<T, TagUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserUpsertArgsSelect<T>>> : TagUserClient<TagUser>
  delete<T extends TagUserDeleteArgs>(
    args: Subset<T, TagUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserDeleteArgsSelect<T>>> : TagUserClient<TagUser>
  deleteMany<T extends TagUserDeleteManyArgs>(
    args: Subset<T, TagUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserDeleteManyArgsSelect<T>>> : TagUserClient<TagUser>
}
function TagUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TagUserDelegate {
  const TagUser = <T extends FindManyTagUserArgs>(args: Subset<T, FindManyTagUserArgs>) => new TagUserClient<PromiseLike<Array<TagUserGetPayload<ExtractFindManyTagUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'tagUsers', 'tagUsers', args, [])
  TagUser.findOne = <T extends FindOneTagUserArgs>(args: Subset<T, FindOneTagUserArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'query',
    'tagUser',
    'tagUsers.findOne',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'query',
    'tagUser',
    'tagUsers.findOne',
    args,
    []
  )
  TagUser.findMany = <T extends FindManyTagUserArgs>(args: Subset<T, FindManyTagUserArgs>) => new TagUserClient<PromiseLike<Array<TagUserGetPayload<ExtractFindManyTagUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'tagUsers',
    'tagUsers.findMany',
    args,
    []
  )
  TagUser.create = <T extends TagUserCreateArgs>(args: Subset<T, TagUserCreateArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createTagUser',
    'tagUsers.create',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'createTagUser',
    'tagUsers.create',
    args,
    []
  )
  TagUser.update = <T extends TagUserUpdateArgs>(args: Subset<T, TagUserUpdateArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagUser',
    'tagUsers.update',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateTagUser',
    'tagUsers.update',
    args,
    []
  )
  TagUser.updateMany = <T extends TagUserUpdateManyArgs>(args: Subset<T, TagUserUpdateManyArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagUsers',
    'tagUsers.updateMany',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTagUsers',
    'tagUsers.updateMany',
    args,
    []
  )
  TagUser.upsert = <T extends TagUserUpsertArgs>(args: Subset<T, TagUserUpsertArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagUser',
    'tagUsers.upsert',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTagUser',
    'tagUsers.upsert',
    args,
    []
  )
  TagUser.delete = <T extends TagUserDeleteArgs>(args: Subset<T, TagUserDeleteArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagUser',
    'tagUsers.delete',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTagUser',
    'tagUsers.delete',
    args,
    []
  )
  TagUser.deleteMany = <T extends TagUserDeleteManyArgs>(args: Subset<T, TagUserDeleteManyArgs>) => args.select ? new TagUserClient<'select' extends keyof T ? PromiseLike<TagUserGetPayload<ExtractTagUserArgsSelect<T>>> : TagUserClient<TagUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagUsers',
    'tagUsers.deleteMany',
    args,
    []
  ) : new TagUserClient<TagUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTagUsers',
    'tagUsers.deleteMany',
    args,
    []
  )
  return TagUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TagUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TagUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TagUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneTagUserArgs = {
  select?: TagUserSelect
  where: TagUserWhereUniqueInput
}

export type FindOneTagUserArgsWithSelect = {
  select: TagUserSelect
  where: TagUserWhereUniqueInput
}

type ExtractFindOneTagUserArgsSelect<S extends undefined | boolean | FindOneTagUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTagUserArgsWithSelect
  ? S['select']
  : true


export type FindManyTagUserArgs = {
  select?: TagUserSelect
  where?: TagUserWhereInput
  orderBy?: TagUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTagUserArgsWithSelect = {
  select: TagUserSelect
  where?: TagUserWhereInput
  orderBy?: TagUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTagUserArgsSelect<S extends undefined | boolean | FindManyTagUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTagUserArgsWithSelect
  ? S['select']
  : true


export type TagUserCreateArgs = {
  select?: TagUserSelect
  data: TagUserCreateInput
}

export type TagUserCreateArgsWithSelect = {
  select: TagUserSelect
  data: TagUserCreateInput
}

type ExtractTagUserCreateArgsSelect<S extends undefined | boolean | TagUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserCreateArgsWithSelect
  ? S['select']
  : true


export type TagUserUpdateArgs = {
  select?: TagUserSelect
  data: TagUserUpdateInput
  where: TagUserWhereUniqueInput
}

export type TagUserUpdateArgsWithSelect = {
  select: TagUserSelect
  data: TagUserUpdateInput
  where: TagUserWhereUniqueInput
}

type ExtractTagUserUpdateArgsSelect<S extends undefined | boolean | TagUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserUpdateArgsWithSelect
  ? S['select']
  : true


export type TagUserUpdateManyArgs = {
  select?: TagUserSelect
  data: TagUserUpdateManyMutationInput
  where?: TagUserWhereInput
}

export type TagUserUpdateManyArgsWithSelect = {
  select: TagUserSelect
  data: TagUserUpdateManyMutationInput
  where?: TagUserWhereInput
}

type ExtractTagUserUpdateManyArgsSelect<S extends undefined | boolean | TagUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TagUserUpsertArgs = {
  select?: TagUserSelect
  where: TagUserWhereUniqueInput
  create: TagUserCreateInput
  update: TagUserUpdateInput
}

export type TagUserUpsertArgsWithSelect = {
  select: TagUserSelect
  where: TagUserWhereUniqueInput
  create: TagUserCreateInput
  update: TagUserUpdateInput
}

type ExtractTagUserUpsertArgsSelect<S extends undefined | boolean | TagUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserUpsertArgsWithSelect
  ? S['select']
  : true


export type TagUserDeleteArgs = {
  select?: TagUserSelect
  where: TagUserWhereUniqueInput
}

export type TagUserDeleteArgsWithSelect = {
  select: TagUserSelect
  where: TagUserWhereUniqueInput
}

type ExtractTagUserDeleteArgsSelect<S extends undefined | boolean | TagUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserDeleteArgsWithSelect
  ? S['select']
  : true


export type TagUserDeleteManyArgs = {
  select?: TagUserSelect
  where?: TagUserWhereInput
}

export type TagUserDeleteManyArgsWithSelect = {
  select: TagUserSelect
  where?: TagUserWhereInput
}

type ExtractTagUserDeleteManyArgsSelect<S extends undefined | boolean | TagUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TagUserArgs = {
  select?: TagUserSelect
}

export type TagUserArgsWithSelect = {
  select: TagUserSelect
}

type ExtractTagUserArgsSelect<S extends undefined | boolean | TagUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TagUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model Theme
 */

export type Theme = {
  id: number
  colorSchemeId: number | null
  compilerVersion: number
  component: boolean
  createdAt: string
  hidden: boolean
  name: string
  remoteThemeId: number | null
  updatedAt: string
  userId: number
  userSelectable: boolean
}

export type ThemeScalars = 'id' | 'colorSchemeId' | 'compilerVersion' | 'component' | 'createdAt' | 'hidden' | 'name' | 'remoteThemeId' | 'updatedAt' | 'userId' | 'userSelectable'


export type ThemeSelect = {
  id?: boolean
  colorSchemeId?: boolean
  compilerVersion?: boolean
  component?: boolean
  createdAt?: boolean
  hidden?: boolean
  name?: boolean
  remoteThemeId?: boolean
  updatedAt?: boolean
  userId?: boolean
  userSelectable?: boolean
}

type ThemeDefault = {
  id: true
  colorSchemeId: true
  compilerVersion: true
  component: true
  createdAt: true
  hidden: true
  name: true
  remoteThemeId: true
  updatedAt: true
  userId: true
  userSelectable: true
}


type ThemeGetPayload<S extends boolean | ThemeSelect> = S extends true
  ? Theme
  : S extends ThemeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ThemeDefault, S>>]: P extends ThemeScalars
        ? Theme[P]
        : never
    }
   : never

export interface ThemeDelegate {
  <T extends FindManyThemeArgs>(args?: Subset<T, FindManyThemeArgs>): PromiseLike<Array<ThemeGetPayload<ExtractFindManyThemeArgsSelect<T>>>>
  findOne<T extends FindOneThemeArgs>(
    args: Subset<T, FindOneThemeArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractFindOneThemeArgsSelect<T>>> : ThemeClient<Theme>
  findMany<T extends FindManyThemeArgs>(
    args?: Subset<T, FindManyThemeArgs>
  ): PromiseLike<Array<ThemeGetPayload<ExtractFindManyThemeArgsSelect<T>>>>
  create<T extends ThemeCreateArgs>(
    args: Subset<T, ThemeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeCreateArgsSelect<T>>> : ThemeClient<Theme>
  update<T extends ThemeUpdateArgs>(
    args: Subset<T, ThemeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeUpdateArgsSelect<T>>> : ThemeClient<Theme>
  updateMany<T extends ThemeUpdateManyArgs>(
    args: Subset<T, ThemeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeUpdateManyArgsSelect<T>>> : ThemeClient<Theme>
  upsert<T extends ThemeUpsertArgs>(
    args: Subset<T, ThemeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeUpsertArgsSelect<T>>> : ThemeClient<Theme>
  delete<T extends ThemeDeleteArgs>(
    args: Subset<T, ThemeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeDeleteArgsSelect<T>>> : ThemeClient<Theme>
  deleteMany<T extends ThemeDeleteManyArgs>(
    args: Subset<T, ThemeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeDeleteManyArgsSelect<T>>> : ThemeClient<Theme>
}
function ThemeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ThemeDelegate {
  const Theme = <T extends FindManyThemeArgs>(args: Subset<T, FindManyThemeArgs>) => new ThemeClient<PromiseLike<Array<ThemeGetPayload<ExtractFindManyThemeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'themes', 'themes', args, [])
  Theme.findOne = <T extends FindOneThemeArgs>(args: Subset<T, FindOneThemeArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'query',
    'theme',
    'themes.findOne',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'query',
    'theme',
    'themes.findOne',
    args,
    []
  )
  Theme.findMany = <T extends FindManyThemeArgs>(args: Subset<T, FindManyThemeArgs>) => new ThemeClient<PromiseLike<Array<ThemeGetPayload<ExtractFindManyThemeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'themes',
    'themes.findMany',
    args,
    []
  )
  Theme.create = <T extends ThemeCreateArgs>(args: Subset<T, ThemeCreateArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'createTheme',
    'themes.create',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'createTheme',
    'themes.create',
    args,
    []
  )
  Theme.update = <T extends ThemeUpdateArgs>(args: Subset<T, ThemeUpdateArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTheme',
    'themes.update',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'updateTheme',
    'themes.update',
    args,
    []
  )
  Theme.updateMany = <T extends ThemeUpdateManyArgs>(args: Subset<T, ThemeUpdateManyArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemes',
    'themes.updateMany',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemes',
    'themes.updateMany',
    args,
    []
  )
  Theme.upsert = <T extends ThemeUpsertArgs>(args: Subset<T, ThemeUpsertArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTheme',
    'themes.upsert',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTheme',
    'themes.upsert',
    args,
    []
  )
  Theme.delete = <T extends ThemeDeleteArgs>(args: Subset<T, ThemeDeleteArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTheme',
    'themes.delete',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTheme',
    'themes.delete',
    args,
    []
  )
  Theme.deleteMany = <T extends ThemeDeleteManyArgs>(args: Subset<T, ThemeDeleteManyArgs>) => args.select ? new ThemeClient<'select' extends keyof T ? PromiseLike<ThemeGetPayload<ExtractThemeArgsSelect<T>>> : ThemeClient<Theme>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemes',
    'themes.deleteMany',
    args,
    []
  ) : new ThemeClient<Theme>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemes',
    'themes.deleteMany',
    args,
    []
  )
  return Theme as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ThemeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ThemeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Theme').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Theme').catch(onrejected)
  }
}


// InputTypes

export type FindOneThemeArgs = {
  select?: ThemeSelect
  where: ThemeWhereUniqueInput
}

export type FindOneThemeArgsWithSelect = {
  select: ThemeSelect
  where: ThemeWhereUniqueInput
}

type ExtractFindOneThemeArgsSelect<S extends undefined | boolean | FindOneThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneThemeArgsWithSelect
  ? S['select']
  : true


export type FindManyThemeArgs = {
  select?: ThemeSelect
  where?: ThemeWhereInput
  orderBy?: ThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyThemeArgsWithSelect = {
  select: ThemeSelect
  where?: ThemeWhereInput
  orderBy?: ThemeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyThemeArgsSelect<S extends undefined | boolean | FindManyThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyThemeArgsWithSelect
  ? S['select']
  : true


export type ThemeCreateArgs = {
  select?: ThemeSelect
  data: ThemeCreateInput
}

export type ThemeCreateArgsWithSelect = {
  select: ThemeSelect
  data: ThemeCreateInput
}

type ExtractThemeCreateArgsSelect<S extends undefined | boolean | ThemeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeCreateArgsWithSelect
  ? S['select']
  : true


export type ThemeUpdateArgs = {
  select?: ThemeSelect
  data: ThemeUpdateInput
  where: ThemeWhereUniqueInput
}

export type ThemeUpdateArgsWithSelect = {
  select: ThemeSelect
  data: ThemeUpdateInput
  where: ThemeWhereUniqueInput
}

type ExtractThemeUpdateArgsSelect<S extends undefined | boolean | ThemeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeUpdateArgsWithSelect
  ? S['select']
  : true


export type ThemeUpdateManyArgs = {
  select?: ThemeSelect
  data: ThemeUpdateManyMutationInput
  where?: ThemeWhereInput
}

export type ThemeUpdateManyArgsWithSelect = {
  select: ThemeSelect
  data: ThemeUpdateManyMutationInput
  where?: ThemeWhereInput
}

type ExtractThemeUpdateManyArgsSelect<S extends undefined | boolean | ThemeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ThemeUpsertArgs = {
  select?: ThemeSelect
  where: ThemeWhereUniqueInput
  create: ThemeCreateInput
  update: ThemeUpdateInput
}

export type ThemeUpsertArgsWithSelect = {
  select: ThemeSelect
  where: ThemeWhereUniqueInput
  create: ThemeCreateInput
  update: ThemeUpdateInput
}

type ExtractThemeUpsertArgsSelect<S extends undefined | boolean | ThemeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeUpsertArgsWithSelect
  ? S['select']
  : true


export type ThemeDeleteArgs = {
  select?: ThemeSelect
  where: ThemeWhereUniqueInput
}

export type ThemeDeleteArgsWithSelect = {
  select: ThemeSelect
  where: ThemeWhereUniqueInput
}

type ExtractThemeDeleteArgsSelect<S extends undefined | boolean | ThemeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeDeleteArgsWithSelect
  ? S['select']
  : true


export type ThemeDeleteManyArgs = {
  select?: ThemeSelect
  where?: ThemeWhereInput
}

export type ThemeDeleteManyArgsWithSelect = {
  select: ThemeSelect
  where?: ThemeWhereInput
}

type ExtractThemeDeleteManyArgsSelect<S extends undefined | boolean | ThemeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ThemeArgs = {
  select?: ThemeSelect
}

export type ThemeArgsWithSelect = {
  select: ThemeSelect
}

type ExtractThemeArgsSelect<S extends undefined | boolean | ThemeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeArgsWithSelect
  ? S['select']
  : true



/**
 * Model ThemeField
 */

export type ThemeField = {
  id: number
  compilerVersion: number
  createdAt: string | null
  error: string | null
  name: string
  targetId: number
  themeId: number
  typeId: number
  updatedAt: string | null
  uploadId: number | null
  value: string
  valueBaked: string | null
}

export type ThemeFieldScalars = 'id' | 'compilerVersion' | 'createdAt' | 'error' | 'name' | 'targetId' | 'themeId' | 'typeId' | 'updatedAt' | 'uploadId' | 'value' | 'valueBaked'


export type ThemeFieldSelect = {
  id?: boolean
  compilerVersion?: boolean
  createdAt?: boolean
  error?: boolean
  name?: boolean
  targetId?: boolean
  themeId?: boolean
  typeId?: boolean
  updatedAt?: boolean
  uploadId?: boolean
  value?: boolean
  valueBaked?: boolean
}

type ThemeFieldDefault = {
  id: true
  compilerVersion: true
  createdAt: true
  error: true
  name: true
  targetId: true
  themeId: true
  typeId: true
  updatedAt: true
  uploadId: true
  value: true
  valueBaked: true
}


type ThemeFieldGetPayload<S extends boolean | ThemeFieldSelect> = S extends true
  ? ThemeField
  : S extends ThemeFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ThemeFieldDefault, S>>]: P extends ThemeFieldScalars
        ? ThemeField[P]
        : never
    }
   : never

export interface ThemeFieldDelegate {
  <T extends FindManyThemeFieldArgs>(args?: Subset<T, FindManyThemeFieldArgs>): PromiseLike<Array<ThemeFieldGetPayload<ExtractFindManyThemeFieldArgsSelect<T>>>>
  findOne<T extends FindOneThemeFieldArgs>(
    args: Subset<T, FindOneThemeFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractFindOneThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  findMany<T extends FindManyThemeFieldArgs>(
    args?: Subset<T, FindManyThemeFieldArgs>
  ): PromiseLike<Array<ThemeFieldGetPayload<ExtractFindManyThemeFieldArgsSelect<T>>>>
  create<T extends ThemeFieldCreateArgs>(
    args: Subset<T, ThemeFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldCreateArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  update<T extends ThemeFieldUpdateArgs>(
    args: Subset<T, ThemeFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldUpdateArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  updateMany<T extends ThemeFieldUpdateManyArgs>(
    args: Subset<T, ThemeFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldUpdateManyArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  upsert<T extends ThemeFieldUpsertArgs>(
    args: Subset<T, ThemeFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldUpsertArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  delete<T extends ThemeFieldDeleteArgs>(
    args: Subset<T, ThemeFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldDeleteArgsSelect<T>>> : ThemeFieldClient<ThemeField>
  deleteMany<T extends ThemeFieldDeleteManyArgs>(
    args: Subset<T, ThemeFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldDeleteManyArgsSelect<T>>> : ThemeFieldClient<ThemeField>
}
function ThemeFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ThemeFieldDelegate {
  const ThemeField = <T extends FindManyThemeFieldArgs>(args: Subset<T, FindManyThemeFieldArgs>) => new ThemeFieldClient<PromiseLike<Array<ThemeFieldGetPayload<ExtractFindManyThemeFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'themeFields', 'themeFields', args, [])
  ThemeField.findOne = <T extends FindOneThemeFieldArgs>(args: Subset<T, FindOneThemeFieldArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'query',
    'themeField',
    'themeFields.findOne',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'query',
    'themeField',
    'themeFields.findOne',
    args,
    []
  )
  ThemeField.findMany = <T extends FindManyThemeFieldArgs>(args: Subset<T, FindManyThemeFieldArgs>) => new ThemeFieldClient<PromiseLike<Array<ThemeFieldGetPayload<ExtractFindManyThemeFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'themeFields',
    'themeFields.findMany',
    args,
    []
  )
  ThemeField.create = <T extends ThemeFieldCreateArgs>(args: Subset<T, ThemeFieldCreateArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'createThemeField',
    'themeFields.create',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'createThemeField',
    'themeFields.create',
    args,
    []
  )
  ThemeField.update = <T extends ThemeFieldUpdateArgs>(args: Subset<T, ThemeFieldUpdateArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateThemeField',
    'themeFields.update',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'updateThemeField',
    'themeFields.update',
    args,
    []
  )
  ThemeField.updateMany = <T extends ThemeFieldUpdateManyArgs>(args: Subset<T, ThemeFieldUpdateManyArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemeFields',
    'themeFields.updateMany',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemeFields',
    'themeFields.updateMany',
    args,
    []
  )
  ThemeField.upsert = <T extends ThemeFieldUpsertArgs>(args: Subset<T, ThemeFieldUpsertArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertThemeField',
    'themeFields.upsert',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertThemeField',
    'themeFields.upsert',
    args,
    []
  )
  ThemeField.delete = <T extends ThemeFieldDeleteArgs>(args: Subset<T, ThemeFieldDeleteArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteThemeField',
    'themeFields.delete',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteThemeField',
    'themeFields.delete',
    args,
    []
  )
  ThemeField.deleteMany = <T extends ThemeFieldDeleteManyArgs>(args: Subset<T, ThemeFieldDeleteManyArgs>) => args.select ? new ThemeFieldClient<'select' extends keyof T ? PromiseLike<ThemeFieldGetPayload<ExtractThemeFieldArgsSelect<T>>> : ThemeFieldClient<ThemeField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemeFields',
    'themeFields.deleteMany',
    args,
    []
  ) : new ThemeFieldClient<ThemeField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemeFields',
    'themeFields.deleteMany',
    args,
    []
  )
  return ThemeField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ThemeFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ThemeFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ThemeField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ThemeField').catch(onrejected)
  }
}


// InputTypes

export type FindOneThemeFieldArgs = {
  select?: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
}

export type FindOneThemeFieldArgsWithSelect = {
  select: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
}

type ExtractFindOneThemeFieldArgsSelect<S extends undefined | boolean | FindOneThemeFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneThemeFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyThemeFieldArgs = {
  select?: ThemeFieldSelect
  where?: ThemeFieldWhereInput
  orderBy?: ThemeFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyThemeFieldArgsWithSelect = {
  select: ThemeFieldSelect
  where?: ThemeFieldWhereInput
  orderBy?: ThemeFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyThemeFieldArgsSelect<S extends undefined | boolean | FindManyThemeFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyThemeFieldArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldCreateArgs = {
  select?: ThemeFieldSelect
  data: ThemeFieldCreateInput
}

export type ThemeFieldCreateArgsWithSelect = {
  select: ThemeFieldSelect
  data: ThemeFieldCreateInput
}

type ExtractThemeFieldCreateArgsSelect<S extends undefined | boolean | ThemeFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldCreateArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldUpdateArgs = {
  select?: ThemeFieldSelect
  data: ThemeFieldUpdateInput
  where: ThemeFieldWhereUniqueInput
}

export type ThemeFieldUpdateArgsWithSelect = {
  select: ThemeFieldSelect
  data: ThemeFieldUpdateInput
  where: ThemeFieldWhereUniqueInput
}

type ExtractThemeFieldUpdateArgsSelect<S extends undefined | boolean | ThemeFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldUpdateManyArgs = {
  select?: ThemeFieldSelect
  data: ThemeFieldUpdateManyMutationInput
  where?: ThemeFieldWhereInput
}

export type ThemeFieldUpdateManyArgsWithSelect = {
  select: ThemeFieldSelect
  data: ThemeFieldUpdateManyMutationInput
  where?: ThemeFieldWhereInput
}

type ExtractThemeFieldUpdateManyArgsSelect<S extends undefined | boolean | ThemeFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldUpsertArgs = {
  select?: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
  create: ThemeFieldCreateInput
  update: ThemeFieldUpdateInput
}

export type ThemeFieldUpsertArgsWithSelect = {
  select: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
  create: ThemeFieldCreateInput
  update: ThemeFieldUpdateInput
}

type ExtractThemeFieldUpsertArgsSelect<S extends undefined | boolean | ThemeFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldDeleteArgs = {
  select?: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
}

export type ThemeFieldDeleteArgsWithSelect = {
  select: ThemeFieldSelect
  where: ThemeFieldWhereUniqueInput
}

type ExtractThemeFieldDeleteArgsSelect<S extends undefined | boolean | ThemeFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldDeleteManyArgs = {
  select?: ThemeFieldSelect
  where?: ThemeFieldWhereInput
}

export type ThemeFieldDeleteManyArgsWithSelect = {
  select: ThemeFieldSelect
  where?: ThemeFieldWhereInput
}

type ExtractThemeFieldDeleteManyArgsSelect<S extends undefined | boolean | ThemeFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ThemeFieldArgs = {
  select?: ThemeFieldSelect
}

export type ThemeFieldArgsWithSelect = {
  select: ThemeFieldSelect
}

type ExtractThemeFieldArgsSelect<S extends undefined | boolean | ThemeFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model ThemeSetting
 */

export type ThemeSetting = {
  id: number
  createdAt: string
  dataType: number
  name: string
  themeId: number
  updatedAt: string
  value: string | null
}

export type ThemeSettingScalars = 'id' | 'createdAt' | 'dataType' | 'name' | 'themeId' | 'updatedAt' | 'value'


export type ThemeSettingSelect = {
  id?: boolean
  createdAt?: boolean
  dataType?: boolean
  name?: boolean
  themeId?: boolean
  updatedAt?: boolean
  value?: boolean
}

type ThemeSettingDefault = {
  id: true
  createdAt: true
  dataType: true
  name: true
  themeId: true
  updatedAt: true
  value: true
}


type ThemeSettingGetPayload<S extends boolean | ThemeSettingSelect> = S extends true
  ? ThemeSetting
  : S extends ThemeSettingSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<ThemeSettingDefault, S>>]: P extends ThemeSettingScalars
        ? ThemeSetting[P]
        : never
    }
   : never

export interface ThemeSettingDelegate {
  <T extends FindManyThemeSettingArgs>(args?: Subset<T, FindManyThemeSettingArgs>): PromiseLike<Array<ThemeSettingGetPayload<ExtractFindManyThemeSettingArgsSelect<T>>>>
  findOne<T extends FindOneThemeSettingArgs>(
    args: Subset<T, FindOneThemeSettingArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractFindOneThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  findMany<T extends FindManyThemeSettingArgs>(
    args?: Subset<T, FindManyThemeSettingArgs>
  ): PromiseLike<Array<ThemeSettingGetPayload<ExtractFindManyThemeSettingArgsSelect<T>>>>
  create<T extends ThemeSettingCreateArgs>(
    args: Subset<T, ThemeSettingCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingCreateArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  update<T extends ThemeSettingUpdateArgs>(
    args: Subset<T, ThemeSettingUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingUpdateArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  updateMany<T extends ThemeSettingUpdateManyArgs>(
    args: Subset<T, ThemeSettingUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingUpdateManyArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  upsert<T extends ThemeSettingUpsertArgs>(
    args: Subset<T, ThemeSettingUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingUpsertArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  delete<T extends ThemeSettingDeleteArgs>(
    args: Subset<T, ThemeSettingDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingDeleteArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
  deleteMany<T extends ThemeSettingDeleteManyArgs>(
    args: Subset<T, ThemeSettingDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingDeleteManyArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>
}
function ThemeSettingDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): ThemeSettingDelegate {
  const ThemeSetting = <T extends FindManyThemeSettingArgs>(args: Subset<T, FindManyThemeSettingArgs>) => new ThemeSettingClient<PromiseLike<Array<ThemeSettingGetPayload<ExtractFindManyThemeSettingArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'themeSettings', 'themeSettings', args, [])
  ThemeSetting.findOne = <T extends FindOneThemeSettingArgs>(args: Subset<T, FindOneThemeSettingArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'query',
    'themeSetting',
    'themeSettings.findOne',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'query',
    'themeSetting',
    'themeSettings.findOne',
    args,
    []
  )
  ThemeSetting.findMany = <T extends FindManyThemeSettingArgs>(args: Subset<T, FindManyThemeSettingArgs>) => new ThemeSettingClient<PromiseLike<Array<ThemeSettingGetPayload<ExtractFindManyThemeSettingArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'themeSettings',
    'themeSettings.findMany',
    args,
    []
  )
  ThemeSetting.create = <T extends ThemeSettingCreateArgs>(args: Subset<T, ThemeSettingCreateArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'createThemeSetting',
    'themeSettings.create',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'createThemeSetting',
    'themeSettings.create',
    args,
    []
  )
  ThemeSetting.update = <T extends ThemeSettingUpdateArgs>(args: Subset<T, ThemeSettingUpdateArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'updateThemeSetting',
    'themeSettings.update',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'updateThemeSetting',
    'themeSettings.update',
    args,
    []
  )
  ThemeSetting.updateMany = <T extends ThemeSettingUpdateManyArgs>(args: Subset<T, ThemeSettingUpdateManyArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemeSettings',
    'themeSettings.updateMany',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyThemeSettings',
    'themeSettings.updateMany',
    args,
    []
  )
  ThemeSetting.upsert = <T extends ThemeSettingUpsertArgs>(args: Subset<T, ThemeSettingUpsertArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertThemeSetting',
    'themeSettings.upsert',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'upsertThemeSetting',
    'themeSettings.upsert',
    args,
    []
  )
  ThemeSetting.delete = <T extends ThemeSettingDeleteArgs>(args: Subset<T, ThemeSettingDeleteArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteThemeSetting',
    'themeSettings.delete',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'deleteThemeSetting',
    'themeSettings.delete',
    args,
    []
  )
  ThemeSetting.deleteMany = <T extends ThemeSettingDeleteManyArgs>(args: Subset<T, ThemeSettingDeleteManyArgs>) => args.select ? new ThemeSettingClient<'select' extends keyof T ? PromiseLike<ThemeSettingGetPayload<ExtractThemeSettingArgsSelect<T>>> : ThemeSettingClient<ThemeSetting>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemeSettings',
    'themeSettings.deleteMany',
    args,
    []
  ) : new ThemeSettingClient<ThemeSetting>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyThemeSettings',
    'themeSettings.deleteMany',
    args,
    []
  )
  return ThemeSetting as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class ThemeSettingClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: ThemeSettingArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ThemeSetting').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'ThemeSetting').catch(onrejected)
  }
}


// InputTypes

export type FindOneThemeSettingArgs = {
  select?: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
}

export type FindOneThemeSettingArgsWithSelect = {
  select: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
}

type ExtractFindOneThemeSettingArgsSelect<S extends undefined | boolean | FindOneThemeSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneThemeSettingArgsWithSelect
  ? S['select']
  : true


export type FindManyThemeSettingArgs = {
  select?: ThemeSettingSelect
  where?: ThemeSettingWhereInput
  orderBy?: ThemeSettingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyThemeSettingArgsWithSelect = {
  select: ThemeSettingSelect
  where?: ThemeSettingWhereInput
  orderBy?: ThemeSettingOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyThemeSettingArgsSelect<S extends undefined | boolean | FindManyThemeSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyThemeSettingArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingCreateArgs = {
  select?: ThemeSettingSelect
  data: ThemeSettingCreateInput
}

export type ThemeSettingCreateArgsWithSelect = {
  select: ThemeSettingSelect
  data: ThemeSettingCreateInput
}

type ExtractThemeSettingCreateArgsSelect<S extends undefined | boolean | ThemeSettingCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingCreateArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingUpdateArgs = {
  select?: ThemeSettingSelect
  data: ThemeSettingUpdateInput
  where: ThemeSettingWhereUniqueInput
}

export type ThemeSettingUpdateArgsWithSelect = {
  select: ThemeSettingSelect
  data: ThemeSettingUpdateInput
  where: ThemeSettingWhereUniqueInput
}

type ExtractThemeSettingUpdateArgsSelect<S extends undefined | boolean | ThemeSettingUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingUpdateArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingUpdateManyArgs = {
  select?: ThemeSettingSelect
  data: ThemeSettingUpdateManyMutationInput
  where?: ThemeSettingWhereInput
}

export type ThemeSettingUpdateManyArgsWithSelect = {
  select: ThemeSettingSelect
  data: ThemeSettingUpdateManyMutationInput
  where?: ThemeSettingWhereInput
}

type ExtractThemeSettingUpdateManyArgsSelect<S extends undefined | boolean | ThemeSettingUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingUpdateManyArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingUpsertArgs = {
  select?: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
  create: ThemeSettingCreateInput
  update: ThemeSettingUpdateInput
}

export type ThemeSettingUpsertArgsWithSelect = {
  select: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
  create: ThemeSettingCreateInput
  update: ThemeSettingUpdateInput
}

type ExtractThemeSettingUpsertArgsSelect<S extends undefined | boolean | ThemeSettingUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingUpsertArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingDeleteArgs = {
  select?: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
}

export type ThemeSettingDeleteArgsWithSelect = {
  select: ThemeSettingSelect
  where: ThemeSettingWhereUniqueInput
}

type ExtractThemeSettingDeleteArgsSelect<S extends undefined | boolean | ThemeSettingDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingDeleteArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingDeleteManyArgs = {
  select?: ThemeSettingSelect
  where?: ThemeSettingWhereInput
}

export type ThemeSettingDeleteManyArgsWithSelect = {
  select: ThemeSettingSelect
  where?: ThemeSettingWhereInput
}

type ExtractThemeSettingDeleteManyArgsSelect<S extends undefined | boolean | ThemeSettingDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingDeleteManyArgsWithSelect
  ? S['select']
  : true


export type ThemeSettingArgs = {
  select?: ThemeSettingSelect
}

export type ThemeSettingArgsWithSelect = {
  select: ThemeSettingSelect
}

type ExtractThemeSettingArgsSelect<S extends undefined | boolean | ThemeSettingArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends ThemeSettingArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopTopic
 */

export type TopTopic = {
  id: number
  allScore: number | null
  dailyLikesCount: number
  dailyOpLikesCount: number
  dailyPostsCount: number
  dailyScore: number | null
  dailyViewsCount: number
  monthlyLikesCount: number
  monthlyOpLikesCount: number
  monthlyPostsCount: number
  monthlyScore: number | null
  monthlyViewsCount: number
  quarterlyLikesCount: number
  quarterlyOpLikesCount: number
  quarterlyPostsCount: number
  quarterlyScore: number | null
  quarterlyViewsCount: number
  topicId: number | null
  weeklyLikesCount: number
  weeklyOpLikesCount: number
  weeklyPostsCount: number
  weeklyScore: number | null
  weeklyViewsCount: number
  yearlyLikesCount: number
  yearlyOpLikesCount: number
  yearlyPostsCount: number
  yearlyScore: number | null
  yearlyViewsCount: number
}

export type TopTopicScalars = 'id' | 'allScore' | 'dailyLikesCount' | 'dailyOpLikesCount' | 'dailyPostsCount' | 'dailyScore' | 'dailyViewsCount' | 'monthlyLikesCount' | 'monthlyOpLikesCount' | 'monthlyPostsCount' | 'monthlyScore' | 'monthlyViewsCount' | 'quarterlyLikesCount' | 'quarterlyOpLikesCount' | 'quarterlyPostsCount' | 'quarterlyScore' | 'quarterlyViewsCount' | 'topicId' | 'weeklyLikesCount' | 'weeklyOpLikesCount' | 'weeklyPostsCount' | 'weeklyScore' | 'weeklyViewsCount' | 'yearlyLikesCount' | 'yearlyOpLikesCount' | 'yearlyPostsCount' | 'yearlyScore' | 'yearlyViewsCount'


export type TopTopicSelect = {
  id?: boolean
  allScore?: boolean
  dailyLikesCount?: boolean
  dailyOpLikesCount?: boolean
  dailyPostsCount?: boolean
  dailyScore?: boolean
  dailyViewsCount?: boolean
  monthlyLikesCount?: boolean
  monthlyOpLikesCount?: boolean
  monthlyPostsCount?: boolean
  monthlyScore?: boolean
  monthlyViewsCount?: boolean
  quarterlyLikesCount?: boolean
  quarterlyOpLikesCount?: boolean
  quarterlyPostsCount?: boolean
  quarterlyScore?: boolean
  quarterlyViewsCount?: boolean
  topicId?: boolean
  weeklyLikesCount?: boolean
  weeklyOpLikesCount?: boolean
  weeklyPostsCount?: boolean
  weeklyScore?: boolean
  weeklyViewsCount?: boolean
  yearlyLikesCount?: boolean
  yearlyOpLikesCount?: boolean
  yearlyPostsCount?: boolean
  yearlyScore?: boolean
  yearlyViewsCount?: boolean
}

type TopTopicDefault = {
  id: true
  allScore: true
  dailyLikesCount: true
  dailyOpLikesCount: true
  dailyPostsCount: true
  dailyScore: true
  dailyViewsCount: true
  monthlyLikesCount: true
  monthlyOpLikesCount: true
  monthlyPostsCount: true
  monthlyScore: true
  monthlyViewsCount: true
  quarterlyLikesCount: true
  quarterlyOpLikesCount: true
  quarterlyPostsCount: true
  quarterlyScore: true
  quarterlyViewsCount: true
  topicId: true
  weeklyLikesCount: true
  weeklyOpLikesCount: true
  weeklyPostsCount: true
  weeklyScore: true
  weeklyViewsCount: true
  yearlyLikesCount: true
  yearlyOpLikesCount: true
  yearlyPostsCount: true
  yearlyScore: true
  yearlyViewsCount: true
}


type TopTopicGetPayload<S extends boolean | TopTopicSelect> = S extends true
  ? TopTopic
  : S extends TopTopicSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopTopicDefault, S>>]: P extends TopTopicScalars
        ? TopTopic[P]
        : never
    }
   : never

export interface TopTopicDelegate {
  <T extends FindManyTopTopicArgs>(args?: Subset<T, FindManyTopTopicArgs>): PromiseLike<Array<TopTopicGetPayload<ExtractFindManyTopTopicArgsSelect<T>>>>
  findOne<T extends FindOneTopTopicArgs>(
    args: Subset<T, FindOneTopTopicArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractFindOneTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>
  findMany<T extends FindManyTopTopicArgs>(
    args?: Subset<T, FindManyTopTopicArgs>
  ): PromiseLike<Array<TopTopicGetPayload<ExtractFindManyTopTopicArgsSelect<T>>>>
  create<T extends TopTopicCreateArgs>(
    args: Subset<T, TopTopicCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicCreateArgsSelect<T>>> : TopTopicClient<TopTopic>
  update<T extends TopTopicUpdateArgs>(
    args: Subset<T, TopTopicUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicUpdateArgsSelect<T>>> : TopTopicClient<TopTopic>
  updateMany<T extends TopTopicUpdateManyArgs>(
    args: Subset<T, TopTopicUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicUpdateManyArgsSelect<T>>> : TopTopicClient<TopTopic>
  upsert<T extends TopTopicUpsertArgs>(
    args: Subset<T, TopTopicUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicUpsertArgsSelect<T>>> : TopTopicClient<TopTopic>
  delete<T extends TopTopicDeleteArgs>(
    args: Subset<T, TopTopicDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicDeleteArgsSelect<T>>> : TopTopicClient<TopTopic>
  deleteMany<T extends TopTopicDeleteManyArgs>(
    args: Subset<T, TopTopicDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicDeleteManyArgsSelect<T>>> : TopTopicClient<TopTopic>
}
function TopTopicDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopTopicDelegate {
  const TopTopic = <T extends FindManyTopTopicArgs>(args: Subset<T, FindManyTopTopicArgs>) => new TopTopicClient<PromiseLike<Array<TopTopicGetPayload<ExtractFindManyTopTopicArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topTopics', 'topTopics', args, [])
  TopTopic.findOne = <T extends FindOneTopTopicArgs>(args: Subset<T, FindOneTopTopicArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'query',
    'topTopic',
    'topTopics.findOne',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'query',
    'topTopic',
    'topTopics.findOne',
    args,
    []
  )
  TopTopic.findMany = <T extends FindManyTopTopicArgs>(args: Subset<T, FindManyTopTopicArgs>) => new TopTopicClient<PromiseLike<Array<TopTopicGetPayload<ExtractFindManyTopTopicArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topTopics',
    'topTopics.findMany',
    args,
    []
  )
  TopTopic.create = <T extends TopTopicCreateArgs>(args: Subset<T, TopTopicCreateArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopTopic',
    'topTopics.create',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'createTopTopic',
    'topTopics.create',
    args,
    []
  )
  TopTopic.update = <T extends TopTopicUpdateArgs>(args: Subset<T, TopTopicUpdateArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopTopic',
    'topTopics.update',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopTopic',
    'topTopics.update',
    args,
    []
  )
  TopTopic.updateMany = <T extends TopTopicUpdateManyArgs>(args: Subset<T, TopTopicUpdateManyArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopTopics',
    'topTopics.updateMany',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopTopics',
    'topTopics.updateMany',
    args,
    []
  )
  TopTopic.upsert = <T extends TopTopicUpsertArgs>(args: Subset<T, TopTopicUpsertArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopTopic',
    'topTopics.upsert',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopTopic',
    'topTopics.upsert',
    args,
    []
  )
  TopTopic.delete = <T extends TopTopicDeleteArgs>(args: Subset<T, TopTopicDeleteArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopTopic',
    'topTopics.delete',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopTopic',
    'topTopics.delete',
    args,
    []
  )
  TopTopic.deleteMany = <T extends TopTopicDeleteManyArgs>(args: Subset<T, TopTopicDeleteManyArgs>) => args.select ? new TopTopicClient<'select' extends keyof T ? PromiseLike<TopTopicGetPayload<ExtractTopTopicArgsSelect<T>>> : TopTopicClient<TopTopic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopTopics',
    'topTopics.deleteMany',
    args,
    []
  ) : new TopTopicClient<TopTopic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopTopics',
    'topTopics.deleteMany',
    args,
    []
  )
  return TopTopic as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopTopicClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopTopicArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopTopic').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopTopic').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopTopicArgs = {
  select?: TopTopicSelect
  where: TopTopicWhereUniqueInput
}

export type FindOneTopTopicArgsWithSelect = {
  select: TopTopicSelect
  where: TopTopicWhereUniqueInput
}

type ExtractFindOneTopTopicArgsSelect<S extends undefined | boolean | FindOneTopTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopTopicArgsWithSelect
  ? S['select']
  : true


export type FindManyTopTopicArgs = {
  select?: TopTopicSelect
  where?: TopTopicWhereInput
  orderBy?: TopTopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopTopicArgsWithSelect = {
  select: TopTopicSelect
  where?: TopTopicWhereInput
  orderBy?: TopTopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopTopicArgsSelect<S extends undefined | boolean | FindManyTopTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopTopicArgsWithSelect
  ? S['select']
  : true


export type TopTopicCreateArgs = {
  select?: TopTopicSelect
  data: TopTopicCreateInput
}

export type TopTopicCreateArgsWithSelect = {
  select: TopTopicSelect
  data: TopTopicCreateInput
}

type ExtractTopTopicCreateArgsSelect<S extends undefined | boolean | TopTopicCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicCreateArgsWithSelect
  ? S['select']
  : true


export type TopTopicUpdateArgs = {
  select?: TopTopicSelect
  data: TopTopicUpdateInput
  where: TopTopicWhereUniqueInput
}

export type TopTopicUpdateArgsWithSelect = {
  select: TopTopicSelect
  data: TopTopicUpdateInput
  where: TopTopicWhereUniqueInput
}

type ExtractTopTopicUpdateArgsSelect<S extends undefined | boolean | TopTopicUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicUpdateArgsWithSelect
  ? S['select']
  : true


export type TopTopicUpdateManyArgs = {
  select?: TopTopicSelect
  data: TopTopicUpdateManyMutationInput
  where?: TopTopicWhereInput
}

export type TopTopicUpdateManyArgsWithSelect = {
  select: TopTopicSelect
  data: TopTopicUpdateManyMutationInput
  where?: TopTopicWhereInput
}

type ExtractTopTopicUpdateManyArgsSelect<S extends undefined | boolean | TopTopicUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopTopicUpsertArgs = {
  select?: TopTopicSelect
  where: TopTopicWhereUniqueInput
  create: TopTopicCreateInput
  update: TopTopicUpdateInput
}

export type TopTopicUpsertArgsWithSelect = {
  select: TopTopicSelect
  where: TopTopicWhereUniqueInput
  create: TopTopicCreateInput
  update: TopTopicUpdateInput
}

type ExtractTopTopicUpsertArgsSelect<S extends undefined | boolean | TopTopicUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicUpsertArgsWithSelect
  ? S['select']
  : true


export type TopTopicDeleteArgs = {
  select?: TopTopicSelect
  where: TopTopicWhereUniqueInput
}

export type TopTopicDeleteArgsWithSelect = {
  select: TopTopicSelect
  where: TopTopicWhereUniqueInput
}

type ExtractTopTopicDeleteArgsSelect<S extends undefined | boolean | TopTopicDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicDeleteArgsWithSelect
  ? S['select']
  : true


export type TopTopicDeleteManyArgs = {
  select?: TopTopicSelect
  where?: TopTopicWhereInput
}

export type TopTopicDeleteManyArgsWithSelect = {
  select: TopTopicSelect
  where?: TopTopicWhereInput
}

type ExtractTopTopicDeleteManyArgsSelect<S extends undefined | boolean | TopTopicDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopTopicArgs = {
  select?: TopTopicSelect
}

export type TopTopicArgsWithSelect = {
  select: TopTopicSelect
}

type ExtractTopTopicArgsSelect<S extends undefined | boolean | TopTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopTopicArgsWithSelect
  ? S['select']
  : true



/**
 * Model Topic
 */

export type Topic = {
  id: number
  archetype: string
  archived: boolean
  avgTime: number | null
  bumpedAt: string
  categoryId: number | null
  closed: boolean
  createdAt: string
  deletedAt: string | null
  deletedById: number | null
  excerpt: string | null
  fancyTitle: string | null
  featuredLink: string | null
  featuredUser1Id: number | null
  featuredUser2Id: number | null
  featuredUser3Id: number | null
  featuredUser4Id: number | null
  hasSummary: boolean
  highestPostNumber: number
  highestStaffPostNumber: number
  imageUrl: string | null
  incomingLinkCount: number
  lastPostedAt: string | null
  lastPostUserId: number
  likeCount: number
  moderatorPostsCount: number
  notifyModeratorsCount: number
  participantCount: number | null
  percentRank: number
  pinnedAt: string | null
  pinnedGlobally: boolean
  pinnedUntil: string | null
  postsCount: number
  replyCount: number
  score: number | null
  slug: string | null
  spamCount: number
  subtype: string | null
  title: string
  updatedAt: string
  userId: number | null
  views: number
  visible: boolean
  wordCount: number | null
}

export type TopicScalars = 'id' | 'archetype' | 'archived' | 'avgTime' | 'bumpedAt' | 'categoryId' | 'closed' | 'createdAt' | 'deletedAt' | 'deletedById' | 'excerpt' | 'fancyTitle' | 'featuredLink' | 'featuredUser1Id' | 'featuredUser2Id' | 'featuredUser3Id' | 'featuredUser4Id' | 'hasSummary' | 'highestPostNumber' | 'highestStaffPostNumber' | 'imageUrl' | 'incomingLinkCount' | 'lastPostedAt' | 'lastPostUserId' | 'likeCount' | 'moderatorPostsCount' | 'notifyModeratorsCount' | 'participantCount' | 'percentRank' | 'pinnedAt' | 'pinnedGlobally' | 'pinnedUntil' | 'postsCount' | 'replyCount' | 'score' | 'slug' | 'spamCount' | 'subtype' | 'title' | 'updatedAt' | 'userId' | 'views' | 'visible' | 'wordCount'


export type TopicSelect = {
  id?: boolean
  archetype?: boolean
  archived?: boolean
  avgTime?: boolean
  bumpedAt?: boolean
  categoryId?: boolean
  closed?: boolean
  createdAt?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  excerpt?: boolean
  fancyTitle?: boolean
  featuredLink?: boolean
  featuredUser1Id?: boolean
  featuredUser2Id?: boolean
  featuredUser3Id?: boolean
  featuredUser4Id?: boolean
  hasSummary?: boolean
  highestPostNumber?: boolean
  highestStaffPostNumber?: boolean
  imageUrl?: boolean
  incomingLinkCount?: boolean
  lastPostedAt?: boolean
  lastPostUserId?: boolean
  likeCount?: boolean
  moderatorPostsCount?: boolean
  notifyModeratorsCount?: boolean
  participantCount?: boolean
  percentRank?: boolean
  pinnedAt?: boolean
  pinnedGlobally?: boolean
  pinnedUntil?: boolean
  postsCount?: boolean
  replyCount?: boolean
  score?: boolean
  slug?: boolean
  spamCount?: boolean
  subtype?: boolean
  title?: boolean
  updatedAt?: boolean
  userId?: boolean
  views?: boolean
  visible?: boolean
  wordCount?: boolean
}

type TopicDefault = {
  id: true
  archetype: true
  archived: true
  avgTime: true
  bumpedAt: true
  categoryId: true
  closed: true
  createdAt: true
  deletedAt: true
  deletedById: true
  excerpt: true
  fancyTitle: true
  featuredLink: true
  featuredUser1Id: true
  featuredUser2Id: true
  featuredUser3Id: true
  featuredUser4Id: true
  hasSummary: true
  highestPostNumber: true
  highestStaffPostNumber: true
  imageUrl: true
  incomingLinkCount: true
  lastPostedAt: true
  lastPostUserId: true
  likeCount: true
  moderatorPostsCount: true
  notifyModeratorsCount: true
  participantCount: true
  percentRank: true
  pinnedAt: true
  pinnedGlobally: true
  pinnedUntil: true
  postsCount: true
  replyCount: true
  score: true
  slug: true
  spamCount: true
  subtype: true
  title: true
  updatedAt: true
  userId: true
  views: true
  visible: true
  wordCount: true
}


type TopicGetPayload<S extends boolean | TopicSelect> = S extends true
  ? Topic
  : S extends TopicSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicDefault, S>>]: P extends TopicScalars
        ? Topic[P]
        : never
    }
   : never

export interface TopicDelegate {
  <T extends FindManyTopicArgs>(args?: Subset<T, FindManyTopicArgs>): PromiseLike<Array<TopicGetPayload<ExtractFindManyTopicArgsSelect<T>>>>
  findOne<T extends FindOneTopicArgs>(
    args: Subset<T, FindOneTopicArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractFindOneTopicArgsSelect<T>>> : TopicClient<Topic>
  findMany<T extends FindManyTopicArgs>(
    args?: Subset<T, FindManyTopicArgs>
  ): PromiseLike<Array<TopicGetPayload<ExtractFindManyTopicArgsSelect<T>>>>
  create<T extends TopicCreateArgs>(
    args: Subset<T, TopicCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicCreateArgsSelect<T>>> : TopicClient<Topic>
  update<T extends TopicUpdateArgs>(
    args: Subset<T, TopicUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicUpdateArgsSelect<T>>> : TopicClient<Topic>
  updateMany<T extends TopicUpdateManyArgs>(
    args: Subset<T, TopicUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicUpdateManyArgsSelect<T>>> : TopicClient<Topic>
  upsert<T extends TopicUpsertArgs>(
    args: Subset<T, TopicUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicUpsertArgsSelect<T>>> : TopicClient<Topic>
  delete<T extends TopicDeleteArgs>(
    args: Subset<T, TopicDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicDeleteArgsSelect<T>>> : TopicClient<Topic>
  deleteMany<T extends TopicDeleteManyArgs>(
    args: Subset<T, TopicDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicDeleteManyArgsSelect<T>>> : TopicClient<Topic>
}
function TopicDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicDelegate {
  const Topic = <T extends FindManyTopicArgs>(args: Subset<T, FindManyTopicArgs>) => new TopicClient<PromiseLike<Array<TopicGetPayload<ExtractFindManyTopicArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topics', 'topics', args, [])
  Topic.findOne = <T extends FindOneTopicArgs>(args: Subset<T, FindOneTopicArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'query',
    'topic',
    'topics.findOne',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'query',
    'topic',
    'topics.findOne',
    args,
    []
  )
  Topic.findMany = <T extends FindManyTopicArgs>(args: Subset<T, FindManyTopicArgs>) => new TopicClient<PromiseLike<Array<TopicGetPayload<ExtractFindManyTopicArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topics',
    'topics.findMany',
    args,
    []
  )
  Topic.create = <T extends TopicCreateArgs>(args: Subset<T, TopicCreateArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopic',
    'topics.create',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'createTopic',
    'topics.create',
    args,
    []
  )
  Topic.update = <T extends TopicUpdateArgs>(args: Subset<T, TopicUpdateArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopic',
    'topics.update',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopic',
    'topics.update',
    args,
    []
  )
  Topic.updateMany = <T extends TopicUpdateManyArgs>(args: Subset<T, TopicUpdateManyArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopics',
    'topics.updateMany',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopics',
    'topics.updateMany',
    args,
    []
  )
  Topic.upsert = <T extends TopicUpsertArgs>(args: Subset<T, TopicUpsertArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopic',
    'topics.upsert',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopic',
    'topics.upsert',
    args,
    []
  )
  Topic.delete = <T extends TopicDeleteArgs>(args: Subset<T, TopicDeleteArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopic',
    'topics.delete',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopic',
    'topics.delete',
    args,
    []
  )
  Topic.deleteMany = <T extends TopicDeleteManyArgs>(args: Subset<T, TopicDeleteManyArgs>) => args.select ? new TopicClient<'select' extends keyof T ? PromiseLike<TopicGetPayload<ExtractTopicArgsSelect<T>>> : TopicClient<Topic>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopics',
    'topics.deleteMany',
    args,
    []
  ) : new TopicClient<Topic>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopics',
    'topics.deleteMany',
    args,
    []
  )
  return Topic as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Topic').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Topic').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicArgs = {
  select?: TopicSelect
  where: TopicWhereUniqueInput
}

export type FindOneTopicArgsWithSelect = {
  select: TopicSelect
  where: TopicWhereUniqueInput
}

type ExtractFindOneTopicArgsSelect<S extends undefined | boolean | FindOneTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicArgs = {
  select?: TopicSelect
  where?: TopicWhereInput
  orderBy?: TopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicArgsWithSelect = {
  select: TopicSelect
  where?: TopicWhereInput
  orderBy?: TopicOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicArgsSelect<S extends undefined | boolean | FindManyTopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicArgsWithSelect
  ? S['select']
  : true


export type TopicCreateArgs = {
  select?: TopicSelect
  data: TopicCreateInput
}

export type TopicCreateArgsWithSelect = {
  select: TopicSelect
  data: TopicCreateInput
}

type ExtractTopicCreateArgsSelect<S extends undefined | boolean | TopicCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCreateArgsWithSelect
  ? S['select']
  : true


export type TopicUpdateArgs = {
  select?: TopicSelect
  data: TopicUpdateInput
  where: TopicWhereUniqueInput
}

export type TopicUpdateArgsWithSelect = {
  select: TopicSelect
  data: TopicUpdateInput
  where: TopicWhereUniqueInput
}

type ExtractTopicUpdateArgsSelect<S extends undefined | boolean | TopicUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicUpdateManyArgs = {
  select?: TopicSelect
  data: TopicUpdateManyMutationInput
  where?: TopicWhereInput
}

export type TopicUpdateManyArgsWithSelect = {
  select: TopicSelect
  data: TopicUpdateManyMutationInput
  where?: TopicWhereInput
}

type ExtractTopicUpdateManyArgsSelect<S extends undefined | boolean | TopicUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicUpsertArgs = {
  select?: TopicSelect
  where: TopicWhereUniqueInput
  create: TopicCreateInput
  update: TopicUpdateInput
}

export type TopicUpsertArgsWithSelect = {
  select: TopicSelect
  where: TopicWhereUniqueInput
  create: TopicCreateInput
  update: TopicUpdateInput
}

type ExtractTopicUpsertArgsSelect<S extends undefined | boolean | TopicUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicDeleteArgs = {
  select?: TopicSelect
  where: TopicWhereUniqueInput
}

export type TopicDeleteArgsWithSelect = {
  select: TopicSelect
  where: TopicWhereUniqueInput
}

type ExtractTopicDeleteArgsSelect<S extends undefined | boolean | TopicDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicDeleteManyArgs = {
  select?: TopicSelect
  where?: TopicWhereInput
}

export type TopicDeleteManyArgsWithSelect = {
  select: TopicSelect
  where?: TopicWhereInput
}

type ExtractTopicDeleteManyArgsSelect<S extends undefined | boolean | TopicDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicArgs = {
  select?: TopicSelect
}

export type TopicArgsWithSelect = {
  select: TopicSelect
}

type ExtractTopicArgsSelect<S extends undefined | boolean | TopicArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicAllowedGroup
 */

export type TopicAllowedGroup = {
  id: number
  groupId: number
  topicId: number
}

export type TopicAllowedGroupScalars = 'id' | 'groupId' | 'topicId'


export type TopicAllowedGroupSelect = {
  id?: boolean
  groupId?: boolean
  topicId?: boolean
}

type TopicAllowedGroupDefault = {
  id: true
  groupId: true
  topicId: true
}


type TopicAllowedGroupGetPayload<S extends boolean | TopicAllowedGroupSelect> = S extends true
  ? TopicAllowedGroup
  : S extends TopicAllowedGroupSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicAllowedGroupDefault, S>>]: P extends TopicAllowedGroupScalars
        ? TopicAllowedGroup[P]
        : never
    }
   : never

export interface TopicAllowedGroupDelegate {
  <T extends FindManyTopicAllowedGroupArgs>(args?: Subset<T, FindManyTopicAllowedGroupArgs>): PromiseLike<Array<TopicAllowedGroupGetPayload<ExtractFindManyTopicAllowedGroupArgsSelect<T>>>>
  findOne<T extends FindOneTopicAllowedGroupArgs>(
    args: Subset<T, FindOneTopicAllowedGroupArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractFindOneTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  findMany<T extends FindManyTopicAllowedGroupArgs>(
    args?: Subset<T, FindManyTopicAllowedGroupArgs>
  ): PromiseLike<Array<TopicAllowedGroupGetPayload<ExtractFindManyTopicAllowedGroupArgsSelect<T>>>>
  create<T extends TopicAllowedGroupCreateArgs>(
    args: Subset<T, TopicAllowedGroupCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupCreateArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  update<T extends TopicAllowedGroupUpdateArgs>(
    args: Subset<T, TopicAllowedGroupUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupUpdateArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  updateMany<T extends TopicAllowedGroupUpdateManyArgs>(
    args: Subset<T, TopicAllowedGroupUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupUpdateManyArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  upsert<T extends TopicAllowedGroupUpsertArgs>(
    args: Subset<T, TopicAllowedGroupUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupUpsertArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  delete<T extends TopicAllowedGroupDeleteArgs>(
    args: Subset<T, TopicAllowedGroupDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupDeleteArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
  deleteMany<T extends TopicAllowedGroupDeleteManyArgs>(
    args: Subset<T, TopicAllowedGroupDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupDeleteManyArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>
}
function TopicAllowedGroupDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicAllowedGroupDelegate {
  const TopicAllowedGroup = <T extends FindManyTopicAllowedGroupArgs>(args: Subset<T, FindManyTopicAllowedGroupArgs>) => new TopicAllowedGroupClient<PromiseLike<Array<TopicAllowedGroupGetPayload<ExtractFindManyTopicAllowedGroupArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicAllowedGroups', 'topicAllowedGroups', args, [])
  TopicAllowedGroup.findOne = <T extends FindOneTopicAllowedGroupArgs>(args: Subset<T, FindOneTopicAllowedGroupArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedGroup',
    'topicAllowedGroups.findOne',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedGroup',
    'topicAllowedGroups.findOne',
    args,
    []
  )
  TopicAllowedGroup.findMany = <T extends FindManyTopicAllowedGroupArgs>(args: Subset<T, FindManyTopicAllowedGroupArgs>) => new TopicAllowedGroupClient<PromiseLike<Array<TopicAllowedGroupGetPayload<ExtractFindManyTopicAllowedGroupArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedGroups',
    'topicAllowedGroups.findMany',
    args,
    []
  )
  TopicAllowedGroup.create = <T extends TopicAllowedGroupCreateArgs>(args: Subset<T, TopicAllowedGroupCreateArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicAllowedGroup',
    'topicAllowedGroups.create',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicAllowedGroup',
    'topicAllowedGroups.create',
    args,
    []
  )
  TopicAllowedGroup.update = <T extends TopicAllowedGroupUpdateArgs>(args: Subset<T, TopicAllowedGroupUpdateArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicAllowedGroup',
    'topicAllowedGroups.update',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicAllowedGroup',
    'topicAllowedGroups.update',
    args,
    []
  )
  TopicAllowedGroup.updateMany = <T extends TopicAllowedGroupUpdateManyArgs>(args: Subset<T, TopicAllowedGroupUpdateManyArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicAllowedGroups',
    'topicAllowedGroups.updateMany',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicAllowedGroups',
    'topicAllowedGroups.updateMany',
    args,
    []
  )
  TopicAllowedGroup.upsert = <T extends TopicAllowedGroupUpsertArgs>(args: Subset<T, TopicAllowedGroupUpsertArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicAllowedGroup',
    'topicAllowedGroups.upsert',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicAllowedGroup',
    'topicAllowedGroups.upsert',
    args,
    []
  )
  TopicAllowedGroup.delete = <T extends TopicAllowedGroupDeleteArgs>(args: Subset<T, TopicAllowedGroupDeleteArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicAllowedGroup',
    'topicAllowedGroups.delete',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicAllowedGroup',
    'topicAllowedGroups.delete',
    args,
    []
  )
  TopicAllowedGroup.deleteMany = <T extends TopicAllowedGroupDeleteManyArgs>(args: Subset<T, TopicAllowedGroupDeleteManyArgs>) => args.select ? new TopicAllowedGroupClient<'select' extends keyof T ? PromiseLike<TopicAllowedGroupGetPayload<ExtractTopicAllowedGroupArgsSelect<T>>> : TopicAllowedGroupClient<TopicAllowedGroup>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicAllowedGroups',
    'topicAllowedGroups.deleteMany',
    args,
    []
  ) : new TopicAllowedGroupClient<TopicAllowedGroup>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicAllowedGroups',
    'topicAllowedGroups.deleteMany',
    args,
    []
  )
  return TopicAllowedGroup as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicAllowedGroupClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicAllowedGroupArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicAllowedGroup').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicAllowedGroup').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicAllowedGroupArgs = {
  select?: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
}

export type FindOneTopicAllowedGroupArgsWithSelect = {
  select: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
}

type ExtractFindOneTopicAllowedGroupArgsSelect<S extends undefined | boolean | FindOneTopicAllowedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicAllowedGroupArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicAllowedGroupArgs = {
  select?: TopicAllowedGroupSelect
  where?: TopicAllowedGroupWhereInput
  orderBy?: TopicAllowedGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicAllowedGroupArgsWithSelect = {
  select: TopicAllowedGroupSelect
  where?: TopicAllowedGroupWhereInput
  orderBy?: TopicAllowedGroupOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicAllowedGroupArgsSelect<S extends undefined | boolean | FindManyTopicAllowedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicAllowedGroupArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupCreateArgs = {
  select?: TopicAllowedGroupSelect
  data: TopicAllowedGroupCreateInput
}

export type TopicAllowedGroupCreateArgsWithSelect = {
  select: TopicAllowedGroupSelect
  data: TopicAllowedGroupCreateInput
}

type ExtractTopicAllowedGroupCreateArgsSelect<S extends undefined | boolean | TopicAllowedGroupCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupCreateArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupUpdateArgs = {
  select?: TopicAllowedGroupSelect
  data: TopicAllowedGroupUpdateInput
  where: TopicAllowedGroupWhereUniqueInput
}

export type TopicAllowedGroupUpdateArgsWithSelect = {
  select: TopicAllowedGroupSelect
  data: TopicAllowedGroupUpdateInput
  where: TopicAllowedGroupWhereUniqueInput
}

type ExtractTopicAllowedGroupUpdateArgsSelect<S extends undefined | boolean | TopicAllowedGroupUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupUpdateManyArgs = {
  select?: TopicAllowedGroupSelect
  data: TopicAllowedGroupUpdateManyMutationInput
  where?: TopicAllowedGroupWhereInput
}

export type TopicAllowedGroupUpdateManyArgsWithSelect = {
  select: TopicAllowedGroupSelect
  data: TopicAllowedGroupUpdateManyMutationInput
  where?: TopicAllowedGroupWhereInput
}

type ExtractTopicAllowedGroupUpdateManyArgsSelect<S extends undefined | boolean | TopicAllowedGroupUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupUpsertArgs = {
  select?: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
  create: TopicAllowedGroupCreateInput
  update: TopicAllowedGroupUpdateInput
}

export type TopicAllowedGroupUpsertArgsWithSelect = {
  select: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
  create: TopicAllowedGroupCreateInput
  update: TopicAllowedGroupUpdateInput
}

type ExtractTopicAllowedGroupUpsertArgsSelect<S extends undefined | boolean | TopicAllowedGroupUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupDeleteArgs = {
  select?: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
}

export type TopicAllowedGroupDeleteArgsWithSelect = {
  select: TopicAllowedGroupSelect
  where: TopicAllowedGroupWhereUniqueInput
}

type ExtractTopicAllowedGroupDeleteArgsSelect<S extends undefined | boolean | TopicAllowedGroupDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupDeleteManyArgs = {
  select?: TopicAllowedGroupSelect
  where?: TopicAllowedGroupWhereInput
}

export type TopicAllowedGroupDeleteManyArgsWithSelect = {
  select: TopicAllowedGroupSelect
  where?: TopicAllowedGroupWhereInput
}

type ExtractTopicAllowedGroupDeleteManyArgsSelect<S extends undefined | boolean | TopicAllowedGroupDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedGroupArgs = {
  select?: TopicAllowedGroupSelect
}

export type TopicAllowedGroupArgsWithSelect = {
  select: TopicAllowedGroupSelect
}

type ExtractTopicAllowedGroupArgsSelect<S extends undefined | boolean | TopicAllowedGroupArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedGroupArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicAllowedUser
 */

export type TopicAllowedUser = {
  id: number
  createdAt: string
  topicId: number
  updatedAt: string
  userId: number
}

export type TopicAllowedUserScalars = 'id' | 'createdAt' | 'topicId' | 'updatedAt' | 'userId'


export type TopicAllowedUserSelect = {
  id?: boolean
  createdAt?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type TopicAllowedUserDefault = {
  id: true
  createdAt: true
  topicId: true
  updatedAt: true
  userId: true
}


type TopicAllowedUserGetPayload<S extends boolean | TopicAllowedUserSelect> = S extends true
  ? TopicAllowedUser
  : S extends TopicAllowedUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicAllowedUserDefault, S>>]: P extends TopicAllowedUserScalars
        ? TopicAllowedUser[P]
        : never
    }
   : never

export interface TopicAllowedUserDelegate {
  <T extends FindManyTopicAllowedUserArgs>(args?: Subset<T, FindManyTopicAllowedUserArgs>): PromiseLike<Array<TopicAllowedUserGetPayload<ExtractFindManyTopicAllowedUserArgsSelect<T>>>>
  findOne<T extends FindOneTopicAllowedUserArgs>(
    args: Subset<T, FindOneTopicAllowedUserArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractFindOneTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  findMany<T extends FindManyTopicAllowedUserArgs>(
    args?: Subset<T, FindManyTopicAllowedUserArgs>
  ): PromiseLike<Array<TopicAllowedUserGetPayload<ExtractFindManyTopicAllowedUserArgsSelect<T>>>>
  create<T extends TopicAllowedUserCreateArgs>(
    args: Subset<T, TopicAllowedUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserCreateArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  update<T extends TopicAllowedUserUpdateArgs>(
    args: Subset<T, TopicAllowedUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserUpdateArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  updateMany<T extends TopicAllowedUserUpdateManyArgs>(
    args: Subset<T, TopicAllowedUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserUpdateManyArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  upsert<T extends TopicAllowedUserUpsertArgs>(
    args: Subset<T, TopicAllowedUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserUpsertArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  delete<T extends TopicAllowedUserDeleteArgs>(
    args: Subset<T, TopicAllowedUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserDeleteArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
  deleteMany<T extends TopicAllowedUserDeleteManyArgs>(
    args: Subset<T, TopicAllowedUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserDeleteManyArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>
}
function TopicAllowedUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicAllowedUserDelegate {
  const TopicAllowedUser = <T extends FindManyTopicAllowedUserArgs>(args: Subset<T, FindManyTopicAllowedUserArgs>) => new TopicAllowedUserClient<PromiseLike<Array<TopicAllowedUserGetPayload<ExtractFindManyTopicAllowedUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicAllowedUsers', 'topicAllowedUsers', args, [])
  TopicAllowedUser.findOne = <T extends FindOneTopicAllowedUserArgs>(args: Subset<T, FindOneTopicAllowedUserArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedUser',
    'topicAllowedUsers.findOne',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedUser',
    'topicAllowedUsers.findOne',
    args,
    []
  )
  TopicAllowedUser.findMany = <T extends FindManyTopicAllowedUserArgs>(args: Subset<T, FindManyTopicAllowedUserArgs>) => new TopicAllowedUserClient<PromiseLike<Array<TopicAllowedUserGetPayload<ExtractFindManyTopicAllowedUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicAllowedUsers',
    'topicAllowedUsers.findMany',
    args,
    []
  )
  TopicAllowedUser.create = <T extends TopicAllowedUserCreateArgs>(args: Subset<T, TopicAllowedUserCreateArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicAllowedUser',
    'topicAllowedUsers.create',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicAllowedUser',
    'topicAllowedUsers.create',
    args,
    []
  )
  TopicAllowedUser.update = <T extends TopicAllowedUserUpdateArgs>(args: Subset<T, TopicAllowedUserUpdateArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicAllowedUser',
    'topicAllowedUsers.update',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicAllowedUser',
    'topicAllowedUsers.update',
    args,
    []
  )
  TopicAllowedUser.updateMany = <T extends TopicAllowedUserUpdateManyArgs>(args: Subset<T, TopicAllowedUserUpdateManyArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicAllowedUsers',
    'topicAllowedUsers.updateMany',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicAllowedUsers',
    'topicAllowedUsers.updateMany',
    args,
    []
  )
  TopicAllowedUser.upsert = <T extends TopicAllowedUserUpsertArgs>(args: Subset<T, TopicAllowedUserUpsertArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicAllowedUser',
    'topicAllowedUsers.upsert',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicAllowedUser',
    'topicAllowedUsers.upsert',
    args,
    []
  )
  TopicAllowedUser.delete = <T extends TopicAllowedUserDeleteArgs>(args: Subset<T, TopicAllowedUserDeleteArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicAllowedUser',
    'topicAllowedUsers.delete',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicAllowedUser',
    'topicAllowedUsers.delete',
    args,
    []
  )
  TopicAllowedUser.deleteMany = <T extends TopicAllowedUserDeleteManyArgs>(args: Subset<T, TopicAllowedUserDeleteManyArgs>) => args.select ? new TopicAllowedUserClient<'select' extends keyof T ? PromiseLike<TopicAllowedUserGetPayload<ExtractTopicAllowedUserArgsSelect<T>>> : TopicAllowedUserClient<TopicAllowedUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicAllowedUsers',
    'topicAllowedUsers.deleteMany',
    args,
    []
  ) : new TopicAllowedUserClient<TopicAllowedUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicAllowedUsers',
    'topicAllowedUsers.deleteMany',
    args,
    []
  )
  return TopicAllowedUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicAllowedUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicAllowedUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicAllowedUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicAllowedUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicAllowedUserArgs = {
  select?: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
}

export type FindOneTopicAllowedUserArgsWithSelect = {
  select: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
}

type ExtractFindOneTopicAllowedUserArgsSelect<S extends undefined | boolean | FindOneTopicAllowedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicAllowedUserArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicAllowedUserArgs = {
  select?: TopicAllowedUserSelect
  where?: TopicAllowedUserWhereInput
  orderBy?: TopicAllowedUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicAllowedUserArgsWithSelect = {
  select: TopicAllowedUserSelect
  where?: TopicAllowedUserWhereInput
  orderBy?: TopicAllowedUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicAllowedUserArgsSelect<S extends undefined | boolean | FindManyTopicAllowedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicAllowedUserArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserCreateArgs = {
  select?: TopicAllowedUserSelect
  data: TopicAllowedUserCreateInput
}

export type TopicAllowedUserCreateArgsWithSelect = {
  select: TopicAllowedUserSelect
  data: TopicAllowedUserCreateInput
}

type ExtractTopicAllowedUserCreateArgsSelect<S extends undefined | boolean | TopicAllowedUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserCreateArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserUpdateArgs = {
  select?: TopicAllowedUserSelect
  data: TopicAllowedUserUpdateInput
  where: TopicAllowedUserWhereUniqueInput
}

export type TopicAllowedUserUpdateArgsWithSelect = {
  select: TopicAllowedUserSelect
  data: TopicAllowedUserUpdateInput
  where: TopicAllowedUserWhereUniqueInput
}

type ExtractTopicAllowedUserUpdateArgsSelect<S extends undefined | boolean | TopicAllowedUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserUpdateManyArgs = {
  select?: TopicAllowedUserSelect
  data: TopicAllowedUserUpdateManyMutationInput
  where?: TopicAllowedUserWhereInput
}

export type TopicAllowedUserUpdateManyArgsWithSelect = {
  select: TopicAllowedUserSelect
  data: TopicAllowedUserUpdateManyMutationInput
  where?: TopicAllowedUserWhereInput
}

type ExtractTopicAllowedUserUpdateManyArgsSelect<S extends undefined | boolean | TopicAllowedUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserUpsertArgs = {
  select?: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
  create: TopicAllowedUserCreateInput
  update: TopicAllowedUserUpdateInput
}

export type TopicAllowedUserUpsertArgsWithSelect = {
  select: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
  create: TopicAllowedUserCreateInput
  update: TopicAllowedUserUpdateInput
}

type ExtractTopicAllowedUserUpsertArgsSelect<S extends undefined | boolean | TopicAllowedUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserDeleteArgs = {
  select?: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
}

export type TopicAllowedUserDeleteArgsWithSelect = {
  select: TopicAllowedUserSelect
  where: TopicAllowedUserWhereUniqueInput
}

type ExtractTopicAllowedUserDeleteArgsSelect<S extends undefined | boolean | TopicAllowedUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserDeleteManyArgs = {
  select?: TopicAllowedUserSelect
  where?: TopicAllowedUserWhereInput
}

export type TopicAllowedUserDeleteManyArgsWithSelect = {
  select: TopicAllowedUserSelect
  where?: TopicAllowedUserWhereInput
}

type ExtractTopicAllowedUserDeleteManyArgsSelect<S extends undefined | boolean | TopicAllowedUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicAllowedUserArgs = {
  select?: TopicAllowedUserSelect
}

export type TopicAllowedUserArgsWithSelect = {
  select: TopicAllowedUserSelect
}

type ExtractTopicAllowedUserArgsSelect<S extends undefined | boolean | TopicAllowedUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicAllowedUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicCustomField
 */

export type TopicCustomField = {
  id: number
  createdAt: string
  name: string
  topicId: number
  updatedAt: string
  value: string | null
}

export type TopicCustomFieldScalars = 'id' | 'createdAt' | 'name' | 'topicId' | 'updatedAt' | 'value'


export type TopicCustomFieldSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  topicId?: boolean
  updatedAt?: boolean
  value?: boolean
}

type TopicCustomFieldDefault = {
  id: true
  createdAt: true
  name: true
  topicId: true
  updatedAt: true
  value: true
}


type TopicCustomFieldGetPayload<S extends boolean | TopicCustomFieldSelect> = S extends true
  ? TopicCustomField
  : S extends TopicCustomFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicCustomFieldDefault, S>>]: P extends TopicCustomFieldScalars
        ? TopicCustomField[P]
        : never
    }
   : never

export interface TopicCustomFieldDelegate {
  <T extends FindManyTopicCustomFieldArgs>(args?: Subset<T, FindManyTopicCustomFieldArgs>): PromiseLike<Array<TopicCustomFieldGetPayload<ExtractFindManyTopicCustomFieldArgsSelect<T>>>>
  findOne<T extends FindOneTopicCustomFieldArgs>(
    args: Subset<T, FindOneTopicCustomFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractFindOneTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  findMany<T extends FindManyTopicCustomFieldArgs>(
    args?: Subset<T, FindManyTopicCustomFieldArgs>
  ): PromiseLike<Array<TopicCustomFieldGetPayload<ExtractFindManyTopicCustomFieldArgsSelect<T>>>>
  create<T extends TopicCustomFieldCreateArgs>(
    args: Subset<T, TopicCustomFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldCreateArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  update<T extends TopicCustomFieldUpdateArgs>(
    args: Subset<T, TopicCustomFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldUpdateArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  updateMany<T extends TopicCustomFieldUpdateManyArgs>(
    args: Subset<T, TopicCustomFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldUpdateManyArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  upsert<T extends TopicCustomFieldUpsertArgs>(
    args: Subset<T, TopicCustomFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldUpsertArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  delete<T extends TopicCustomFieldDeleteArgs>(
    args: Subset<T, TopicCustomFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldDeleteArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
  deleteMany<T extends TopicCustomFieldDeleteManyArgs>(
    args: Subset<T, TopicCustomFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldDeleteManyArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>
}
function TopicCustomFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicCustomFieldDelegate {
  const TopicCustomField = <T extends FindManyTopicCustomFieldArgs>(args: Subset<T, FindManyTopicCustomFieldArgs>) => new TopicCustomFieldClient<PromiseLike<Array<TopicCustomFieldGetPayload<ExtractFindManyTopicCustomFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicCustomFields', 'topicCustomFields', args, [])
  TopicCustomField.findOne = <T extends FindOneTopicCustomFieldArgs>(args: Subset<T, FindOneTopicCustomFieldArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'query',
    'topicCustomField',
    'topicCustomFields.findOne',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'query',
    'topicCustomField',
    'topicCustomFields.findOne',
    args,
    []
  )
  TopicCustomField.findMany = <T extends FindManyTopicCustomFieldArgs>(args: Subset<T, FindManyTopicCustomFieldArgs>) => new TopicCustomFieldClient<PromiseLike<Array<TopicCustomFieldGetPayload<ExtractFindManyTopicCustomFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicCustomFields',
    'topicCustomFields.findMany',
    args,
    []
  )
  TopicCustomField.create = <T extends TopicCustomFieldCreateArgs>(args: Subset<T, TopicCustomFieldCreateArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicCustomField',
    'topicCustomFields.create',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicCustomField',
    'topicCustomFields.create',
    args,
    []
  )
  TopicCustomField.update = <T extends TopicCustomFieldUpdateArgs>(args: Subset<T, TopicCustomFieldUpdateArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicCustomField',
    'topicCustomFields.update',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicCustomField',
    'topicCustomFields.update',
    args,
    []
  )
  TopicCustomField.updateMany = <T extends TopicCustomFieldUpdateManyArgs>(args: Subset<T, TopicCustomFieldUpdateManyArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicCustomFields',
    'topicCustomFields.updateMany',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicCustomFields',
    'topicCustomFields.updateMany',
    args,
    []
  )
  TopicCustomField.upsert = <T extends TopicCustomFieldUpsertArgs>(args: Subset<T, TopicCustomFieldUpsertArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicCustomField',
    'topicCustomFields.upsert',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicCustomField',
    'topicCustomFields.upsert',
    args,
    []
  )
  TopicCustomField.delete = <T extends TopicCustomFieldDeleteArgs>(args: Subset<T, TopicCustomFieldDeleteArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicCustomField',
    'topicCustomFields.delete',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicCustomField',
    'topicCustomFields.delete',
    args,
    []
  )
  TopicCustomField.deleteMany = <T extends TopicCustomFieldDeleteManyArgs>(args: Subset<T, TopicCustomFieldDeleteManyArgs>) => args.select ? new TopicCustomFieldClient<'select' extends keyof T ? PromiseLike<TopicCustomFieldGetPayload<ExtractTopicCustomFieldArgsSelect<T>>> : TopicCustomFieldClient<TopicCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicCustomFields',
    'topicCustomFields.deleteMany',
    args,
    []
  ) : new TopicCustomFieldClient<TopicCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicCustomFields',
    'topicCustomFields.deleteMany',
    args,
    []
  )
  return TopicCustomField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicCustomFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicCustomFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicCustomField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicCustomField').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicCustomFieldArgs = {
  select?: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
}

export type FindOneTopicCustomFieldArgsWithSelect = {
  select: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
}

type ExtractFindOneTopicCustomFieldArgsSelect<S extends undefined | boolean | FindOneTopicCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicCustomFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicCustomFieldArgs = {
  select?: TopicCustomFieldSelect
  where?: TopicCustomFieldWhereInput
  orderBy?: TopicCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicCustomFieldArgsWithSelect = {
  select: TopicCustomFieldSelect
  where?: TopicCustomFieldWhereInput
  orderBy?: TopicCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicCustomFieldArgsSelect<S extends undefined | boolean | FindManyTopicCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicCustomFieldArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldCreateArgs = {
  select?: TopicCustomFieldSelect
  data: TopicCustomFieldCreateInput
}

export type TopicCustomFieldCreateArgsWithSelect = {
  select: TopicCustomFieldSelect
  data: TopicCustomFieldCreateInput
}

type ExtractTopicCustomFieldCreateArgsSelect<S extends undefined | boolean | TopicCustomFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldCreateArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldUpdateArgs = {
  select?: TopicCustomFieldSelect
  data: TopicCustomFieldUpdateInput
  where: TopicCustomFieldWhereUniqueInput
}

export type TopicCustomFieldUpdateArgsWithSelect = {
  select: TopicCustomFieldSelect
  data: TopicCustomFieldUpdateInput
  where: TopicCustomFieldWhereUniqueInput
}

type ExtractTopicCustomFieldUpdateArgsSelect<S extends undefined | boolean | TopicCustomFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldUpdateManyArgs = {
  select?: TopicCustomFieldSelect
  data: TopicCustomFieldUpdateManyMutationInput
  where?: TopicCustomFieldWhereInput
}

export type TopicCustomFieldUpdateManyArgsWithSelect = {
  select: TopicCustomFieldSelect
  data: TopicCustomFieldUpdateManyMutationInput
  where?: TopicCustomFieldWhereInput
}

type ExtractTopicCustomFieldUpdateManyArgsSelect<S extends undefined | boolean | TopicCustomFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldUpsertArgs = {
  select?: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
  create: TopicCustomFieldCreateInput
  update: TopicCustomFieldUpdateInput
}

export type TopicCustomFieldUpsertArgsWithSelect = {
  select: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
  create: TopicCustomFieldCreateInput
  update: TopicCustomFieldUpdateInput
}

type ExtractTopicCustomFieldUpsertArgsSelect<S extends undefined | boolean | TopicCustomFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldDeleteArgs = {
  select?: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
}

export type TopicCustomFieldDeleteArgsWithSelect = {
  select: TopicCustomFieldSelect
  where: TopicCustomFieldWhereUniqueInput
}

type ExtractTopicCustomFieldDeleteArgsSelect<S extends undefined | boolean | TopicCustomFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldDeleteManyArgs = {
  select?: TopicCustomFieldSelect
  where?: TopicCustomFieldWhereInput
}

export type TopicCustomFieldDeleteManyArgsWithSelect = {
  select: TopicCustomFieldSelect
  where?: TopicCustomFieldWhereInput
}

type ExtractTopicCustomFieldDeleteManyArgsSelect<S extends undefined | boolean | TopicCustomFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicCustomFieldArgs = {
  select?: TopicCustomFieldSelect
}

export type TopicCustomFieldArgsWithSelect = {
  select: TopicCustomFieldSelect
}

type ExtractTopicCustomFieldArgsSelect<S extends undefined | boolean | TopicCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicCustomFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicEmbed
 */

export type TopicEmbed = {
  id: number
  contentSha1: string | null
  createdAt: string
  deletedAt: string | null
  deletedById: number | null
  embedUrl: string
  postId: number
  topicId: number
  updatedAt: string
}

export type TopicEmbedScalars = 'id' | 'contentSha1' | 'createdAt' | 'deletedAt' | 'deletedById' | 'embedUrl' | 'postId' | 'topicId' | 'updatedAt'


export type TopicEmbedSelect = {
  id?: boolean
  contentSha1?: boolean
  createdAt?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  embedUrl?: boolean
  postId?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type TopicEmbedDefault = {
  id: true
  contentSha1: true
  createdAt: true
  deletedAt: true
  deletedById: true
  embedUrl: true
  postId: true
  topicId: true
  updatedAt: true
}


type TopicEmbedGetPayload<S extends boolean | TopicEmbedSelect> = S extends true
  ? TopicEmbed
  : S extends TopicEmbedSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicEmbedDefault, S>>]: P extends TopicEmbedScalars
        ? TopicEmbed[P]
        : never
    }
   : never

export interface TopicEmbedDelegate {
  <T extends FindManyTopicEmbedArgs>(args?: Subset<T, FindManyTopicEmbedArgs>): PromiseLike<Array<TopicEmbedGetPayload<ExtractFindManyTopicEmbedArgsSelect<T>>>>
  findOne<T extends FindOneTopicEmbedArgs>(
    args: Subset<T, FindOneTopicEmbedArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractFindOneTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  findMany<T extends FindManyTopicEmbedArgs>(
    args?: Subset<T, FindManyTopicEmbedArgs>
  ): PromiseLike<Array<TopicEmbedGetPayload<ExtractFindManyTopicEmbedArgsSelect<T>>>>
  create<T extends TopicEmbedCreateArgs>(
    args: Subset<T, TopicEmbedCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedCreateArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  update<T extends TopicEmbedUpdateArgs>(
    args: Subset<T, TopicEmbedUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedUpdateArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  updateMany<T extends TopicEmbedUpdateManyArgs>(
    args: Subset<T, TopicEmbedUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedUpdateManyArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  upsert<T extends TopicEmbedUpsertArgs>(
    args: Subset<T, TopicEmbedUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedUpsertArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  delete<T extends TopicEmbedDeleteArgs>(
    args: Subset<T, TopicEmbedDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedDeleteArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
  deleteMany<T extends TopicEmbedDeleteManyArgs>(
    args: Subset<T, TopicEmbedDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedDeleteManyArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>
}
function TopicEmbedDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicEmbedDelegate {
  const TopicEmbed = <T extends FindManyTopicEmbedArgs>(args: Subset<T, FindManyTopicEmbedArgs>) => new TopicEmbedClient<PromiseLike<Array<TopicEmbedGetPayload<ExtractFindManyTopicEmbedArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicEmbeds', 'topicEmbeds', args, [])
  TopicEmbed.findOne = <T extends FindOneTopicEmbedArgs>(args: Subset<T, FindOneTopicEmbedArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'query',
    'topicEmbed',
    'topicEmbeds.findOne',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'query',
    'topicEmbed',
    'topicEmbeds.findOne',
    args,
    []
  )
  TopicEmbed.findMany = <T extends FindManyTopicEmbedArgs>(args: Subset<T, FindManyTopicEmbedArgs>) => new TopicEmbedClient<PromiseLike<Array<TopicEmbedGetPayload<ExtractFindManyTopicEmbedArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicEmbeds',
    'topicEmbeds.findMany',
    args,
    []
  )
  TopicEmbed.create = <T extends TopicEmbedCreateArgs>(args: Subset<T, TopicEmbedCreateArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicEmbed',
    'topicEmbeds.create',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicEmbed',
    'topicEmbeds.create',
    args,
    []
  )
  TopicEmbed.update = <T extends TopicEmbedUpdateArgs>(args: Subset<T, TopicEmbedUpdateArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicEmbed',
    'topicEmbeds.update',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicEmbed',
    'topicEmbeds.update',
    args,
    []
  )
  TopicEmbed.updateMany = <T extends TopicEmbedUpdateManyArgs>(args: Subset<T, TopicEmbedUpdateManyArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicEmbeds',
    'topicEmbeds.updateMany',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicEmbeds',
    'topicEmbeds.updateMany',
    args,
    []
  )
  TopicEmbed.upsert = <T extends TopicEmbedUpsertArgs>(args: Subset<T, TopicEmbedUpsertArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicEmbed',
    'topicEmbeds.upsert',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicEmbed',
    'topicEmbeds.upsert',
    args,
    []
  )
  TopicEmbed.delete = <T extends TopicEmbedDeleteArgs>(args: Subset<T, TopicEmbedDeleteArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicEmbed',
    'topicEmbeds.delete',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicEmbed',
    'topicEmbeds.delete',
    args,
    []
  )
  TopicEmbed.deleteMany = <T extends TopicEmbedDeleteManyArgs>(args: Subset<T, TopicEmbedDeleteManyArgs>) => args.select ? new TopicEmbedClient<'select' extends keyof T ? PromiseLike<TopicEmbedGetPayload<ExtractTopicEmbedArgsSelect<T>>> : TopicEmbedClient<TopicEmbed>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicEmbeds',
    'topicEmbeds.deleteMany',
    args,
    []
  ) : new TopicEmbedClient<TopicEmbed>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicEmbeds',
    'topicEmbeds.deleteMany',
    args,
    []
  )
  return TopicEmbed as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicEmbedClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicEmbedArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicEmbed').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicEmbed').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicEmbedArgs = {
  select?: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
}

export type FindOneTopicEmbedArgsWithSelect = {
  select: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
}

type ExtractFindOneTopicEmbedArgsSelect<S extends undefined | boolean | FindOneTopicEmbedArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicEmbedArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicEmbedArgs = {
  select?: TopicEmbedSelect
  where?: TopicEmbedWhereInput
  orderBy?: TopicEmbedOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicEmbedArgsWithSelect = {
  select: TopicEmbedSelect
  where?: TopicEmbedWhereInput
  orderBy?: TopicEmbedOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicEmbedArgsSelect<S extends undefined | boolean | FindManyTopicEmbedArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicEmbedArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedCreateArgs = {
  select?: TopicEmbedSelect
  data: TopicEmbedCreateInput
}

export type TopicEmbedCreateArgsWithSelect = {
  select: TopicEmbedSelect
  data: TopicEmbedCreateInput
}

type ExtractTopicEmbedCreateArgsSelect<S extends undefined | boolean | TopicEmbedCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedCreateArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedUpdateArgs = {
  select?: TopicEmbedSelect
  data: TopicEmbedUpdateInput
  where: TopicEmbedWhereUniqueInput
}

export type TopicEmbedUpdateArgsWithSelect = {
  select: TopicEmbedSelect
  data: TopicEmbedUpdateInput
  where: TopicEmbedWhereUniqueInput
}

type ExtractTopicEmbedUpdateArgsSelect<S extends undefined | boolean | TopicEmbedUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedUpdateManyArgs = {
  select?: TopicEmbedSelect
  data: TopicEmbedUpdateManyMutationInput
  where?: TopicEmbedWhereInput
}

export type TopicEmbedUpdateManyArgsWithSelect = {
  select: TopicEmbedSelect
  data: TopicEmbedUpdateManyMutationInput
  where?: TopicEmbedWhereInput
}

type ExtractTopicEmbedUpdateManyArgsSelect<S extends undefined | boolean | TopicEmbedUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedUpsertArgs = {
  select?: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
  create: TopicEmbedCreateInput
  update: TopicEmbedUpdateInput
}

export type TopicEmbedUpsertArgsWithSelect = {
  select: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
  create: TopicEmbedCreateInput
  update: TopicEmbedUpdateInput
}

type ExtractTopicEmbedUpsertArgsSelect<S extends undefined | boolean | TopicEmbedUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedDeleteArgs = {
  select?: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
}

export type TopicEmbedDeleteArgsWithSelect = {
  select: TopicEmbedSelect
  where: TopicEmbedWhereUniqueInput
}

type ExtractTopicEmbedDeleteArgsSelect<S extends undefined | boolean | TopicEmbedDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedDeleteManyArgs = {
  select?: TopicEmbedSelect
  where?: TopicEmbedWhereInput
}

export type TopicEmbedDeleteManyArgsWithSelect = {
  select: TopicEmbedSelect
  where?: TopicEmbedWhereInput
}

type ExtractTopicEmbedDeleteManyArgsSelect<S extends undefined | boolean | TopicEmbedDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicEmbedArgs = {
  select?: TopicEmbedSelect
}

export type TopicEmbedArgsWithSelect = {
  select: TopicEmbedSelect
}

type ExtractTopicEmbedArgsSelect<S extends undefined | boolean | TopicEmbedArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicEmbedArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicInvite
 */

export type TopicInvite = {
  id: number
  createdAt: string
  inviteId: number
  topicId: number
  updatedAt: string
}

export type TopicInviteScalars = 'id' | 'createdAt' | 'inviteId' | 'topicId' | 'updatedAt'


export type TopicInviteSelect = {
  id?: boolean
  createdAt?: boolean
  inviteId?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type TopicInviteDefault = {
  id: true
  createdAt: true
  inviteId: true
  topicId: true
  updatedAt: true
}


type TopicInviteGetPayload<S extends boolean | TopicInviteSelect> = S extends true
  ? TopicInvite
  : S extends TopicInviteSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicInviteDefault, S>>]: P extends TopicInviteScalars
        ? TopicInvite[P]
        : never
    }
   : never

export interface TopicInviteDelegate {
  <T extends FindManyTopicInviteArgs>(args?: Subset<T, FindManyTopicInviteArgs>): PromiseLike<Array<TopicInviteGetPayload<ExtractFindManyTopicInviteArgsSelect<T>>>>
  findOne<T extends FindOneTopicInviteArgs>(
    args: Subset<T, FindOneTopicInviteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractFindOneTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  findMany<T extends FindManyTopicInviteArgs>(
    args?: Subset<T, FindManyTopicInviteArgs>
  ): PromiseLike<Array<TopicInviteGetPayload<ExtractFindManyTopicInviteArgsSelect<T>>>>
  create<T extends TopicInviteCreateArgs>(
    args: Subset<T, TopicInviteCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteCreateArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  update<T extends TopicInviteUpdateArgs>(
    args: Subset<T, TopicInviteUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteUpdateArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  updateMany<T extends TopicInviteUpdateManyArgs>(
    args: Subset<T, TopicInviteUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteUpdateManyArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  upsert<T extends TopicInviteUpsertArgs>(
    args: Subset<T, TopicInviteUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteUpsertArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  delete<T extends TopicInviteDeleteArgs>(
    args: Subset<T, TopicInviteDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteDeleteArgsSelect<T>>> : TopicInviteClient<TopicInvite>
  deleteMany<T extends TopicInviteDeleteManyArgs>(
    args: Subset<T, TopicInviteDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteDeleteManyArgsSelect<T>>> : TopicInviteClient<TopicInvite>
}
function TopicInviteDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicInviteDelegate {
  const TopicInvite = <T extends FindManyTopicInviteArgs>(args: Subset<T, FindManyTopicInviteArgs>) => new TopicInviteClient<PromiseLike<Array<TopicInviteGetPayload<ExtractFindManyTopicInviteArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicInvites', 'topicInvites', args, [])
  TopicInvite.findOne = <T extends FindOneTopicInviteArgs>(args: Subset<T, FindOneTopicInviteArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'query',
    'topicInvite',
    'topicInvites.findOne',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'query',
    'topicInvite',
    'topicInvites.findOne',
    args,
    []
  )
  TopicInvite.findMany = <T extends FindManyTopicInviteArgs>(args: Subset<T, FindManyTopicInviteArgs>) => new TopicInviteClient<PromiseLike<Array<TopicInviteGetPayload<ExtractFindManyTopicInviteArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicInvites',
    'topicInvites.findMany',
    args,
    []
  )
  TopicInvite.create = <T extends TopicInviteCreateArgs>(args: Subset<T, TopicInviteCreateArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicInvite',
    'topicInvites.create',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicInvite',
    'topicInvites.create',
    args,
    []
  )
  TopicInvite.update = <T extends TopicInviteUpdateArgs>(args: Subset<T, TopicInviteUpdateArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicInvite',
    'topicInvites.update',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicInvite',
    'topicInvites.update',
    args,
    []
  )
  TopicInvite.updateMany = <T extends TopicInviteUpdateManyArgs>(args: Subset<T, TopicInviteUpdateManyArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicInvites',
    'topicInvites.updateMany',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicInvites',
    'topicInvites.updateMany',
    args,
    []
  )
  TopicInvite.upsert = <T extends TopicInviteUpsertArgs>(args: Subset<T, TopicInviteUpsertArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicInvite',
    'topicInvites.upsert',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicInvite',
    'topicInvites.upsert',
    args,
    []
  )
  TopicInvite.delete = <T extends TopicInviteDeleteArgs>(args: Subset<T, TopicInviteDeleteArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicInvite',
    'topicInvites.delete',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicInvite',
    'topicInvites.delete',
    args,
    []
  )
  TopicInvite.deleteMany = <T extends TopicInviteDeleteManyArgs>(args: Subset<T, TopicInviteDeleteManyArgs>) => args.select ? new TopicInviteClient<'select' extends keyof T ? PromiseLike<TopicInviteGetPayload<ExtractTopicInviteArgsSelect<T>>> : TopicInviteClient<TopicInvite>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicInvites',
    'topicInvites.deleteMany',
    args,
    []
  ) : new TopicInviteClient<TopicInvite>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicInvites',
    'topicInvites.deleteMany',
    args,
    []
  )
  return TopicInvite as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicInviteClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicInviteArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicInvite').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicInvite').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicInviteArgs = {
  select?: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
}

export type FindOneTopicInviteArgsWithSelect = {
  select: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
}

type ExtractFindOneTopicInviteArgsSelect<S extends undefined | boolean | FindOneTopicInviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicInviteArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicInviteArgs = {
  select?: TopicInviteSelect
  where?: TopicInviteWhereInput
  orderBy?: TopicInviteOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicInviteArgsWithSelect = {
  select: TopicInviteSelect
  where?: TopicInviteWhereInput
  orderBy?: TopicInviteOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicInviteArgsSelect<S extends undefined | boolean | FindManyTopicInviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicInviteArgsWithSelect
  ? S['select']
  : true


export type TopicInviteCreateArgs = {
  select?: TopicInviteSelect
  data: TopicInviteCreateInput
}

export type TopicInviteCreateArgsWithSelect = {
  select: TopicInviteSelect
  data: TopicInviteCreateInput
}

type ExtractTopicInviteCreateArgsSelect<S extends undefined | boolean | TopicInviteCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteCreateArgsWithSelect
  ? S['select']
  : true


export type TopicInviteUpdateArgs = {
  select?: TopicInviteSelect
  data: TopicInviteUpdateInput
  where: TopicInviteWhereUniqueInput
}

export type TopicInviteUpdateArgsWithSelect = {
  select: TopicInviteSelect
  data: TopicInviteUpdateInput
  where: TopicInviteWhereUniqueInput
}

type ExtractTopicInviteUpdateArgsSelect<S extends undefined | boolean | TopicInviteUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicInviteUpdateManyArgs = {
  select?: TopicInviteSelect
  data: TopicInviteUpdateManyMutationInput
  where?: TopicInviteWhereInput
}

export type TopicInviteUpdateManyArgsWithSelect = {
  select: TopicInviteSelect
  data: TopicInviteUpdateManyMutationInput
  where?: TopicInviteWhereInput
}

type ExtractTopicInviteUpdateManyArgsSelect<S extends undefined | boolean | TopicInviteUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicInviteUpsertArgs = {
  select?: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
  create: TopicInviteCreateInput
  update: TopicInviteUpdateInput
}

export type TopicInviteUpsertArgsWithSelect = {
  select: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
  create: TopicInviteCreateInput
  update: TopicInviteUpdateInput
}

type ExtractTopicInviteUpsertArgsSelect<S extends undefined | boolean | TopicInviteUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicInviteDeleteArgs = {
  select?: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
}

export type TopicInviteDeleteArgsWithSelect = {
  select: TopicInviteSelect
  where: TopicInviteWhereUniqueInput
}

type ExtractTopicInviteDeleteArgsSelect<S extends undefined | boolean | TopicInviteDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicInviteDeleteManyArgs = {
  select?: TopicInviteSelect
  where?: TopicInviteWhereInput
}

export type TopicInviteDeleteManyArgsWithSelect = {
  select: TopicInviteSelect
  where?: TopicInviteWhereInput
}

type ExtractTopicInviteDeleteManyArgsSelect<S extends undefined | boolean | TopicInviteDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicInviteArgs = {
  select?: TopicInviteSelect
}

export type TopicInviteArgsWithSelect = {
  select: TopicInviteSelect
}

type ExtractTopicInviteArgsSelect<S extends undefined | boolean | TopicInviteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicInviteArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicLink
 */

export type TopicLink = {
  id: number
  clicks: number
  crawledAt: string | null
  createdAt: string
  domain: string
  extension: string | null
  internal: boolean
  linkPostId: number | null
  linkTopicId: number | null
  postId: number | null
  quote: boolean
  reflection: boolean | null
  title: string | null
  topicId: number
  updatedAt: string
  url: string
  userId: number
}

export type TopicLinkScalars = 'id' | 'clicks' | 'crawledAt' | 'createdAt' | 'domain' | 'extension' | 'internal' | 'linkPostId' | 'linkTopicId' | 'postId' | 'quote' | 'reflection' | 'title' | 'topicId' | 'updatedAt' | 'url' | 'userId'


export type TopicLinkSelect = {
  id?: boolean
  clicks?: boolean
  crawledAt?: boolean
  createdAt?: boolean
  domain?: boolean
  extension?: boolean
  internal?: boolean
  linkPostId?: boolean
  linkTopicId?: boolean
  postId?: boolean
  quote?: boolean
  reflection?: boolean
  title?: boolean
  topicId?: boolean
  updatedAt?: boolean
  url?: boolean
  userId?: boolean
}

type TopicLinkDefault = {
  id: true
  clicks: true
  crawledAt: true
  createdAt: true
  domain: true
  extension: true
  internal: true
  linkPostId: true
  linkTopicId: true
  postId: true
  quote: true
  reflection: true
  title: true
  topicId: true
  updatedAt: true
  url: true
  userId: true
}


type TopicLinkGetPayload<S extends boolean | TopicLinkSelect> = S extends true
  ? TopicLink
  : S extends TopicLinkSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicLinkDefault, S>>]: P extends TopicLinkScalars
        ? TopicLink[P]
        : never
    }
   : never

export interface TopicLinkDelegate {
  <T extends FindManyTopicLinkArgs>(args?: Subset<T, FindManyTopicLinkArgs>): PromiseLike<Array<TopicLinkGetPayload<ExtractFindManyTopicLinkArgsSelect<T>>>>
  findOne<T extends FindOneTopicLinkArgs>(
    args: Subset<T, FindOneTopicLinkArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractFindOneTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>
  findMany<T extends FindManyTopicLinkArgs>(
    args?: Subset<T, FindManyTopicLinkArgs>
  ): PromiseLike<Array<TopicLinkGetPayload<ExtractFindManyTopicLinkArgsSelect<T>>>>
  create<T extends TopicLinkCreateArgs>(
    args: Subset<T, TopicLinkCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkCreateArgsSelect<T>>> : TopicLinkClient<TopicLink>
  update<T extends TopicLinkUpdateArgs>(
    args: Subset<T, TopicLinkUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkUpdateArgsSelect<T>>> : TopicLinkClient<TopicLink>
  updateMany<T extends TopicLinkUpdateManyArgs>(
    args: Subset<T, TopicLinkUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkUpdateManyArgsSelect<T>>> : TopicLinkClient<TopicLink>
  upsert<T extends TopicLinkUpsertArgs>(
    args: Subset<T, TopicLinkUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkUpsertArgsSelect<T>>> : TopicLinkClient<TopicLink>
  delete<T extends TopicLinkDeleteArgs>(
    args: Subset<T, TopicLinkDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkDeleteArgsSelect<T>>> : TopicLinkClient<TopicLink>
  deleteMany<T extends TopicLinkDeleteManyArgs>(
    args: Subset<T, TopicLinkDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkDeleteManyArgsSelect<T>>> : TopicLinkClient<TopicLink>
}
function TopicLinkDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicLinkDelegate {
  const TopicLink = <T extends FindManyTopicLinkArgs>(args: Subset<T, FindManyTopicLinkArgs>) => new TopicLinkClient<PromiseLike<Array<TopicLinkGetPayload<ExtractFindManyTopicLinkArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicLinks', 'topicLinks', args, [])
  TopicLink.findOne = <T extends FindOneTopicLinkArgs>(args: Subset<T, FindOneTopicLinkArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'query',
    'topicLink',
    'topicLinks.findOne',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'query',
    'topicLink',
    'topicLinks.findOne',
    args,
    []
  )
  TopicLink.findMany = <T extends FindManyTopicLinkArgs>(args: Subset<T, FindManyTopicLinkArgs>) => new TopicLinkClient<PromiseLike<Array<TopicLinkGetPayload<ExtractFindManyTopicLinkArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicLinks',
    'topicLinks.findMany',
    args,
    []
  )
  TopicLink.create = <T extends TopicLinkCreateArgs>(args: Subset<T, TopicLinkCreateArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicLink',
    'topicLinks.create',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicLink',
    'topicLinks.create',
    args,
    []
  )
  TopicLink.update = <T extends TopicLinkUpdateArgs>(args: Subset<T, TopicLinkUpdateArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicLink',
    'topicLinks.update',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicLink',
    'topicLinks.update',
    args,
    []
  )
  TopicLink.updateMany = <T extends TopicLinkUpdateManyArgs>(args: Subset<T, TopicLinkUpdateManyArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicLinks',
    'topicLinks.updateMany',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicLinks',
    'topicLinks.updateMany',
    args,
    []
  )
  TopicLink.upsert = <T extends TopicLinkUpsertArgs>(args: Subset<T, TopicLinkUpsertArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicLink',
    'topicLinks.upsert',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicLink',
    'topicLinks.upsert',
    args,
    []
  )
  TopicLink.delete = <T extends TopicLinkDeleteArgs>(args: Subset<T, TopicLinkDeleteArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicLink',
    'topicLinks.delete',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicLink',
    'topicLinks.delete',
    args,
    []
  )
  TopicLink.deleteMany = <T extends TopicLinkDeleteManyArgs>(args: Subset<T, TopicLinkDeleteManyArgs>) => args.select ? new TopicLinkClient<'select' extends keyof T ? PromiseLike<TopicLinkGetPayload<ExtractTopicLinkArgsSelect<T>>> : TopicLinkClient<TopicLink>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicLinks',
    'topicLinks.deleteMany',
    args,
    []
  ) : new TopicLinkClient<TopicLink>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicLinks',
    'topicLinks.deleteMany',
    args,
    []
  )
  return TopicLink as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicLinkClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicLinkArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicLink').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicLink').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicLinkArgs = {
  select?: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
}

export type FindOneTopicLinkArgsWithSelect = {
  select: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
}

type ExtractFindOneTopicLinkArgsSelect<S extends undefined | boolean | FindOneTopicLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicLinkArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicLinkArgs = {
  select?: TopicLinkSelect
  where?: TopicLinkWhereInput
  orderBy?: TopicLinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicLinkArgsWithSelect = {
  select: TopicLinkSelect
  where?: TopicLinkWhereInput
  orderBy?: TopicLinkOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicLinkArgsSelect<S extends undefined | boolean | FindManyTopicLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicLinkArgsWithSelect
  ? S['select']
  : true


export type TopicLinkCreateArgs = {
  select?: TopicLinkSelect
  data: TopicLinkCreateInput
}

export type TopicLinkCreateArgsWithSelect = {
  select: TopicLinkSelect
  data: TopicLinkCreateInput
}

type ExtractTopicLinkCreateArgsSelect<S extends undefined | boolean | TopicLinkCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkCreateArgsWithSelect
  ? S['select']
  : true


export type TopicLinkUpdateArgs = {
  select?: TopicLinkSelect
  data: TopicLinkUpdateInput
  where: TopicLinkWhereUniqueInput
}

export type TopicLinkUpdateArgsWithSelect = {
  select: TopicLinkSelect
  data: TopicLinkUpdateInput
  where: TopicLinkWhereUniqueInput
}

type ExtractTopicLinkUpdateArgsSelect<S extends undefined | boolean | TopicLinkUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicLinkUpdateManyArgs = {
  select?: TopicLinkSelect
  data: TopicLinkUpdateManyMutationInput
  where?: TopicLinkWhereInput
}

export type TopicLinkUpdateManyArgsWithSelect = {
  select: TopicLinkSelect
  data: TopicLinkUpdateManyMutationInput
  where?: TopicLinkWhereInput
}

type ExtractTopicLinkUpdateManyArgsSelect<S extends undefined | boolean | TopicLinkUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicLinkUpsertArgs = {
  select?: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
  create: TopicLinkCreateInput
  update: TopicLinkUpdateInput
}

export type TopicLinkUpsertArgsWithSelect = {
  select: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
  create: TopicLinkCreateInput
  update: TopicLinkUpdateInput
}

type ExtractTopicLinkUpsertArgsSelect<S extends undefined | boolean | TopicLinkUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicLinkDeleteArgs = {
  select?: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
}

export type TopicLinkDeleteArgsWithSelect = {
  select: TopicLinkSelect
  where: TopicLinkWhereUniqueInput
}

type ExtractTopicLinkDeleteArgsSelect<S extends undefined | boolean | TopicLinkDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicLinkDeleteManyArgs = {
  select?: TopicLinkSelect
  where?: TopicLinkWhereInput
}

export type TopicLinkDeleteManyArgsWithSelect = {
  select: TopicLinkSelect
  where?: TopicLinkWhereInput
}

type ExtractTopicLinkDeleteManyArgsSelect<S extends undefined | boolean | TopicLinkDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicLinkArgs = {
  select?: TopicLinkSelect
}

export type TopicLinkArgsWithSelect = {
  select: TopicLinkSelect
}

type ExtractTopicLinkArgsSelect<S extends undefined | boolean | TopicLinkArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicLinkClick
 */

export type TopicLinkClick = {
  id: number
  createdAt: string
  topicLinkId: number
  updatedAt: string
  userId: number | null
}

export type TopicLinkClickScalars = 'id' | 'createdAt' | 'topicLinkId' | 'updatedAt' | 'userId'


export type TopicLinkClickSelect = {
  id?: boolean
  createdAt?: boolean
  topicLinkId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type TopicLinkClickDefault = {
  id: true
  createdAt: true
  topicLinkId: true
  updatedAt: true
  userId: true
}


type TopicLinkClickGetPayload<S extends boolean | TopicLinkClickSelect> = S extends true
  ? TopicLinkClick
  : S extends TopicLinkClickSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicLinkClickDefault, S>>]: P extends TopicLinkClickScalars
        ? TopicLinkClick[P]
        : never
    }
   : never

export interface TopicLinkClickDelegate {
  <T extends FindManyTopicLinkClickArgs>(args?: Subset<T, FindManyTopicLinkClickArgs>): PromiseLike<Array<TopicLinkClickGetPayload<ExtractFindManyTopicLinkClickArgsSelect<T>>>>
  findOne<T extends FindOneTopicLinkClickArgs>(
    args: Subset<T, FindOneTopicLinkClickArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractFindOneTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  findMany<T extends FindManyTopicLinkClickArgs>(
    args?: Subset<T, FindManyTopicLinkClickArgs>
  ): PromiseLike<Array<TopicLinkClickGetPayload<ExtractFindManyTopicLinkClickArgsSelect<T>>>>
  create<T extends TopicLinkClickCreateArgs>(
    args: Subset<T, TopicLinkClickCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickCreateArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  update<T extends TopicLinkClickUpdateArgs>(
    args: Subset<T, TopicLinkClickUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickUpdateArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  updateMany<T extends TopicLinkClickUpdateManyArgs>(
    args: Subset<T, TopicLinkClickUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickUpdateManyArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  upsert<T extends TopicLinkClickUpsertArgs>(
    args: Subset<T, TopicLinkClickUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickUpsertArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  delete<T extends TopicLinkClickDeleteArgs>(
    args: Subset<T, TopicLinkClickDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickDeleteArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
  deleteMany<T extends TopicLinkClickDeleteManyArgs>(
    args: Subset<T, TopicLinkClickDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickDeleteManyArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>
}
function TopicLinkClickDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicLinkClickDelegate {
  const TopicLinkClick = <T extends FindManyTopicLinkClickArgs>(args: Subset<T, FindManyTopicLinkClickArgs>) => new TopicLinkClickClient<PromiseLike<Array<TopicLinkClickGetPayload<ExtractFindManyTopicLinkClickArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicLinkClicks', 'topicLinkClicks', args, [])
  TopicLinkClick.findOne = <T extends FindOneTopicLinkClickArgs>(args: Subset<T, FindOneTopicLinkClickArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'query',
    'topicLinkClick',
    'topicLinkClicks.findOne',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'query',
    'topicLinkClick',
    'topicLinkClicks.findOne',
    args,
    []
  )
  TopicLinkClick.findMany = <T extends FindManyTopicLinkClickArgs>(args: Subset<T, FindManyTopicLinkClickArgs>) => new TopicLinkClickClient<PromiseLike<Array<TopicLinkClickGetPayload<ExtractFindManyTopicLinkClickArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicLinkClicks',
    'topicLinkClicks.findMany',
    args,
    []
  )
  TopicLinkClick.create = <T extends TopicLinkClickCreateArgs>(args: Subset<T, TopicLinkClickCreateArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicLinkClick',
    'topicLinkClicks.create',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicLinkClick',
    'topicLinkClicks.create',
    args,
    []
  )
  TopicLinkClick.update = <T extends TopicLinkClickUpdateArgs>(args: Subset<T, TopicLinkClickUpdateArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicLinkClick',
    'topicLinkClicks.update',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicLinkClick',
    'topicLinkClicks.update',
    args,
    []
  )
  TopicLinkClick.updateMany = <T extends TopicLinkClickUpdateManyArgs>(args: Subset<T, TopicLinkClickUpdateManyArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicLinkClicks',
    'topicLinkClicks.updateMany',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicLinkClicks',
    'topicLinkClicks.updateMany',
    args,
    []
  )
  TopicLinkClick.upsert = <T extends TopicLinkClickUpsertArgs>(args: Subset<T, TopicLinkClickUpsertArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicLinkClick',
    'topicLinkClicks.upsert',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicLinkClick',
    'topicLinkClicks.upsert',
    args,
    []
  )
  TopicLinkClick.delete = <T extends TopicLinkClickDeleteArgs>(args: Subset<T, TopicLinkClickDeleteArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicLinkClick',
    'topicLinkClicks.delete',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicLinkClick',
    'topicLinkClicks.delete',
    args,
    []
  )
  TopicLinkClick.deleteMany = <T extends TopicLinkClickDeleteManyArgs>(args: Subset<T, TopicLinkClickDeleteManyArgs>) => args.select ? new TopicLinkClickClient<'select' extends keyof T ? PromiseLike<TopicLinkClickGetPayload<ExtractTopicLinkClickArgsSelect<T>>> : TopicLinkClickClient<TopicLinkClick>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicLinkClicks',
    'topicLinkClicks.deleteMany',
    args,
    []
  ) : new TopicLinkClickClient<TopicLinkClick>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicLinkClicks',
    'topicLinkClicks.deleteMany',
    args,
    []
  )
  return TopicLinkClick as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicLinkClickClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicLinkClickArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicLinkClick').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicLinkClick').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicLinkClickArgs = {
  select?: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
}

export type FindOneTopicLinkClickArgsWithSelect = {
  select: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
}

type ExtractFindOneTopicLinkClickArgsSelect<S extends undefined | boolean | FindOneTopicLinkClickArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicLinkClickArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicLinkClickArgs = {
  select?: TopicLinkClickSelect
  where?: TopicLinkClickWhereInput
  orderBy?: TopicLinkClickOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicLinkClickArgsWithSelect = {
  select: TopicLinkClickSelect
  where?: TopicLinkClickWhereInput
  orderBy?: TopicLinkClickOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicLinkClickArgsSelect<S extends undefined | boolean | FindManyTopicLinkClickArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicLinkClickArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickCreateArgs = {
  select?: TopicLinkClickSelect
  data: TopicLinkClickCreateInput
}

export type TopicLinkClickCreateArgsWithSelect = {
  select: TopicLinkClickSelect
  data: TopicLinkClickCreateInput
}

type ExtractTopicLinkClickCreateArgsSelect<S extends undefined | boolean | TopicLinkClickCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickCreateArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickUpdateArgs = {
  select?: TopicLinkClickSelect
  data: TopicLinkClickUpdateInput
  where: TopicLinkClickWhereUniqueInput
}

export type TopicLinkClickUpdateArgsWithSelect = {
  select: TopicLinkClickSelect
  data: TopicLinkClickUpdateInput
  where: TopicLinkClickWhereUniqueInput
}

type ExtractTopicLinkClickUpdateArgsSelect<S extends undefined | boolean | TopicLinkClickUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickUpdateManyArgs = {
  select?: TopicLinkClickSelect
  data: TopicLinkClickUpdateManyMutationInput
  where?: TopicLinkClickWhereInput
}

export type TopicLinkClickUpdateManyArgsWithSelect = {
  select: TopicLinkClickSelect
  data: TopicLinkClickUpdateManyMutationInput
  where?: TopicLinkClickWhereInput
}

type ExtractTopicLinkClickUpdateManyArgsSelect<S extends undefined | boolean | TopicLinkClickUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickUpsertArgs = {
  select?: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
  create: TopicLinkClickCreateInput
  update: TopicLinkClickUpdateInput
}

export type TopicLinkClickUpsertArgsWithSelect = {
  select: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
  create: TopicLinkClickCreateInput
  update: TopicLinkClickUpdateInput
}

type ExtractTopicLinkClickUpsertArgsSelect<S extends undefined | boolean | TopicLinkClickUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickDeleteArgs = {
  select?: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
}

export type TopicLinkClickDeleteArgsWithSelect = {
  select: TopicLinkClickSelect
  where: TopicLinkClickWhereUniqueInput
}

type ExtractTopicLinkClickDeleteArgsSelect<S extends undefined | boolean | TopicLinkClickDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickDeleteManyArgs = {
  select?: TopicLinkClickSelect
  where?: TopicLinkClickWhereInput
}

export type TopicLinkClickDeleteManyArgsWithSelect = {
  select: TopicLinkClickSelect
  where?: TopicLinkClickWhereInput
}

type ExtractTopicLinkClickDeleteManyArgsSelect<S extends undefined | boolean | TopicLinkClickDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicLinkClickArgs = {
  select?: TopicLinkClickSelect
}

export type TopicLinkClickArgsWithSelect = {
  select: TopicLinkClickSelect
}

type ExtractTopicLinkClickArgsSelect<S extends undefined | boolean | TopicLinkClickArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicLinkClickArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicSearchDatum
 */

export type TopicSearchDatum = {
  topic_id: number
  locale: string
  rawData: string | null
  version: number | null
}

export type TopicSearchDatumScalars = 'topic_id' | 'locale' | 'rawData' | 'version'


export type TopicSearchDatumSelect = {
  topic_id?: boolean
  locale?: boolean
  rawData?: boolean
  version?: boolean
}

type TopicSearchDatumDefault = {
  topic_id: true
  locale: true
  rawData: true
  version: true
}


type TopicSearchDatumGetPayload<S extends boolean | TopicSearchDatumSelect> = S extends true
  ? TopicSearchDatum
  : S extends TopicSearchDatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicSearchDatumDefault, S>>]: P extends TopicSearchDatumScalars
        ? TopicSearchDatum[P]
        : never
    }
   : never

export interface TopicSearchDatumDelegate {
  <T extends FindManyTopicSearchDatumArgs>(args?: Subset<T, FindManyTopicSearchDatumArgs>): PromiseLike<Array<TopicSearchDatumGetPayload<ExtractFindManyTopicSearchDatumArgsSelect<T>>>>
  findMany<T extends FindManyTopicSearchDatumArgs>(
    args?: Subset<T, FindManyTopicSearchDatumArgs>
  ): PromiseLike<Array<TopicSearchDatumGetPayload<ExtractFindManyTopicSearchDatumArgsSelect<T>>>>
  create<T extends TopicSearchDatumCreateArgs>(
    args: Subset<T, TopicSearchDatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumCreateArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>
  updateMany<T extends TopicSearchDatumUpdateManyArgs>(
    args: Subset<T, TopicSearchDatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumUpdateManyArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>
  deleteMany<T extends TopicSearchDatumDeleteManyArgs>(
    args: Subset<T, TopicSearchDatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumDeleteManyArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>
}
function TopicSearchDatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicSearchDatumDelegate {
  const TopicSearchDatum = <T extends FindManyTopicSearchDatumArgs>(args: Subset<T, FindManyTopicSearchDatumArgs>) => new TopicSearchDatumClient<PromiseLike<Array<TopicSearchDatumGetPayload<ExtractFindManyTopicSearchDatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicSearchData', 'topicSearchData', args, [])
  TopicSearchDatum.findMany = <T extends FindManyTopicSearchDatumArgs>(args: Subset<T, FindManyTopicSearchDatumArgs>) => new TopicSearchDatumClient<PromiseLike<Array<TopicSearchDatumGetPayload<ExtractFindManyTopicSearchDatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicSearchData',
    'topicSearchData.findMany',
    args,
    []
  )
  TopicSearchDatum.create = <T extends TopicSearchDatumCreateArgs>(args: Subset<T, TopicSearchDatumCreateArgs>) => args.select ? new TopicSearchDatumClient<'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicSearchDatum',
    'topicSearchData.create',
    args,
    []
  ) : new TopicSearchDatumClient<TopicSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicSearchDatum',
    'topicSearchData.create',
    args,
    []
  )
  TopicSearchDatum.updateMany = <T extends TopicSearchDatumUpdateManyArgs>(args: Subset<T, TopicSearchDatumUpdateManyArgs>) => args.select ? new TopicSearchDatumClient<'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicSearchData',
    'topicSearchData.updateMany',
    args,
    []
  ) : new TopicSearchDatumClient<TopicSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicSearchData',
    'topicSearchData.updateMany',
    args,
    []
  )
  TopicSearchDatum.deleteMany = <T extends TopicSearchDatumDeleteManyArgs>(args: Subset<T, TopicSearchDatumDeleteManyArgs>) => args.select ? new TopicSearchDatumClient<'select' extends keyof T ? PromiseLike<TopicSearchDatumGetPayload<ExtractTopicSearchDatumArgsSelect<T>>> : TopicSearchDatumClient<TopicSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicSearchData',
    'topicSearchData.deleteMany',
    args,
    []
  ) : new TopicSearchDatumClient<TopicSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicSearchData',
    'topicSearchData.deleteMany',
    args,
    []
  )
  return TopicSearchDatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicSearchDatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicSearchDatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicSearchDatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicSearchDatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyTopicSearchDatumArgs = {
  select?: TopicSearchDatumSelect
  where?: TopicSearchDatumWhereInput
  orderBy?: TopicSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicSearchDatumArgsWithSelect = {
  select: TopicSearchDatumSelect
  where?: TopicSearchDatumWhereInput
  orderBy?: TopicSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicSearchDatumArgsSelect<S extends undefined | boolean | FindManyTopicSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicSearchDatumArgsWithSelect
  ? S['select']
  : true


export type TopicSearchDatumCreateArgs = {
  select?: TopicSearchDatumSelect
  data: TopicSearchDatumCreateInput
}

export type TopicSearchDatumCreateArgsWithSelect = {
  select: TopicSearchDatumSelect
  data: TopicSearchDatumCreateInput
}

type ExtractTopicSearchDatumCreateArgsSelect<S extends undefined | boolean | TopicSearchDatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicSearchDatumCreateArgsWithSelect
  ? S['select']
  : true


export type TopicSearchDatumUpdateManyArgs = {
  select?: TopicSearchDatumSelect
  data: TopicSearchDatumUpdateManyMutationInput
  where?: TopicSearchDatumWhereInput
}

export type TopicSearchDatumUpdateManyArgsWithSelect = {
  select: TopicSearchDatumSelect
  data: TopicSearchDatumUpdateManyMutationInput
  where?: TopicSearchDatumWhereInput
}

type ExtractTopicSearchDatumUpdateManyArgsSelect<S extends undefined | boolean | TopicSearchDatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicSearchDatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicSearchDatumDeleteManyArgs = {
  select?: TopicSearchDatumSelect
  where?: TopicSearchDatumWhereInput
}

export type TopicSearchDatumDeleteManyArgsWithSelect = {
  select: TopicSearchDatumSelect
  where?: TopicSearchDatumWhereInput
}

type ExtractTopicSearchDatumDeleteManyArgsSelect<S extends undefined | boolean | TopicSearchDatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicSearchDatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicSearchDatumArgs = {
  select?: TopicSearchDatumSelect
}

export type TopicSearchDatumArgsWithSelect = {
  select: TopicSearchDatumSelect
}

type ExtractTopicSearchDatumArgsSelect<S extends undefined | boolean | TopicSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicSearchDatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicTag
 */

export type TopicTag = {
  id: number
  createdAt: string | null
  tagId: number
  topicId: number
  updatedAt: string | null
}

export type TopicTagScalars = 'id' | 'createdAt' | 'tagId' | 'topicId' | 'updatedAt'


export type TopicTagSelect = {
  id?: boolean
  createdAt?: boolean
  tagId?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type TopicTagDefault = {
  id: true
  createdAt: true
  tagId: true
  topicId: true
  updatedAt: true
}


type TopicTagGetPayload<S extends boolean | TopicTagSelect> = S extends true
  ? TopicTag
  : S extends TopicTagSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicTagDefault, S>>]: P extends TopicTagScalars
        ? TopicTag[P]
        : never
    }
   : never

export interface TopicTagDelegate {
  <T extends FindManyTopicTagArgs>(args?: Subset<T, FindManyTopicTagArgs>): PromiseLike<Array<TopicTagGetPayload<ExtractFindManyTopicTagArgsSelect<T>>>>
  findOne<T extends FindOneTopicTagArgs>(
    args: Subset<T, FindOneTopicTagArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractFindOneTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>
  findMany<T extends FindManyTopicTagArgs>(
    args?: Subset<T, FindManyTopicTagArgs>
  ): PromiseLike<Array<TopicTagGetPayload<ExtractFindManyTopicTagArgsSelect<T>>>>
  create<T extends TopicTagCreateArgs>(
    args: Subset<T, TopicTagCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagCreateArgsSelect<T>>> : TopicTagClient<TopicTag>
  update<T extends TopicTagUpdateArgs>(
    args: Subset<T, TopicTagUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagUpdateArgsSelect<T>>> : TopicTagClient<TopicTag>
  updateMany<T extends TopicTagUpdateManyArgs>(
    args: Subset<T, TopicTagUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagUpdateManyArgsSelect<T>>> : TopicTagClient<TopicTag>
  upsert<T extends TopicTagUpsertArgs>(
    args: Subset<T, TopicTagUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagUpsertArgsSelect<T>>> : TopicTagClient<TopicTag>
  delete<T extends TopicTagDeleteArgs>(
    args: Subset<T, TopicTagDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagDeleteArgsSelect<T>>> : TopicTagClient<TopicTag>
  deleteMany<T extends TopicTagDeleteManyArgs>(
    args: Subset<T, TopicTagDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagDeleteManyArgsSelect<T>>> : TopicTagClient<TopicTag>
}
function TopicTagDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicTagDelegate {
  const TopicTag = <T extends FindManyTopicTagArgs>(args: Subset<T, FindManyTopicTagArgs>) => new TopicTagClient<PromiseLike<Array<TopicTagGetPayload<ExtractFindManyTopicTagArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicTags', 'topicTags', args, [])
  TopicTag.findOne = <T extends FindOneTopicTagArgs>(args: Subset<T, FindOneTopicTagArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'query',
    'topicTag',
    'topicTags.findOne',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'query',
    'topicTag',
    'topicTags.findOne',
    args,
    []
  )
  TopicTag.findMany = <T extends FindManyTopicTagArgs>(args: Subset<T, FindManyTopicTagArgs>) => new TopicTagClient<PromiseLike<Array<TopicTagGetPayload<ExtractFindManyTopicTagArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicTags',
    'topicTags.findMany',
    args,
    []
  )
  TopicTag.create = <T extends TopicTagCreateArgs>(args: Subset<T, TopicTagCreateArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicTag',
    'topicTags.create',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicTag',
    'topicTags.create',
    args,
    []
  )
  TopicTag.update = <T extends TopicTagUpdateArgs>(args: Subset<T, TopicTagUpdateArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicTag',
    'topicTags.update',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicTag',
    'topicTags.update',
    args,
    []
  )
  TopicTag.updateMany = <T extends TopicTagUpdateManyArgs>(args: Subset<T, TopicTagUpdateManyArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicTags',
    'topicTags.updateMany',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicTags',
    'topicTags.updateMany',
    args,
    []
  )
  TopicTag.upsert = <T extends TopicTagUpsertArgs>(args: Subset<T, TopicTagUpsertArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicTag',
    'topicTags.upsert',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicTag',
    'topicTags.upsert',
    args,
    []
  )
  TopicTag.delete = <T extends TopicTagDeleteArgs>(args: Subset<T, TopicTagDeleteArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicTag',
    'topicTags.delete',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicTag',
    'topicTags.delete',
    args,
    []
  )
  TopicTag.deleteMany = <T extends TopicTagDeleteManyArgs>(args: Subset<T, TopicTagDeleteManyArgs>) => args.select ? new TopicTagClient<'select' extends keyof T ? PromiseLike<TopicTagGetPayload<ExtractTopicTagArgsSelect<T>>> : TopicTagClient<TopicTag>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicTags',
    'topicTags.deleteMany',
    args,
    []
  ) : new TopicTagClient<TopicTag>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicTags',
    'topicTags.deleteMany',
    args,
    []
  )
  return TopicTag as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicTagClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicTagArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicTag').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicTag').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicTagArgs = {
  select?: TopicTagSelect
  where: TopicTagWhereUniqueInput
}

export type FindOneTopicTagArgsWithSelect = {
  select: TopicTagSelect
  where: TopicTagWhereUniqueInput
}

type ExtractFindOneTopicTagArgsSelect<S extends undefined | boolean | FindOneTopicTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicTagArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicTagArgs = {
  select?: TopicTagSelect
  where?: TopicTagWhereInput
  orderBy?: TopicTagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicTagArgsWithSelect = {
  select: TopicTagSelect
  where?: TopicTagWhereInput
  orderBy?: TopicTagOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicTagArgsSelect<S extends undefined | boolean | FindManyTopicTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicTagArgsWithSelect
  ? S['select']
  : true


export type TopicTagCreateArgs = {
  select?: TopicTagSelect
  data: TopicTagCreateInput
}

export type TopicTagCreateArgsWithSelect = {
  select: TopicTagSelect
  data: TopicTagCreateInput
}

type ExtractTopicTagCreateArgsSelect<S extends undefined | boolean | TopicTagCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagCreateArgsWithSelect
  ? S['select']
  : true


export type TopicTagUpdateArgs = {
  select?: TopicTagSelect
  data: TopicTagUpdateInput
  where: TopicTagWhereUniqueInput
}

export type TopicTagUpdateArgsWithSelect = {
  select: TopicTagSelect
  data: TopicTagUpdateInput
  where: TopicTagWhereUniqueInput
}

type ExtractTopicTagUpdateArgsSelect<S extends undefined | boolean | TopicTagUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicTagUpdateManyArgs = {
  select?: TopicTagSelect
  data: TopicTagUpdateManyMutationInput
  where?: TopicTagWhereInput
}

export type TopicTagUpdateManyArgsWithSelect = {
  select: TopicTagSelect
  data: TopicTagUpdateManyMutationInput
  where?: TopicTagWhereInput
}

type ExtractTopicTagUpdateManyArgsSelect<S extends undefined | boolean | TopicTagUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicTagUpsertArgs = {
  select?: TopicTagSelect
  where: TopicTagWhereUniqueInput
  create: TopicTagCreateInput
  update: TopicTagUpdateInput
}

export type TopicTagUpsertArgsWithSelect = {
  select: TopicTagSelect
  where: TopicTagWhereUniqueInput
  create: TopicTagCreateInput
  update: TopicTagUpdateInput
}

type ExtractTopicTagUpsertArgsSelect<S extends undefined | boolean | TopicTagUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicTagDeleteArgs = {
  select?: TopicTagSelect
  where: TopicTagWhereUniqueInput
}

export type TopicTagDeleteArgsWithSelect = {
  select: TopicTagSelect
  where: TopicTagWhereUniqueInput
}

type ExtractTopicTagDeleteArgsSelect<S extends undefined | boolean | TopicTagDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicTagDeleteManyArgs = {
  select?: TopicTagSelect
  where?: TopicTagWhereInput
}

export type TopicTagDeleteManyArgsWithSelect = {
  select: TopicTagSelect
  where?: TopicTagWhereInput
}

type ExtractTopicTagDeleteManyArgsSelect<S extends undefined | boolean | TopicTagDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicTagArgs = {
  select?: TopicTagSelect
}

export type TopicTagArgsWithSelect = {
  select: TopicTagSelect
}

type ExtractTopicTagArgsSelect<S extends undefined | boolean | TopicTagArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTagArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicTimer
 */

export type TopicTimer = {
  id: number
  basedOnLastPost: boolean
  categoryId: number | null
  createdAt: string | null
  deletedAt: string | null
  deletedById: number | null
  executeAt: string
  publicType: boolean | null
  statusType: number
  topicId: number
  updatedAt: string | null
  userId: number
}

export type TopicTimerScalars = 'id' | 'basedOnLastPost' | 'categoryId' | 'createdAt' | 'deletedAt' | 'deletedById' | 'executeAt' | 'publicType' | 'statusType' | 'topicId' | 'updatedAt' | 'userId'


export type TopicTimerSelect = {
  id?: boolean
  basedOnLastPost?: boolean
  categoryId?: boolean
  createdAt?: boolean
  deletedAt?: boolean
  deletedById?: boolean
  executeAt?: boolean
  publicType?: boolean
  statusType?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type TopicTimerDefault = {
  id: true
  basedOnLastPost: true
  categoryId: true
  createdAt: true
  deletedAt: true
  deletedById: true
  executeAt: true
  publicType: true
  statusType: true
  topicId: true
  updatedAt: true
  userId: true
}


type TopicTimerGetPayload<S extends boolean | TopicTimerSelect> = S extends true
  ? TopicTimer
  : S extends TopicTimerSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicTimerDefault, S>>]: P extends TopicTimerScalars
        ? TopicTimer[P]
        : never
    }
   : never

export interface TopicTimerDelegate {
  <T extends FindManyTopicTimerArgs>(args?: Subset<T, FindManyTopicTimerArgs>): PromiseLike<Array<TopicTimerGetPayload<ExtractFindManyTopicTimerArgsSelect<T>>>>
  findOne<T extends FindOneTopicTimerArgs>(
    args: Subset<T, FindOneTopicTimerArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractFindOneTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  findMany<T extends FindManyTopicTimerArgs>(
    args?: Subset<T, FindManyTopicTimerArgs>
  ): PromiseLike<Array<TopicTimerGetPayload<ExtractFindManyTopicTimerArgsSelect<T>>>>
  create<T extends TopicTimerCreateArgs>(
    args: Subset<T, TopicTimerCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerCreateArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  update<T extends TopicTimerUpdateArgs>(
    args: Subset<T, TopicTimerUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerUpdateArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  updateMany<T extends TopicTimerUpdateManyArgs>(
    args: Subset<T, TopicTimerUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerUpdateManyArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  upsert<T extends TopicTimerUpsertArgs>(
    args: Subset<T, TopicTimerUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerUpsertArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  delete<T extends TopicTimerDeleteArgs>(
    args: Subset<T, TopicTimerDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerDeleteArgsSelect<T>>> : TopicTimerClient<TopicTimer>
  deleteMany<T extends TopicTimerDeleteManyArgs>(
    args: Subset<T, TopicTimerDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerDeleteManyArgsSelect<T>>> : TopicTimerClient<TopicTimer>
}
function TopicTimerDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicTimerDelegate {
  const TopicTimer = <T extends FindManyTopicTimerArgs>(args: Subset<T, FindManyTopicTimerArgs>) => new TopicTimerClient<PromiseLike<Array<TopicTimerGetPayload<ExtractFindManyTopicTimerArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicTimers', 'topicTimers', args, [])
  TopicTimer.findOne = <T extends FindOneTopicTimerArgs>(args: Subset<T, FindOneTopicTimerArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'query',
    'topicTimer',
    'topicTimers.findOne',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'query',
    'topicTimer',
    'topicTimers.findOne',
    args,
    []
  )
  TopicTimer.findMany = <T extends FindManyTopicTimerArgs>(args: Subset<T, FindManyTopicTimerArgs>) => new TopicTimerClient<PromiseLike<Array<TopicTimerGetPayload<ExtractFindManyTopicTimerArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicTimers',
    'topicTimers.findMany',
    args,
    []
  )
  TopicTimer.create = <T extends TopicTimerCreateArgs>(args: Subset<T, TopicTimerCreateArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicTimer',
    'topicTimers.create',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicTimer',
    'topicTimers.create',
    args,
    []
  )
  TopicTimer.update = <T extends TopicTimerUpdateArgs>(args: Subset<T, TopicTimerUpdateArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicTimer',
    'topicTimers.update',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicTimer',
    'topicTimers.update',
    args,
    []
  )
  TopicTimer.updateMany = <T extends TopicTimerUpdateManyArgs>(args: Subset<T, TopicTimerUpdateManyArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicTimers',
    'topicTimers.updateMany',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicTimers',
    'topicTimers.updateMany',
    args,
    []
  )
  TopicTimer.upsert = <T extends TopicTimerUpsertArgs>(args: Subset<T, TopicTimerUpsertArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicTimer',
    'topicTimers.upsert',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicTimer',
    'topicTimers.upsert',
    args,
    []
  )
  TopicTimer.delete = <T extends TopicTimerDeleteArgs>(args: Subset<T, TopicTimerDeleteArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicTimer',
    'topicTimers.delete',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicTimer',
    'topicTimers.delete',
    args,
    []
  )
  TopicTimer.deleteMany = <T extends TopicTimerDeleteManyArgs>(args: Subset<T, TopicTimerDeleteManyArgs>) => args.select ? new TopicTimerClient<'select' extends keyof T ? PromiseLike<TopicTimerGetPayload<ExtractTopicTimerArgsSelect<T>>> : TopicTimerClient<TopicTimer>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicTimers',
    'topicTimers.deleteMany',
    args,
    []
  ) : new TopicTimerClient<TopicTimer>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicTimers',
    'topicTimers.deleteMany',
    args,
    []
  )
  return TopicTimer as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicTimerClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicTimerArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicTimer').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicTimer').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicTimerArgs = {
  select?: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
}

export type FindOneTopicTimerArgsWithSelect = {
  select: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
}

type ExtractFindOneTopicTimerArgsSelect<S extends undefined | boolean | FindOneTopicTimerArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicTimerArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicTimerArgs = {
  select?: TopicTimerSelect
  where?: TopicTimerWhereInput
  orderBy?: TopicTimerOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicTimerArgsWithSelect = {
  select: TopicTimerSelect
  where?: TopicTimerWhereInput
  orderBy?: TopicTimerOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicTimerArgsSelect<S extends undefined | boolean | FindManyTopicTimerArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicTimerArgsWithSelect
  ? S['select']
  : true


export type TopicTimerCreateArgs = {
  select?: TopicTimerSelect
  data: TopicTimerCreateInput
}

export type TopicTimerCreateArgsWithSelect = {
  select: TopicTimerSelect
  data: TopicTimerCreateInput
}

type ExtractTopicTimerCreateArgsSelect<S extends undefined | boolean | TopicTimerCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerCreateArgsWithSelect
  ? S['select']
  : true


export type TopicTimerUpdateArgs = {
  select?: TopicTimerSelect
  data: TopicTimerUpdateInput
  where: TopicTimerWhereUniqueInput
}

export type TopicTimerUpdateArgsWithSelect = {
  select: TopicTimerSelect
  data: TopicTimerUpdateInput
  where: TopicTimerWhereUniqueInput
}

type ExtractTopicTimerUpdateArgsSelect<S extends undefined | boolean | TopicTimerUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicTimerUpdateManyArgs = {
  select?: TopicTimerSelect
  data: TopicTimerUpdateManyMutationInput
  where?: TopicTimerWhereInput
}

export type TopicTimerUpdateManyArgsWithSelect = {
  select: TopicTimerSelect
  data: TopicTimerUpdateManyMutationInput
  where?: TopicTimerWhereInput
}

type ExtractTopicTimerUpdateManyArgsSelect<S extends undefined | boolean | TopicTimerUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicTimerUpsertArgs = {
  select?: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
  create: TopicTimerCreateInput
  update: TopicTimerUpdateInput
}

export type TopicTimerUpsertArgsWithSelect = {
  select: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
  create: TopicTimerCreateInput
  update: TopicTimerUpdateInput
}

type ExtractTopicTimerUpsertArgsSelect<S extends undefined | boolean | TopicTimerUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicTimerDeleteArgs = {
  select?: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
}

export type TopicTimerDeleteArgsWithSelect = {
  select: TopicTimerSelect
  where: TopicTimerWhereUniqueInput
}

type ExtractTopicTimerDeleteArgsSelect<S extends undefined | boolean | TopicTimerDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicTimerDeleteManyArgs = {
  select?: TopicTimerSelect
  where?: TopicTimerWhereInput
}

export type TopicTimerDeleteManyArgsWithSelect = {
  select: TopicTimerSelect
  where?: TopicTimerWhereInput
}

type ExtractTopicTimerDeleteManyArgsSelect<S extends undefined | boolean | TopicTimerDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicTimerArgs = {
  select?: TopicTimerSelect
}

export type TopicTimerArgsWithSelect = {
  select: TopicTimerSelect
}

type ExtractTopicTimerArgsSelect<S extends undefined | boolean | TopicTimerArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicTimerArgsWithSelect
  ? S['select']
  : true



/**
 * Model TopicUser
 */

export type TopicUser = {
  id: number
  bookmarked: boolean | null
  clearedPinnedAt: string | null
  firstVisitedAt: string | null
  highestSeenPostNumber: number | null
  lastEmailedPostNumber: number | null
  lastReadPostNumber: number | null
  lastVisitedAt: string | null
  liked: boolean | null
  notificationLevel: number
  notificationsChangedAt: string | null
  notificationsReasonId: number | null
  posted: boolean
  topicId: number
  totalMsecsViewed: number
  userId: number
}

export type TopicUserScalars = 'id' | 'bookmarked' | 'clearedPinnedAt' | 'firstVisitedAt' | 'highestSeenPostNumber' | 'lastEmailedPostNumber' | 'lastReadPostNumber' | 'lastVisitedAt' | 'liked' | 'notificationLevel' | 'notificationsChangedAt' | 'notificationsReasonId' | 'posted' | 'topicId' | 'totalMsecsViewed' | 'userId'


export type TopicUserSelect = {
  id?: boolean
  bookmarked?: boolean
  clearedPinnedAt?: boolean
  firstVisitedAt?: boolean
  highestSeenPostNumber?: boolean
  lastEmailedPostNumber?: boolean
  lastReadPostNumber?: boolean
  lastVisitedAt?: boolean
  liked?: boolean
  notificationLevel?: boolean
  notificationsChangedAt?: boolean
  notificationsReasonId?: boolean
  posted?: boolean
  topicId?: boolean
  totalMsecsViewed?: boolean
  userId?: boolean
}

type TopicUserDefault = {
  id: true
  bookmarked: true
  clearedPinnedAt: true
  firstVisitedAt: true
  highestSeenPostNumber: true
  lastEmailedPostNumber: true
  lastReadPostNumber: true
  lastVisitedAt: true
  liked: true
  notificationLevel: true
  notificationsChangedAt: true
  notificationsReasonId: true
  posted: true
  topicId: true
  totalMsecsViewed: true
  userId: true
}


type TopicUserGetPayload<S extends boolean | TopicUserSelect> = S extends true
  ? TopicUser
  : S extends TopicUserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TopicUserDefault, S>>]: P extends TopicUserScalars
        ? TopicUser[P]
        : never
    }
   : never

export interface TopicUserDelegate {
  <T extends FindManyTopicUserArgs>(args?: Subset<T, FindManyTopicUserArgs>): PromiseLike<Array<TopicUserGetPayload<ExtractFindManyTopicUserArgsSelect<T>>>>
  findOne<T extends FindOneTopicUserArgs>(
    args: Subset<T, FindOneTopicUserArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractFindOneTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>
  findMany<T extends FindManyTopicUserArgs>(
    args?: Subset<T, FindManyTopicUserArgs>
  ): PromiseLike<Array<TopicUserGetPayload<ExtractFindManyTopicUserArgsSelect<T>>>>
  create<T extends TopicUserCreateArgs>(
    args: Subset<T, TopicUserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserCreateArgsSelect<T>>> : TopicUserClient<TopicUser>
  update<T extends TopicUserUpdateArgs>(
    args: Subset<T, TopicUserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserUpdateArgsSelect<T>>> : TopicUserClient<TopicUser>
  updateMany<T extends TopicUserUpdateManyArgs>(
    args: Subset<T, TopicUserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserUpdateManyArgsSelect<T>>> : TopicUserClient<TopicUser>
  upsert<T extends TopicUserUpsertArgs>(
    args: Subset<T, TopicUserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserUpsertArgsSelect<T>>> : TopicUserClient<TopicUser>
  delete<T extends TopicUserDeleteArgs>(
    args: Subset<T, TopicUserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserDeleteArgsSelect<T>>> : TopicUserClient<TopicUser>
  deleteMany<T extends TopicUserDeleteManyArgs>(
    args: Subset<T, TopicUserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserDeleteManyArgsSelect<T>>> : TopicUserClient<TopicUser>
}
function TopicUserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TopicUserDelegate {
  const TopicUser = <T extends FindManyTopicUserArgs>(args: Subset<T, FindManyTopicUserArgs>) => new TopicUserClient<PromiseLike<Array<TopicUserGetPayload<ExtractFindManyTopicUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'topicUsers', 'topicUsers', args, [])
  TopicUser.findOne = <T extends FindOneTopicUserArgs>(args: Subset<T, FindOneTopicUserArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'query',
    'topicUser',
    'topicUsers.findOne',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'query',
    'topicUser',
    'topicUsers.findOne',
    args,
    []
  )
  TopicUser.findMany = <T extends FindManyTopicUserArgs>(args: Subset<T, FindManyTopicUserArgs>) => new TopicUserClient<PromiseLike<Array<TopicUserGetPayload<ExtractFindManyTopicUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'topicUsers',
    'topicUsers.findMany',
    args,
    []
  )
  TopicUser.create = <T extends TopicUserCreateArgs>(args: Subset<T, TopicUserCreateArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicUser',
    'topicUsers.create',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'createTopicUser',
    'topicUsers.create',
    args,
    []
  )
  TopicUser.update = <T extends TopicUserUpdateArgs>(args: Subset<T, TopicUserUpdateArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicUser',
    'topicUsers.update',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateTopicUser',
    'topicUsers.update',
    args,
    []
  )
  TopicUser.updateMany = <T extends TopicUserUpdateManyArgs>(args: Subset<T, TopicUserUpdateManyArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicUsers',
    'topicUsers.updateMany',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTopicUsers',
    'topicUsers.updateMany',
    args,
    []
  )
  TopicUser.upsert = <T extends TopicUserUpsertArgs>(args: Subset<T, TopicUserUpsertArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicUser',
    'topicUsers.upsert',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTopicUser',
    'topicUsers.upsert',
    args,
    []
  )
  TopicUser.delete = <T extends TopicUserDeleteArgs>(args: Subset<T, TopicUserDeleteArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicUser',
    'topicUsers.delete',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTopicUser',
    'topicUsers.delete',
    args,
    []
  )
  TopicUser.deleteMany = <T extends TopicUserDeleteManyArgs>(args: Subset<T, TopicUserDeleteManyArgs>) => args.select ? new TopicUserClient<'select' extends keyof T ? PromiseLike<TopicUserGetPayload<ExtractTopicUserArgsSelect<T>>> : TopicUserClient<TopicUser>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicUsers',
    'topicUsers.deleteMany',
    args,
    []
  ) : new TopicUserClient<TopicUser>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTopicUsers',
    'topicUsers.deleteMany',
    args,
    []
  )
  return TopicUser as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TopicUserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TopicUserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicUser').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TopicUser').catch(onrejected)
  }
}


// InputTypes

export type FindOneTopicUserArgs = {
  select?: TopicUserSelect
  where: TopicUserWhereUniqueInput
}

export type FindOneTopicUserArgsWithSelect = {
  select: TopicUserSelect
  where: TopicUserWhereUniqueInput
}

type ExtractFindOneTopicUserArgsSelect<S extends undefined | boolean | FindOneTopicUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTopicUserArgsWithSelect
  ? S['select']
  : true


export type FindManyTopicUserArgs = {
  select?: TopicUserSelect
  where?: TopicUserWhereInput
  orderBy?: TopicUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTopicUserArgsWithSelect = {
  select: TopicUserSelect
  where?: TopicUserWhereInput
  orderBy?: TopicUserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTopicUserArgsSelect<S extends undefined | boolean | FindManyTopicUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTopicUserArgsWithSelect
  ? S['select']
  : true


export type TopicUserCreateArgs = {
  select?: TopicUserSelect
  data: TopicUserCreateInput
}

export type TopicUserCreateArgsWithSelect = {
  select: TopicUserSelect
  data: TopicUserCreateInput
}

type ExtractTopicUserCreateArgsSelect<S extends undefined | boolean | TopicUserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserCreateArgsWithSelect
  ? S['select']
  : true


export type TopicUserUpdateArgs = {
  select?: TopicUserSelect
  data: TopicUserUpdateInput
  where: TopicUserWhereUniqueInput
}

export type TopicUserUpdateArgsWithSelect = {
  select: TopicUserSelect
  data: TopicUserUpdateInput
  where: TopicUserWhereUniqueInput
}

type ExtractTopicUserUpdateArgsSelect<S extends undefined | boolean | TopicUserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserUpdateArgsWithSelect
  ? S['select']
  : true


export type TopicUserUpdateManyArgs = {
  select?: TopicUserSelect
  data: TopicUserUpdateManyMutationInput
  where?: TopicUserWhereInput
}

export type TopicUserUpdateManyArgsWithSelect = {
  select: TopicUserSelect
  data: TopicUserUpdateManyMutationInput
  where?: TopicUserWhereInput
}

type ExtractTopicUserUpdateManyArgsSelect<S extends undefined | boolean | TopicUserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TopicUserUpsertArgs = {
  select?: TopicUserSelect
  where: TopicUserWhereUniqueInput
  create: TopicUserCreateInput
  update: TopicUserUpdateInput
}

export type TopicUserUpsertArgsWithSelect = {
  select: TopicUserSelect
  where: TopicUserWhereUniqueInput
  create: TopicUserCreateInput
  update: TopicUserUpdateInput
}

type ExtractTopicUserUpsertArgsSelect<S extends undefined | boolean | TopicUserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserUpsertArgsWithSelect
  ? S['select']
  : true


export type TopicUserDeleteArgs = {
  select?: TopicUserSelect
  where: TopicUserWhereUniqueInput
}

export type TopicUserDeleteArgsWithSelect = {
  select: TopicUserSelect
  where: TopicUserWhereUniqueInput
}

type ExtractTopicUserDeleteArgsSelect<S extends undefined | boolean | TopicUserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserDeleteArgsWithSelect
  ? S['select']
  : true


export type TopicUserDeleteManyArgs = {
  select?: TopicUserSelect
  where?: TopicUserWhereInput
}

export type TopicUserDeleteManyArgsWithSelect = {
  select: TopicUserSelect
  where?: TopicUserWhereInput
}

type ExtractTopicUserDeleteManyArgsSelect<S extends undefined | boolean | TopicUserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TopicUserArgs = {
  select?: TopicUserSelect
}

export type TopicUserArgsWithSelect = {
  select: TopicUserSelect
}

type ExtractTopicUserArgsSelect<S extends undefined | boolean | TopicUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TopicUserArgsWithSelect
  ? S['select']
  : true



/**
 * Model TranslationOverride
 */

export type TranslationOverride = {
  id: number
  compiledJs: string | null
  createdAt: string
  locale: string
  translationKey: string
  updatedAt: string
  value: string
}

export type TranslationOverrideScalars = 'id' | 'compiledJs' | 'createdAt' | 'locale' | 'translationKey' | 'updatedAt' | 'value'


export type TranslationOverrideSelect = {
  id?: boolean
  compiledJs?: boolean
  createdAt?: boolean
  locale?: boolean
  translationKey?: boolean
  updatedAt?: boolean
  value?: boolean
}

type TranslationOverrideDefault = {
  id: true
  compiledJs: true
  createdAt: true
  locale: true
  translationKey: true
  updatedAt: true
  value: true
}


type TranslationOverrideGetPayload<S extends boolean | TranslationOverrideSelect> = S extends true
  ? TranslationOverride
  : S extends TranslationOverrideSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TranslationOverrideDefault, S>>]: P extends TranslationOverrideScalars
        ? TranslationOverride[P]
        : never
    }
   : never

export interface TranslationOverrideDelegate {
  <T extends FindManyTranslationOverrideArgs>(args?: Subset<T, FindManyTranslationOverrideArgs>): PromiseLike<Array<TranslationOverrideGetPayload<ExtractFindManyTranslationOverrideArgsSelect<T>>>>
  findOne<T extends FindOneTranslationOverrideArgs>(
    args: Subset<T, FindOneTranslationOverrideArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractFindOneTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  findMany<T extends FindManyTranslationOverrideArgs>(
    args?: Subset<T, FindManyTranslationOverrideArgs>
  ): PromiseLike<Array<TranslationOverrideGetPayload<ExtractFindManyTranslationOverrideArgsSelect<T>>>>
  create<T extends TranslationOverrideCreateArgs>(
    args: Subset<T, TranslationOverrideCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideCreateArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  update<T extends TranslationOverrideUpdateArgs>(
    args: Subset<T, TranslationOverrideUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideUpdateArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  updateMany<T extends TranslationOverrideUpdateManyArgs>(
    args: Subset<T, TranslationOverrideUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideUpdateManyArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  upsert<T extends TranslationOverrideUpsertArgs>(
    args: Subset<T, TranslationOverrideUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideUpsertArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  delete<T extends TranslationOverrideDeleteArgs>(
    args: Subset<T, TranslationOverrideDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideDeleteArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
  deleteMany<T extends TranslationOverrideDeleteManyArgs>(
    args: Subset<T, TranslationOverrideDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideDeleteManyArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>
}
function TranslationOverrideDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TranslationOverrideDelegate {
  const TranslationOverride = <T extends FindManyTranslationOverrideArgs>(args: Subset<T, FindManyTranslationOverrideArgs>) => new TranslationOverrideClient<PromiseLike<Array<TranslationOverrideGetPayload<ExtractFindManyTranslationOverrideArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'translationOverrides', 'translationOverrides', args, [])
  TranslationOverride.findOne = <T extends FindOneTranslationOverrideArgs>(args: Subset<T, FindOneTranslationOverrideArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'query',
    'translationOverride',
    'translationOverrides.findOne',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'query',
    'translationOverride',
    'translationOverrides.findOne',
    args,
    []
  )
  TranslationOverride.findMany = <T extends FindManyTranslationOverrideArgs>(args: Subset<T, FindManyTranslationOverrideArgs>) => new TranslationOverrideClient<PromiseLike<Array<TranslationOverrideGetPayload<ExtractFindManyTranslationOverrideArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'translationOverrides',
    'translationOverrides.findMany',
    args,
    []
  )
  TranslationOverride.create = <T extends TranslationOverrideCreateArgs>(args: Subset<T, TranslationOverrideCreateArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'createTranslationOverride',
    'translationOverrides.create',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'createTranslationOverride',
    'translationOverrides.create',
    args,
    []
  )
  TranslationOverride.update = <T extends TranslationOverrideUpdateArgs>(args: Subset<T, TranslationOverrideUpdateArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTranslationOverride',
    'translationOverrides.update',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'updateTranslationOverride',
    'translationOverrides.update',
    args,
    []
  )
  TranslationOverride.updateMany = <T extends TranslationOverrideUpdateManyArgs>(args: Subset<T, TranslationOverrideUpdateManyArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTranslationOverrides',
    'translationOverrides.updateMany',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTranslationOverrides',
    'translationOverrides.updateMany',
    args,
    []
  )
  TranslationOverride.upsert = <T extends TranslationOverrideUpsertArgs>(args: Subset<T, TranslationOverrideUpsertArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTranslationOverride',
    'translationOverrides.upsert',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTranslationOverride',
    'translationOverrides.upsert',
    args,
    []
  )
  TranslationOverride.delete = <T extends TranslationOverrideDeleteArgs>(args: Subset<T, TranslationOverrideDeleteArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTranslationOverride',
    'translationOverrides.delete',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTranslationOverride',
    'translationOverrides.delete',
    args,
    []
  )
  TranslationOverride.deleteMany = <T extends TranslationOverrideDeleteManyArgs>(args: Subset<T, TranslationOverrideDeleteManyArgs>) => args.select ? new TranslationOverrideClient<'select' extends keyof T ? PromiseLike<TranslationOverrideGetPayload<ExtractTranslationOverrideArgsSelect<T>>> : TranslationOverrideClient<TranslationOverride>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTranslationOverrides',
    'translationOverrides.deleteMany',
    args,
    []
  ) : new TranslationOverrideClient<TranslationOverride>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTranslationOverrides',
    'translationOverrides.deleteMany',
    args,
    []
  )
  return TranslationOverride as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TranslationOverrideClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TranslationOverrideArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TranslationOverride').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TranslationOverride').catch(onrejected)
  }
}


// InputTypes

export type FindOneTranslationOverrideArgs = {
  select?: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
}

export type FindOneTranslationOverrideArgsWithSelect = {
  select: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
}

type ExtractFindOneTranslationOverrideArgsSelect<S extends undefined | boolean | FindOneTranslationOverrideArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTranslationOverrideArgsWithSelect
  ? S['select']
  : true


export type FindManyTranslationOverrideArgs = {
  select?: TranslationOverrideSelect
  where?: TranslationOverrideWhereInput
  orderBy?: TranslationOverrideOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTranslationOverrideArgsWithSelect = {
  select: TranslationOverrideSelect
  where?: TranslationOverrideWhereInput
  orderBy?: TranslationOverrideOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTranslationOverrideArgsSelect<S extends undefined | boolean | FindManyTranslationOverrideArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTranslationOverrideArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideCreateArgs = {
  select?: TranslationOverrideSelect
  data: TranslationOverrideCreateInput
}

export type TranslationOverrideCreateArgsWithSelect = {
  select: TranslationOverrideSelect
  data: TranslationOverrideCreateInput
}

type ExtractTranslationOverrideCreateArgsSelect<S extends undefined | boolean | TranslationOverrideCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideCreateArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideUpdateArgs = {
  select?: TranslationOverrideSelect
  data: TranslationOverrideUpdateInput
  where: TranslationOverrideWhereUniqueInput
}

export type TranslationOverrideUpdateArgsWithSelect = {
  select: TranslationOverrideSelect
  data: TranslationOverrideUpdateInput
  where: TranslationOverrideWhereUniqueInput
}

type ExtractTranslationOverrideUpdateArgsSelect<S extends undefined | boolean | TranslationOverrideUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideUpdateArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideUpdateManyArgs = {
  select?: TranslationOverrideSelect
  data: TranslationOverrideUpdateManyMutationInput
  where?: TranslationOverrideWhereInput
}

export type TranslationOverrideUpdateManyArgsWithSelect = {
  select: TranslationOverrideSelect
  data: TranslationOverrideUpdateManyMutationInput
  where?: TranslationOverrideWhereInput
}

type ExtractTranslationOverrideUpdateManyArgsSelect<S extends undefined | boolean | TranslationOverrideUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideUpsertArgs = {
  select?: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
  create: TranslationOverrideCreateInput
  update: TranslationOverrideUpdateInput
}

export type TranslationOverrideUpsertArgsWithSelect = {
  select: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
  create: TranslationOverrideCreateInput
  update: TranslationOverrideUpdateInput
}

type ExtractTranslationOverrideUpsertArgsSelect<S extends undefined | boolean | TranslationOverrideUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideUpsertArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideDeleteArgs = {
  select?: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
}

export type TranslationOverrideDeleteArgsWithSelect = {
  select: TranslationOverrideSelect
  where: TranslationOverrideWhereUniqueInput
}

type ExtractTranslationOverrideDeleteArgsSelect<S extends undefined | boolean | TranslationOverrideDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideDeleteArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideDeleteManyArgs = {
  select?: TranslationOverrideSelect
  where?: TranslationOverrideWhereInput
}

export type TranslationOverrideDeleteManyArgsWithSelect = {
  select: TranslationOverrideSelect
  where?: TranslationOverrideWhereInput
}

type ExtractTranslationOverrideDeleteManyArgsSelect<S extends undefined | boolean | TranslationOverrideDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TranslationOverrideArgs = {
  select?: TranslationOverrideSelect
}

export type TranslationOverrideArgsWithSelect = {
  select: TranslationOverrideSelect
}

type ExtractTranslationOverrideArgsSelect<S extends undefined | boolean | TranslationOverrideArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TranslationOverrideArgsWithSelect
  ? S['select']
  : true



/**
 * Model TwitterUserInfo
 */

export type TwitterUserInfo = {
  id: number
  createdAt: string
  email: string | null
  screenName: string
  twitterUserId: number
  updatedAt: string
  userId: number
}

export type TwitterUserInfoScalars = 'id' | 'createdAt' | 'email' | 'screenName' | 'twitterUserId' | 'updatedAt' | 'userId'


export type TwitterUserInfoSelect = {
  id?: boolean
  createdAt?: boolean
  email?: boolean
  screenName?: boolean
  twitterUserId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type TwitterUserInfoDefault = {
  id: true
  createdAt: true
  email: true
  screenName: true
  twitterUserId: true
  updatedAt: true
  userId: true
}


type TwitterUserInfoGetPayload<S extends boolean | TwitterUserInfoSelect> = S extends true
  ? TwitterUserInfo
  : S extends TwitterUserInfoSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<TwitterUserInfoDefault, S>>]: P extends TwitterUserInfoScalars
        ? TwitterUserInfo[P]
        : never
    }
   : never

export interface TwitterUserInfoDelegate {
  <T extends FindManyTwitterUserInfoArgs>(args?: Subset<T, FindManyTwitterUserInfoArgs>): PromiseLike<Array<TwitterUserInfoGetPayload<ExtractFindManyTwitterUserInfoArgsSelect<T>>>>
  findOne<T extends FindOneTwitterUserInfoArgs>(
    args: Subset<T, FindOneTwitterUserInfoArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractFindOneTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  findMany<T extends FindManyTwitterUserInfoArgs>(
    args?: Subset<T, FindManyTwitterUserInfoArgs>
  ): PromiseLike<Array<TwitterUserInfoGetPayload<ExtractFindManyTwitterUserInfoArgsSelect<T>>>>
  create<T extends TwitterUserInfoCreateArgs>(
    args: Subset<T, TwitterUserInfoCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoCreateArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  update<T extends TwitterUserInfoUpdateArgs>(
    args: Subset<T, TwitterUserInfoUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoUpdateArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  updateMany<T extends TwitterUserInfoUpdateManyArgs>(
    args: Subset<T, TwitterUserInfoUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoUpdateManyArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  upsert<T extends TwitterUserInfoUpsertArgs>(
    args: Subset<T, TwitterUserInfoUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoUpsertArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  delete<T extends TwitterUserInfoDeleteArgs>(
    args: Subset<T, TwitterUserInfoDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoDeleteArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
  deleteMany<T extends TwitterUserInfoDeleteManyArgs>(
    args: Subset<T, TwitterUserInfoDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoDeleteManyArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>
}
function TwitterUserInfoDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): TwitterUserInfoDelegate {
  const TwitterUserInfo = <T extends FindManyTwitterUserInfoArgs>(args: Subset<T, FindManyTwitterUserInfoArgs>) => new TwitterUserInfoClient<PromiseLike<Array<TwitterUserInfoGetPayload<ExtractFindManyTwitterUserInfoArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'twitterUserInfoes', 'twitterUserInfoes', args, [])
  TwitterUserInfo.findOne = <T extends FindOneTwitterUserInfoArgs>(args: Subset<T, FindOneTwitterUserInfoArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'query',
    'twitterUserInfo',
    'twitterUserInfoes.findOne',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'query',
    'twitterUserInfo',
    'twitterUserInfoes.findOne',
    args,
    []
  )
  TwitterUserInfo.findMany = <T extends FindManyTwitterUserInfoArgs>(args: Subset<T, FindManyTwitterUserInfoArgs>) => new TwitterUserInfoClient<PromiseLike<Array<TwitterUserInfoGetPayload<ExtractFindManyTwitterUserInfoArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'twitterUserInfoes',
    'twitterUserInfoes.findMany',
    args,
    []
  )
  TwitterUserInfo.create = <T extends TwitterUserInfoCreateArgs>(args: Subset<T, TwitterUserInfoCreateArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'createTwitterUserInfo',
    'twitterUserInfoes.create',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'createTwitterUserInfo',
    'twitterUserInfoes.create',
    args,
    []
  )
  TwitterUserInfo.update = <T extends TwitterUserInfoUpdateArgs>(args: Subset<T, TwitterUserInfoUpdateArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateTwitterUserInfo',
    'twitterUserInfoes.update',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateTwitterUserInfo',
    'twitterUserInfoes.update',
    args,
    []
  )
  TwitterUserInfo.updateMany = <T extends TwitterUserInfoUpdateManyArgs>(args: Subset<T, TwitterUserInfoUpdateManyArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTwitterUserInfoes',
    'twitterUserInfoes.updateMany',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyTwitterUserInfoes',
    'twitterUserInfoes.updateMany',
    args,
    []
  )
  TwitterUserInfo.upsert = <T extends TwitterUserInfoUpsertArgs>(args: Subset<T, TwitterUserInfoUpsertArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTwitterUserInfo',
    'twitterUserInfoes.upsert',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'upsertTwitterUserInfo',
    'twitterUserInfoes.upsert',
    args,
    []
  )
  TwitterUserInfo.delete = <T extends TwitterUserInfoDeleteArgs>(args: Subset<T, TwitterUserInfoDeleteArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTwitterUserInfo',
    'twitterUserInfoes.delete',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteTwitterUserInfo',
    'twitterUserInfoes.delete',
    args,
    []
  )
  TwitterUserInfo.deleteMany = <T extends TwitterUserInfoDeleteManyArgs>(args: Subset<T, TwitterUserInfoDeleteManyArgs>) => args.select ? new TwitterUserInfoClient<'select' extends keyof T ? PromiseLike<TwitterUserInfoGetPayload<ExtractTwitterUserInfoArgsSelect<T>>> : TwitterUserInfoClient<TwitterUserInfo>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTwitterUserInfoes',
    'twitterUserInfoes.deleteMany',
    args,
    []
  ) : new TwitterUserInfoClient<TwitterUserInfo>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyTwitterUserInfoes',
    'twitterUserInfoes.deleteMany',
    args,
    []
  )
  return TwitterUserInfo as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class TwitterUserInfoClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: TwitterUserInfoArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TwitterUserInfo').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'TwitterUserInfo').catch(onrejected)
  }
}


// InputTypes

export type FindOneTwitterUserInfoArgs = {
  select?: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
}

export type FindOneTwitterUserInfoArgsWithSelect = {
  select: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
}

type ExtractFindOneTwitterUserInfoArgsSelect<S extends undefined | boolean | FindOneTwitterUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneTwitterUserInfoArgsWithSelect
  ? S['select']
  : true


export type FindManyTwitterUserInfoArgs = {
  select?: TwitterUserInfoSelect
  where?: TwitterUserInfoWhereInput
  orderBy?: TwitterUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyTwitterUserInfoArgsWithSelect = {
  select: TwitterUserInfoSelect
  where?: TwitterUserInfoWhereInput
  orderBy?: TwitterUserInfoOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyTwitterUserInfoArgsSelect<S extends undefined | boolean | FindManyTwitterUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyTwitterUserInfoArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoCreateArgs = {
  select?: TwitterUserInfoSelect
  data: TwitterUserInfoCreateInput
}

export type TwitterUserInfoCreateArgsWithSelect = {
  select: TwitterUserInfoSelect
  data: TwitterUserInfoCreateInput
}

type ExtractTwitterUserInfoCreateArgsSelect<S extends undefined | boolean | TwitterUserInfoCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoCreateArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoUpdateArgs = {
  select?: TwitterUserInfoSelect
  data: TwitterUserInfoUpdateInput
  where: TwitterUserInfoWhereUniqueInput
}

export type TwitterUserInfoUpdateArgsWithSelect = {
  select: TwitterUserInfoSelect
  data: TwitterUserInfoUpdateInput
  where: TwitterUserInfoWhereUniqueInput
}

type ExtractTwitterUserInfoUpdateArgsSelect<S extends undefined | boolean | TwitterUserInfoUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoUpdateArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoUpdateManyArgs = {
  select?: TwitterUserInfoSelect
  data: TwitterUserInfoUpdateManyMutationInput
  where?: TwitterUserInfoWhereInput
}

export type TwitterUserInfoUpdateManyArgsWithSelect = {
  select: TwitterUserInfoSelect
  data: TwitterUserInfoUpdateManyMutationInput
  where?: TwitterUserInfoWhereInput
}

type ExtractTwitterUserInfoUpdateManyArgsSelect<S extends undefined | boolean | TwitterUserInfoUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoUpdateManyArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoUpsertArgs = {
  select?: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
  create: TwitterUserInfoCreateInput
  update: TwitterUserInfoUpdateInput
}

export type TwitterUserInfoUpsertArgsWithSelect = {
  select: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
  create: TwitterUserInfoCreateInput
  update: TwitterUserInfoUpdateInput
}

type ExtractTwitterUserInfoUpsertArgsSelect<S extends undefined | boolean | TwitterUserInfoUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoUpsertArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoDeleteArgs = {
  select?: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
}

export type TwitterUserInfoDeleteArgsWithSelect = {
  select: TwitterUserInfoSelect
  where: TwitterUserInfoWhereUniqueInput
}

type ExtractTwitterUserInfoDeleteArgsSelect<S extends undefined | boolean | TwitterUserInfoDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoDeleteArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoDeleteManyArgs = {
  select?: TwitterUserInfoSelect
  where?: TwitterUserInfoWhereInput
}

export type TwitterUserInfoDeleteManyArgsWithSelect = {
  select: TwitterUserInfoSelect
  where?: TwitterUserInfoWhereInput
}

type ExtractTwitterUserInfoDeleteManyArgsSelect<S extends undefined | boolean | TwitterUserInfoDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoDeleteManyArgsWithSelect
  ? S['select']
  : true


export type TwitterUserInfoArgs = {
  select?: TwitterUserInfoSelect
}

export type TwitterUserInfoArgsWithSelect = {
  select: TwitterUserInfoSelect
}

type ExtractTwitterUserInfoArgsSelect<S extends undefined | boolean | TwitterUserInfoArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends TwitterUserInfoArgsWithSelect
  ? S['select']
  : true



/**
 * Model UnsubscribeKey
 */

export type UnsubscribeKey = {
  key: string
  createdAt: string | null
  postId: number | null
  topicId: number | null
  unsubscribeKeyType: string | null
  updatedAt: string | null
  userId: number
}

export type UnsubscribeKeyScalars = 'key' | 'createdAt' | 'postId' | 'topicId' | 'unsubscribeKeyType' | 'updatedAt' | 'userId'


export type UnsubscribeKeySelect = {
  key?: boolean
  createdAt?: boolean
  postId?: boolean
  topicId?: boolean
  unsubscribeKeyType?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UnsubscribeKeyDefault = {
  key: true
  createdAt: true
  postId: true
  topicId: true
  unsubscribeKeyType: true
  updatedAt: true
  userId: true
}


type UnsubscribeKeyGetPayload<S extends boolean | UnsubscribeKeySelect> = S extends true
  ? UnsubscribeKey
  : S extends UnsubscribeKeySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UnsubscribeKeyDefault, S>>]: P extends UnsubscribeKeyScalars
        ? UnsubscribeKey[P]
        : never
    }
   : never

export interface UnsubscribeKeyDelegate {
  <T extends FindManyUnsubscribeKeyArgs>(args?: Subset<T, FindManyUnsubscribeKeyArgs>): PromiseLike<Array<UnsubscribeKeyGetPayload<ExtractFindManyUnsubscribeKeyArgsSelect<T>>>>
  findMany<T extends FindManyUnsubscribeKeyArgs>(
    args?: Subset<T, FindManyUnsubscribeKeyArgs>
  ): PromiseLike<Array<UnsubscribeKeyGetPayload<ExtractFindManyUnsubscribeKeyArgsSelect<T>>>>
  create<T extends UnsubscribeKeyCreateArgs>(
    args: Subset<T, UnsubscribeKeyCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyCreateArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>
  updateMany<T extends UnsubscribeKeyUpdateManyArgs>(
    args: Subset<T, UnsubscribeKeyUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyUpdateManyArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>
  deleteMany<T extends UnsubscribeKeyDeleteManyArgs>(
    args: Subset<T, UnsubscribeKeyDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyDeleteManyArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>
}
function UnsubscribeKeyDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UnsubscribeKeyDelegate {
  const UnsubscribeKey = <T extends FindManyUnsubscribeKeyArgs>(args: Subset<T, FindManyUnsubscribeKeyArgs>) => new UnsubscribeKeyClient<PromiseLike<Array<UnsubscribeKeyGetPayload<ExtractFindManyUnsubscribeKeyArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'unsubscribeKeys', 'unsubscribeKeys', args, [])
  UnsubscribeKey.findMany = <T extends FindManyUnsubscribeKeyArgs>(args: Subset<T, FindManyUnsubscribeKeyArgs>) => new UnsubscribeKeyClient<PromiseLike<Array<UnsubscribeKeyGetPayload<ExtractFindManyUnsubscribeKeyArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'unsubscribeKeys',
    'unsubscribeKeys.findMany',
    args,
    []
  )
  UnsubscribeKey.create = <T extends UnsubscribeKeyCreateArgs>(args: Subset<T, UnsubscribeKeyCreateArgs>) => args.select ? new UnsubscribeKeyClient<'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>>(
    dmmf,
    fetcher,
    'mutation',
    'createUnsubscribeKey',
    'unsubscribeKeys.create',
    args,
    []
  ) : new UnsubscribeKeyClient<UnsubscribeKey>(
    dmmf,
    fetcher,
    'mutation',
    'createUnsubscribeKey',
    'unsubscribeKeys.create',
    args,
    []
  )
  UnsubscribeKey.updateMany = <T extends UnsubscribeKeyUpdateManyArgs>(args: Subset<T, UnsubscribeKeyUpdateManyArgs>) => args.select ? new UnsubscribeKeyClient<'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUnsubscribeKeys',
    'unsubscribeKeys.updateMany',
    args,
    []
  ) : new UnsubscribeKeyClient<UnsubscribeKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUnsubscribeKeys',
    'unsubscribeKeys.updateMany',
    args,
    []
  )
  UnsubscribeKey.deleteMany = <T extends UnsubscribeKeyDeleteManyArgs>(args: Subset<T, UnsubscribeKeyDeleteManyArgs>) => args.select ? new UnsubscribeKeyClient<'select' extends keyof T ? PromiseLike<UnsubscribeKeyGetPayload<ExtractUnsubscribeKeyArgsSelect<T>>> : UnsubscribeKeyClient<UnsubscribeKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUnsubscribeKeys',
    'unsubscribeKeys.deleteMany',
    args,
    []
  ) : new UnsubscribeKeyClient<UnsubscribeKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUnsubscribeKeys',
    'unsubscribeKeys.deleteMany',
    args,
    []
  )
  return UnsubscribeKey as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UnsubscribeKeyClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UnsubscribeKeyArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UnsubscribeKey').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UnsubscribeKey').catch(onrejected)
  }
}


// InputTypes

export type FindManyUnsubscribeKeyArgs = {
  select?: UnsubscribeKeySelect
  where?: UnsubscribeKeyWhereInput
  orderBy?: UnsubscribeKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUnsubscribeKeyArgsWithSelect = {
  select: UnsubscribeKeySelect
  where?: UnsubscribeKeyWhereInput
  orderBy?: UnsubscribeKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUnsubscribeKeyArgsSelect<S extends undefined | boolean | FindManyUnsubscribeKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUnsubscribeKeyArgsWithSelect
  ? S['select']
  : true


export type UnsubscribeKeyCreateArgs = {
  select?: UnsubscribeKeySelect
  data: UnsubscribeKeyCreateInput
}

export type UnsubscribeKeyCreateArgsWithSelect = {
  select: UnsubscribeKeySelect
  data: UnsubscribeKeyCreateInput
}

type ExtractUnsubscribeKeyCreateArgsSelect<S extends undefined | boolean | UnsubscribeKeyCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UnsubscribeKeyCreateArgsWithSelect
  ? S['select']
  : true


export type UnsubscribeKeyUpdateManyArgs = {
  select?: UnsubscribeKeySelect
  data: UnsubscribeKeyUpdateManyMutationInput
  where?: UnsubscribeKeyWhereInput
}

export type UnsubscribeKeyUpdateManyArgsWithSelect = {
  select: UnsubscribeKeySelect
  data: UnsubscribeKeyUpdateManyMutationInput
  where?: UnsubscribeKeyWhereInput
}

type ExtractUnsubscribeKeyUpdateManyArgsSelect<S extends undefined | boolean | UnsubscribeKeyUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UnsubscribeKeyUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UnsubscribeKeyDeleteManyArgs = {
  select?: UnsubscribeKeySelect
  where?: UnsubscribeKeyWhereInput
}

export type UnsubscribeKeyDeleteManyArgsWithSelect = {
  select: UnsubscribeKeySelect
  where?: UnsubscribeKeyWhereInput
}

type ExtractUnsubscribeKeyDeleteManyArgsSelect<S extends undefined | boolean | UnsubscribeKeyDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UnsubscribeKeyDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UnsubscribeKeyArgs = {
  select?: UnsubscribeKeySelect
}

export type UnsubscribeKeyArgsWithSelect = {
  select: UnsubscribeKeySelect
}

type ExtractUnsubscribeKeyArgsSelect<S extends undefined | boolean | UnsubscribeKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UnsubscribeKeyArgsWithSelect
  ? S['select']
  : true



/**
 * Model Upload
 */

export type Upload = {
  id: number
  createdAt: string
  extension: string | null
  filesize: number
  height: number | null
  origin: string | null
  originalFilename: string
  retainHours: number | null
  sha1: string | null
  thumbnailHeight: number | null
  thumbnailWidth: number | null
  updatedAt: string
  url: string
  userId: number
  width: number | null
}

export type UploadScalars = 'id' | 'createdAt' | 'extension' | 'filesize' | 'height' | 'origin' | 'originalFilename' | 'retainHours' | 'sha1' | 'thumbnailHeight' | 'thumbnailWidth' | 'updatedAt' | 'url' | 'userId' | 'width'


export type UploadSelect = {
  id?: boolean
  createdAt?: boolean
  extension?: boolean
  filesize?: boolean
  height?: boolean
  origin?: boolean
  originalFilename?: boolean
  retainHours?: boolean
  sha1?: boolean
  thumbnailHeight?: boolean
  thumbnailWidth?: boolean
  updatedAt?: boolean
  url?: boolean
  userId?: boolean
  width?: boolean
}

type UploadDefault = {
  id: true
  createdAt: true
  extension: true
  filesize: true
  height: true
  origin: true
  originalFilename: true
  retainHours: true
  sha1: true
  thumbnailHeight: true
  thumbnailWidth: true
  updatedAt: true
  url: true
  userId: true
  width: true
}


type UploadGetPayload<S extends boolean | UploadSelect> = S extends true
  ? Upload
  : S extends UploadSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UploadDefault, S>>]: P extends UploadScalars
        ? Upload[P]
        : never
    }
   : never

export interface UploadDelegate {
  <T extends FindManyUploadArgs>(args?: Subset<T, FindManyUploadArgs>): PromiseLike<Array<UploadGetPayload<ExtractFindManyUploadArgsSelect<T>>>>
  findOne<T extends FindOneUploadArgs>(
    args: Subset<T, FindOneUploadArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractFindOneUploadArgsSelect<T>>> : UploadClient<Upload>
  findMany<T extends FindManyUploadArgs>(
    args?: Subset<T, FindManyUploadArgs>
  ): PromiseLike<Array<UploadGetPayload<ExtractFindManyUploadArgsSelect<T>>>>
  create<T extends UploadCreateArgs>(
    args: Subset<T, UploadCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadCreateArgsSelect<T>>> : UploadClient<Upload>
  update<T extends UploadUpdateArgs>(
    args: Subset<T, UploadUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadUpdateArgsSelect<T>>> : UploadClient<Upload>
  updateMany<T extends UploadUpdateManyArgs>(
    args: Subset<T, UploadUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadUpdateManyArgsSelect<T>>> : UploadClient<Upload>
  upsert<T extends UploadUpsertArgs>(
    args: Subset<T, UploadUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadUpsertArgsSelect<T>>> : UploadClient<Upload>
  delete<T extends UploadDeleteArgs>(
    args: Subset<T, UploadDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadDeleteArgsSelect<T>>> : UploadClient<Upload>
  deleteMany<T extends UploadDeleteManyArgs>(
    args: Subset<T, UploadDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadDeleteManyArgsSelect<T>>> : UploadClient<Upload>
}
function UploadDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UploadDelegate {
  const Upload = <T extends FindManyUploadArgs>(args: Subset<T, FindManyUploadArgs>) => new UploadClient<PromiseLike<Array<UploadGetPayload<ExtractFindManyUploadArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'uploads', 'uploads', args, [])
  Upload.findOne = <T extends FindOneUploadArgs>(args: Subset<T, FindOneUploadArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'query',
    'upload',
    'uploads.findOne',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'query',
    'upload',
    'uploads.findOne',
    args,
    []
  )
  Upload.findMany = <T extends FindManyUploadArgs>(args: Subset<T, FindManyUploadArgs>) => new UploadClient<PromiseLike<Array<UploadGetPayload<ExtractFindManyUploadArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'uploads',
    'uploads.findMany',
    args,
    []
  )
  Upload.create = <T extends UploadCreateArgs>(args: Subset<T, UploadCreateArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'createUpload',
    'uploads.create',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'createUpload',
    'uploads.create',
    args,
    []
  )
  Upload.update = <T extends UploadUpdateArgs>(args: Subset<T, UploadUpdateArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUpload',
    'uploads.update',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'updateUpload',
    'uploads.update',
    args,
    []
  )
  Upload.updateMany = <T extends UploadUpdateManyArgs>(args: Subset<T, UploadUpdateManyArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUploads',
    'uploads.updateMany',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUploads',
    'uploads.updateMany',
    args,
    []
  )
  Upload.upsert = <T extends UploadUpsertArgs>(args: Subset<T, UploadUpsertArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUpload',
    'uploads.upsert',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUpload',
    'uploads.upsert',
    args,
    []
  )
  Upload.delete = <T extends UploadDeleteArgs>(args: Subset<T, UploadDeleteArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUpload',
    'uploads.delete',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUpload',
    'uploads.delete',
    args,
    []
  )
  Upload.deleteMany = <T extends UploadDeleteManyArgs>(args: Subset<T, UploadDeleteManyArgs>) => args.select ? new UploadClient<'select' extends keyof T ? PromiseLike<UploadGetPayload<ExtractUploadArgsSelect<T>>> : UploadClient<Upload>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUploads',
    'uploads.deleteMany',
    args,
    []
  ) : new UploadClient<Upload>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUploads',
    'uploads.deleteMany',
    args,
    []
  )
  return Upload as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UploadClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UploadArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Upload').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'Upload').catch(onrejected)
  }
}


// InputTypes

export type FindOneUploadArgs = {
  select?: UploadSelect
  where: UploadWhereUniqueInput
}

export type FindOneUploadArgsWithSelect = {
  select: UploadSelect
  where: UploadWhereUniqueInput
}

type ExtractFindOneUploadArgsSelect<S extends undefined | boolean | FindOneUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUploadArgsWithSelect
  ? S['select']
  : true


export type FindManyUploadArgs = {
  select?: UploadSelect
  where?: UploadWhereInput
  orderBy?: UploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUploadArgsWithSelect = {
  select: UploadSelect
  where?: UploadWhereInput
  orderBy?: UploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUploadArgsSelect<S extends undefined | boolean | FindManyUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUploadArgsWithSelect
  ? S['select']
  : true


export type UploadCreateArgs = {
  select?: UploadSelect
  data: UploadCreateInput
}

export type UploadCreateArgsWithSelect = {
  select: UploadSelect
  data: UploadCreateInput
}

type ExtractUploadCreateArgsSelect<S extends undefined | boolean | UploadCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadCreateArgsWithSelect
  ? S['select']
  : true


export type UploadUpdateArgs = {
  select?: UploadSelect
  data: UploadUpdateInput
  where: UploadWhereUniqueInput
}

export type UploadUpdateArgsWithSelect = {
  select: UploadSelect
  data: UploadUpdateInput
  where: UploadWhereUniqueInput
}

type ExtractUploadUpdateArgsSelect<S extends undefined | boolean | UploadUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadUpdateArgsWithSelect
  ? S['select']
  : true


export type UploadUpdateManyArgs = {
  select?: UploadSelect
  data: UploadUpdateManyMutationInput
  where?: UploadWhereInput
}

export type UploadUpdateManyArgsWithSelect = {
  select: UploadSelect
  data: UploadUpdateManyMutationInput
  where?: UploadWhereInput
}

type ExtractUploadUpdateManyArgsSelect<S extends undefined | boolean | UploadUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UploadUpsertArgs = {
  select?: UploadSelect
  where: UploadWhereUniqueInput
  create: UploadCreateInput
  update: UploadUpdateInput
}

export type UploadUpsertArgsWithSelect = {
  select: UploadSelect
  where: UploadWhereUniqueInput
  create: UploadCreateInput
  update: UploadUpdateInput
}

type ExtractUploadUpsertArgsSelect<S extends undefined | boolean | UploadUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadUpsertArgsWithSelect
  ? S['select']
  : true


export type UploadDeleteArgs = {
  select?: UploadSelect
  where: UploadWhereUniqueInput
}

export type UploadDeleteArgsWithSelect = {
  select: UploadSelect
  where: UploadWhereUniqueInput
}

type ExtractUploadDeleteArgsSelect<S extends undefined | boolean | UploadDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadDeleteArgsWithSelect
  ? S['select']
  : true


export type UploadDeleteManyArgs = {
  select?: UploadSelect
  where?: UploadWhereInput
}

export type UploadDeleteManyArgsWithSelect = {
  select: UploadSelect
  where?: UploadWhereInput
}

type ExtractUploadDeleteManyArgsSelect<S extends undefined | boolean | UploadDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UploadArgs = {
  select?: UploadSelect
}

export type UploadArgsWithSelect = {
  select: UploadSelect
}

type ExtractUploadArgsSelect<S extends undefined | boolean | UploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UploadArgsWithSelect
  ? S['select']
  : true



/**
 * Model User
 */

export type User = {
  id: number
  active: boolean
  admin: boolean
  approved: boolean
  approvedAt: string | null
  approvedById: number | null
  createdAt: string
  dateOfBirth: string | null
  firstSeenAt: string | null
  flagLevel: number
  groupLockedTrustLevel: number | null
  lastEmailedAt: string | null
  lastPostedAt: string | null
  lastSeenAt: string | null
  locale: string | null
  manualLockedTrustLevel: number | null
  moderator: boolean | null
  name: string | null
  passwordHash: string | null
  previousVisitAt: string | null
  primaryGroupId: number | null
  salt: string | null
  seenNotificationId: number
  silencedTill: string | null
  staged: boolean
  suspendedAt: string | null
  suspendedTill: string | null
  title: string | null
  trustLevel: number
  updatedAt: string
  uploadedAvatarId: number | null
  username: string
  usernameLower: string
  views: number
}

export type UserScalars = 'id' | 'active' | 'admin' | 'approved' | 'approvedAt' | 'approvedById' | 'createdAt' | 'dateOfBirth' | 'firstSeenAt' | 'flagLevel' | 'groupLockedTrustLevel' | 'lastEmailedAt' | 'lastPostedAt' | 'lastSeenAt' | 'locale' | 'manualLockedTrustLevel' | 'moderator' | 'name' | 'passwordHash' | 'previousVisitAt' | 'primaryGroupId' | 'salt' | 'seenNotificationId' | 'silencedTill' | 'staged' | 'suspendedAt' | 'suspendedTill' | 'title' | 'trustLevel' | 'updatedAt' | 'uploadedAvatarId' | 'username' | 'usernameLower' | 'views'


export type UserSelect = {
  id?: boolean
  active?: boolean
  admin?: boolean
  approved?: boolean
  approvedAt?: boolean
  approvedById?: boolean
  createdAt?: boolean
  dateOfBirth?: boolean
  firstSeenAt?: boolean
  flagLevel?: boolean
  groupLockedTrustLevel?: boolean
  lastEmailedAt?: boolean
  lastPostedAt?: boolean
  lastSeenAt?: boolean
  locale?: boolean
  manualLockedTrustLevel?: boolean
  moderator?: boolean
  name?: boolean
  passwordHash?: boolean
  previousVisitAt?: boolean
  primaryGroupId?: boolean
  salt?: boolean
  seenNotificationId?: boolean
  silencedTill?: boolean
  staged?: boolean
  suspendedAt?: boolean
  suspendedTill?: boolean
  title?: boolean
  trustLevel?: boolean
  updatedAt?: boolean
  uploadedAvatarId?: boolean
  username?: boolean
  usernameLower?: boolean
  views?: boolean
}

type UserDefault = {
  id: true
  active: true
  admin: true
  approved: true
  approvedAt: true
  approvedById: true
  createdAt: true
  dateOfBirth: true
  firstSeenAt: true
  flagLevel: true
  groupLockedTrustLevel: true
  lastEmailedAt: true
  lastPostedAt: true
  lastSeenAt: true
  locale: true
  manualLockedTrustLevel: true
  moderator: true
  name: true
  passwordHash: true
  previousVisitAt: true
  primaryGroupId: true
  salt: true
  seenNotificationId: true
  silencedTill: true
  staged: true
  suspendedAt: true
  suspendedTill: true
  title: true
  trustLevel: true
  updatedAt: true
  uploadedAvatarId: true
  username: true
  usernameLower: true
  views: true
}


type UserGetPayload<S extends boolean | UserSelect> = S extends true
  ? User
  : S extends UserSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserDefault, S>>]: P extends UserScalars
        ? User[P]
        : never
    }
   : never

export interface UserDelegate {
  <T extends FindManyUserArgs>(args?: Subset<T, FindManyUserArgs>): PromiseLike<Array<UserGetPayload<ExtractFindManyUserArgsSelect<T>>>>
  findOne<T extends FindOneUserArgs>(
    args: Subset<T, FindOneUserArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractFindOneUserArgsSelect<T>>> : UserClient<User>
  findMany<T extends FindManyUserArgs>(
    args?: Subset<T, FindManyUserArgs>
  ): PromiseLike<Array<UserGetPayload<ExtractFindManyUserArgsSelect<T>>>>
  create<T extends UserCreateArgs>(
    args: Subset<T, UserCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserCreateArgsSelect<T>>> : UserClient<User>
  update<T extends UserUpdateArgs>(
    args: Subset<T, UserUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserUpdateArgsSelect<T>>> : UserClient<User>
  updateMany<T extends UserUpdateManyArgs>(
    args: Subset<T, UserUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserUpdateManyArgsSelect<T>>> : UserClient<User>
  upsert<T extends UserUpsertArgs>(
    args: Subset<T, UserUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserUpsertArgsSelect<T>>> : UserClient<User>
  delete<T extends UserDeleteArgs>(
    args: Subset<T, UserDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserDeleteArgsSelect<T>>> : UserClient<User>
  deleteMany<T extends UserDeleteManyArgs>(
    args: Subset<T, UserDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserDeleteManyArgsSelect<T>>> : UserClient<User>
}
function UserDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserDelegate {
  const User = <T extends FindManyUserArgs>(args: Subset<T, FindManyUserArgs>) => new UserClient<PromiseLike<Array<UserGetPayload<ExtractFindManyUserArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'users', 'users', args, [])
  User.findOne = <T extends FindOneUserArgs>(args: Subset<T, FindOneUserArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'query',
    'user',
    'users.findOne',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'query',
    'user',
    'users.findOne',
    args,
    []
  )
  User.findMany = <T extends FindManyUserArgs>(args: Subset<T, FindManyUserArgs>) => new UserClient<PromiseLike<Array<UserGetPayload<ExtractFindManyUserArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'users',
    'users.findMany',
    args,
    []
  )
  User.create = <T extends UserCreateArgs>(args: Subset<T, UserCreateArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'createUser',
    'users.create',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'createUser',
    'users.create',
    args,
    []
  )
  User.update = <T extends UserUpdateArgs>(args: Subset<T, UserUpdateArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUser',
    'users.update',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'updateUser',
    'users.update',
    args,
    []
  )
  User.updateMany = <T extends UserUpdateManyArgs>(args: Subset<T, UserUpdateManyArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUsers',
    'users.updateMany',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUsers',
    'users.updateMany',
    args,
    []
  )
  User.upsert = <T extends UserUpsertArgs>(args: Subset<T, UserUpsertArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUser',
    'users.upsert',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUser',
    'users.upsert',
    args,
    []
  )
  User.delete = <T extends UserDeleteArgs>(args: Subset<T, UserDeleteArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUser',
    'users.delete',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUser',
    'users.delete',
    args,
    []
  )
  User.deleteMany = <T extends UserDeleteManyArgs>(args: Subset<T, UserDeleteManyArgs>) => args.select ? new UserClient<'select' extends keyof T ? PromiseLike<UserGetPayload<ExtractUserArgsSelect<T>>> : UserClient<User>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUsers',
    'users.deleteMany',
    args,
    []
  ) : new UserClient<User>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUsers',
    'users.deleteMany',
    args,
    []
  )
  return User as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'User').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'User').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserArgs = {
  select?: UserSelect
  where: UserWhereUniqueInput
}

export type FindOneUserArgsWithSelect = {
  select: UserSelect
  where: UserWhereUniqueInput
}

type ExtractFindOneUserArgsSelect<S extends undefined | boolean | FindOneUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserArgsWithSelect
  ? S['select']
  : true


export type FindManyUserArgs = {
  select?: UserSelect
  where?: UserWhereInput
  orderBy?: UserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserArgsWithSelect = {
  select: UserSelect
  where?: UserWhereInput
  orderBy?: UserOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserArgsSelect<S extends undefined | boolean | FindManyUserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserArgsWithSelect
  ? S['select']
  : true


export type UserCreateArgs = {
  select?: UserSelect
  data: UserCreateInput
}

export type UserCreateArgsWithSelect = {
  select: UserSelect
  data: UserCreateInput
}

type ExtractUserCreateArgsSelect<S extends undefined | boolean | UserCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCreateArgsWithSelect
  ? S['select']
  : true


export type UserUpdateArgs = {
  select?: UserSelect
  data: UserUpdateInput
  where: UserWhereUniqueInput
}

export type UserUpdateArgsWithSelect = {
  select: UserSelect
  data: UserUpdateInput
  where: UserWhereUniqueInput
}

type ExtractUserUpdateArgsSelect<S extends undefined | boolean | UserUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUpdateArgsWithSelect
  ? S['select']
  : true


export type UserUpdateManyArgs = {
  select?: UserSelect
  data: UserUpdateManyMutationInput
  where?: UserWhereInput
}

export type UserUpdateManyArgsWithSelect = {
  select: UserSelect
  data: UserUpdateManyMutationInput
  where?: UserWhereInput
}

type ExtractUserUpdateManyArgsSelect<S extends undefined | boolean | UserUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserUpsertArgs = {
  select?: UserSelect
  where: UserWhereUniqueInput
  create: UserCreateInput
  update: UserUpdateInput
}

export type UserUpsertArgsWithSelect = {
  select: UserSelect
  where: UserWhereUniqueInput
  create: UserCreateInput
  update: UserUpdateInput
}

type ExtractUserUpsertArgsSelect<S extends undefined | boolean | UserUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUpsertArgsWithSelect
  ? S['select']
  : true


export type UserDeleteArgs = {
  select?: UserSelect
  where: UserWhereUniqueInput
}

export type UserDeleteArgsWithSelect = {
  select: UserSelect
  where: UserWhereUniqueInput
}

type ExtractUserDeleteArgsSelect<S extends undefined | boolean | UserDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserDeleteArgsWithSelect
  ? S['select']
  : true


export type UserDeleteManyArgs = {
  select?: UserSelect
  where?: UserWhereInput
}

export type UserDeleteManyArgsWithSelect = {
  select: UserSelect
  where?: UserWhereInput
}

type ExtractUserDeleteManyArgsSelect<S extends undefined | boolean | UserDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserArgs = {
  select?: UserSelect
}

export type UserArgsWithSelect = {
  select: UserSelect
}

type ExtractUserArgsSelect<S extends undefined | boolean | UserArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserAction
 */

export type UserAction = {
  id: number
  actingUserId: number | null
  actionType: number
  createdAt: string
  queuedPostId: number | null
  targetPostId: number | null
  targetTopicId: number | null
  targetUserId: number | null
  updatedAt: string
  userId: number
}

export type UserActionScalars = 'id' | 'actingUserId' | 'actionType' | 'createdAt' | 'queuedPostId' | 'targetPostId' | 'targetTopicId' | 'targetUserId' | 'updatedAt' | 'userId'


export type UserActionSelect = {
  id?: boolean
  actingUserId?: boolean
  actionType?: boolean
  createdAt?: boolean
  queuedPostId?: boolean
  targetPostId?: boolean
  targetTopicId?: boolean
  targetUserId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserActionDefault = {
  id: true
  actingUserId: true
  actionType: true
  createdAt: true
  queuedPostId: true
  targetPostId: true
  targetTopicId: true
  targetUserId: true
  updatedAt: true
  userId: true
}


type UserActionGetPayload<S extends boolean | UserActionSelect> = S extends true
  ? UserAction
  : S extends UserActionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserActionDefault, S>>]: P extends UserActionScalars
        ? UserAction[P]
        : never
    }
   : never

export interface UserActionDelegate {
  <T extends FindManyUserActionArgs>(args?: Subset<T, FindManyUserActionArgs>): PromiseLike<Array<UserActionGetPayload<ExtractFindManyUserActionArgsSelect<T>>>>
  findOne<T extends FindOneUserActionArgs>(
    args: Subset<T, FindOneUserActionArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractFindOneUserActionArgsSelect<T>>> : UserActionClient<UserAction>
  findMany<T extends FindManyUserActionArgs>(
    args?: Subset<T, FindManyUserActionArgs>
  ): PromiseLike<Array<UserActionGetPayload<ExtractFindManyUserActionArgsSelect<T>>>>
  create<T extends UserActionCreateArgs>(
    args: Subset<T, UserActionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionCreateArgsSelect<T>>> : UserActionClient<UserAction>
  update<T extends UserActionUpdateArgs>(
    args: Subset<T, UserActionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionUpdateArgsSelect<T>>> : UserActionClient<UserAction>
  updateMany<T extends UserActionUpdateManyArgs>(
    args: Subset<T, UserActionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionUpdateManyArgsSelect<T>>> : UserActionClient<UserAction>
  upsert<T extends UserActionUpsertArgs>(
    args: Subset<T, UserActionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionUpsertArgsSelect<T>>> : UserActionClient<UserAction>
  delete<T extends UserActionDeleteArgs>(
    args: Subset<T, UserActionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionDeleteArgsSelect<T>>> : UserActionClient<UserAction>
  deleteMany<T extends UserActionDeleteManyArgs>(
    args: Subset<T, UserActionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionDeleteManyArgsSelect<T>>> : UserActionClient<UserAction>
}
function UserActionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserActionDelegate {
  const UserAction = <T extends FindManyUserActionArgs>(args: Subset<T, FindManyUserActionArgs>) => new UserActionClient<PromiseLike<Array<UserActionGetPayload<ExtractFindManyUserActionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userActions', 'userActions', args, [])
  UserAction.findOne = <T extends FindOneUserActionArgs>(args: Subset<T, FindOneUserActionArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'query',
    'userAction',
    'userActions.findOne',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'query',
    'userAction',
    'userActions.findOne',
    args,
    []
  )
  UserAction.findMany = <T extends FindManyUserActionArgs>(args: Subset<T, FindManyUserActionArgs>) => new UserActionClient<PromiseLike<Array<UserActionGetPayload<ExtractFindManyUserActionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userActions',
    'userActions.findMany',
    args,
    []
  )
  UserAction.create = <T extends UserActionCreateArgs>(args: Subset<T, UserActionCreateArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAction',
    'userActions.create',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAction',
    'userActions.create',
    args,
    []
  )
  UserAction.update = <T extends UserActionUpdateArgs>(args: Subset<T, UserActionUpdateArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAction',
    'userActions.update',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAction',
    'userActions.update',
    args,
    []
  )
  UserAction.updateMany = <T extends UserActionUpdateManyArgs>(args: Subset<T, UserActionUpdateManyArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserActions',
    'userActions.updateMany',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserActions',
    'userActions.updateMany',
    args,
    []
  )
  UserAction.upsert = <T extends UserActionUpsertArgs>(args: Subset<T, UserActionUpsertArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAction',
    'userActions.upsert',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAction',
    'userActions.upsert',
    args,
    []
  )
  UserAction.delete = <T extends UserActionDeleteArgs>(args: Subset<T, UserActionDeleteArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAction',
    'userActions.delete',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAction',
    'userActions.delete',
    args,
    []
  )
  UserAction.deleteMany = <T extends UserActionDeleteManyArgs>(args: Subset<T, UserActionDeleteManyArgs>) => args.select ? new UserActionClient<'select' extends keyof T ? PromiseLike<UserActionGetPayload<ExtractUserActionArgsSelect<T>>> : UserActionClient<UserAction>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserActions',
    'userActions.deleteMany',
    args,
    []
  ) : new UserActionClient<UserAction>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserActions',
    'userActions.deleteMany',
    args,
    []
  )
  return UserAction as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserActionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserActionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAction').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAction').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserActionArgs = {
  select?: UserActionSelect
  where: UserActionWhereUniqueInput
}

export type FindOneUserActionArgsWithSelect = {
  select: UserActionSelect
  where: UserActionWhereUniqueInput
}

type ExtractFindOneUserActionArgsSelect<S extends undefined | boolean | FindOneUserActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserActionArgsWithSelect
  ? S['select']
  : true


export type FindManyUserActionArgs = {
  select?: UserActionSelect
  where?: UserActionWhereInput
  orderBy?: UserActionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserActionArgsWithSelect = {
  select: UserActionSelect
  where?: UserActionWhereInput
  orderBy?: UserActionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserActionArgsSelect<S extends undefined | boolean | FindManyUserActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserActionArgsWithSelect
  ? S['select']
  : true


export type UserActionCreateArgs = {
  select?: UserActionSelect
  data: UserActionCreateInput
}

export type UserActionCreateArgsWithSelect = {
  select: UserActionSelect
  data: UserActionCreateInput
}

type ExtractUserActionCreateArgsSelect<S extends undefined | boolean | UserActionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionCreateArgsWithSelect
  ? S['select']
  : true


export type UserActionUpdateArgs = {
  select?: UserActionSelect
  data: UserActionUpdateInput
  where: UserActionWhereUniqueInput
}

export type UserActionUpdateArgsWithSelect = {
  select: UserActionSelect
  data: UserActionUpdateInput
  where: UserActionWhereUniqueInput
}

type ExtractUserActionUpdateArgsSelect<S extends undefined | boolean | UserActionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionUpdateArgsWithSelect
  ? S['select']
  : true


export type UserActionUpdateManyArgs = {
  select?: UserActionSelect
  data: UserActionUpdateManyMutationInput
  where?: UserActionWhereInput
}

export type UserActionUpdateManyArgsWithSelect = {
  select: UserActionSelect
  data: UserActionUpdateManyMutationInput
  where?: UserActionWhereInput
}

type ExtractUserActionUpdateManyArgsSelect<S extends undefined | boolean | UserActionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserActionUpsertArgs = {
  select?: UserActionSelect
  where: UserActionWhereUniqueInput
  create: UserActionCreateInput
  update: UserActionUpdateInput
}

export type UserActionUpsertArgsWithSelect = {
  select: UserActionSelect
  where: UserActionWhereUniqueInput
  create: UserActionCreateInput
  update: UserActionUpdateInput
}

type ExtractUserActionUpsertArgsSelect<S extends undefined | boolean | UserActionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionUpsertArgsWithSelect
  ? S['select']
  : true


export type UserActionDeleteArgs = {
  select?: UserActionSelect
  where: UserActionWhereUniqueInput
}

export type UserActionDeleteArgsWithSelect = {
  select: UserActionSelect
  where: UserActionWhereUniqueInput
}

type ExtractUserActionDeleteArgsSelect<S extends undefined | boolean | UserActionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionDeleteArgsWithSelect
  ? S['select']
  : true


export type UserActionDeleteManyArgs = {
  select?: UserActionSelect
  where?: UserActionWhereInput
}

export type UserActionDeleteManyArgsWithSelect = {
  select: UserActionSelect
  where?: UserActionWhereInput
}

type ExtractUserActionDeleteManyArgsSelect<S extends undefined | boolean | UserActionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserActionArgs = {
  select?: UserActionSelect
}

export type UserActionArgsWithSelect = {
  select: UserActionSelect
}

type ExtractUserActionArgsSelect<S extends undefined | boolean | UserActionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserActionArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserApiKey
 */

export type UserApiKey = {
  id: number
  applicationName: string
  clientId: string
  createdAt: string | null
  key: string
  lastUsedAt: string
  pushUrl: string | null
  revokedAt: string | null
  scopes: string
  updatedAt: string | null
  userId: number
}

export type UserApiKeyScalars = 'id' | 'applicationName' | 'clientId' | 'createdAt' | 'key' | 'lastUsedAt' | 'pushUrl' | 'revokedAt' | 'scopes' | 'updatedAt' | 'userId'


export type UserApiKeySelect = {
  id?: boolean
  applicationName?: boolean
  clientId?: boolean
  createdAt?: boolean
  key?: boolean
  lastUsedAt?: boolean
  pushUrl?: boolean
  revokedAt?: boolean
  scopes?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserApiKeyDefault = {
  id: true
  applicationName: true
  clientId: true
  createdAt: true
  key: true
  lastUsedAt: true
  pushUrl: true
  revokedAt: true
  scopes: true
  updatedAt: true
  userId: true
}


type UserApiKeyGetPayload<S extends boolean | UserApiKeySelect> = S extends true
  ? UserApiKey
  : S extends UserApiKeySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserApiKeyDefault, S>>]: P extends UserApiKeyScalars
        ? UserApiKey[P]
        : never
    }
   : never

export interface UserApiKeyDelegate {
  <T extends FindManyUserApiKeyArgs>(args?: Subset<T, FindManyUserApiKeyArgs>): PromiseLike<Array<UserApiKeyGetPayload<ExtractFindManyUserApiKeyArgsSelect<T>>>>
  findOne<T extends FindOneUserApiKeyArgs>(
    args: Subset<T, FindOneUserApiKeyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractFindOneUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  findMany<T extends FindManyUserApiKeyArgs>(
    args?: Subset<T, FindManyUserApiKeyArgs>
  ): PromiseLike<Array<UserApiKeyGetPayload<ExtractFindManyUserApiKeyArgsSelect<T>>>>
  create<T extends UserApiKeyCreateArgs>(
    args: Subset<T, UserApiKeyCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyCreateArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  update<T extends UserApiKeyUpdateArgs>(
    args: Subset<T, UserApiKeyUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyUpdateArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  updateMany<T extends UserApiKeyUpdateManyArgs>(
    args: Subset<T, UserApiKeyUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyUpdateManyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  upsert<T extends UserApiKeyUpsertArgs>(
    args: Subset<T, UserApiKeyUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyUpsertArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  delete<T extends UserApiKeyDeleteArgs>(
    args: Subset<T, UserApiKeyDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyDeleteArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
  deleteMany<T extends UserApiKeyDeleteManyArgs>(
    args: Subset<T, UserApiKeyDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyDeleteManyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>
}
function UserApiKeyDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserApiKeyDelegate {
  const UserApiKey = <T extends FindManyUserApiKeyArgs>(args: Subset<T, FindManyUserApiKeyArgs>) => new UserApiKeyClient<PromiseLike<Array<UserApiKeyGetPayload<ExtractFindManyUserApiKeyArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userApiKeys', 'userApiKeys', args, [])
  UserApiKey.findOne = <T extends FindOneUserApiKeyArgs>(args: Subset<T, FindOneUserApiKeyArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'query',
    'userApiKey',
    'userApiKeys.findOne',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'query',
    'userApiKey',
    'userApiKeys.findOne',
    args,
    []
  )
  UserApiKey.findMany = <T extends FindManyUserApiKeyArgs>(args: Subset<T, FindManyUserApiKeyArgs>) => new UserApiKeyClient<PromiseLike<Array<UserApiKeyGetPayload<ExtractFindManyUserApiKeyArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userApiKeys',
    'userApiKeys.findMany',
    args,
    []
  )
  UserApiKey.create = <T extends UserApiKeyCreateArgs>(args: Subset<T, UserApiKeyCreateArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserApiKey',
    'userApiKeys.create',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'createUserApiKey',
    'userApiKeys.create',
    args,
    []
  )
  UserApiKey.update = <T extends UserApiKeyUpdateArgs>(args: Subset<T, UserApiKeyUpdateArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserApiKey',
    'userApiKeys.update',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserApiKey',
    'userApiKeys.update',
    args,
    []
  )
  UserApiKey.updateMany = <T extends UserApiKeyUpdateManyArgs>(args: Subset<T, UserApiKeyUpdateManyArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserApiKeys',
    'userApiKeys.updateMany',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserApiKeys',
    'userApiKeys.updateMany',
    args,
    []
  )
  UserApiKey.upsert = <T extends UserApiKeyUpsertArgs>(args: Subset<T, UserApiKeyUpsertArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserApiKey',
    'userApiKeys.upsert',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserApiKey',
    'userApiKeys.upsert',
    args,
    []
  )
  UserApiKey.delete = <T extends UserApiKeyDeleteArgs>(args: Subset<T, UserApiKeyDeleteArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserApiKey',
    'userApiKeys.delete',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserApiKey',
    'userApiKeys.delete',
    args,
    []
  )
  UserApiKey.deleteMany = <T extends UserApiKeyDeleteManyArgs>(args: Subset<T, UserApiKeyDeleteManyArgs>) => args.select ? new UserApiKeyClient<'select' extends keyof T ? PromiseLike<UserApiKeyGetPayload<ExtractUserApiKeyArgsSelect<T>>> : UserApiKeyClient<UserApiKey>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserApiKeys',
    'userApiKeys.deleteMany',
    args,
    []
  ) : new UserApiKeyClient<UserApiKey>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserApiKeys',
    'userApiKeys.deleteMany',
    args,
    []
  )
  return UserApiKey as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserApiKeyClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserApiKeyArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserApiKey').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserApiKey').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserApiKeyArgs = {
  select?: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
}

export type FindOneUserApiKeyArgsWithSelect = {
  select: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
}

type ExtractFindOneUserApiKeyArgsSelect<S extends undefined | boolean | FindOneUserApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserApiKeyArgsWithSelect
  ? S['select']
  : true


export type FindManyUserApiKeyArgs = {
  select?: UserApiKeySelect
  where?: UserApiKeyWhereInput
  orderBy?: UserApiKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserApiKeyArgsWithSelect = {
  select: UserApiKeySelect
  where?: UserApiKeyWhereInput
  orderBy?: UserApiKeyOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserApiKeyArgsSelect<S extends undefined | boolean | FindManyUserApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserApiKeyArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyCreateArgs = {
  select?: UserApiKeySelect
  data: UserApiKeyCreateInput
}

export type UserApiKeyCreateArgsWithSelect = {
  select: UserApiKeySelect
  data: UserApiKeyCreateInput
}

type ExtractUserApiKeyCreateArgsSelect<S extends undefined | boolean | UserApiKeyCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyCreateArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyUpdateArgs = {
  select?: UserApiKeySelect
  data: UserApiKeyUpdateInput
  where: UserApiKeyWhereUniqueInput
}

export type UserApiKeyUpdateArgsWithSelect = {
  select: UserApiKeySelect
  data: UserApiKeyUpdateInput
  where: UserApiKeyWhereUniqueInput
}

type ExtractUserApiKeyUpdateArgsSelect<S extends undefined | boolean | UserApiKeyUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyUpdateArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyUpdateManyArgs = {
  select?: UserApiKeySelect
  data: UserApiKeyUpdateManyMutationInput
  where?: UserApiKeyWhereInput
}

export type UserApiKeyUpdateManyArgsWithSelect = {
  select: UserApiKeySelect
  data: UserApiKeyUpdateManyMutationInput
  where?: UserApiKeyWhereInput
}

type ExtractUserApiKeyUpdateManyArgsSelect<S extends undefined | boolean | UserApiKeyUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyUpsertArgs = {
  select?: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
  create: UserApiKeyCreateInput
  update: UserApiKeyUpdateInput
}

export type UserApiKeyUpsertArgsWithSelect = {
  select: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
  create: UserApiKeyCreateInput
  update: UserApiKeyUpdateInput
}

type ExtractUserApiKeyUpsertArgsSelect<S extends undefined | boolean | UserApiKeyUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyUpsertArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyDeleteArgs = {
  select?: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
}

export type UserApiKeyDeleteArgsWithSelect = {
  select: UserApiKeySelect
  where: UserApiKeyWhereUniqueInput
}

type ExtractUserApiKeyDeleteArgsSelect<S extends undefined | boolean | UserApiKeyDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyDeleteArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyDeleteManyArgs = {
  select?: UserApiKeySelect
  where?: UserApiKeyWhereInput
}

export type UserApiKeyDeleteManyArgsWithSelect = {
  select: UserApiKeySelect
  where?: UserApiKeyWhereInput
}

type ExtractUserApiKeyDeleteManyArgsSelect<S extends undefined | boolean | UserApiKeyDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserApiKeyArgs = {
  select?: UserApiKeySelect
}

export type UserApiKeyArgsWithSelect = {
  select: UserApiKeySelect
}

type ExtractUserApiKeyArgsSelect<S extends undefined | boolean | UserApiKeyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserApiKeyArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserArchivedMessage
 */

export type UserArchivedMessage = {
  id: number
  createdAt: string | null
  topicId: number
  updatedAt: string | null
  userId: number
}

export type UserArchivedMessageScalars = 'id' | 'createdAt' | 'topicId' | 'updatedAt' | 'userId'


export type UserArchivedMessageSelect = {
  id?: boolean
  createdAt?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserArchivedMessageDefault = {
  id: true
  createdAt: true
  topicId: true
  updatedAt: true
  userId: true
}


type UserArchivedMessageGetPayload<S extends boolean | UserArchivedMessageSelect> = S extends true
  ? UserArchivedMessage
  : S extends UserArchivedMessageSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserArchivedMessageDefault, S>>]: P extends UserArchivedMessageScalars
        ? UserArchivedMessage[P]
        : never
    }
   : never

export interface UserArchivedMessageDelegate {
  <T extends FindManyUserArchivedMessageArgs>(args?: Subset<T, FindManyUserArchivedMessageArgs>): PromiseLike<Array<UserArchivedMessageGetPayload<ExtractFindManyUserArchivedMessageArgsSelect<T>>>>
  findOne<T extends FindOneUserArchivedMessageArgs>(
    args: Subset<T, FindOneUserArchivedMessageArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractFindOneUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  findMany<T extends FindManyUserArchivedMessageArgs>(
    args?: Subset<T, FindManyUserArchivedMessageArgs>
  ): PromiseLike<Array<UserArchivedMessageGetPayload<ExtractFindManyUserArchivedMessageArgsSelect<T>>>>
  create<T extends UserArchivedMessageCreateArgs>(
    args: Subset<T, UserArchivedMessageCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageCreateArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  update<T extends UserArchivedMessageUpdateArgs>(
    args: Subset<T, UserArchivedMessageUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageUpdateArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  updateMany<T extends UserArchivedMessageUpdateManyArgs>(
    args: Subset<T, UserArchivedMessageUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageUpdateManyArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  upsert<T extends UserArchivedMessageUpsertArgs>(
    args: Subset<T, UserArchivedMessageUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageUpsertArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  delete<T extends UserArchivedMessageDeleteArgs>(
    args: Subset<T, UserArchivedMessageDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageDeleteArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
  deleteMany<T extends UserArchivedMessageDeleteManyArgs>(
    args: Subset<T, UserArchivedMessageDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageDeleteManyArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>
}
function UserArchivedMessageDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserArchivedMessageDelegate {
  const UserArchivedMessage = <T extends FindManyUserArchivedMessageArgs>(args: Subset<T, FindManyUserArchivedMessageArgs>) => new UserArchivedMessageClient<PromiseLike<Array<UserArchivedMessageGetPayload<ExtractFindManyUserArchivedMessageArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userArchivedMessages', 'userArchivedMessages', args, [])
  UserArchivedMessage.findOne = <T extends FindOneUserArchivedMessageArgs>(args: Subset<T, FindOneUserArchivedMessageArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'query',
    'userArchivedMessage',
    'userArchivedMessages.findOne',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'query',
    'userArchivedMessage',
    'userArchivedMessages.findOne',
    args,
    []
  )
  UserArchivedMessage.findMany = <T extends FindManyUserArchivedMessageArgs>(args: Subset<T, FindManyUserArchivedMessageArgs>) => new UserArchivedMessageClient<PromiseLike<Array<UserArchivedMessageGetPayload<ExtractFindManyUserArchivedMessageArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userArchivedMessages',
    'userArchivedMessages.findMany',
    args,
    []
  )
  UserArchivedMessage.create = <T extends UserArchivedMessageCreateArgs>(args: Subset<T, UserArchivedMessageCreateArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserArchivedMessage',
    'userArchivedMessages.create',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'createUserArchivedMessage',
    'userArchivedMessages.create',
    args,
    []
  )
  UserArchivedMessage.update = <T extends UserArchivedMessageUpdateArgs>(args: Subset<T, UserArchivedMessageUpdateArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserArchivedMessage',
    'userArchivedMessages.update',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserArchivedMessage',
    'userArchivedMessages.update',
    args,
    []
  )
  UserArchivedMessage.updateMany = <T extends UserArchivedMessageUpdateManyArgs>(args: Subset<T, UserArchivedMessageUpdateManyArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserArchivedMessages',
    'userArchivedMessages.updateMany',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserArchivedMessages',
    'userArchivedMessages.updateMany',
    args,
    []
  )
  UserArchivedMessage.upsert = <T extends UserArchivedMessageUpsertArgs>(args: Subset<T, UserArchivedMessageUpsertArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserArchivedMessage',
    'userArchivedMessages.upsert',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserArchivedMessage',
    'userArchivedMessages.upsert',
    args,
    []
  )
  UserArchivedMessage.delete = <T extends UserArchivedMessageDeleteArgs>(args: Subset<T, UserArchivedMessageDeleteArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserArchivedMessage',
    'userArchivedMessages.delete',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserArchivedMessage',
    'userArchivedMessages.delete',
    args,
    []
  )
  UserArchivedMessage.deleteMany = <T extends UserArchivedMessageDeleteManyArgs>(args: Subset<T, UserArchivedMessageDeleteManyArgs>) => args.select ? new UserArchivedMessageClient<'select' extends keyof T ? PromiseLike<UserArchivedMessageGetPayload<ExtractUserArchivedMessageArgsSelect<T>>> : UserArchivedMessageClient<UserArchivedMessage>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserArchivedMessages',
    'userArchivedMessages.deleteMany',
    args,
    []
  ) : new UserArchivedMessageClient<UserArchivedMessage>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserArchivedMessages',
    'userArchivedMessages.deleteMany',
    args,
    []
  )
  return UserArchivedMessage as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserArchivedMessageClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserArchivedMessageArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserArchivedMessage').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserArchivedMessage').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserArchivedMessageArgs = {
  select?: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
}

export type FindOneUserArchivedMessageArgsWithSelect = {
  select: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
}

type ExtractFindOneUserArchivedMessageArgsSelect<S extends undefined | boolean | FindOneUserArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserArchivedMessageArgsWithSelect
  ? S['select']
  : true


export type FindManyUserArchivedMessageArgs = {
  select?: UserArchivedMessageSelect
  where?: UserArchivedMessageWhereInput
  orderBy?: UserArchivedMessageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserArchivedMessageArgsWithSelect = {
  select: UserArchivedMessageSelect
  where?: UserArchivedMessageWhereInput
  orderBy?: UserArchivedMessageOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserArchivedMessageArgsSelect<S extends undefined | boolean | FindManyUserArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserArchivedMessageArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageCreateArgs = {
  select?: UserArchivedMessageSelect
  data: UserArchivedMessageCreateInput
}

export type UserArchivedMessageCreateArgsWithSelect = {
  select: UserArchivedMessageSelect
  data: UserArchivedMessageCreateInput
}

type ExtractUserArchivedMessageCreateArgsSelect<S extends undefined | boolean | UserArchivedMessageCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageCreateArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageUpdateArgs = {
  select?: UserArchivedMessageSelect
  data: UserArchivedMessageUpdateInput
  where: UserArchivedMessageWhereUniqueInput
}

export type UserArchivedMessageUpdateArgsWithSelect = {
  select: UserArchivedMessageSelect
  data: UserArchivedMessageUpdateInput
  where: UserArchivedMessageWhereUniqueInput
}

type ExtractUserArchivedMessageUpdateArgsSelect<S extends undefined | boolean | UserArchivedMessageUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageUpdateArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageUpdateManyArgs = {
  select?: UserArchivedMessageSelect
  data: UserArchivedMessageUpdateManyMutationInput
  where?: UserArchivedMessageWhereInput
}

export type UserArchivedMessageUpdateManyArgsWithSelect = {
  select: UserArchivedMessageSelect
  data: UserArchivedMessageUpdateManyMutationInput
  where?: UserArchivedMessageWhereInput
}

type ExtractUserArchivedMessageUpdateManyArgsSelect<S extends undefined | boolean | UserArchivedMessageUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageUpsertArgs = {
  select?: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
  create: UserArchivedMessageCreateInput
  update: UserArchivedMessageUpdateInput
}

export type UserArchivedMessageUpsertArgsWithSelect = {
  select: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
  create: UserArchivedMessageCreateInput
  update: UserArchivedMessageUpdateInput
}

type ExtractUserArchivedMessageUpsertArgsSelect<S extends undefined | boolean | UserArchivedMessageUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageUpsertArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageDeleteArgs = {
  select?: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
}

export type UserArchivedMessageDeleteArgsWithSelect = {
  select: UserArchivedMessageSelect
  where: UserArchivedMessageWhereUniqueInput
}

type ExtractUserArchivedMessageDeleteArgsSelect<S extends undefined | boolean | UserArchivedMessageDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageDeleteArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageDeleteManyArgs = {
  select?: UserArchivedMessageSelect
  where?: UserArchivedMessageWhereInput
}

export type UserArchivedMessageDeleteManyArgsWithSelect = {
  select: UserArchivedMessageSelect
  where?: UserArchivedMessageWhereInput
}

type ExtractUserArchivedMessageDeleteManyArgsSelect<S extends undefined | boolean | UserArchivedMessageDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserArchivedMessageArgs = {
  select?: UserArchivedMessageSelect
}

export type UserArchivedMessageArgsWithSelect = {
  select: UserArchivedMessageSelect
}

type ExtractUserArchivedMessageArgsSelect<S extends undefined | boolean | UserArchivedMessageArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserArchivedMessageArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserAuthToken
 */

export type UserAuthToken = {
  id: number
  authToken: string
  authTokenSeen: boolean
  createdAt: string | null
  prevAuthToken: string
  rotatedAt: string
  seenAt: string | null
  updatedAt: string | null
  userAgent: string | null
  userId: number
}

export type UserAuthTokenScalars = 'id' | 'authToken' | 'authTokenSeen' | 'createdAt' | 'prevAuthToken' | 'rotatedAt' | 'seenAt' | 'updatedAt' | 'userAgent' | 'userId'


export type UserAuthTokenSelect = {
  id?: boolean
  authToken?: boolean
  authTokenSeen?: boolean
  createdAt?: boolean
  prevAuthToken?: boolean
  rotatedAt?: boolean
  seenAt?: boolean
  updatedAt?: boolean
  userAgent?: boolean
  userId?: boolean
}

type UserAuthTokenDefault = {
  id: true
  authToken: true
  authTokenSeen: true
  createdAt: true
  prevAuthToken: true
  rotatedAt: true
  seenAt: true
  updatedAt: true
  userAgent: true
  userId: true
}


type UserAuthTokenGetPayload<S extends boolean | UserAuthTokenSelect> = S extends true
  ? UserAuthToken
  : S extends UserAuthTokenSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserAuthTokenDefault, S>>]: P extends UserAuthTokenScalars
        ? UserAuthToken[P]
        : never
    }
   : never

export interface UserAuthTokenDelegate {
  <T extends FindManyUserAuthTokenArgs>(args?: Subset<T, FindManyUserAuthTokenArgs>): PromiseLike<Array<UserAuthTokenGetPayload<ExtractFindManyUserAuthTokenArgsSelect<T>>>>
  findOne<T extends FindOneUserAuthTokenArgs>(
    args: Subset<T, FindOneUserAuthTokenArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractFindOneUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  findMany<T extends FindManyUserAuthTokenArgs>(
    args?: Subset<T, FindManyUserAuthTokenArgs>
  ): PromiseLike<Array<UserAuthTokenGetPayload<ExtractFindManyUserAuthTokenArgsSelect<T>>>>
  create<T extends UserAuthTokenCreateArgs>(
    args: Subset<T, UserAuthTokenCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenCreateArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  update<T extends UserAuthTokenUpdateArgs>(
    args: Subset<T, UserAuthTokenUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenUpdateArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  updateMany<T extends UserAuthTokenUpdateManyArgs>(
    args: Subset<T, UserAuthTokenUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenUpdateManyArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  upsert<T extends UserAuthTokenUpsertArgs>(
    args: Subset<T, UserAuthTokenUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenUpsertArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  delete<T extends UserAuthTokenDeleteArgs>(
    args: Subset<T, UserAuthTokenDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenDeleteArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
  deleteMany<T extends UserAuthTokenDeleteManyArgs>(
    args: Subset<T, UserAuthTokenDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenDeleteManyArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>
}
function UserAuthTokenDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserAuthTokenDelegate {
  const UserAuthToken = <T extends FindManyUserAuthTokenArgs>(args: Subset<T, FindManyUserAuthTokenArgs>) => new UserAuthTokenClient<PromiseLike<Array<UserAuthTokenGetPayload<ExtractFindManyUserAuthTokenArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userAuthTokens', 'userAuthTokens', args, [])
  UserAuthToken.findOne = <T extends FindOneUserAuthTokenArgs>(args: Subset<T, FindOneUserAuthTokenArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'query',
    'userAuthToken',
    'userAuthTokens.findOne',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'query',
    'userAuthToken',
    'userAuthTokens.findOne',
    args,
    []
  )
  UserAuthToken.findMany = <T extends FindManyUserAuthTokenArgs>(args: Subset<T, FindManyUserAuthTokenArgs>) => new UserAuthTokenClient<PromiseLike<Array<UserAuthTokenGetPayload<ExtractFindManyUserAuthTokenArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userAuthTokens',
    'userAuthTokens.findMany',
    args,
    []
  )
  UserAuthToken.create = <T extends UserAuthTokenCreateArgs>(args: Subset<T, UserAuthTokenCreateArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAuthToken',
    'userAuthTokens.create',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAuthToken',
    'userAuthTokens.create',
    args,
    []
  )
  UserAuthToken.update = <T extends UserAuthTokenUpdateArgs>(args: Subset<T, UserAuthTokenUpdateArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAuthToken',
    'userAuthTokens.update',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAuthToken',
    'userAuthTokens.update',
    args,
    []
  )
  UserAuthToken.updateMany = <T extends UserAuthTokenUpdateManyArgs>(args: Subset<T, UserAuthTokenUpdateManyArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAuthTokens',
    'userAuthTokens.updateMany',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAuthTokens',
    'userAuthTokens.updateMany',
    args,
    []
  )
  UserAuthToken.upsert = <T extends UserAuthTokenUpsertArgs>(args: Subset<T, UserAuthTokenUpsertArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAuthToken',
    'userAuthTokens.upsert',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAuthToken',
    'userAuthTokens.upsert',
    args,
    []
  )
  UserAuthToken.delete = <T extends UserAuthTokenDeleteArgs>(args: Subset<T, UserAuthTokenDeleteArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAuthToken',
    'userAuthTokens.delete',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAuthToken',
    'userAuthTokens.delete',
    args,
    []
  )
  UserAuthToken.deleteMany = <T extends UserAuthTokenDeleteManyArgs>(args: Subset<T, UserAuthTokenDeleteManyArgs>) => args.select ? new UserAuthTokenClient<'select' extends keyof T ? PromiseLike<UserAuthTokenGetPayload<ExtractUserAuthTokenArgsSelect<T>>> : UserAuthTokenClient<UserAuthToken>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAuthTokens',
    'userAuthTokens.deleteMany',
    args,
    []
  ) : new UserAuthTokenClient<UserAuthToken>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAuthTokens',
    'userAuthTokens.deleteMany',
    args,
    []
  )
  return UserAuthToken as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserAuthTokenClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserAuthTokenArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAuthToken').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAuthToken').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserAuthTokenArgs = {
  select?: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
}

export type FindOneUserAuthTokenArgsWithSelect = {
  select: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
}

type ExtractFindOneUserAuthTokenArgsSelect<S extends undefined | boolean | FindOneUserAuthTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserAuthTokenArgsWithSelect
  ? S['select']
  : true


export type FindManyUserAuthTokenArgs = {
  select?: UserAuthTokenSelect
  where?: UserAuthTokenWhereInput
  orderBy?: UserAuthTokenOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserAuthTokenArgsWithSelect = {
  select: UserAuthTokenSelect
  where?: UserAuthTokenWhereInput
  orderBy?: UserAuthTokenOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserAuthTokenArgsSelect<S extends undefined | boolean | FindManyUserAuthTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserAuthTokenArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenCreateArgs = {
  select?: UserAuthTokenSelect
  data: UserAuthTokenCreateInput
}

export type UserAuthTokenCreateArgsWithSelect = {
  select: UserAuthTokenSelect
  data: UserAuthTokenCreateInput
}

type ExtractUserAuthTokenCreateArgsSelect<S extends undefined | boolean | UserAuthTokenCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenCreateArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenUpdateArgs = {
  select?: UserAuthTokenSelect
  data: UserAuthTokenUpdateInput
  where: UserAuthTokenWhereUniqueInput
}

export type UserAuthTokenUpdateArgsWithSelect = {
  select: UserAuthTokenSelect
  data: UserAuthTokenUpdateInput
  where: UserAuthTokenWhereUniqueInput
}

type ExtractUserAuthTokenUpdateArgsSelect<S extends undefined | boolean | UserAuthTokenUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenUpdateArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenUpdateManyArgs = {
  select?: UserAuthTokenSelect
  data: UserAuthTokenUpdateManyMutationInput
  where?: UserAuthTokenWhereInput
}

export type UserAuthTokenUpdateManyArgsWithSelect = {
  select: UserAuthTokenSelect
  data: UserAuthTokenUpdateManyMutationInput
  where?: UserAuthTokenWhereInput
}

type ExtractUserAuthTokenUpdateManyArgsSelect<S extends undefined | boolean | UserAuthTokenUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenUpsertArgs = {
  select?: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
  create: UserAuthTokenCreateInput
  update: UserAuthTokenUpdateInput
}

export type UserAuthTokenUpsertArgsWithSelect = {
  select: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
  create: UserAuthTokenCreateInput
  update: UserAuthTokenUpdateInput
}

type ExtractUserAuthTokenUpsertArgsSelect<S extends undefined | boolean | UserAuthTokenUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenUpsertArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenDeleteArgs = {
  select?: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
}

export type UserAuthTokenDeleteArgsWithSelect = {
  select: UserAuthTokenSelect
  where: UserAuthTokenWhereUniqueInput
}

type ExtractUserAuthTokenDeleteArgsSelect<S extends undefined | boolean | UserAuthTokenDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenDeleteArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenDeleteManyArgs = {
  select?: UserAuthTokenSelect
  where?: UserAuthTokenWhereInput
}

export type UserAuthTokenDeleteManyArgsWithSelect = {
  select: UserAuthTokenSelect
  where?: UserAuthTokenWhereInput
}

type ExtractUserAuthTokenDeleteManyArgsSelect<S extends undefined | boolean | UserAuthTokenDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenArgs = {
  select?: UserAuthTokenSelect
}

export type UserAuthTokenArgsWithSelect = {
  select: UserAuthTokenSelect
}

type ExtractUserAuthTokenArgsSelect<S extends undefined | boolean | UserAuthTokenArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserAuthTokenLog
 */

export type UserAuthTokenLog = {
  id: number
  action: string
  authToken: string | null
  createdAt: string | null
  path: string | null
  userAgent: string | null
  userAuthTokenId: number | null
  userId: number | null
}

export type UserAuthTokenLogScalars = 'id' | 'action' | 'authToken' | 'createdAt' | 'path' | 'userAgent' | 'userAuthTokenId' | 'userId'


export type UserAuthTokenLogSelect = {
  id?: boolean
  action?: boolean
  authToken?: boolean
  createdAt?: boolean
  path?: boolean
  userAgent?: boolean
  userAuthTokenId?: boolean
  userId?: boolean
}

type UserAuthTokenLogDefault = {
  id: true
  action: true
  authToken: true
  createdAt: true
  path: true
  userAgent: true
  userAuthTokenId: true
  userId: true
}


type UserAuthTokenLogGetPayload<S extends boolean | UserAuthTokenLogSelect> = S extends true
  ? UserAuthTokenLog
  : S extends UserAuthTokenLogSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserAuthTokenLogDefault, S>>]: P extends UserAuthTokenLogScalars
        ? UserAuthTokenLog[P]
        : never
    }
   : never

export interface UserAuthTokenLogDelegate {
  <T extends FindManyUserAuthTokenLogArgs>(args?: Subset<T, FindManyUserAuthTokenLogArgs>): PromiseLike<Array<UserAuthTokenLogGetPayload<ExtractFindManyUserAuthTokenLogArgsSelect<T>>>>
  findOne<T extends FindOneUserAuthTokenLogArgs>(
    args: Subset<T, FindOneUserAuthTokenLogArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractFindOneUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  findMany<T extends FindManyUserAuthTokenLogArgs>(
    args?: Subset<T, FindManyUserAuthTokenLogArgs>
  ): PromiseLike<Array<UserAuthTokenLogGetPayload<ExtractFindManyUserAuthTokenLogArgsSelect<T>>>>
  create<T extends UserAuthTokenLogCreateArgs>(
    args: Subset<T, UserAuthTokenLogCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogCreateArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  update<T extends UserAuthTokenLogUpdateArgs>(
    args: Subset<T, UserAuthTokenLogUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogUpdateArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  updateMany<T extends UserAuthTokenLogUpdateManyArgs>(
    args: Subset<T, UserAuthTokenLogUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogUpdateManyArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  upsert<T extends UserAuthTokenLogUpsertArgs>(
    args: Subset<T, UserAuthTokenLogUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogUpsertArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  delete<T extends UserAuthTokenLogDeleteArgs>(
    args: Subset<T, UserAuthTokenLogDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogDeleteArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
  deleteMany<T extends UserAuthTokenLogDeleteManyArgs>(
    args: Subset<T, UserAuthTokenLogDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogDeleteManyArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>
}
function UserAuthTokenLogDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserAuthTokenLogDelegate {
  const UserAuthTokenLog = <T extends FindManyUserAuthTokenLogArgs>(args: Subset<T, FindManyUserAuthTokenLogArgs>) => new UserAuthTokenLogClient<PromiseLike<Array<UserAuthTokenLogGetPayload<ExtractFindManyUserAuthTokenLogArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userAuthTokenLogs', 'userAuthTokenLogs', args, [])
  UserAuthTokenLog.findOne = <T extends FindOneUserAuthTokenLogArgs>(args: Subset<T, FindOneUserAuthTokenLogArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'query',
    'userAuthTokenLog',
    'userAuthTokenLogs.findOne',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'query',
    'userAuthTokenLog',
    'userAuthTokenLogs.findOne',
    args,
    []
  )
  UserAuthTokenLog.findMany = <T extends FindManyUserAuthTokenLogArgs>(args: Subset<T, FindManyUserAuthTokenLogArgs>) => new UserAuthTokenLogClient<PromiseLike<Array<UserAuthTokenLogGetPayload<ExtractFindManyUserAuthTokenLogArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userAuthTokenLogs',
    'userAuthTokenLogs.findMany',
    args,
    []
  )
  UserAuthTokenLog.create = <T extends UserAuthTokenLogCreateArgs>(args: Subset<T, UserAuthTokenLogCreateArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAuthTokenLog',
    'userAuthTokenLogs.create',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAuthTokenLog',
    'userAuthTokenLogs.create',
    args,
    []
  )
  UserAuthTokenLog.update = <T extends UserAuthTokenLogUpdateArgs>(args: Subset<T, UserAuthTokenLogUpdateArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAuthTokenLog',
    'userAuthTokenLogs.update',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAuthTokenLog',
    'userAuthTokenLogs.update',
    args,
    []
  )
  UserAuthTokenLog.updateMany = <T extends UserAuthTokenLogUpdateManyArgs>(args: Subset<T, UserAuthTokenLogUpdateManyArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAuthTokenLogs',
    'userAuthTokenLogs.updateMany',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAuthTokenLogs',
    'userAuthTokenLogs.updateMany',
    args,
    []
  )
  UserAuthTokenLog.upsert = <T extends UserAuthTokenLogUpsertArgs>(args: Subset<T, UserAuthTokenLogUpsertArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAuthTokenLog',
    'userAuthTokenLogs.upsert',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAuthTokenLog',
    'userAuthTokenLogs.upsert',
    args,
    []
  )
  UserAuthTokenLog.delete = <T extends UserAuthTokenLogDeleteArgs>(args: Subset<T, UserAuthTokenLogDeleteArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAuthTokenLog',
    'userAuthTokenLogs.delete',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAuthTokenLog',
    'userAuthTokenLogs.delete',
    args,
    []
  )
  UserAuthTokenLog.deleteMany = <T extends UserAuthTokenLogDeleteManyArgs>(args: Subset<T, UserAuthTokenLogDeleteManyArgs>) => args.select ? new UserAuthTokenLogClient<'select' extends keyof T ? PromiseLike<UserAuthTokenLogGetPayload<ExtractUserAuthTokenLogArgsSelect<T>>> : UserAuthTokenLogClient<UserAuthTokenLog>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAuthTokenLogs',
    'userAuthTokenLogs.deleteMany',
    args,
    []
  ) : new UserAuthTokenLogClient<UserAuthTokenLog>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAuthTokenLogs',
    'userAuthTokenLogs.deleteMany',
    args,
    []
  )
  return UserAuthTokenLog as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserAuthTokenLogClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserAuthTokenLogArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAuthTokenLog').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAuthTokenLog').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserAuthTokenLogArgs = {
  select?: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
}

export type FindOneUserAuthTokenLogArgsWithSelect = {
  select: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
}

type ExtractFindOneUserAuthTokenLogArgsSelect<S extends undefined | boolean | FindOneUserAuthTokenLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserAuthTokenLogArgsWithSelect
  ? S['select']
  : true


export type FindManyUserAuthTokenLogArgs = {
  select?: UserAuthTokenLogSelect
  where?: UserAuthTokenLogWhereInput
  orderBy?: UserAuthTokenLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserAuthTokenLogArgsWithSelect = {
  select: UserAuthTokenLogSelect
  where?: UserAuthTokenLogWhereInput
  orderBy?: UserAuthTokenLogOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserAuthTokenLogArgsSelect<S extends undefined | boolean | FindManyUserAuthTokenLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserAuthTokenLogArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogCreateArgs = {
  select?: UserAuthTokenLogSelect
  data: UserAuthTokenLogCreateInput
}

export type UserAuthTokenLogCreateArgsWithSelect = {
  select: UserAuthTokenLogSelect
  data: UserAuthTokenLogCreateInput
}

type ExtractUserAuthTokenLogCreateArgsSelect<S extends undefined | boolean | UserAuthTokenLogCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogCreateArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogUpdateArgs = {
  select?: UserAuthTokenLogSelect
  data: UserAuthTokenLogUpdateInput
  where: UserAuthTokenLogWhereUniqueInput
}

export type UserAuthTokenLogUpdateArgsWithSelect = {
  select: UserAuthTokenLogSelect
  data: UserAuthTokenLogUpdateInput
  where: UserAuthTokenLogWhereUniqueInput
}

type ExtractUserAuthTokenLogUpdateArgsSelect<S extends undefined | boolean | UserAuthTokenLogUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogUpdateArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogUpdateManyArgs = {
  select?: UserAuthTokenLogSelect
  data: UserAuthTokenLogUpdateManyMutationInput
  where?: UserAuthTokenLogWhereInput
}

export type UserAuthTokenLogUpdateManyArgsWithSelect = {
  select: UserAuthTokenLogSelect
  data: UserAuthTokenLogUpdateManyMutationInput
  where?: UserAuthTokenLogWhereInput
}

type ExtractUserAuthTokenLogUpdateManyArgsSelect<S extends undefined | boolean | UserAuthTokenLogUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogUpsertArgs = {
  select?: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
  create: UserAuthTokenLogCreateInput
  update: UserAuthTokenLogUpdateInput
}

export type UserAuthTokenLogUpsertArgsWithSelect = {
  select: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
  create: UserAuthTokenLogCreateInput
  update: UserAuthTokenLogUpdateInput
}

type ExtractUserAuthTokenLogUpsertArgsSelect<S extends undefined | boolean | UserAuthTokenLogUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogUpsertArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogDeleteArgs = {
  select?: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
}

export type UserAuthTokenLogDeleteArgsWithSelect = {
  select: UserAuthTokenLogSelect
  where: UserAuthTokenLogWhereUniqueInput
}

type ExtractUserAuthTokenLogDeleteArgsSelect<S extends undefined | boolean | UserAuthTokenLogDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogDeleteArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogDeleteManyArgs = {
  select?: UserAuthTokenLogSelect
  where?: UserAuthTokenLogWhereInput
}

export type UserAuthTokenLogDeleteManyArgsWithSelect = {
  select: UserAuthTokenLogSelect
  where?: UserAuthTokenLogWhereInput
}

type ExtractUserAuthTokenLogDeleteManyArgsSelect<S extends undefined | boolean | UserAuthTokenLogDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserAuthTokenLogArgs = {
  select?: UserAuthTokenLogSelect
}

export type UserAuthTokenLogArgsWithSelect = {
  select: UserAuthTokenLogSelect
}

type ExtractUserAuthTokenLogArgsSelect<S extends undefined | boolean | UserAuthTokenLogArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAuthTokenLogArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserAvatar
 */

export type UserAvatar = {
  id: number
  createdAt: string
  customUploadId: number | null
  gravatarUploadId: number | null
  lastGravatarDownloadAttempt: string | null
  updatedAt: string
  userId: number
}

export type UserAvatarScalars = 'id' | 'createdAt' | 'customUploadId' | 'gravatarUploadId' | 'lastGravatarDownloadAttempt' | 'updatedAt' | 'userId'


export type UserAvatarSelect = {
  id?: boolean
  createdAt?: boolean
  customUploadId?: boolean
  gravatarUploadId?: boolean
  lastGravatarDownloadAttempt?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserAvatarDefault = {
  id: true
  createdAt: true
  customUploadId: true
  gravatarUploadId: true
  lastGravatarDownloadAttempt: true
  updatedAt: true
  userId: true
}


type UserAvatarGetPayload<S extends boolean | UserAvatarSelect> = S extends true
  ? UserAvatar
  : S extends UserAvatarSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserAvatarDefault, S>>]: P extends UserAvatarScalars
        ? UserAvatar[P]
        : never
    }
   : never

export interface UserAvatarDelegate {
  <T extends FindManyUserAvatarArgs>(args?: Subset<T, FindManyUserAvatarArgs>): PromiseLike<Array<UserAvatarGetPayload<ExtractFindManyUserAvatarArgsSelect<T>>>>
  findOne<T extends FindOneUserAvatarArgs>(
    args: Subset<T, FindOneUserAvatarArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractFindOneUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  findMany<T extends FindManyUserAvatarArgs>(
    args?: Subset<T, FindManyUserAvatarArgs>
  ): PromiseLike<Array<UserAvatarGetPayload<ExtractFindManyUserAvatarArgsSelect<T>>>>
  create<T extends UserAvatarCreateArgs>(
    args: Subset<T, UserAvatarCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarCreateArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  update<T extends UserAvatarUpdateArgs>(
    args: Subset<T, UserAvatarUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarUpdateArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  updateMany<T extends UserAvatarUpdateManyArgs>(
    args: Subset<T, UserAvatarUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarUpdateManyArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  upsert<T extends UserAvatarUpsertArgs>(
    args: Subset<T, UserAvatarUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarUpsertArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  delete<T extends UserAvatarDeleteArgs>(
    args: Subset<T, UserAvatarDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarDeleteArgsSelect<T>>> : UserAvatarClient<UserAvatar>
  deleteMany<T extends UserAvatarDeleteManyArgs>(
    args: Subset<T, UserAvatarDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarDeleteManyArgsSelect<T>>> : UserAvatarClient<UserAvatar>
}
function UserAvatarDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserAvatarDelegate {
  const UserAvatar = <T extends FindManyUserAvatarArgs>(args: Subset<T, FindManyUserAvatarArgs>) => new UserAvatarClient<PromiseLike<Array<UserAvatarGetPayload<ExtractFindManyUserAvatarArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userAvatars', 'userAvatars', args, [])
  UserAvatar.findOne = <T extends FindOneUserAvatarArgs>(args: Subset<T, FindOneUserAvatarArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'query',
    'userAvatar',
    'userAvatars.findOne',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'query',
    'userAvatar',
    'userAvatars.findOne',
    args,
    []
  )
  UserAvatar.findMany = <T extends FindManyUserAvatarArgs>(args: Subset<T, FindManyUserAvatarArgs>) => new UserAvatarClient<PromiseLike<Array<UserAvatarGetPayload<ExtractFindManyUserAvatarArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userAvatars',
    'userAvatars.findMany',
    args,
    []
  )
  UserAvatar.create = <T extends UserAvatarCreateArgs>(args: Subset<T, UserAvatarCreateArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAvatar',
    'userAvatars.create',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'createUserAvatar',
    'userAvatars.create',
    args,
    []
  )
  UserAvatar.update = <T extends UserAvatarUpdateArgs>(args: Subset<T, UserAvatarUpdateArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAvatar',
    'userAvatars.update',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserAvatar',
    'userAvatars.update',
    args,
    []
  )
  UserAvatar.updateMany = <T extends UserAvatarUpdateManyArgs>(args: Subset<T, UserAvatarUpdateManyArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAvatars',
    'userAvatars.updateMany',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserAvatars',
    'userAvatars.updateMany',
    args,
    []
  )
  UserAvatar.upsert = <T extends UserAvatarUpsertArgs>(args: Subset<T, UserAvatarUpsertArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAvatar',
    'userAvatars.upsert',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserAvatar',
    'userAvatars.upsert',
    args,
    []
  )
  UserAvatar.delete = <T extends UserAvatarDeleteArgs>(args: Subset<T, UserAvatarDeleteArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAvatar',
    'userAvatars.delete',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserAvatar',
    'userAvatars.delete',
    args,
    []
  )
  UserAvatar.deleteMany = <T extends UserAvatarDeleteManyArgs>(args: Subset<T, UserAvatarDeleteManyArgs>) => args.select ? new UserAvatarClient<'select' extends keyof T ? PromiseLike<UserAvatarGetPayload<ExtractUserAvatarArgsSelect<T>>> : UserAvatarClient<UserAvatar>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAvatars',
    'userAvatars.deleteMany',
    args,
    []
  ) : new UserAvatarClient<UserAvatar>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserAvatars',
    'userAvatars.deleteMany',
    args,
    []
  )
  return UserAvatar as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserAvatarClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserAvatarArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAvatar').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserAvatar').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserAvatarArgs = {
  select?: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
}

export type FindOneUserAvatarArgsWithSelect = {
  select: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
}

type ExtractFindOneUserAvatarArgsSelect<S extends undefined | boolean | FindOneUserAvatarArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserAvatarArgsWithSelect
  ? S['select']
  : true


export type FindManyUserAvatarArgs = {
  select?: UserAvatarSelect
  where?: UserAvatarWhereInput
  orderBy?: UserAvatarOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserAvatarArgsWithSelect = {
  select: UserAvatarSelect
  where?: UserAvatarWhereInput
  orderBy?: UserAvatarOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserAvatarArgsSelect<S extends undefined | boolean | FindManyUserAvatarArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserAvatarArgsWithSelect
  ? S['select']
  : true


export type UserAvatarCreateArgs = {
  select?: UserAvatarSelect
  data: UserAvatarCreateInput
}

export type UserAvatarCreateArgsWithSelect = {
  select: UserAvatarSelect
  data: UserAvatarCreateInput
}

type ExtractUserAvatarCreateArgsSelect<S extends undefined | boolean | UserAvatarCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarCreateArgsWithSelect
  ? S['select']
  : true


export type UserAvatarUpdateArgs = {
  select?: UserAvatarSelect
  data: UserAvatarUpdateInput
  where: UserAvatarWhereUniqueInput
}

export type UserAvatarUpdateArgsWithSelect = {
  select: UserAvatarSelect
  data: UserAvatarUpdateInput
  where: UserAvatarWhereUniqueInput
}

type ExtractUserAvatarUpdateArgsSelect<S extends undefined | boolean | UserAvatarUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarUpdateArgsWithSelect
  ? S['select']
  : true


export type UserAvatarUpdateManyArgs = {
  select?: UserAvatarSelect
  data: UserAvatarUpdateManyMutationInput
  where?: UserAvatarWhereInput
}

export type UserAvatarUpdateManyArgsWithSelect = {
  select: UserAvatarSelect
  data: UserAvatarUpdateManyMutationInput
  where?: UserAvatarWhereInput
}

type ExtractUserAvatarUpdateManyArgsSelect<S extends undefined | boolean | UserAvatarUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserAvatarUpsertArgs = {
  select?: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
  create: UserAvatarCreateInput
  update: UserAvatarUpdateInput
}

export type UserAvatarUpsertArgsWithSelect = {
  select: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
  create: UserAvatarCreateInput
  update: UserAvatarUpdateInput
}

type ExtractUserAvatarUpsertArgsSelect<S extends undefined | boolean | UserAvatarUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarUpsertArgsWithSelect
  ? S['select']
  : true


export type UserAvatarDeleteArgs = {
  select?: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
}

export type UserAvatarDeleteArgsWithSelect = {
  select: UserAvatarSelect
  where: UserAvatarWhereUniqueInput
}

type ExtractUserAvatarDeleteArgsSelect<S extends undefined | boolean | UserAvatarDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarDeleteArgsWithSelect
  ? S['select']
  : true


export type UserAvatarDeleteManyArgs = {
  select?: UserAvatarSelect
  where?: UserAvatarWhereInput
}

export type UserAvatarDeleteManyArgsWithSelect = {
  select: UserAvatarSelect
  where?: UserAvatarWhereInput
}

type ExtractUserAvatarDeleteManyArgsSelect<S extends undefined | boolean | UserAvatarDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserAvatarArgs = {
  select?: UserAvatarSelect
}

export type UserAvatarArgsWithSelect = {
  select: UserAvatarSelect
}

type ExtractUserAvatarArgsSelect<S extends undefined | boolean | UserAvatarArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserAvatarArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserBadge
 */

export type UserBadge = {
  id: number
  badgeId: number
  grantedAt: string
  grantedById: number
  notificationId: number | null
  postId: number | null
  seq: number
  userId: number
}

export type UserBadgeScalars = 'id' | 'badgeId' | 'grantedAt' | 'grantedById' | 'notificationId' | 'postId' | 'seq' | 'userId'


export type UserBadgeSelect = {
  id?: boolean
  badgeId?: boolean
  grantedAt?: boolean
  grantedById?: boolean
  notificationId?: boolean
  postId?: boolean
  seq?: boolean
  userId?: boolean
}

type UserBadgeDefault = {
  id: true
  badgeId: true
  grantedAt: true
  grantedById: true
  notificationId: true
  postId: true
  seq: true
  userId: true
}


type UserBadgeGetPayload<S extends boolean | UserBadgeSelect> = S extends true
  ? UserBadge
  : S extends UserBadgeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserBadgeDefault, S>>]: P extends UserBadgeScalars
        ? UserBadge[P]
        : never
    }
   : never

export interface UserBadgeDelegate {
  <T extends FindManyUserBadgeArgs>(args?: Subset<T, FindManyUserBadgeArgs>): PromiseLike<Array<UserBadgeGetPayload<ExtractFindManyUserBadgeArgsSelect<T>>>>
  findOne<T extends FindOneUserBadgeArgs>(
    args: Subset<T, FindOneUserBadgeArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractFindOneUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>
  findMany<T extends FindManyUserBadgeArgs>(
    args?: Subset<T, FindManyUserBadgeArgs>
  ): PromiseLike<Array<UserBadgeGetPayload<ExtractFindManyUserBadgeArgsSelect<T>>>>
  create<T extends UserBadgeCreateArgs>(
    args: Subset<T, UserBadgeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeCreateArgsSelect<T>>> : UserBadgeClient<UserBadge>
  update<T extends UserBadgeUpdateArgs>(
    args: Subset<T, UserBadgeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeUpdateArgsSelect<T>>> : UserBadgeClient<UserBadge>
  updateMany<T extends UserBadgeUpdateManyArgs>(
    args: Subset<T, UserBadgeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeUpdateManyArgsSelect<T>>> : UserBadgeClient<UserBadge>
  upsert<T extends UserBadgeUpsertArgs>(
    args: Subset<T, UserBadgeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeUpsertArgsSelect<T>>> : UserBadgeClient<UserBadge>
  delete<T extends UserBadgeDeleteArgs>(
    args: Subset<T, UserBadgeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeDeleteArgsSelect<T>>> : UserBadgeClient<UserBadge>
  deleteMany<T extends UserBadgeDeleteManyArgs>(
    args: Subset<T, UserBadgeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeDeleteManyArgsSelect<T>>> : UserBadgeClient<UserBadge>
}
function UserBadgeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserBadgeDelegate {
  const UserBadge = <T extends FindManyUserBadgeArgs>(args: Subset<T, FindManyUserBadgeArgs>) => new UserBadgeClient<PromiseLike<Array<UserBadgeGetPayload<ExtractFindManyUserBadgeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userBadges', 'userBadges', args, [])
  UserBadge.findOne = <T extends FindOneUserBadgeArgs>(args: Subset<T, FindOneUserBadgeArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'query',
    'userBadge',
    'userBadges.findOne',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'query',
    'userBadge',
    'userBadges.findOne',
    args,
    []
  )
  UserBadge.findMany = <T extends FindManyUserBadgeArgs>(args: Subset<T, FindManyUserBadgeArgs>) => new UserBadgeClient<PromiseLike<Array<UserBadgeGetPayload<ExtractFindManyUserBadgeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userBadges',
    'userBadges.findMany',
    args,
    []
  )
  UserBadge.create = <T extends UserBadgeCreateArgs>(args: Subset<T, UserBadgeCreateArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserBadge',
    'userBadges.create',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'createUserBadge',
    'userBadges.create',
    args,
    []
  )
  UserBadge.update = <T extends UserBadgeUpdateArgs>(args: Subset<T, UserBadgeUpdateArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserBadge',
    'userBadges.update',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserBadge',
    'userBadges.update',
    args,
    []
  )
  UserBadge.updateMany = <T extends UserBadgeUpdateManyArgs>(args: Subset<T, UserBadgeUpdateManyArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserBadges',
    'userBadges.updateMany',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserBadges',
    'userBadges.updateMany',
    args,
    []
  )
  UserBadge.upsert = <T extends UserBadgeUpsertArgs>(args: Subset<T, UserBadgeUpsertArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserBadge',
    'userBadges.upsert',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserBadge',
    'userBadges.upsert',
    args,
    []
  )
  UserBadge.delete = <T extends UserBadgeDeleteArgs>(args: Subset<T, UserBadgeDeleteArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserBadge',
    'userBadges.delete',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserBadge',
    'userBadges.delete',
    args,
    []
  )
  UserBadge.deleteMany = <T extends UserBadgeDeleteManyArgs>(args: Subset<T, UserBadgeDeleteManyArgs>) => args.select ? new UserBadgeClient<'select' extends keyof T ? PromiseLike<UserBadgeGetPayload<ExtractUserBadgeArgsSelect<T>>> : UserBadgeClient<UserBadge>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserBadges',
    'userBadges.deleteMany',
    args,
    []
  ) : new UserBadgeClient<UserBadge>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserBadges',
    'userBadges.deleteMany',
    args,
    []
  )
  return UserBadge as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserBadgeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserBadgeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserBadge').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserBadge').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserBadgeArgs = {
  select?: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
}

export type FindOneUserBadgeArgsWithSelect = {
  select: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
}

type ExtractFindOneUserBadgeArgsSelect<S extends undefined | boolean | FindOneUserBadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserBadgeArgsWithSelect
  ? S['select']
  : true


export type FindManyUserBadgeArgs = {
  select?: UserBadgeSelect
  where?: UserBadgeWhereInput
  orderBy?: UserBadgeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserBadgeArgsWithSelect = {
  select: UserBadgeSelect
  where?: UserBadgeWhereInput
  orderBy?: UserBadgeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserBadgeArgsSelect<S extends undefined | boolean | FindManyUserBadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserBadgeArgsWithSelect
  ? S['select']
  : true


export type UserBadgeCreateArgs = {
  select?: UserBadgeSelect
  data: UserBadgeCreateInput
}

export type UserBadgeCreateArgsWithSelect = {
  select: UserBadgeSelect
  data: UserBadgeCreateInput
}

type ExtractUserBadgeCreateArgsSelect<S extends undefined | boolean | UserBadgeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeCreateArgsWithSelect
  ? S['select']
  : true


export type UserBadgeUpdateArgs = {
  select?: UserBadgeSelect
  data: UserBadgeUpdateInput
  where: UserBadgeWhereUniqueInput
}

export type UserBadgeUpdateArgsWithSelect = {
  select: UserBadgeSelect
  data: UserBadgeUpdateInput
  where: UserBadgeWhereUniqueInput
}

type ExtractUserBadgeUpdateArgsSelect<S extends undefined | boolean | UserBadgeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeUpdateArgsWithSelect
  ? S['select']
  : true


export type UserBadgeUpdateManyArgs = {
  select?: UserBadgeSelect
  data: UserBadgeUpdateManyMutationInput
  where?: UserBadgeWhereInput
}

export type UserBadgeUpdateManyArgsWithSelect = {
  select: UserBadgeSelect
  data: UserBadgeUpdateManyMutationInput
  where?: UserBadgeWhereInput
}

type ExtractUserBadgeUpdateManyArgsSelect<S extends undefined | boolean | UserBadgeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserBadgeUpsertArgs = {
  select?: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
  create: UserBadgeCreateInput
  update: UserBadgeUpdateInput
}

export type UserBadgeUpsertArgsWithSelect = {
  select: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
  create: UserBadgeCreateInput
  update: UserBadgeUpdateInput
}

type ExtractUserBadgeUpsertArgsSelect<S extends undefined | boolean | UserBadgeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeUpsertArgsWithSelect
  ? S['select']
  : true


export type UserBadgeDeleteArgs = {
  select?: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
}

export type UserBadgeDeleteArgsWithSelect = {
  select: UserBadgeSelect
  where: UserBadgeWhereUniqueInput
}

type ExtractUserBadgeDeleteArgsSelect<S extends undefined | boolean | UserBadgeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeDeleteArgsWithSelect
  ? S['select']
  : true


export type UserBadgeDeleteManyArgs = {
  select?: UserBadgeSelect
  where?: UserBadgeWhereInput
}

export type UserBadgeDeleteManyArgsWithSelect = {
  select: UserBadgeSelect
  where?: UserBadgeWhereInput
}

type ExtractUserBadgeDeleteManyArgsSelect<S extends undefined | boolean | UserBadgeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserBadgeArgs = {
  select?: UserBadgeSelect
}

export type UserBadgeArgsWithSelect = {
  select: UserBadgeSelect
}

type ExtractUserBadgeArgsSelect<S extends undefined | boolean | UserBadgeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserBadgeArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserCustomField
 */

export type UserCustomField = {
  id: number
  createdAt: string
  name: string
  updatedAt: string
  userId: number
  value: string | null
}

export type UserCustomFieldScalars = 'id' | 'createdAt' | 'name' | 'updatedAt' | 'userId' | 'value'


export type UserCustomFieldSelect = {
  id?: boolean
  createdAt?: boolean
  name?: boolean
  updatedAt?: boolean
  userId?: boolean
  value?: boolean
}

type UserCustomFieldDefault = {
  id: true
  createdAt: true
  name: true
  updatedAt: true
  userId: true
  value: true
}


type UserCustomFieldGetPayload<S extends boolean | UserCustomFieldSelect> = S extends true
  ? UserCustomField
  : S extends UserCustomFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserCustomFieldDefault, S>>]: P extends UserCustomFieldScalars
        ? UserCustomField[P]
        : never
    }
   : never

export interface UserCustomFieldDelegate {
  <T extends FindManyUserCustomFieldArgs>(args?: Subset<T, FindManyUserCustomFieldArgs>): PromiseLike<Array<UserCustomFieldGetPayload<ExtractFindManyUserCustomFieldArgsSelect<T>>>>
  findOne<T extends FindOneUserCustomFieldArgs>(
    args: Subset<T, FindOneUserCustomFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractFindOneUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  findMany<T extends FindManyUserCustomFieldArgs>(
    args?: Subset<T, FindManyUserCustomFieldArgs>
  ): PromiseLike<Array<UserCustomFieldGetPayload<ExtractFindManyUserCustomFieldArgsSelect<T>>>>
  create<T extends UserCustomFieldCreateArgs>(
    args: Subset<T, UserCustomFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldCreateArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  update<T extends UserCustomFieldUpdateArgs>(
    args: Subset<T, UserCustomFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldUpdateArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  updateMany<T extends UserCustomFieldUpdateManyArgs>(
    args: Subset<T, UserCustomFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldUpdateManyArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  upsert<T extends UserCustomFieldUpsertArgs>(
    args: Subset<T, UserCustomFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldUpsertArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  delete<T extends UserCustomFieldDeleteArgs>(
    args: Subset<T, UserCustomFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldDeleteArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
  deleteMany<T extends UserCustomFieldDeleteManyArgs>(
    args: Subset<T, UserCustomFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldDeleteManyArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>
}
function UserCustomFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserCustomFieldDelegate {
  const UserCustomField = <T extends FindManyUserCustomFieldArgs>(args: Subset<T, FindManyUserCustomFieldArgs>) => new UserCustomFieldClient<PromiseLike<Array<UserCustomFieldGetPayload<ExtractFindManyUserCustomFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userCustomFields', 'userCustomFields', args, [])
  UserCustomField.findOne = <T extends FindOneUserCustomFieldArgs>(args: Subset<T, FindOneUserCustomFieldArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'query',
    'userCustomField',
    'userCustomFields.findOne',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'query',
    'userCustomField',
    'userCustomFields.findOne',
    args,
    []
  )
  UserCustomField.findMany = <T extends FindManyUserCustomFieldArgs>(args: Subset<T, FindManyUserCustomFieldArgs>) => new UserCustomFieldClient<PromiseLike<Array<UserCustomFieldGetPayload<ExtractFindManyUserCustomFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userCustomFields',
    'userCustomFields.findMany',
    args,
    []
  )
  UserCustomField.create = <T extends UserCustomFieldCreateArgs>(args: Subset<T, UserCustomFieldCreateArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserCustomField',
    'userCustomFields.create',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'createUserCustomField',
    'userCustomFields.create',
    args,
    []
  )
  UserCustomField.update = <T extends UserCustomFieldUpdateArgs>(args: Subset<T, UserCustomFieldUpdateArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserCustomField',
    'userCustomFields.update',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserCustomField',
    'userCustomFields.update',
    args,
    []
  )
  UserCustomField.updateMany = <T extends UserCustomFieldUpdateManyArgs>(args: Subset<T, UserCustomFieldUpdateManyArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserCustomFields',
    'userCustomFields.updateMany',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserCustomFields',
    'userCustomFields.updateMany',
    args,
    []
  )
  UserCustomField.upsert = <T extends UserCustomFieldUpsertArgs>(args: Subset<T, UserCustomFieldUpsertArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserCustomField',
    'userCustomFields.upsert',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserCustomField',
    'userCustomFields.upsert',
    args,
    []
  )
  UserCustomField.delete = <T extends UserCustomFieldDeleteArgs>(args: Subset<T, UserCustomFieldDeleteArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserCustomField',
    'userCustomFields.delete',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserCustomField',
    'userCustomFields.delete',
    args,
    []
  )
  UserCustomField.deleteMany = <T extends UserCustomFieldDeleteManyArgs>(args: Subset<T, UserCustomFieldDeleteManyArgs>) => args.select ? new UserCustomFieldClient<'select' extends keyof T ? PromiseLike<UserCustomFieldGetPayload<ExtractUserCustomFieldArgsSelect<T>>> : UserCustomFieldClient<UserCustomField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserCustomFields',
    'userCustomFields.deleteMany',
    args,
    []
  ) : new UserCustomFieldClient<UserCustomField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserCustomFields',
    'userCustomFields.deleteMany',
    args,
    []
  )
  return UserCustomField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserCustomFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserCustomFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserCustomField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserCustomField').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserCustomFieldArgs = {
  select?: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
}

export type FindOneUserCustomFieldArgsWithSelect = {
  select: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
}

type ExtractFindOneUserCustomFieldArgsSelect<S extends undefined | boolean | FindOneUserCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserCustomFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyUserCustomFieldArgs = {
  select?: UserCustomFieldSelect
  where?: UserCustomFieldWhereInput
  orderBy?: UserCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserCustomFieldArgsWithSelect = {
  select: UserCustomFieldSelect
  where?: UserCustomFieldWhereInput
  orderBy?: UserCustomFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserCustomFieldArgsSelect<S extends undefined | boolean | FindManyUserCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserCustomFieldArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldCreateArgs = {
  select?: UserCustomFieldSelect
  data: UserCustomFieldCreateInput
}

export type UserCustomFieldCreateArgsWithSelect = {
  select: UserCustomFieldSelect
  data: UserCustomFieldCreateInput
}

type ExtractUserCustomFieldCreateArgsSelect<S extends undefined | boolean | UserCustomFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldCreateArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldUpdateArgs = {
  select?: UserCustomFieldSelect
  data: UserCustomFieldUpdateInput
  where: UserCustomFieldWhereUniqueInput
}

export type UserCustomFieldUpdateArgsWithSelect = {
  select: UserCustomFieldSelect
  data: UserCustomFieldUpdateInput
  where: UserCustomFieldWhereUniqueInput
}

type ExtractUserCustomFieldUpdateArgsSelect<S extends undefined | boolean | UserCustomFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldUpdateManyArgs = {
  select?: UserCustomFieldSelect
  data: UserCustomFieldUpdateManyMutationInput
  where?: UserCustomFieldWhereInput
}

export type UserCustomFieldUpdateManyArgsWithSelect = {
  select: UserCustomFieldSelect
  data: UserCustomFieldUpdateManyMutationInput
  where?: UserCustomFieldWhereInput
}

type ExtractUserCustomFieldUpdateManyArgsSelect<S extends undefined | boolean | UserCustomFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldUpsertArgs = {
  select?: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
  create: UserCustomFieldCreateInput
  update: UserCustomFieldUpdateInput
}

export type UserCustomFieldUpsertArgsWithSelect = {
  select: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
  create: UserCustomFieldCreateInput
  update: UserCustomFieldUpdateInput
}

type ExtractUserCustomFieldUpsertArgsSelect<S extends undefined | boolean | UserCustomFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldDeleteArgs = {
  select?: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
}

export type UserCustomFieldDeleteArgsWithSelect = {
  select: UserCustomFieldSelect
  where: UserCustomFieldWhereUniqueInput
}

type ExtractUserCustomFieldDeleteArgsSelect<S extends undefined | boolean | UserCustomFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldDeleteManyArgs = {
  select?: UserCustomFieldSelect
  where?: UserCustomFieldWhereInput
}

export type UserCustomFieldDeleteManyArgsWithSelect = {
  select: UserCustomFieldSelect
  where?: UserCustomFieldWhereInput
}

type ExtractUserCustomFieldDeleteManyArgsSelect<S extends undefined | boolean | UserCustomFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserCustomFieldArgs = {
  select?: UserCustomFieldSelect
}

export type UserCustomFieldArgsWithSelect = {
  select: UserCustomFieldSelect
}

type ExtractUserCustomFieldArgsSelect<S extends undefined | boolean | UserCustomFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserCustomFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserEmail
 */

export type UserEmail = {
  id: number
  createdAt: string | null
  email: string
  primary: boolean
  updatedAt: string | null
  userId: number
}

export type UserEmailScalars = 'id' | 'createdAt' | 'email' | 'primary' | 'updatedAt' | 'userId'


export type UserEmailSelect = {
  id?: boolean
  createdAt?: boolean
  email?: boolean
  primary?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserEmailDefault = {
  id: true
  createdAt: true
  email: true
  primary: true
  updatedAt: true
  userId: true
}


type UserEmailGetPayload<S extends boolean | UserEmailSelect> = S extends true
  ? UserEmail
  : S extends UserEmailSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserEmailDefault, S>>]: P extends UserEmailScalars
        ? UserEmail[P]
        : never
    }
   : never

export interface UserEmailDelegate {
  <T extends FindManyUserEmailArgs>(args?: Subset<T, FindManyUserEmailArgs>): PromiseLike<Array<UserEmailGetPayload<ExtractFindManyUserEmailArgsSelect<T>>>>
  findOne<T extends FindOneUserEmailArgs>(
    args: Subset<T, FindOneUserEmailArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractFindOneUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>
  findMany<T extends FindManyUserEmailArgs>(
    args?: Subset<T, FindManyUserEmailArgs>
  ): PromiseLike<Array<UserEmailGetPayload<ExtractFindManyUserEmailArgsSelect<T>>>>
  create<T extends UserEmailCreateArgs>(
    args: Subset<T, UserEmailCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailCreateArgsSelect<T>>> : UserEmailClient<UserEmail>
  update<T extends UserEmailUpdateArgs>(
    args: Subset<T, UserEmailUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailUpdateArgsSelect<T>>> : UserEmailClient<UserEmail>
  updateMany<T extends UserEmailUpdateManyArgs>(
    args: Subset<T, UserEmailUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailUpdateManyArgsSelect<T>>> : UserEmailClient<UserEmail>
  upsert<T extends UserEmailUpsertArgs>(
    args: Subset<T, UserEmailUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailUpsertArgsSelect<T>>> : UserEmailClient<UserEmail>
  delete<T extends UserEmailDeleteArgs>(
    args: Subset<T, UserEmailDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailDeleteArgsSelect<T>>> : UserEmailClient<UserEmail>
  deleteMany<T extends UserEmailDeleteManyArgs>(
    args: Subset<T, UserEmailDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailDeleteManyArgsSelect<T>>> : UserEmailClient<UserEmail>
}
function UserEmailDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserEmailDelegate {
  const UserEmail = <T extends FindManyUserEmailArgs>(args: Subset<T, FindManyUserEmailArgs>) => new UserEmailClient<PromiseLike<Array<UserEmailGetPayload<ExtractFindManyUserEmailArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userEmails', 'userEmails', args, [])
  UserEmail.findOne = <T extends FindOneUserEmailArgs>(args: Subset<T, FindOneUserEmailArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'query',
    'userEmail',
    'userEmails.findOne',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'query',
    'userEmail',
    'userEmails.findOne',
    args,
    []
  )
  UserEmail.findMany = <T extends FindManyUserEmailArgs>(args: Subset<T, FindManyUserEmailArgs>) => new UserEmailClient<PromiseLike<Array<UserEmailGetPayload<ExtractFindManyUserEmailArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userEmails',
    'userEmails.findMany',
    args,
    []
  )
  UserEmail.create = <T extends UserEmailCreateArgs>(args: Subset<T, UserEmailCreateArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserEmail',
    'userEmails.create',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'createUserEmail',
    'userEmails.create',
    args,
    []
  )
  UserEmail.update = <T extends UserEmailUpdateArgs>(args: Subset<T, UserEmailUpdateArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserEmail',
    'userEmails.update',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserEmail',
    'userEmails.update',
    args,
    []
  )
  UserEmail.updateMany = <T extends UserEmailUpdateManyArgs>(args: Subset<T, UserEmailUpdateManyArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserEmails',
    'userEmails.updateMany',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserEmails',
    'userEmails.updateMany',
    args,
    []
  )
  UserEmail.upsert = <T extends UserEmailUpsertArgs>(args: Subset<T, UserEmailUpsertArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserEmail',
    'userEmails.upsert',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserEmail',
    'userEmails.upsert',
    args,
    []
  )
  UserEmail.delete = <T extends UserEmailDeleteArgs>(args: Subset<T, UserEmailDeleteArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserEmail',
    'userEmails.delete',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserEmail',
    'userEmails.delete',
    args,
    []
  )
  UserEmail.deleteMany = <T extends UserEmailDeleteManyArgs>(args: Subset<T, UserEmailDeleteManyArgs>) => args.select ? new UserEmailClient<'select' extends keyof T ? PromiseLike<UserEmailGetPayload<ExtractUserEmailArgsSelect<T>>> : UserEmailClient<UserEmail>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserEmails',
    'userEmails.deleteMany',
    args,
    []
  ) : new UserEmailClient<UserEmail>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserEmails',
    'userEmails.deleteMany',
    args,
    []
  )
  return UserEmail as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserEmailClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserEmailArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserEmail').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserEmail').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserEmailArgs = {
  select?: UserEmailSelect
  where: UserEmailWhereUniqueInput
}

export type FindOneUserEmailArgsWithSelect = {
  select: UserEmailSelect
  where: UserEmailWhereUniqueInput
}

type ExtractFindOneUserEmailArgsSelect<S extends undefined | boolean | FindOneUserEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserEmailArgsWithSelect
  ? S['select']
  : true


export type FindManyUserEmailArgs = {
  select?: UserEmailSelect
  where?: UserEmailWhereInput
  orderBy?: UserEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserEmailArgsWithSelect = {
  select: UserEmailSelect
  where?: UserEmailWhereInput
  orderBy?: UserEmailOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserEmailArgsSelect<S extends undefined | boolean | FindManyUserEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserEmailArgsWithSelect
  ? S['select']
  : true


export type UserEmailCreateArgs = {
  select?: UserEmailSelect
  data: UserEmailCreateInput
}

export type UserEmailCreateArgsWithSelect = {
  select: UserEmailSelect
  data: UserEmailCreateInput
}

type ExtractUserEmailCreateArgsSelect<S extends undefined | boolean | UserEmailCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailCreateArgsWithSelect
  ? S['select']
  : true


export type UserEmailUpdateArgs = {
  select?: UserEmailSelect
  data: UserEmailUpdateInput
  where: UserEmailWhereUniqueInput
}

export type UserEmailUpdateArgsWithSelect = {
  select: UserEmailSelect
  data: UserEmailUpdateInput
  where: UserEmailWhereUniqueInput
}

type ExtractUserEmailUpdateArgsSelect<S extends undefined | boolean | UserEmailUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailUpdateArgsWithSelect
  ? S['select']
  : true


export type UserEmailUpdateManyArgs = {
  select?: UserEmailSelect
  data: UserEmailUpdateManyMutationInput
  where?: UserEmailWhereInput
}

export type UserEmailUpdateManyArgsWithSelect = {
  select: UserEmailSelect
  data: UserEmailUpdateManyMutationInput
  where?: UserEmailWhereInput
}

type ExtractUserEmailUpdateManyArgsSelect<S extends undefined | boolean | UserEmailUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserEmailUpsertArgs = {
  select?: UserEmailSelect
  where: UserEmailWhereUniqueInput
  create: UserEmailCreateInput
  update: UserEmailUpdateInput
}

export type UserEmailUpsertArgsWithSelect = {
  select: UserEmailSelect
  where: UserEmailWhereUniqueInput
  create: UserEmailCreateInput
  update: UserEmailUpdateInput
}

type ExtractUserEmailUpsertArgsSelect<S extends undefined | boolean | UserEmailUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailUpsertArgsWithSelect
  ? S['select']
  : true


export type UserEmailDeleteArgs = {
  select?: UserEmailSelect
  where: UserEmailWhereUniqueInput
}

export type UserEmailDeleteArgsWithSelect = {
  select: UserEmailSelect
  where: UserEmailWhereUniqueInput
}

type ExtractUserEmailDeleteArgsSelect<S extends undefined | boolean | UserEmailDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailDeleteArgsWithSelect
  ? S['select']
  : true


export type UserEmailDeleteManyArgs = {
  select?: UserEmailSelect
  where?: UserEmailWhereInput
}

export type UserEmailDeleteManyArgsWithSelect = {
  select: UserEmailSelect
  where?: UserEmailWhereInput
}

type ExtractUserEmailDeleteManyArgsSelect<S extends undefined | boolean | UserEmailDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserEmailArgs = {
  select?: UserEmailSelect
}

export type UserEmailArgsWithSelect = {
  select: UserEmailSelect
}

type ExtractUserEmailArgsSelect<S extends undefined | boolean | UserEmailArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserEmailArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserExport
 */

export type UserExport = {
  id: number
  createdAt: string | null
  fileName: string
  updatedAt: string | null
  uploadId: number | null
  userId: number
}

export type UserExportScalars = 'id' | 'createdAt' | 'fileName' | 'updatedAt' | 'uploadId' | 'userId'


export type UserExportSelect = {
  id?: boolean
  createdAt?: boolean
  fileName?: boolean
  updatedAt?: boolean
  uploadId?: boolean
  userId?: boolean
}

type UserExportDefault = {
  id: true
  createdAt: true
  fileName: true
  updatedAt: true
  uploadId: true
  userId: true
}


type UserExportGetPayload<S extends boolean | UserExportSelect> = S extends true
  ? UserExport
  : S extends UserExportSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserExportDefault, S>>]: P extends UserExportScalars
        ? UserExport[P]
        : never
    }
   : never

export interface UserExportDelegate {
  <T extends FindManyUserExportArgs>(args?: Subset<T, FindManyUserExportArgs>): PromiseLike<Array<UserExportGetPayload<ExtractFindManyUserExportArgsSelect<T>>>>
  findOne<T extends FindOneUserExportArgs>(
    args: Subset<T, FindOneUserExportArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractFindOneUserExportArgsSelect<T>>> : UserExportClient<UserExport>
  findMany<T extends FindManyUserExportArgs>(
    args?: Subset<T, FindManyUserExportArgs>
  ): PromiseLike<Array<UserExportGetPayload<ExtractFindManyUserExportArgsSelect<T>>>>
  create<T extends UserExportCreateArgs>(
    args: Subset<T, UserExportCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportCreateArgsSelect<T>>> : UserExportClient<UserExport>
  update<T extends UserExportUpdateArgs>(
    args: Subset<T, UserExportUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportUpdateArgsSelect<T>>> : UserExportClient<UserExport>
  updateMany<T extends UserExportUpdateManyArgs>(
    args: Subset<T, UserExportUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportUpdateManyArgsSelect<T>>> : UserExportClient<UserExport>
  upsert<T extends UserExportUpsertArgs>(
    args: Subset<T, UserExportUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportUpsertArgsSelect<T>>> : UserExportClient<UserExport>
  delete<T extends UserExportDeleteArgs>(
    args: Subset<T, UserExportDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportDeleteArgsSelect<T>>> : UserExportClient<UserExport>
  deleteMany<T extends UserExportDeleteManyArgs>(
    args: Subset<T, UserExportDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportDeleteManyArgsSelect<T>>> : UserExportClient<UserExport>
}
function UserExportDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserExportDelegate {
  const UserExport = <T extends FindManyUserExportArgs>(args: Subset<T, FindManyUserExportArgs>) => new UserExportClient<PromiseLike<Array<UserExportGetPayload<ExtractFindManyUserExportArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userExports', 'userExports', args, [])
  UserExport.findOne = <T extends FindOneUserExportArgs>(args: Subset<T, FindOneUserExportArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'query',
    'userExport',
    'userExports.findOne',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'query',
    'userExport',
    'userExports.findOne',
    args,
    []
  )
  UserExport.findMany = <T extends FindManyUserExportArgs>(args: Subset<T, FindManyUserExportArgs>) => new UserExportClient<PromiseLike<Array<UserExportGetPayload<ExtractFindManyUserExportArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userExports',
    'userExports.findMany',
    args,
    []
  )
  UserExport.create = <T extends UserExportCreateArgs>(args: Subset<T, UserExportCreateArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserExport',
    'userExports.create',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'createUserExport',
    'userExports.create',
    args,
    []
  )
  UserExport.update = <T extends UserExportUpdateArgs>(args: Subset<T, UserExportUpdateArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserExport',
    'userExports.update',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserExport',
    'userExports.update',
    args,
    []
  )
  UserExport.updateMany = <T extends UserExportUpdateManyArgs>(args: Subset<T, UserExportUpdateManyArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserExports',
    'userExports.updateMany',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserExports',
    'userExports.updateMany',
    args,
    []
  )
  UserExport.upsert = <T extends UserExportUpsertArgs>(args: Subset<T, UserExportUpsertArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserExport',
    'userExports.upsert',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserExport',
    'userExports.upsert',
    args,
    []
  )
  UserExport.delete = <T extends UserExportDeleteArgs>(args: Subset<T, UserExportDeleteArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserExport',
    'userExports.delete',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserExport',
    'userExports.delete',
    args,
    []
  )
  UserExport.deleteMany = <T extends UserExportDeleteManyArgs>(args: Subset<T, UserExportDeleteManyArgs>) => args.select ? new UserExportClient<'select' extends keyof T ? PromiseLike<UserExportGetPayload<ExtractUserExportArgsSelect<T>>> : UserExportClient<UserExport>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserExports',
    'userExports.deleteMany',
    args,
    []
  ) : new UserExportClient<UserExport>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserExports',
    'userExports.deleteMany',
    args,
    []
  )
  return UserExport as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserExportClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserExportArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserExport').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserExport').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserExportArgs = {
  select?: UserExportSelect
  where: UserExportWhereUniqueInput
}

export type FindOneUserExportArgsWithSelect = {
  select: UserExportSelect
  where: UserExportWhereUniqueInput
}

type ExtractFindOneUserExportArgsSelect<S extends undefined | boolean | FindOneUserExportArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserExportArgsWithSelect
  ? S['select']
  : true


export type FindManyUserExportArgs = {
  select?: UserExportSelect
  where?: UserExportWhereInput
  orderBy?: UserExportOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserExportArgsWithSelect = {
  select: UserExportSelect
  where?: UserExportWhereInput
  orderBy?: UserExportOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserExportArgsSelect<S extends undefined | boolean | FindManyUserExportArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserExportArgsWithSelect
  ? S['select']
  : true


export type UserExportCreateArgs = {
  select?: UserExportSelect
  data: UserExportCreateInput
}

export type UserExportCreateArgsWithSelect = {
  select: UserExportSelect
  data: UserExportCreateInput
}

type ExtractUserExportCreateArgsSelect<S extends undefined | boolean | UserExportCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportCreateArgsWithSelect
  ? S['select']
  : true


export type UserExportUpdateArgs = {
  select?: UserExportSelect
  data: UserExportUpdateInput
  where: UserExportWhereUniqueInput
}

export type UserExportUpdateArgsWithSelect = {
  select: UserExportSelect
  data: UserExportUpdateInput
  where: UserExportWhereUniqueInput
}

type ExtractUserExportUpdateArgsSelect<S extends undefined | boolean | UserExportUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportUpdateArgsWithSelect
  ? S['select']
  : true


export type UserExportUpdateManyArgs = {
  select?: UserExportSelect
  data: UserExportUpdateManyMutationInput
  where?: UserExportWhereInput
}

export type UserExportUpdateManyArgsWithSelect = {
  select: UserExportSelect
  data: UserExportUpdateManyMutationInput
  where?: UserExportWhereInput
}

type ExtractUserExportUpdateManyArgsSelect<S extends undefined | boolean | UserExportUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserExportUpsertArgs = {
  select?: UserExportSelect
  where: UserExportWhereUniqueInput
  create: UserExportCreateInput
  update: UserExportUpdateInput
}

export type UserExportUpsertArgsWithSelect = {
  select: UserExportSelect
  where: UserExportWhereUniqueInput
  create: UserExportCreateInput
  update: UserExportUpdateInput
}

type ExtractUserExportUpsertArgsSelect<S extends undefined | boolean | UserExportUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportUpsertArgsWithSelect
  ? S['select']
  : true


export type UserExportDeleteArgs = {
  select?: UserExportSelect
  where: UserExportWhereUniqueInput
}

export type UserExportDeleteArgsWithSelect = {
  select: UserExportSelect
  where: UserExportWhereUniqueInput
}

type ExtractUserExportDeleteArgsSelect<S extends undefined | boolean | UserExportDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportDeleteArgsWithSelect
  ? S['select']
  : true


export type UserExportDeleteManyArgs = {
  select?: UserExportSelect
  where?: UserExportWhereInput
}

export type UserExportDeleteManyArgsWithSelect = {
  select: UserExportSelect
  where?: UserExportWhereInput
}

type ExtractUserExportDeleteManyArgsSelect<S extends undefined | boolean | UserExportDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserExportArgs = {
  select?: UserExportSelect
}

export type UserExportArgsWithSelect = {
  select: UserExportSelect
}

type ExtractUserExportArgsSelect<S extends undefined | boolean | UserExportArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserExportArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserField
 */

export type UserField = {
  id: number
  createdAt: string | null
  description: string
  editable: boolean
  externalName: string | null
  externalType: string | null
  fieldType: string
  name: string
  position: number | null
  required: boolean
  showOnProfile: boolean
  showOnUserCard: boolean
  updatedAt: string | null
}

export type UserFieldScalars = 'id' | 'createdAt' | 'description' | 'editable' | 'externalName' | 'externalType' | 'fieldType' | 'name' | 'position' | 'required' | 'showOnProfile' | 'showOnUserCard' | 'updatedAt'


export type UserFieldSelect = {
  id?: boolean
  createdAt?: boolean
  description?: boolean
  editable?: boolean
  externalName?: boolean
  externalType?: boolean
  fieldType?: boolean
  name?: boolean
  position?: boolean
  required?: boolean
  showOnProfile?: boolean
  showOnUserCard?: boolean
  updatedAt?: boolean
}

type UserFieldDefault = {
  id: true
  createdAt: true
  description: true
  editable: true
  externalName: true
  externalType: true
  fieldType: true
  name: true
  position: true
  required: true
  showOnProfile: true
  showOnUserCard: true
  updatedAt: true
}


type UserFieldGetPayload<S extends boolean | UserFieldSelect> = S extends true
  ? UserField
  : S extends UserFieldSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserFieldDefault, S>>]: P extends UserFieldScalars
        ? UserField[P]
        : never
    }
   : never

export interface UserFieldDelegate {
  <T extends FindManyUserFieldArgs>(args?: Subset<T, FindManyUserFieldArgs>): PromiseLike<Array<UserFieldGetPayload<ExtractFindManyUserFieldArgsSelect<T>>>>
  findOne<T extends FindOneUserFieldArgs>(
    args: Subset<T, FindOneUserFieldArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractFindOneUserFieldArgsSelect<T>>> : UserFieldClient<UserField>
  findMany<T extends FindManyUserFieldArgs>(
    args?: Subset<T, FindManyUserFieldArgs>
  ): PromiseLike<Array<UserFieldGetPayload<ExtractFindManyUserFieldArgsSelect<T>>>>
  create<T extends UserFieldCreateArgs>(
    args: Subset<T, UserFieldCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldCreateArgsSelect<T>>> : UserFieldClient<UserField>
  update<T extends UserFieldUpdateArgs>(
    args: Subset<T, UserFieldUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldUpdateArgsSelect<T>>> : UserFieldClient<UserField>
  updateMany<T extends UserFieldUpdateManyArgs>(
    args: Subset<T, UserFieldUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldUpdateManyArgsSelect<T>>> : UserFieldClient<UserField>
  upsert<T extends UserFieldUpsertArgs>(
    args: Subset<T, UserFieldUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldUpsertArgsSelect<T>>> : UserFieldClient<UserField>
  delete<T extends UserFieldDeleteArgs>(
    args: Subset<T, UserFieldDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldDeleteArgsSelect<T>>> : UserFieldClient<UserField>
  deleteMany<T extends UserFieldDeleteManyArgs>(
    args: Subset<T, UserFieldDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldDeleteManyArgsSelect<T>>> : UserFieldClient<UserField>
}
function UserFieldDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserFieldDelegate {
  const UserField = <T extends FindManyUserFieldArgs>(args: Subset<T, FindManyUserFieldArgs>) => new UserFieldClient<PromiseLike<Array<UserFieldGetPayload<ExtractFindManyUserFieldArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userFields', 'userFields', args, [])
  UserField.findOne = <T extends FindOneUserFieldArgs>(args: Subset<T, FindOneUserFieldArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'query',
    'userField',
    'userFields.findOne',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'query',
    'userField',
    'userFields.findOne',
    args,
    []
  )
  UserField.findMany = <T extends FindManyUserFieldArgs>(args: Subset<T, FindManyUserFieldArgs>) => new UserFieldClient<PromiseLike<Array<UserFieldGetPayload<ExtractFindManyUserFieldArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userFields',
    'userFields.findMany',
    args,
    []
  )
  UserField.create = <T extends UserFieldCreateArgs>(args: Subset<T, UserFieldCreateArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserField',
    'userFields.create',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'createUserField',
    'userFields.create',
    args,
    []
  )
  UserField.update = <T extends UserFieldUpdateArgs>(args: Subset<T, UserFieldUpdateArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserField',
    'userFields.update',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserField',
    'userFields.update',
    args,
    []
  )
  UserField.updateMany = <T extends UserFieldUpdateManyArgs>(args: Subset<T, UserFieldUpdateManyArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserFields',
    'userFields.updateMany',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserFields',
    'userFields.updateMany',
    args,
    []
  )
  UserField.upsert = <T extends UserFieldUpsertArgs>(args: Subset<T, UserFieldUpsertArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserField',
    'userFields.upsert',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserField',
    'userFields.upsert',
    args,
    []
  )
  UserField.delete = <T extends UserFieldDeleteArgs>(args: Subset<T, UserFieldDeleteArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserField',
    'userFields.delete',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserField',
    'userFields.delete',
    args,
    []
  )
  UserField.deleteMany = <T extends UserFieldDeleteManyArgs>(args: Subset<T, UserFieldDeleteManyArgs>) => args.select ? new UserFieldClient<'select' extends keyof T ? PromiseLike<UserFieldGetPayload<ExtractUserFieldArgsSelect<T>>> : UserFieldClient<UserField>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserFields',
    'userFields.deleteMany',
    args,
    []
  ) : new UserFieldClient<UserField>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserFields',
    'userFields.deleteMany',
    args,
    []
  )
  return UserField as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserFieldClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserFieldArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserField').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserField').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserFieldArgs = {
  select?: UserFieldSelect
  where: UserFieldWhereUniqueInput
}

export type FindOneUserFieldArgsWithSelect = {
  select: UserFieldSelect
  where: UserFieldWhereUniqueInput
}

type ExtractFindOneUserFieldArgsSelect<S extends undefined | boolean | FindOneUserFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserFieldArgsWithSelect
  ? S['select']
  : true


export type FindManyUserFieldArgs = {
  select?: UserFieldSelect
  where?: UserFieldWhereInput
  orderBy?: UserFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserFieldArgsWithSelect = {
  select: UserFieldSelect
  where?: UserFieldWhereInput
  orderBy?: UserFieldOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserFieldArgsSelect<S extends undefined | boolean | FindManyUserFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserFieldArgsWithSelect
  ? S['select']
  : true


export type UserFieldCreateArgs = {
  select?: UserFieldSelect
  data: UserFieldCreateInput
}

export type UserFieldCreateArgsWithSelect = {
  select: UserFieldSelect
  data: UserFieldCreateInput
}

type ExtractUserFieldCreateArgsSelect<S extends undefined | boolean | UserFieldCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldCreateArgsWithSelect
  ? S['select']
  : true


export type UserFieldUpdateArgs = {
  select?: UserFieldSelect
  data: UserFieldUpdateInput
  where: UserFieldWhereUniqueInput
}

export type UserFieldUpdateArgsWithSelect = {
  select: UserFieldSelect
  data: UserFieldUpdateInput
  where: UserFieldWhereUniqueInput
}

type ExtractUserFieldUpdateArgsSelect<S extends undefined | boolean | UserFieldUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldUpdateArgsWithSelect
  ? S['select']
  : true


export type UserFieldUpdateManyArgs = {
  select?: UserFieldSelect
  data: UserFieldUpdateManyMutationInput
  where?: UserFieldWhereInput
}

export type UserFieldUpdateManyArgsWithSelect = {
  select: UserFieldSelect
  data: UserFieldUpdateManyMutationInput
  where?: UserFieldWhereInput
}

type ExtractUserFieldUpdateManyArgsSelect<S extends undefined | boolean | UserFieldUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserFieldUpsertArgs = {
  select?: UserFieldSelect
  where: UserFieldWhereUniqueInput
  create: UserFieldCreateInput
  update: UserFieldUpdateInput
}

export type UserFieldUpsertArgsWithSelect = {
  select: UserFieldSelect
  where: UserFieldWhereUniqueInput
  create: UserFieldCreateInput
  update: UserFieldUpdateInput
}

type ExtractUserFieldUpsertArgsSelect<S extends undefined | boolean | UserFieldUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldUpsertArgsWithSelect
  ? S['select']
  : true


export type UserFieldDeleteArgs = {
  select?: UserFieldSelect
  where: UserFieldWhereUniqueInput
}

export type UserFieldDeleteArgsWithSelect = {
  select: UserFieldSelect
  where: UserFieldWhereUniqueInput
}

type ExtractUserFieldDeleteArgsSelect<S extends undefined | boolean | UserFieldDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldDeleteArgsWithSelect
  ? S['select']
  : true


export type UserFieldDeleteManyArgs = {
  select?: UserFieldSelect
  where?: UserFieldWhereInput
}

export type UserFieldDeleteManyArgsWithSelect = {
  select: UserFieldSelect
  where?: UserFieldWhereInput
}

type ExtractUserFieldDeleteManyArgsSelect<S extends undefined | boolean | UserFieldDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserFieldArgs = {
  select?: UserFieldSelect
}

export type UserFieldArgsWithSelect = {
  select: UserFieldSelect
}

type ExtractUserFieldArgsSelect<S extends undefined | boolean | UserFieldArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserFieldOption
 */

export type UserFieldOption = {
  id: number
  createdAt: string | null
  updatedAt: string | null
  userFieldId: number
  value: string
}

export type UserFieldOptionScalars = 'id' | 'createdAt' | 'updatedAt' | 'userFieldId' | 'value'


export type UserFieldOptionSelect = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  userFieldId?: boolean
  value?: boolean
}

type UserFieldOptionDefault = {
  id: true
  createdAt: true
  updatedAt: true
  userFieldId: true
  value: true
}


type UserFieldOptionGetPayload<S extends boolean | UserFieldOptionSelect> = S extends true
  ? UserFieldOption
  : S extends UserFieldOptionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserFieldOptionDefault, S>>]: P extends UserFieldOptionScalars
        ? UserFieldOption[P]
        : never
    }
   : never

export interface UserFieldOptionDelegate {
  <T extends FindManyUserFieldOptionArgs>(args?: Subset<T, FindManyUserFieldOptionArgs>): PromiseLike<Array<UserFieldOptionGetPayload<ExtractFindManyUserFieldOptionArgsSelect<T>>>>
  findOne<T extends FindOneUserFieldOptionArgs>(
    args: Subset<T, FindOneUserFieldOptionArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractFindOneUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  findMany<T extends FindManyUserFieldOptionArgs>(
    args?: Subset<T, FindManyUserFieldOptionArgs>
  ): PromiseLike<Array<UserFieldOptionGetPayload<ExtractFindManyUserFieldOptionArgsSelect<T>>>>
  create<T extends UserFieldOptionCreateArgs>(
    args: Subset<T, UserFieldOptionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionCreateArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  update<T extends UserFieldOptionUpdateArgs>(
    args: Subset<T, UserFieldOptionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionUpdateArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  updateMany<T extends UserFieldOptionUpdateManyArgs>(
    args: Subset<T, UserFieldOptionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionUpdateManyArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  upsert<T extends UserFieldOptionUpsertArgs>(
    args: Subset<T, UserFieldOptionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionUpsertArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  delete<T extends UserFieldOptionDeleteArgs>(
    args: Subset<T, UserFieldOptionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionDeleteArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
  deleteMany<T extends UserFieldOptionDeleteManyArgs>(
    args: Subset<T, UserFieldOptionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionDeleteManyArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>
}
function UserFieldOptionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserFieldOptionDelegate {
  const UserFieldOption = <T extends FindManyUserFieldOptionArgs>(args: Subset<T, FindManyUserFieldOptionArgs>) => new UserFieldOptionClient<PromiseLike<Array<UserFieldOptionGetPayload<ExtractFindManyUserFieldOptionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userFieldOptions', 'userFieldOptions', args, [])
  UserFieldOption.findOne = <T extends FindOneUserFieldOptionArgs>(args: Subset<T, FindOneUserFieldOptionArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'query',
    'userFieldOption',
    'userFieldOptions.findOne',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'query',
    'userFieldOption',
    'userFieldOptions.findOne',
    args,
    []
  )
  UserFieldOption.findMany = <T extends FindManyUserFieldOptionArgs>(args: Subset<T, FindManyUserFieldOptionArgs>) => new UserFieldOptionClient<PromiseLike<Array<UserFieldOptionGetPayload<ExtractFindManyUserFieldOptionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userFieldOptions',
    'userFieldOptions.findMany',
    args,
    []
  )
  UserFieldOption.create = <T extends UserFieldOptionCreateArgs>(args: Subset<T, UserFieldOptionCreateArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserFieldOption',
    'userFieldOptions.create',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'createUserFieldOption',
    'userFieldOptions.create',
    args,
    []
  )
  UserFieldOption.update = <T extends UserFieldOptionUpdateArgs>(args: Subset<T, UserFieldOptionUpdateArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserFieldOption',
    'userFieldOptions.update',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserFieldOption',
    'userFieldOptions.update',
    args,
    []
  )
  UserFieldOption.updateMany = <T extends UserFieldOptionUpdateManyArgs>(args: Subset<T, UserFieldOptionUpdateManyArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserFieldOptions',
    'userFieldOptions.updateMany',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserFieldOptions',
    'userFieldOptions.updateMany',
    args,
    []
  )
  UserFieldOption.upsert = <T extends UserFieldOptionUpsertArgs>(args: Subset<T, UserFieldOptionUpsertArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserFieldOption',
    'userFieldOptions.upsert',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserFieldOption',
    'userFieldOptions.upsert',
    args,
    []
  )
  UserFieldOption.delete = <T extends UserFieldOptionDeleteArgs>(args: Subset<T, UserFieldOptionDeleteArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserFieldOption',
    'userFieldOptions.delete',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserFieldOption',
    'userFieldOptions.delete',
    args,
    []
  )
  UserFieldOption.deleteMany = <T extends UserFieldOptionDeleteManyArgs>(args: Subset<T, UserFieldOptionDeleteManyArgs>) => args.select ? new UserFieldOptionClient<'select' extends keyof T ? PromiseLike<UserFieldOptionGetPayload<ExtractUserFieldOptionArgsSelect<T>>> : UserFieldOptionClient<UserFieldOption>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserFieldOptions',
    'userFieldOptions.deleteMany',
    args,
    []
  ) : new UserFieldOptionClient<UserFieldOption>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserFieldOptions',
    'userFieldOptions.deleteMany',
    args,
    []
  )
  return UserFieldOption as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserFieldOptionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserFieldOptionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserFieldOption').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserFieldOption').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserFieldOptionArgs = {
  select?: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
}

export type FindOneUserFieldOptionArgsWithSelect = {
  select: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
}

type ExtractFindOneUserFieldOptionArgsSelect<S extends undefined | boolean | FindOneUserFieldOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserFieldOptionArgsWithSelect
  ? S['select']
  : true


export type FindManyUserFieldOptionArgs = {
  select?: UserFieldOptionSelect
  where?: UserFieldOptionWhereInput
  orderBy?: UserFieldOptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserFieldOptionArgsWithSelect = {
  select: UserFieldOptionSelect
  where?: UserFieldOptionWhereInput
  orderBy?: UserFieldOptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserFieldOptionArgsSelect<S extends undefined | boolean | FindManyUserFieldOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserFieldOptionArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionCreateArgs = {
  select?: UserFieldOptionSelect
  data: UserFieldOptionCreateInput
}

export type UserFieldOptionCreateArgsWithSelect = {
  select: UserFieldOptionSelect
  data: UserFieldOptionCreateInput
}

type ExtractUserFieldOptionCreateArgsSelect<S extends undefined | boolean | UserFieldOptionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionCreateArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionUpdateArgs = {
  select?: UserFieldOptionSelect
  data: UserFieldOptionUpdateInput
  where: UserFieldOptionWhereUniqueInput
}

export type UserFieldOptionUpdateArgsWithSelect = {
  select: UserFieldOptionSelect
  data: UserFieldOptionUpdateInput
  where: UserFieldOptionWhereUniqueInput
}

type ExtractUserFieldOptionUpdateArgsSelect<S extends undefined | boolean | UserFieldOptionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionUpdateArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionUpdateManyArgs = {
  select?: UserFieldOptionSelect
  data: UserFieldOptionUpdateManyMutationInput
  where?: UserFieldOptionWhereInput
}

export type UserFieldOptionUpdateManyArgsWithSelect = {
  select: UserFieldOptionSelect
  data: UserFieldOptionUpdateManyMutationInput
  where?: UserFieldOptionWhereInput
}

type ExtractUserFieldOptionUpdateManyArgsSelect<S extends undefined | boolean | UserFieldOptionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionUpsertArgs = {
  select?: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
  create: UserFieldOptionCreateInput
  update: UserFieldOptionUpdateInput
}

export type UserFieldOptionUpsertArgsWithSelect = {
  select: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
  create: UserFieldOptionCreateInput
  update: UserFieldOptionUpdateInput
}

type ExtractUserFieldOptionUpsertArgsSelect<S extends undefined | boolean | UserFieldOptionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionUpsertArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionDeleteArgs = {
  select?: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
}

export type UserFieldOptionDeleteArgsWithSelect = {
  select: UserFieldOptionSelect
  where: UserFieldOptionWhereUniqueInput
}

type ExtractUserFieldOptionDeleteArgsSelect<S extends undefined | boolean | UserFieldOptionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionDeleteArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionDeleteManyArgs = {
  select?: UserFieldOptionSelect
  where?: UserFieldOptionWhereInput
}

export type UserFieldOptionDeleteManyArgsWithSelect = {
  select: UserFieldOptionSelect
  where?: UserFieldOptionWhereInput
}

type ExtractUserFieldOptionDeleteManyArgsSelect<S extends undefined | boolean | UserFieldOptionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserFieldOptionArgs = {
  select?: UserFieldOptionSelect
}

export type UserFieldOptionArgsWithSelect = {
  select: UserFieldOptionSelect
}

type ExtractUserFieldOptionArgsSelect<S extends undefined | boolean | UserFieldOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserFieldOptionArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserHistory
 */

export type UserHistory = {
  id: number
  actingUserId: number | null
  action: number
  adminOnly: boolean | null
  categoryId: number | null
  context: string | null
  createdAt: string
  customType: string | null
  details: string | null
  email: string | null
  ipAddress: string | null
  newValue: string | null
  postId: number | null
  previousValue: string | null
  subject: string | null
  targetUserId: number | null
  topicId: number | null
  updatedAt: string
}

export type UserHistoryScalars = 'id' | 'actingUserId' | 'action' | 'adminOnly' | 'categoryId' | 'context' | 'createdAt' | 'customType' | 'details' | 'email' | 'ipAddress' | 'newValue' | 'postId' | 'previousValue' | 'subject' | 'targetUserId' | 'topicId' | 'updatedAt'


export type UserHistorySelect = {
  id?: boolean
  actingUserId?: boolean
  action?: boolean
  adminOnly?: boolean
  categoryId?: boolean
  context?: boolean
  createdAt?: boolean
  customType?: boolean
  details?: boolean
  email?: boolean
  ipAddress?: boolean
  newValue?: boolean
  postId?: boolean
  previousValue?: boolean
  subject?: boolean
  targetUserId?: boolean
  topicId?: boolean
  updatedAt?: boolean
}

type UserHistoryDefault = {
  id: true
  actingUserId: true
  action: true
  adminOnly: true
  categoryId: true
  context: true
  createdAt: true
  customType: true
  details: true
  email: true
  ipAddress: true
  newValue: true
  postId: true
  previousValue: true
  subject: true
  targetUserId: true
  topicId: true
  updatedAt: true
}


type UserHistoryGetPayload<S extends boolean | UserHistorySelect> = S extends true
  ? UserHistory
  : S extends UserHistorySelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserHistoryDefault, S>>]: P extends UserHistoryScalars
        ? UserHistory[P]
        : never
    }
   : never

export interface UserHistoryDelegate {
  <T extends FindManyUserHistoryArgs>(args?: Subset<T, FindManyUserHistoryArgs>): PromiseLike<Array<UserHistoryGetPayload<ExtractFindManyUserHistoryArgsSelect<T>>>>
  findOne<T extends FindOneUserHistoryArgs>(
    args: Subset<T, FindOneUserHistoryArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractFindOneUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>
  findMany<T extends FindManyUserHistoryArgs>(
    args?: Subset<T, FindManyUserHistoryArgs>
  ): PromiseLike<Array<UserHistoryGetPayload<ExtractFindManyUserHistoryArgsSelect<T>>>>
  create<T extends UserHistoryCreateArgs>(
    args: Subset<T, UserHistoryCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryCreateArgsSelect<T>>> : UserHistoryClient<UserHistory>
  update<T extends UserHistoryUpdateArgs>(
    args: Subset<T, UserHistoryUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryUpdateArgsSelect<T>>> : UserHistoryClient<UserHistory>
  updateMany<T extends UserHistoryUpdateManyArgs>(
    args: Subset<T, UserHistoryUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryUpdateManyArgsSelect<T>>> : UserHistoryClient<UserHistory>
  upsert<T extends UserHistoryUpsertArgs>(
    args: Subset<T, UserHistoryUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryUpsertArgsSelect<T>>> : UserHistoryClient<UserHistory>
  delete<T extends UserHistoryDeleteArgs>(
    args: Subset<T, UserHistoryDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryDeleteArgsSelect<T>>> : UserHistoryClient<UserHistory>
  deleteMany<T extends UserHistoryDeleteManyArgs>(
    args: Subset<T, UserHistoryDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryDeleteManyArgsSelect<T>>> : UserHistoryClient<UserHistory>
}
function UserHistoryDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserHistoryDelegate {
  const UserHistory = <T extends FindManyUserHistoryArgs>(args: Subset<T, FindManyUserHistoryArgs>) => new UserHistoryClient<PromiseLike<Array<UserHistoryGetPayload<ExtractFindManyUserHistoryArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userHistories', 'userHistories', args, [])
  UserHistory.findOne = <T extends FindOneUserHistoryArgs>(args: Subset<T, FindOneUserHistoryArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'query',
    'userHistory',
    'userHistories.findOne',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'query',
    'userHistory',
    'userHistories.findOne',
    args,
    []
  )
  UserHistory.findMany = <T extends FindManyUserHistoryArgs>(args: Subset<T, FindManyUserHistoryArgs>) => new UserHistoryClient<PromiseLike<Array<UserHistoryGetPayload<ExtractFindManyUserHistoryArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userHistories',
    'userHistories.findMany',
    args,
    []
  )
  UserHistory.create = <T extends UserHistoryCreateArgs>(args: Subset<T, UserHistoryCreateArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserHistory',
    'userHistories.create',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'createUserHistory',
    'userHistories.create',
    args,
    []
  )
  UserHistory.update = <T extends UserHistoryUpdateArgs>(args: Subset<T, UserHistoryUpdateArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserHistory',
    'userHistories.update',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserHistory',
    'userHistories.update',
    args,
    []
  )
  UserHistory.updateMany = <T extends UserHistoryUpdateManyArgs>(args: Subset<T, UserHistoryUpdateManyArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserHistories',
    'userHistories.updateMany',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserHistories',
    'userHistories.updateMany',
    args,
    []
  )
  UserHistory.upsert = <T extends UserHistoryUpsertArgs>(args: Subset<T, UserHistoryUpsertArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserHistory',
    'userHistories.upsert',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserHistory',
    'userHistories.upsert',
    args,
    []
  )
  UserHistory.delete = <T extends UserHistoryDeleteArgs>(args: Subset<T, UserHistoryDeleteArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserHistory',
    'userHistories.delete',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserHistory',
    'userHistories.delete',
    args,
    []
  )
  UserHistory.deleteMany = <T extends UserHistoryDeleteManyArgs>(args: Subset<T, UserHistoryDeleteManyArgs>) => args.select ? new UserHistoryClient<'select' extends keyof T ? PromiseLike<UserHistoryGetPayload<ExtractUserHistoryArgsSelect<T>>> : UserHistoryClient<UserHistory>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserHistories',
    'userHistories.deleteMany',
    args,
    []
  ) : new UserHistoryClient<UserHistory>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserHistories',
    'userHistories.deleteMany',
    args,
    []
  )
  return UserHistory as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserHistoryClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserHistoryArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserHistory').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserHistory').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserHistoryArgs = {
  select?: UserHistorySelect
  where: UserHistoryWhereUniqueInput
}

export type FindOneUserHistoryArgsWithSelect = {
  select: UserHistorySelect
  where: UserHistoryWhereUniqueInput
}

type ExtractFindOneUserHistoryArgsSelect<S extends undefined | boolean | FindOneUserHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserHistoryArgsWithSelect
  ? S['select']
  : true


export type FindManyUserHistoryArgs = {
  select?: UserHistorySelect
  where?: UserHistoryWhereInput
  orderBy?: UserHistoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserHistoryArgsWithSelect = {
  select: UserHistorySelect
  where?: UserHistoryWhereInput
  orderBy?: UserHistoryOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserHistoryArgsSelect<S extends undefined | boolean | FindManyUserHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserHistoryArgsWithSelect
  ? S['select']
  : true


export type UserHistoryCreateArgs = {
  select?: UserHistorySelect
  data: UserHistoryCreateInput
}

export type UserHistoryCreateArgsWithSelect = {
  select: UserHistorySelect
  data: UserHistoryCreateInput
}

type ExtractUserHistoryCreateArgsSelect<S extends undefined | boolean | UserHistoryCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryCreateArgsWithSelect
  ? S['select']
  : true


export type UserHistoryUpdateArgs = {
  select?: UserHistorySelect
  data: UserHistoryUpdateInput
  where: UserHistoryWhereUniqueInput
}

export type UserHistoryUpdateArgsWithSelect = {
  select: UserHistorySelect
  data: UserHistoryUpdateInput
  where: UserHistoryWhereUniqueInput
}

type ExtractUserHistoryUpdateArgsSelect<S extends undefined | boolean | UserHistoryUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryUpdateArgsWithSelect
  ? S['select']
  : true


export type UserHistoryUpdateManyArgs = {
  select?: UserHistorySelect
  data: UserHistoryUpdateManyMutationInput
  where?: UserHistoryWhereInput
}

export type UserHistoryUpdateManyArgsWithSelect = {
  select: UserHistorySelect
  data: UserHistoryUpdateManyMutationInput
  where?: UserHistoryWhereInput
}

type ExtractUserHistoryUpdateManyArgsSelect<S extends undefined | boolean | UserHistoryUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserHistoryUpsertArgs = {
  select?: UserHistorySelect
  where: UserHistoryWhereUniqueInput
  create: UserHistoryCreateInput
  update: UserHistoryUpdateInput
}

export type UserHistoryUpsertArgsWithSelect = {
  select: UserHistorySelect
  where: UserHistoryWhereUniqueInput
  create: UserHistoryCreateInput
  update: UserHistoryUpdateInput
}

type ExtractUserHistoryUpsertArgsSelect<S extends undefined | boolean | UserHistoryUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryUpsertArgsWithSelect
  ? S['select']
  : true


export type UserHistoryDeleteArgs = {
  select?: UserHistorySelect
  where: UserHistoryWhereUniqueInput
}

export type UserHistoryDeleteArgsWithSelect = {
  select: UserHistorySelect
  where: UserHistoryWhereUniqueInput
}

type ExtractUserHistoryDeleteArgsSelect<S extends undefined | boolean | UserHistoryDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryDeleteArgsWithSelect
  ? S['select']
  : true


export type UserHistoryDeleteManyArgs = {
  select?: UserHistorySelect
  where?: UserHistoryWhereInput
}

export type UserHistoryDeleteManyArgsWithSelect = {
  select: UserHistorySelect
  where?: UserHistoryWhereInput
}

type ExtractUserHistoryDeleteManyArgsSelect<S extends undefined | boolean | UserHistoryDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserHistoryArgs = {
  select?: UserHistorySelect
}

export type UserHistoryArgsWithSelect = {
  select: UserHistorySelect
}

type ExtractUserHistoryArgsSelect<S extends undefined | boolean | UserHistoryArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserHistoryArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserOpenId
 */

export type UserOpenId = {
  id: number
  active: boolean
  createdAt: string
  email: string
  updatedAt: string
  url: string
  userId: number
}

export type UserOpenIdScalars = 'id' | 'active' | 'createdAt' | 'email' | 'updatedAt' | 'url' | 'userId'


export type UserOpenIdSelect = {
  id?: boolean
  active?: boolean
  createdAt?: boolean
  email?: boolean
  updatedAt?: boolean
  url?: boolean
  userId?: boolean
}

type UserOpenIdDefault = {
  id: true
  active: true
  createdAt: true
  email: true
  updatedAt: true
  url: true
  userId: true
}


type UserOpenIdGetPayload<S extends boolean | UserOpenIdSelect> = S extends true
  ? UserOpenId
  : S extends UserOpenIdSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserOpenIdDefault, S>>]: P extends UserOpenIdScalars
        ? UserOpenId[P]
        : never
    }
   : never

export interface UserOpenIdDelegate {
  <T extends FindManyUserOpenIdArgs>(args?: Subset<T, FindManyUserOpenIdArgs>): PromiseLike<Array<UserOpenIdGetPayload<ExtractFindManyUserOpenIdArgsSelect<T>>>>
  findOne<T extends FindOneUserOpenIdArgs>(
    args: Subset<T, FindOneUserOpenIdArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractFindOneUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  findMany<T extends FindManyUserOpenIdArgs>(
    args?: Subset<T, FindManyUserOpenIdArgs>
  ): PromiseLike<Array<UserOpenIdGetPayload<ExtractFindManyUserOpenIdArgsSelect<T>>>>
  create<T extends UserOpenIdCreateArgs>(
    args: Subset<T, UserOpenIdCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdCreateArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  update<T extends UserOpenIdUpdateArgs>(
    args: Subset<T, UserOpenIdUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdUpdateArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  updateMany<T extends UserOpenIdUpdateManyArgs>(
    args: Subset<T, UserOpenIdUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdUpdateManyArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  upsert<T extends UserOpenIdUpsertArgs>(
    args: Subset<T, UserOpenIdUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdUpsertArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  delete<T extends UserOpenIdDeleteArgs>(
    args: Subset<T, UserOpenIdDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdDeleteArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
  deleteMany<T extends UserOpenIdDeleteManyArgs>(
    args: Subset<T, UserOpenIdDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdDeleteManyArgsSelect<T>>> : UserOpenIdClient<UserOpenId>
}
function UserOpenIdDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserOpenIdDelegate {
  const UserOpenId = <T extends FindManyUserOpenIdArgs>(args: Subset<T, FindManyUserOpenIdArgs>) => new UserOpenIdClient<PromiseLike<Array<UserOpenIdGetPayload<ExtractFindManyUserOpenIdArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userOpenIds', 'userOpenIds', args, [])
  UserOpenId.findOne = <T extends FindOneUserOpenIdArgs>(args: Subset<T, FindOneUserOpenIdArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'query',
    'userOpenId',
    'userOpenIds.findOne',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'query',
    'userOpenId',
    'userOpenIds.findOne',
    args,
    []
  )
  UserOpenId.findMany = <T extends FindManyUserOpenIdArgs>(args: Subset<T, FindManyUserOpenIdArgs>) => new UserOpenIdClient<PromiseLike<Array<UserOpenIdGetPayload<ExtractFindManyUserOpenIdArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userOpenIds',
    'userOpenIds.findMany',
    args,
    []
  )
  UserOpenId.create = <T extends UserOpenIdCreateArgs>(args: Subset<T, UserOpenIdCreateArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserOpenId',
    'userOpenIds.create',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'createUserOpenId',
    'userOpenIds.create',
    args,
    []
  )
  UserOpenId.update = <T extends UserOpenIdUpdateArgs>(args: Subset<T, UserOpenIdUpdateArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserOpenId',
    'userOpenIds.update',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserOpenId',
    'userOpenIds.update',
    args,
    []
  )
  UserOpenId.updateMany = <T extends UserOpenIdUpdateManyArgs>(args: Subset<T, UserOpenIdUpdateManyArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserOpenIds',
    'userOpenIds.updateMany',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserOpenIds',
    'userOpenIds.updateMany',
    args,
    []
  )
  UserOpenId.upsert = <T extends UserOpenIdUpsertArgs>(args: Subset<T, UserOpenIdUpsertArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserOpenId',
    'userOpenIds.upsert',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserOpenId',
    'userOpenIds.upsert',
    args,
    []
  )
  UserOpenId.delete = <T extends UserOpenIdDeleteArgs>(args: Subset<T, UserOpenIdDeleteArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserOpenId',
    'userOpenIds.delete',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserOpenId',
    'userOpenIds.delete',
    args,
    []
  )
  UserOpenId.deleteMany = <T extends UserOpenIdDeleteManyArgs>(args: Subset<T, UserOpenIdDeleteManyArgs>) => args.select ? new UserOpenIdClient<'select' extends keyof T ? PromiseLike<UserOpenIdGetPayload<ExtractUserOpenIdArgsSelect<T>>> : UserOpenIdClient<UserOpenId>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserOpenIds',
    'userOpenIds.deleteMany',
    args,
    []
  ) : new UserOpenIdClient<UserOpenId>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserOpenIds',
    'userOpenIds.deleteMany',
    args,
    []
  )
  return UserOpenId as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserOpenIdClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserOpenIdArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserOpenId').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserOpenId').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserOpenIdArgs = {
  select?: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
}

export type FindOneUserOpenIdArgsWithSelect = {
  select: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
}

type ExtractFindOneUserOpenIdArgsSelect<S extends undefined | boolean | FindOneUserOpenIdArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserOpenIdArgsWithSelect
  ? S['select']
  : true


export type FindManyUserOpenIdArgs = {
  select?: UserOpenIdSelect
  where?: UserOpenIdWhereInput
  orderBy?: UserOpenIdOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserOpenIdArgsWithSelect = {
  select: UserOpenIdSelect
  where?: UserOpenIdWhereInput
  orderBy?: UserOpenIdOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserOpenIdArgsSelect<S extends undefined | boolean | FindManyUserOpenIdArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserOpenIdArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdCreateArgs = {
  select?: UserOpenIdSelect
  data: UserOpenIdCreateInput
}

export type UserOpenIdCreateArgsWithSelect = {
  select: UserOpenIdSelect
  data: UserOpenIdCreateInput
}

type ExtractUserOpenIdCreateArgsSelect<S extends undefined | boolean | UserOpenIdCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdCreateArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdUpdateArgs = {
  select?: UserOpenIdSelect
  data: UserOpenIdUpdateInput
  where: UserOpenIdWhereUniqueInput
}

export type UserOpenIdUpdateArgsWithSelect = {
  select: UserOpenIdSelect
  data: UserOpenIdUpdateInput
  where: UserOpenIdWhereUniqueInput
}

type ExtractUserOpenIdUpdateArgsSelect<S extends undefined | boolean | UserOpenIdUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdUpdateArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdUpdateManyArgs = {
  select?: UserOpenIdSelect
  data: UserOpenIdUpdateManyMutationInput
  where?: UserOpenIdWhereInput
}

export type UserOpenIdUpdateManyArgsWithSelect = {
  select: UserOpenIdSelect
  data: UserOpenIdUpdateManyMutationInput
  where?: UserOpenIdWhereInput
}

type ExtractUserOpenIdUpdateManyArgsSelect<S extends undefined | boolean | UserOpenIdUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdUpsertArgs = {
  select?: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
  create: UserOpenIdCreateInput
  update: UserOpenIdUpdateInput
}

export type UserOpenIdUpsertArgsWithSelect = {
  select: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
  create: UserOpenIdCreateInput
  update: UserOpenIdUpdateInput
}

type ExtractUserOpenIdUpsertArgsSelect<S extends undefined | boolean | UserOpenIdUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdUpsertArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdDeleteArgs = {
  select?: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
}

export type UserOpenIdDeleteArgsWithSelect = {
  select: UserOpenIdSelect
  where: UserOpenIdWhereUniqueInput
}

type ExtractUserOpenIdDeleteArgsSelect<S extends undefined | boolean | UserOpenIdDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdDeleteArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdDeleteManyArgs = {
  select?: UserOpenIdSelect
  where?: UserOpenIdWhereInput
}

export type UserOpenIdDeleteManyArgsWithSelect = {
  select: UserOpenIdSelect
  where?: UserOpenIdWhereInput
}

type ExtractUserOpenIdDeleteManyArgsSelect<S extends undefined | boolean | UserOpenIdDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserOpenIdArgs = {
  select?: UserOpenIdSelect
}

export type UserOpenIdArgsWithSelect = {
  select: UserOpenIdSelect
}

type ExtractUserOpenIdArgsSelect<S extends undefined | boolean | UserOpenIdArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOpenIdArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserOption
 */

export type UserOption = {
  user_id: number
  allowPrivateMessages: boolean
  automaticallyUnpinTopics: boolean
  autoTrackTopicsAfterMsecs: number | null
  digestAfterMinutes: number | null
  disableJumpReply: boolean
  dynamicFavicon: boolean
  emailAlways: boolean
  emailDigests: boolean | null
  emailDirect: boolean
  emailInReplyTo: boolean
  emailPreviousReplies: number
  emailPrivateMessages: boolean
  enableQuoting: boolean
  externalLinksInNewTab: boolean
  hideProfileAndPresence: boolean
  homepageId: number | null
  includeTl0InDigests: boolean | null
  lastRedirectedToTopAt: string | null
  likeNotificationFrequency: number
  mailingListMode: boolean
  mailingListModeFrequency: number
  newTopicDurationMinutes: number | null
  notificationLevelWhenReplying: number | null
  themeIds: number
  themeKeySeq: number
}

export type UserOptionScalars = 'user_id' | 'allowPrivateMessages' | 'automaticallyUnpinTopics' | 'autoTrackTopicsAfterMsecs' | 'digestAfterMinutes' | 'disableJumpReply' | 'dynamicFavicon' | 'emailAlways' | 'emailDigests' | 'emailDirect' | 'emailInReplyTo' | 'emailPreviousReplies' | 'emailPrivateMessages' | 'enableQuoting' | 'externalLinksInNewTab' | 'hideProfileAndPresence' | 'homepageId' | 'includeTl0InDigests' | 'lastRedirectedToTopAt' | 'likeNotificationFrequency' | 'mailingListMode' | 'mailingListModeFrequency' | 'newTopicDurationMinutes' | 'notificationLevelWhenReplying' | 'themeIds' | 'themeKeySeq'


export type UserOptionSelect = {
  user_id?: boolean
  allowPrivateMessages?: boolean
  automaticallyUnpinTopics?: boolean
  autoTrackTopicsAfterMsecs?: boolean
  digestAfterMinutes?: boolean
  disableJumpReply?: boolean
  dynamicFavicon?: boolean
  emailAlways?: boolean
  emailDigests?: boolean
  emailDirect?: boolean
  emailInReplyTo?: boolean
  emailPreviousReplies?: boolean
  emailPrivateMessages?: boolean
  enableQuoting?: boolean
  externalLinksInNewTab?: boolean
  hideProfileAndPresence?: boolean
  homepageId?: boolean
  includeTl0InDigests?: boolean
  lastRedirectedToTopAt?: boolean
  likeNotificationFrequency?: boolean
  mailingListMode?: boolean
  mailingListModeFrequency?: boolean
  newTopicDurationMinutes?: boolean
  notificationLevelWhenReplying?: boolean
  themeIds?: boolean
  themeKeySeq?: boolean
}

type UserOptionDefault = {
  user_id: true
  allowPrivateMessages: true
  automaticallyUnpinTopics: true
  autoTrackTopicsAfterMsecs: true
  digestAfterMinutes: true
  disableJumpReply: true
  dynamicFavicon: true
  emailAlways: true
  emailDigests: true
  emailDirect: true
  emailInReplyTo: true
  emailPreviousReplies: true
  emailPrivateMessages: true
  enableQuoting: true
  externalLinksInNewTab: true
  hideProfileAndPresence: true
  homepageId: true
  includeTl0InDigests: true
  lastRedirectedToTopAt: true
  likeNotificationFrequency: true
  mailingListMode: true
  mailingListModeFrequency: true
  newTopicDurationMinutes: true
  notificationLevelWhenReplying: true
  themeIds: true
  themeKeySeq: true
}


type UserOptionGetPayload<S extends boolean | UserOptionSelect> = S extends true
  ? UserOption
  : S extends UserOptionSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserOptionDefault, S>>]: P extends UserOptionScalars
        ? UserOption[P]
        : never
    }
   : never

export interface UserOptionDelegate {
  <T extends FindManyUserOptionArgs>(args?: Subset<T, FindManyUserOptionArgs>): PromiseLike<Array<UserOptionGetPayload<ExtractFindManyUserOptionArgsSelect<T>>>>
  findOne<T extends FindOneUserOptionArgs>(
    args: Subset<T, FindOneUserOptionArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractFindOneUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>
  findMany<T extends FindManyUserOptionArgs>(
    args?: Subset<T, FindManyUserOptionArgs>
  ): PromiseLike<Array<UserOptionGetPayload<ExtractFindManyUserOptionArgsSelect<T>>>>
  create<T extends UserOptionCreateArgs>(
    args: Subset<T, UserOptionCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionCreateArgsSelect<T>>> : UserOptionClient<UserOption>
  update<T extends UserOptionUpdateArgs>(
    args: Subset<T, UserOptionUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionUpdateArgsSelect<T>>> : UserOptionClient<UserOption>
  updateMany<T extends UserOptionUpdateManyArgs>(
    args: Subset<T, UserOptionUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionUpdateManyArgsSelect<T>>> : UserOptionClient<UserOption>
  upsert<T extends UserOptionUpsertArgs>(
    args: Subset<T, UserOptionUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionUpsertArgsSelect<T>>> : UserOptionClient<UserOption>
  delete<T extends UserOptionDeleteArgs>(
    args: Subset<T, UserOptionDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionDeleteArgsSelect<T>>> : UserOptionClient<UserOption>
  deleteMany<T extends UserOptionDeleteManyArgs>(
    args: Subset<T, UserOptionDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionDeleteManyArgsSelect<T>>> : UserOptionClient<UserOption>
}
function UserOptionDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserOptionDelegate {
  const UserOption = <T extends FindManyUserOptionArgs>(args: Subset<T, FindManyUserOptionArgs>) => new UserOptionClient<PromiseLike<Array<UserOptionGetPayload<ExtractFindManyUserOptionArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userOptions', 'userOptions', args, [])
  UserOption.findOne = <T extends FindOneUserOptionArgs>(args: Subset<T, FindOneUserOptionArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'query',
    'userOption',
    'userOptions.findOne',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'query',
    'userOption',
    'userOptions.findOne',
    args,
    []
  )
  UserOption.findMany = <T extends FindManyUserOptionArgs>(args: Subset<T, FindManyUserOptionArgs>) => new UserOptionClient<PromiseLike<Array<UserOptionGetPayload<ExtractFindManyUserOptionArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userOptions',
    'userOptions.findMany',
    args,
    []
  )
  UserOption.create = <T extends UserOptionCreateArgs>(args: Subset<T, UserOptionCreateArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserOption',
    'userOptions.create',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'createUserOption',
    'userOptions.create',
    args,
    []
  )
  UserOption.update = <T extends UserOptionUpdateArgs>(args: Subset<T, UserOptionUpdateArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserOption',
    'userOptions.update',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserOption',
    'userOptions.update',
    args,
    []
  )
  UserOption.updateMany = <T extends UserOptionUpdateManyArgs>(args: Subset<T, UserOptionUpdateManyArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserOptions',
    'userOptions.updateMany',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserOptions',
    'userOptions.updateMany',
    args,
    []
  )
  UserOption.upsert = <T extends UserOptionUpsertArgs>(args: Subset<T, UserOptionUpsertArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserOption',
    'userOptions.upsert',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserOption',
    'userOptions.upsert',
    args,
    []
  )
  UserOption.delete = <T extends UserOptionDeleteArgs>(args: Subset<T, UserOptionDeleteArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserOption',
    'userOptions.delete',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserOption',
    'userOptions.delete',
    args,
    []
  )
  UserOption.deleteMany = <T extends UserOptionDeleteManyArgs>(args: Subset<T, UserOptionDeleteManyArgs>) => args.select ? new UserOptionClient<'select' extends keyof T ? PromiseLike<UserOptionGetPayload<ExtractUserOptionArgsSelect<T>>> : UserOptionClient<UserOption>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserOptions',
    'userOptions.deleteMany',
    args,
    []
  ) : new UserOptionClient<UserOption>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserOptions',
    'userOptions.deleteMany',
    args,
    []
  )
  return UserOption as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserOptionClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserOptionArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserOption').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserOption').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserOptionArgs = {
  select?: UserOptionSelect
  where: UserOptionWhereUniqueInput
}

export type FindOneUserOptionArgsWithSelect = {
  select: UserOptionSelect
  where: UserOptionWhereUniqueInput
}

type ExtractFindOneUserOptionArgsSelect<S extends undefined | boolean | FindOneUserOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserOptionArgsWithSelect
  ? S['select']
  : true


export type FindManyUserOptionArgs = {
  select?: UserOptionSelect
  where?: UserOptionWhereInput
  orderBy?: UserOptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserOptionArgsWithSelect = {
  select: UserOptionSelect
  where?: UserOptionWhereInput
  orderBy?: UserOptionOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserOptionArgsSelect<S extends undefined | boolean | FindManyUserOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserOptionArgsWithSelect
  ? S['select']
  : true


export type UserOptionCreateArgs = {
  select?: UserOptionSelect
  data: UserOptionCreateInput
}

export type UserOptionCreateArgsWithSelect = {
  select: UserOptionSelect
  data: UserOptionCreateInput
}

type ExtractUserOptionCreateArgsSelect<S extends undefined | boolean | UserOptionCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionCreateArgsWithSelect
  ? S['select']
  : true


export type UserOptionUpdateArgs = {
  select?: UserOptionSelect
  data: UserOptionUpdateInput
  where: UserOptionWhereUniqueInput
}

export type UserOptionUpdateArgsWithSelect = {
  select: UserOptionSelect
  data: UserOptionUpdateInput
  where: UserOptionWhereUniqueInput
}

type ExtractUserOptionUpdateArgsSelect<S extends undefined | boolean | UserOptionUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionUpdateArgsWithSelect
  ? S['select']
  : true


export type UserOptionUpdateManyArgs = {
  select?: UserOptionSelect
  data: UserOptionUpdateManyMutationInput
  where?: UserOptionWhereInput
}

export type UserOptionUpdateManyArgsWithSelect = {
  select: UserOptionSelect
  data: UserOptionUpdateManyMutationInput
  where?: UserOptionWhereInput
}

type ExtractUserOptionUpdateManyArgsSelect<S extends undefined | boolean | UserOptionUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserOptionUpsertArgs = {
  select?: UserOptionSelect
  where: UserOptionWhereUniqueInput
  create: UserOptionCreateInput
  update: UserOptionUpdateInput
}

export type UserOptionUpsertArgsWithSelect = {
  select: UserOptionSelect
  where: UserOptionWhereUniqueInput
  create: UserOptionCreateInput
  update: UserOptionUpdateInput
}

type ExtractUserOptionUpsertArgsSelect<S extends undefined | boolean | UserOptionUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionUpsertArgsWithSelect
  ? S['select']
  : true


export type UserOptionDeleteArgs = {
  select?: UserOptionSelect
  where: UserOptionWhereUniqueInput
}

export type UserOptionDeleteArgsWithSelect = {
  select: UserOptionSelect
  where: UserOptionWhereUniqueInput
}

type ExtractUserOptionDeleteArgsSelect<S extends undefined | boolean | UserOptionDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionDeleteArgsWithSelect
  ? S['select']
  : true


export type UserOptionDeleteManyArgs = {
  select?: UserOptionSelect
  where?: UserOptionWhereInput
}

export type UserOptionDeleteManyArgsWithSelect = {
  select: UserOptionSelect
  where?: UserOptionWhereInput
}

type ExtractUserOptionDeleteManyArgsSelect<S extends undefined | boolean | UserOptionDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserOptionArgs = {
  select?: UserOptionSelect
}

export type UserOptionArgsWithSelect = {
  select: UserOptionSelect
}

type ExtractUserOptionArgsSelect<S extends undefined | boolean | UserOptionArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserOptionArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserProfile
 */

export type UserProfile = {
  user_id: number
  badgeGrantedTitle: boolean | null
  bioCooked: string | null
  bioCookedVersion: number | null
  bioRaw: string | null
  cardBackground: string | null
  dismissedBannerKey: number | null
  location: string | null
  profileBackground: string | null
  views: number
  website: string | null
}

export type UserProfileScalars = 'user_id' | 'badgeGrantedTitle' | 'bioCooked' | 'bioCookedVersion' | 'bioRaw' | 'cardBackground' | 'dismissedBannerKey' | 'location' | 'profileBackground' | 'views' | 'website'


export type UserProfileSelect = {
  user_id?: boolean
  badgeGrantedTitle?: boolean
  bioCooked?: boolean
  bioCookedVersion?: boolean
  bioRaw?: boolean
  cardBackground?: boolean
  dismissedBannerKey?: boolean
  location?: boolean
  profileBackground?: boolean
  views?: boolean
  website?: boolean
}

type UserProfileDefault = {
  user_id: true
  badgeGrantedTitle: true
  bioCooked: true
  bioCookedVersion: true
  bioRaw: true
  cardBackground: true
  dismissedBannerKey: true
  location: true
  profileBackground: true
  views: true
  website: true
}


type UserProfileGetPayload<S extends boolean | UserProfileSelect> = S extends true
  ? UserProfile
  : S extends UserProfileSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserProfileDefault, S>>]: P extends UserProfileScalars
        ? UserProfile[P]
        : never
    }
   : never

export interface UserProfileDelegate {
  <T extends FindManyUserProfileArgs>(args?: Subset<T, FindManyUserProfileArgs>): PromiseLike<Array<UserProfileGetPayload<ExtractFindManyUserProfileArgsSelect<T>>>>
  findMany<T extends FindManyUserProfileArgs>(
    args?: Subset<T, FindManyUserProfileArgs>
  ): PromiseLike<Array<UserProfileGetPayload<ExtractFindManyUserProfileArgsSelect<T>>>>
  create<T extends UserProfileCreateArgs>(
    args: Subset<T, UserProfileCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileCreateArgsSelect<T>>> : UserProfileClient<UserProfile>
  updateMany<T extends UserProfileUpdateManyArgs>(
    args: Subset<T, UserProfileUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileUpdateManyArgsSelect<T>>> : UserProfileClient<UserProfile>
  deleteMany<T extends UserProfileDeleteManyArgs>(
    args: Subset<T, UserProfileDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileDeleteManyArgsSelect<T>>> : UserProfileClient<UserProfile>
}
function UserProfileDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserProfileDelegate {
  const UserProfile = <T extends FindManyUserProfileArgs>(args: Subset<T, FindManyUserProfileArgs>) => new UserProfileClient<PromiseLike<Array<UserProfileGetPayload<ExtractFindManyUserProfileArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userProfiles', 'userProfiles', args, [])
  UserProfile.findMany = <T extends FindManyUserProfileArgs>(args: Subset<T, FindManyUserProfileArgs>) => new UserProfileClient<PromiseLike<Array<UserProfileGetPayload<ExtractFindManyUserProfileArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userProfiles',
    'userProfiles.findMany',
    args,
    []
  )
  UserProfile.create = <T extends UserProfileCreateArgs>(args: Subset<T, UserProfileCreateArgs>) => args.select ? new UserProfileClient<'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileArgsSelect<T>>> : UserProfileClient<UserProfile>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserProfile',
    'userProfiles.create',
    args,
    []
  ) : new UserProfileClient<UserProfile>(
    dmmf,
    fetcher,
    'mutation',
    'createUserProfile',
    'userProfiles.create',
    args,
    []
  )
  UserProfile.updateMany = <T extends UserProfileUpdateManyArgs>(args: Subset<T, UserProfileUpdateManyArgs>) => args.select ? new UserProfileClient<'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileArgsSelect<T>>> : UserProfileClient<UserProfile>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserProfiles',
    'userProfiles.updateMany',
    args,
    []
  ) : new UserProfileClient<UserProfile>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserProfiles',
    'userProfiles.updateMany',
    args,
    []
  )
  UserProfile.deleteMany = <T extends UserProfileDeleteManyArgs>(args: Subset<T, UserProfileDeleteManyArgs>) => args.select ? new UserProfileClient<'select' extends keyof T ? PromiseLike<UserProfileGetPayload<ExtractUserProfileArgsSelect<T>>> : UserProfileClient<UserProfile>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserProfiles',
    'userProfiles.deleteMany',
    args,
    []
  ) : new UserProfileClient<UserProfile>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserProfiles',
    'userProfiles.deleteMany',
    args,
    []
  )
  return UserProfile as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserProfileClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserProfileArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserProfile').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserProfile').catch(onrejected)
  }
}


// InputTypes

export type FindManyUserProfileArgs = {
  select?: UserProfileSelect
  where?: UserProfileWhereInput
  orderBy?: UserProfileOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserProfileArgsWithSelect = {
  select: UserProfileSelect
  where?: UserProfileWhereInput
  orderBy?: UserProfileOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserProfileArgsSelect<S extends undefined | boolean | FindManyUserProfileArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserProfileArgsWithSelect
  ? S['select']
  : true


export type UserProfileCreateArgs = {
  select?: UserProfileSelect
  data: UserProfileCreateInput
}

export type UserProfileCreateArgsWithSelect = {
  select: UserProfileSelect
  data: UserProfileCreateInput
}

type ExtractUserProfileCreateArgsSelect<S extends undefined | boolean | UserProfileCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileCreateArgsWithSelect
  ? S['select']
  : true


export type UserProfileUpdateManyArgs = {
  select?: UserProfileSelect
  data: UserProfileUpdateManyMutationInput
  where?: UserProfileWhereInput
}

export type UserProfileUpdateManyArgsWithSelect = {
  select: UserProfileSelect
  data: UserProfileUpdateManyMutationInput
  where?: UserProfileWhereInput
}

type ExtractUserProfileUpdateManyArgsSelect<S extends undefined | boolean | UserProfileUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserProfileDeleteManyArgs = {
  select?: UserProfileSelect
  where?: UserProfileWhereInput
}

export type UserProfileDeleteManyArgsWithSelect = {
  select: UserProfileSelect
  where?: UserProfileWhereInput
}

type ExtractUserProfileDeleteManyArgsSelect<S extends undefined | boolean | UserProfileDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserProfileArgs = {
  select?: UserProfileSelect
}

export type UserProfileArgsWithSelect = {
  select: UserProfileSelect
}

type ExtractUserProfileArgsSelect<S extends undefined | boolean | UserProfileArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserProfileView
 */

export type UserProfileView = {
  id: number
  userId: number | null
  userProfileId: number
  viewedAt: string
}

export type UserProfileViewScalars = 'id' | 'userId' | 'userProfileId' | 'viewedAt'


export type UserProfileViewSelect = {
  id?: boolean
  userId?: boolean
  userProfileId?: boolean
  viewedAt?: boolean
}

type UserProfileViewDefault = {
  id: true
  userId: true
  userProfileId: true
  viewedAt: true
}


type UserProfileViewGetPayload<S extends boolean | UserProfileViewSelect> = S extends true
  ? UserProfileView
  : S extends UserProfileViewSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserProfileViewDefault, S>>]: P extends UserProfileViewScalars
        ? UserProfileView[P]
        : never
    }
   : never

export interface UserProfileViewDelegate {
  <T extends FindManyUserProfileViewArgs>(args?: Subset<T, FindManyUserProfileViewArgs>): PromiseLike<Array<UserProfileViewGetPayload<ExtractFindManyUserProfileViewArgsSelect<T>>>>
  findOne<T extends FindOneUserProfileViewArgs>(
    args: Subset<T, FindOneUserProfileViewArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractFindOneUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  findMany<T extends FindManyUserProfileViewArgs>(
    args?: Subset<T, FindManyUserProfileViewArgs>
  ): PromiseLike<Array<UserProfileViewGetPayload<ExtractFindManyUserProfileViewArgsSelect<T>>>>
  create<T extends UserProfileViewCreateArgs>(
    args: Subset<T, UserProfileViewCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewCreateArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  update<T extends UserProfileViewUpdateArgs>(
    args: Subset<T, UserProfileViewUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewUpdateArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  updateMany<T extends UserProfileViewUpdateManyArgs>(
    args: Subset<T, UserProfileViewUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewUpdateManyArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  upsert<T extends UserProfileViewUpsertArgs>(
    args: Subset<T, UserProfileViewUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewUpsertArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  delete<T extends UserProfileViewDeleteArgs>(
    args: Subset<T, UserProfileViewDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewDeleteArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
  deleteMany<T extends UserProfileViewDeleteManyArgs>(
    args: Subset<T, UserProfileViewDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewDeleteManyArgsSelect<T>>> : UserProfileViewClient<UserProfileView>
}
function UserProfileViewDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserProfileViewDelegate {
  const UserProfileView = <T extends FindManyUserProfileViewArgs>(args: Subset<T, FindManyUserProfileViewArgs>) => new UserProfileViewClient<PromiseLike<Array<UserProfileViewGetPayload<ExtractFindManyUserProfileViewArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userProfileViews', 'userProfileViews', args, [])
  UserProfileView.findOne = <T extends FindOneUserProfileViewArgs>(args: Subset<T, FindOneUserProfileViewArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'query',
    'userProfileView',
    'userProfileViews.findOne',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'query',
    'userProfileView',
    'userProfileViews.findOne',
    args,
    []
  )
  UserProfileView.findMany = <T extends FindManyUserProfileViewArgs>(args: Subset<T, FindManyUserProfileViewArgs>) => new UserProfileViewClient<PromiseLike<Array<UserProfileViewGetPayload<ExtractFindManyUserProfileViewArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userProfileViews',
    'userProfileViews.findMany',
    args,
    []
  )
  UserProfileView.create = <T extends UserProfileViewCreateArgs>(args: Subset<T, UserProfileViewCreateArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserProfileView',
    'userProfileViews.create',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'createUserProfileView',
    'userProfileViews.create',
    args,
    []
  )
  UserProfileView.update = <T extends UserProfileViewUpdateArgs>(args: Subset<T, UserProfileViewUpdateArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserProfileView',
    'userProfileViews.update',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserProfileView',
    'userProfileViews.update',
    args,
    []
  )
  UserProfileView.updateMany = <T extends UserProfileViewUpdateManyArgs>(args: Subset<T, UserProfileViewUpdateManyArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserProfileViews',
    'userProfileViews.updateMany',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserProfileViews',
    'userProfileViews.updateMany',
    args,
    []
  )
  UserProfileView.upsert = <T extends UserProfileViewUpsertArgs>(args: Subset<T, UserProfileViewUpsertArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserProfileView',
    'userProfileViews.upsert',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserProfileView',
    'userProfileViews.upsert',
    args,
    []
  )
  UserProfileView.delete = <T extends UserProfileViewDeleteArgs>(args: Subset<T, UserProfileViewDeleteArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserProfileView',
    'userProfileViews.delete',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserProfileView',
    'userProfileViews.delete',
    args,
    []
  )
  UserProfileView.deleteMany = <T extends UserProfileViewDeleteManyArgs>(args: Subset<T, UserProfileViewDeleteManyArgs>) => args.select ? new UserProfileViewClient<'select' extends keyof T ? PromiseLike<UserProfileViewGetPayload<ExtractUserProfileViewArgsSelect<T>>> : UserProfileViewClient<UserProfileView>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserProfileViews',
    'userProfileViews.deleteMany',
    args,
    []
  ) : new UserProfileViewClient<UserProfileView>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserProfileViews',
    'userProfileViews.deleteMany',
    args,
    []
  )
  return UserProfileView as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserProfileViewClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserProfileViewArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserProfileView').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserProfileView').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserProfileViewArgs = {
  select?: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
}

export type FindOneUserProfileViewArgsWithSelect = {
  select: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
}

type ExtractFindOneUserProfileViewArgsSelect<S extends undefined | boolean | FindOneUserProfileViewArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserProfileViewArgsWithSelect
  ? S['select']
  : true


export type FindManyUserProfileViewArgs = {
  select?: UserProfileViewSelect
  where?: UserProfileViewWhereInput
  orderBy?: UserProfileViewOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserProfileViewArgsWithSelect = {
  select: UserProfileViewSelect
  where?: UserProfileViewWhereInput
  orderBy?: UserProfileViewOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserProfileViewArgsSelect<S extends undefined | boolean | FindManyUserProfileViewArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserProfileViewArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewCreateArgs = {
  select?: UserProfileViewSelect
  data: UserProfileViewCreateInput
}

export type UserProfileViewCreateArgsWithSelect = {
  select: UserProfileViewSelect
  data: UserProfileViewCreateInput
}

type ExtractUserProfileViewCreateArgsSelect<S extends undefined | boolean | UserProfileViewCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewCreateArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewUpdateArgs = {
  select?: UserProfileViewSelect
  data: UserProfileViewUpdateInput
  where: UserProfileViewWhereUniqueInput
}

export type UserProfileViewUpdateArgsWithSelect = {
  select: UserProfileViewSelect
  data: UserProfileViewUpdateInput
  where: UserProfileViewWhereUniqueInput
}

type ExtractUserProfileViewUpdateArgsSelect<S extends undefined | boolean | UserProfileViewUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewUpdateArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewUpdateManyArgs = {
  select?: UserProfileViewSelect
  data: UserProfileViewUpdateManyMutationInput
  where?: UserProfileViewWhereInput
}

export type UserProfileViewUpdateManyArgsWithSelect = {
  select: UserProfileViewSelect
  data: UserProfileViewUpdateManyMutationInput
  where?: UserProfileViewWhereInput
}

type ExtractUserProfileViewUpdateManyArgsSelect<S extends undefined | boolean | UserProfileViewUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewUpsertArgs = {
  select?: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
  create: UserProfileViewCreateInput
  update: UserProfileViewUpdateInput
}

export type UserProfileViewUpsertArgsWithSelect = {
  select: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
  create: UserProfileViewCreateInput
  update: UserProfileViewUpdateInput
}

type ExtractUserProfileViewUpsertArgsSelect<S extends undefined | boolean | UserProfileViewUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewUpsertArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewDeleteArgs = {
  select?: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
}

export type UserProfileViewDeleteArgsWithSelect = {
  select: UserProfileViewSelect
  where: UserProfileViewWhereUniqueInput
}

type ExtractUserProfileViewDeleteArgsSelect<S extends undefined | boolean | UserProfileViewDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewDeleteArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewDeleteManyArgs = {
  select?: UserProfileViewSelect
  where?: UserProfileViewWhereInput
}

export type UserProfileViewDeleteManyArgsWithSelect = {
  select: UserProfileViewSelect
  where?: UserProfileViewWhereInput
}

type ExtractUserProfileViewDeleteManyArgsSelect<S extends undefined | boolean | UserProfileViewDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserProfileViewArgs = {
  select?: UserProfileViewSelect
}

export type UserProfileViewArgsWithSelect = {
  select: UserProfileViewSelect
}

type ExtractUserProfileViewArgsSelect<S extends undefined | boolean | UserProfileViewArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserProfileViewArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserSearchDatum
 */

export type UserSearchDatum = {
  user_id: number
  locale: string | null
  rawData: string | null
  version: number | null
}

export type UserSearchDatumScalars = 'user_id' | 'locale' | 'rawData' | 'version'


export type UserSearchDatumSelect = {
  user_id?: boolean
  locale?: boolean
  rawData?: boolean
  version?: boolean
}

type UserSearchDatumDefault = {
  user_id: true
  locale: true
  rawData: true
  version: true
}


type UserSearchDatumGetPayload<S extends boolean | UserSearchDatumSelect> = S extends true
  ? UserSearchDatum
  : S extends UserSearchDatumSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserSearchDatumDefault, S>>]: P extends UserSearchDatumScalars
        ? UserSearchDatum[P]
        : never
    }
   : never

export interface UserSearchDatumDelegate {
  <T extends FindManyUserSearchDatumArgs>(args?: Subset<T, FindManyUserSearchDatumArgs>): PromiseLike<Array<UserSearchDatumGetPayload<ExtractFindManyUserSearchDatumArgsSelect<T>>>>
  findMany<T extends FindManyUserSearchDatumArgs>(
    args?: Subset<T, FindManyUserSearchDatumArgs>
  ): PromiseLike<Array<UserSearchDatumGetPayload<ExtractFindManyUserSearchDatumArgsSelect<T>>>>
  create<T extends UserSearchDatumCreateArgs>(
    args: Subset<T, UserSearchDatumCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumCreateArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>
  updateMany<T extends UserSearchDatumUpdateManyArgs>(
    args: Subset<T, UserSearchDatumUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumUpdateManyArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>
  deleteMany<T extends UserSearchDatumDeleteManyArgs>(
    args: Subset<T, UserSearchDatumDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumDeleteManyArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>
}
function UserSearchDatumDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserSearchDatumDelegate {
  const UserSearchDatum = <T extends FindManyUserSearchDatumArgs>(args: Subset<T, FindManyUserSearchDatumArgs>) => new UserSearchDatumClient<PromiseLike<Array<UserSearchDatumGetPayload<ExtractFindManyUserSearchDatumArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userSearchData', 'userSearchData', args, [])
  UserSearchDatum.findMany = <T extends FindManyUserSearchDatumArgs>(args: Subset<T, FindManyUserSearchDatumArgs>) => new UserSearchDatumClient<PromiseLike<Array<UserSearchDatumGetPayload<ExtractFindManyUserSearchDatumArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userSearchData',
    'userSearchData.findMany',
    args,
    []
  )
  UserSearchDatum.create = <T extends UserSearchDatumCreateArgs>(args: Subset<T, UserSearchDatumCreateArgs>) => args.select ? new UserSearchDatumClient<'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserSearchDatum',
    'userSearchData.create',
    args,
    []
  ) : new UserSearchDatumClient<UserSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'createUserSearchDatum',
    'userSearchData.create',
    args,
    []
  )
  UserSearchDatum.updateMany = <T extends UserSearchDatumUpdateManyArgs>(args: Subset<T, UserSearchDatumUpdateManyArgs>) => args.select ? new UserSearchDatumClient<'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserSearchData',
    'userSearchData.updateMany',
    args,
    []
  ) : new UserSearchDatumClient<UserSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserSearchData',
    'userSearchData.updateMany',
    args,
    []
  )
  UserSearchDatum.deleteMany = <T extends UserSearchDatumDeleteManyArgs>(args: Subset<T, UserSearchDatumDeleteManyArgs>) => args.select ? new UserSearchDatumClient<'select' extends keyof T ? PromiseLike<UserSearchDatumGetPayload<ExtractUserSearchDatumArgsSelect<T>>> : UserSearchDatumClient<UserSearchDatum>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserSearchData',
    'userSearchData.deleteMany',
    args,
    []
  ) : new UserSearchDatumClient<UserSearchDatum>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserSearchData',
    'userSearchData.deleteMany',
    args,
    []
  )
  return UserSearchDatum as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserSearchDatumClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserSearchDatumArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserSearchDatum').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserSearchDatum').catch(onrejected)
  }
}


// InputTypes

export type FindManyUserSearchDatumArgs = {
  select?: UserSearchDatumSelect
  where?: UserSearchDatumWhereInput
  orderBy?: UserSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserSearchDatumArgsWithSelect = {
  select: UserSearchDatumSelect
  where?: UserSearchDatumWhereInput
  orderBy?: UserSearchDatumOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserSearchDatumArgsSelect<S extends undefined | boolean | FindManyUserSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserSearchDatumArgsWithSelect
  ? S['select']
  : true


export type UserSearchDatumCreateArgs = {
  select?: UserSearchDatumSelect
  data: UserSearchDatumCreateInput
}

export type UserSearchDatumCreateArgsWithSelect = {
  select: UserSearchDatumSelect
  data: UserSearchDatumCreateInput
}

type ExtractUserSearchDatumCreateArgsSelect<S extends undefined | boolean | UserSearchDatumCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSearchDatumCreateArgsWithSelect
  ? S['select']
  : true


export type UserSearchDatumUpdateManyArgs = {
  select?: UserSearchDatumSelect
  data: UserSearchDatumUpdateManyMutationInput
  where?: UserSearchDatumWhereInput
}

export type UserSearchDatumUpdateManyArgsWithSelect = {
  select: UserSearchDatumSelect
  data: UserSearchDatumUpdateManyMutationInput
  where?: UserSearchDatumWhereInput
}

type ExtractUserSearchDatumUpdateManyArgsSelect<S extends undefined | boolean | UserSearchDatumUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSearchDatumUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserSearchDatumDeleteManyArgs = {
  select?: UserSearchDatumSelect
  where?: UserSearchDatumWhereInput
}

export type UserSearchDatumDeleteManyArgsWithSelect = {
  select: UserSearchDatumSelect
  where?: UserSearchDatumWhereInput
}

type ExtractUserSearchDatumDeleteManyArgsSelect<S extends undefined | boolean | UserSearchDatumDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSearchDatumDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserSearchDatumArgs = {
  select?: UserSearchDatumSelect
}

export type UserSearchDatumArgsWithSelect = {
  select: UserSearchDatumSelect
}

type ExtractUserSearchDatumArgsSelect<S extends undefined | boolean | UserSearchDatumArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSearchDatumArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserSecondFactor
 */

export type UserSecondFactor = {
  id: number
  createdAt: string
  data: string
  enabled: boolean
  lastUsed: string | null
  method: number
  updatedAt: string
  userId: number
}

export type UserSecondFactorScalars = 'id' | 'createdAt' | 'data' | 'enabled' | 'lastUsed' | 'method' | 'updatedAt' | 'userId'


export type UserSecondFactorSelect = {
  id?: boolean
  createdAt?: boolean
  data?: boolean
  enabled?: boolean
  lastUsed?: boolean
  method?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserSecondFactorDefault = {
  id: true
  createdAt: true
  data: true
  enabled: true
  lastUsed: true
  method: true
  updatedAt: true
  userId: true
}


type UserSecondFactorGetPayload<S extends boolean | UserSecondFactorSelect> = S extends true
  ? UserSecondFactor
  : S extends UserSecondFactorSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserSecondFactorDefault, S>>]: P extends UserSecondFactorScalars
        ? UserSecondFactor[P]
        : never
    }
   : never

export interface UserSecondFactorDelegate {
  <T extends FindManyUserSecondFactorArgs>(args?: Subset<T, FindManyUserSecondFactorArgs>): PromiseLike<Array<UserSecondFactorGetPayload<ExtractFindManyUserSecondFactorArgsSelect<T>>>>
  findOne<T extends FindOneUserSecondFactorArgs>(
    args: Subset<T, FindOneUserSecondFactorArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractFindOneUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  findMany<T extends FindManyUserSecondFactorArgs>(
    args?: Subset<T, FindManyUserSecondFactorArgs>
  ): PromiseLike<Array<UserSecondFactorGetPayload<ExtractFindManyUserSecondFactorArgsSelect<T>>>>
  create<T extends UserSecondFactorCreateArgs>(
    args: Subset<T, UserSecondFactorCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorCreateArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  update<T extends UserSecondFactorUpdateArgs>(
    args: Subset<T, UserSecondFactorUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorUpdateArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  updateMany<T extends UserSecondFactorUpdateManyArgs>(
    args: Subset<T, UserSecondFactorUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorUpdateManyArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  upsert<T extends UserSecondFactorUpsertArgs>(
    args: Subset<T, UserSecondFactorUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorUpsertArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  delete<T extends UserSecondFactorDeleteArgs>(
    args: Subset<T, UserSecondFactorDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorDeleteArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
  deleteMany<T extends UserSecondFactorDeleteManyArgs>(
    args: Subset<T, UserSecondFactorDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorDeleteManyArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>
}
function UserSecondFactorDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserSecondFactorDelegate {
  const UserSecondFactor = <T extends FindManyUserSecondFactorArgs>(args: Subset<T, FindManyUserSecondFactorArgs>) => new UserSecondFactorClient<PromiseLike<Array<UserSecondFactorGetPayload<ExtractFindManyUserSecondFactorArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userSecondFactors', 'userSecondFactors', args, [])
  UserSecondFactor.findOne = <T extends FindOneUserSecondFactorArgs>(args: Subset<T, FindOneUserSecondFactorArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'query',
    'userSecondFactor',
    'userSecondFactors.findOne',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'query',
    'userSecondFactor',
    'userSecondFactors.findOne',
    args,
    []
  )
  UserSecondFactor.findMany = <T extends FindManyUserSecondFactorArgs>(args: Subset<T, FindManyUserSecondFactorArgs>) => new UserSecondFactorClient<PromiseLike<Array<UserSecondFactorGetPayload<ExtractFindManyUserSecondFactorArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userSecondFactors',
    'userSecondFactors.findMany',
    args,
    []
  )
  UserSecondFactor.create = <T extends UserSecondFactorCreateArgs>(args: Subset<T, UserSecondFactorCreateArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserSecondFactor',
    'userSecondFactors.create',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'createUserSecondFactor',
    'userSecondFactors.create',
    args,
    []
  )
  UserSecondFactor.update = <T extends UserSecondFactorUpdateArgs>(args: Subset<T, UserSecondFactorUpdateArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserSecondFactor',
    'userSecondFactors.update',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserSecondFactor',
    'userSecondFactors.update',
    args,
    []
  )
  UserSecondFactor.updateMany = <T extends UserSecondFactorUpdateManyArgs>(args: Subset<T, UserSecondFactorUpdateManyArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserSecondFactors',
    'userSecondFactors.updateMany',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserSecondFactors',
    'userSecondFactors.updateMany',
    args,
    []
  )
  UserSecondFactor.upsert = <T extends UserSecondFactorUpsertArgs>(args: Subset<T, UserSecondFactorUpsertArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserSecondFactor',
    'userSecondFactors.upsert',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserSecondFactor',
    'userSecondFactors.upsert',
    args,
    []
  )
  UserSecondFactor.delete = <T extends UserSecondFactorDeleteArgs>(args: Subset<T, UserSecondFactorDeleteArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserSecondFactor',
    'userSecondFactors.delete',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserSecondFactor',
    'userSecondFactors.delete',
    args,
    []
  )
  UserSecondFactor.deleteMany = <T extends UserSecondFactorDeleteManyArgs>(args: Subset<T, UserSecondFactorDeleteManyArgs>) => args.select ? new UserSecondFactorClient<'select' extends keyof T ? PromiseLike<UserSecondFactorGetPayload<ExtractUserSecondFactorArgsSelect<T>>> : UserSecondFactorClient<UserSecondFactor>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserSecondFactors',
    'userSecondFactors.deleteMany',
    args,
    []
  ) : new UserSecondFactorClient<UserSecondFactor>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserSecondFactors',
    'userSecondFactors.deleteMany',
    args,
    []
  )
  return UserSecondFactor as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserSecondFactorClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserSecondFactorArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserSecondFactor').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserSecondFactor').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserSecondFactorArgs = {
  select?: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
}

export type FindOneUserSecondFactorArgsWithSelect = {
  select: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
}

type ExtractFindOneUserSecondFactorArgsSelect<S extends undefined | boolean | FindOneUserSecondFactorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserSecondFactorArgsWithSelect
  ? S['select']
  : true


export type FindManyUserSecondFactorArgs = {
  select?: UserSecondFactorSelect
  where?: UserSecondFactorWhereInput
  orderBy?: UserSecondFactorOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserSecondFactorArgsWithSelect = {
  select: UserSecondFactorSelect
  where?: UserSecondFactorWhereInput
  orderBy?: UserSecondFactorOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserSecondFactorArgsSelect<S extends undefined | boolean | FindManyUserSecondFactorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserSecondFactorArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorCreateArgs = {
  select?: UserSecondFactorSelect
  data: UserSecondFactorCreateInput
}

export type UserSecondFactorCreateArgsWithSelect = {
  select: UserSecondFactorSelect
  data: UserSecondFactorCreateInput
}

type ExtractUserSecondFactorCreateArgsSelect<S extends undefined | boolean | UserSecondFactorCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorCreateArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorUpdateArgs = {
  select?: UserSecondFactorSelect
  data: UserSecondFactorUpdateInput
  where: UserSecondFactorWhereUniqueInput
}

export type UserSecondFactorUpdateArgsWithSelect = {
  select: UserSecondFactorSelect
  data: UserSecondFactorUpdateInput
  where: UserSecondFactorWhereUniqueInput
}

type ExtractUserSecondFactorUpdateArgsSelect<S extends undefined | boolean | UserSecondFactorUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorUpdateArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorUpdateManyArgs = {
  select?: UserSecondFactorSelect
  data: UserSecondFactorUpdateManyMutationInput
  where?: UserSecondFactorWhereInput
}

export type UserSecondFactorUpdateManyArgsWithSelect = {
  select: UserSecondFactorSelect
  data: UserSecondFactorUpdateManyMutationInput
  where?: UserSecondFactorWhereInput
}

type ExtractUserSecondFactorUpdateManyArgsSelect<S extends undefined | boolean | UserSecondFactorUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorUpsertArgs = {
  select?: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
  create: UserSecondFactorCreateInput
  update: UserSecondFactorUpdateInput
}

export type UserSecondFactorUpsertArgsWithSelect = {
  select: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
  create: UserSecondFactorCreateInput
  update: UserSecondFactorUpdateInput
}

type ExtractUserSecondFactorUpsertArgsSelect<S extends undefined | boolean | UserSecondFactorUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorUpsertArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorDeleteArgs = {
  select?: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
}

export type UserSecondFactorDeleteArgsWithSelect = {
  select: UserSecondFactorSelect
  where: UserSecondFactorWhereUniqueInput
}

type ExtractUserSecondFactorDeleteArgsSelect<S extends undefined | boolean | UserSecondFactorDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorDeleteArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorDeleteManyArgs = {
  select?: UserSecondFactorSelect
  where?: UserSecondFactorWhereInput
}

export type UserSecondFactorDeleteManyArgsWithSelect = {
  select: UserSecondFactorSelect
  where?: UserSecondFactorWhereInput
}

type ExtractUserSecondFactorDeleteManyArgsSelect<S extends undefined | boolean | UserSecondFactorDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserSecondFactorArgs = {
  select?: UserSecondFactorSelect
}

export type UserSecondFactorArgsWithSelect = {
  select: UserSecondFactorSelect
}

type ExtractUserSecondFactorArgsSelect<S extends undefined | boolean | UserSecondFactorArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserSecondFactorArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserStat
 */

export type UserStat = {
  user_id: number
  bounceScore: number
  daysVisited: number
  firstPostCreatedAt: string | null
  likesGiven: number
  likesReceived: number
  newSince: string
  postCount: number
  postsReadCount: number
  readFaq: string | null
  resetBounceScoreAfter: string | null
  timeRead: number
  topicCount: number
  topicReplyCount: number
  topicsEntered: number
}

export type UserStatScalars = 'user_id' | 'bounceScore' | 'daysVisited' | 'firstPostCreatedAt' | 'likesGiven' | 'likesReceived' | 'newSince' | 'postCount' | 'postsReadCount' | 'readFaq' | 'resetBounceScoreAfter' | 'timeRead' | 'topicCount' | 'topicReplyCount' | 'topicsEntered'


export type UserStatSelect = {
  user_id?: boolean
  bounceScore?: boolean
  daysVisited?: boolean
  firstPostCreatedAt?: boolean
  likesGiven?: boolean
  likesReceived?: boolean
  newSince?: boolean
  postCount?: boolean
  postsReadCount?: boolean
  readFaq?: boolean
  resetBounceScoreAfter?: boolean
  timeRead?: boolean
  topicCount?: boolean
  topicReplyCount?: boolean
  topicsEntered?: boolean
}

type UserStatDefault = {
  user_id: true
  bounceScore: true
  daysVisited: true
  firstPostCreatedAt: true
  likesGiven: true
  likesReceived: true
  newSince: true
  postCount: true
  postsReadCount: true
  readFaq: true
  resetBounceScoreAfter: true
  timeRead: true
  topicCount: true
  topicReplyCount: true
  topicsEntered: true
}


type UserStatGetPayload<S extends boolean | UserStatSelect> = S extends true
  ? UserStat
  : S extends UserStatSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserStatDefault, S>>]: P extends UserStatScalars
        ? UserStat[P]
        : never
    }
   : never

export interface UserStatDelegate {
  <T extends FindManyUserStatArgs>(args?: Subset<T, FindManyUserStatArgs>): PromiseLike<Array<UserStatGetPayload<ExtractFindManyUserStatArgsSelect<T>>>>
  findMany<T extends FindManyUserStatArgs>(
    args?: Subset<T, FindManyUserStatArgs>
  ): PromiseLike<Array<UserStatGetPayload<ExtractFindManyUserStatArgsSelect<T>>>>
  create<T extends UserStatCreateArgs>(
    args: Subset<T, UserStatCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatCreateArgsSelect<T>>> : UserStatClient<UserStat>
  updateMany<T extends UserStatUpdateManyArgs>(
    args: Subset<T, UserStatUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatUpdateManyArgsSelect<T>>> : UserStatClient<UserStat>
  deleteMany<T extends UserStatDeleteManyArgs>(
    args: Subset<T, UserStatDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatDeleteManyArgsSelect<T>>> : UserStatClient<UserStat>
}
function UserStatDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserStatDelegate {
  const UserStat = <T extends FindManyUserStatArgs>(args: Subset<T, FindManyUserStatArgs>) => new UserStatClient<PromiseLike<Array<UserStatGetPayload<ExtractFindManyUserStatArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userStats', 'userStats', args, [])
  UserStat.findMany = <T extends FindManyUserStatArgs>(args: Subset<T, FindManyUserStatArgs>) => new UserStatClient<PromiseLike<Array<UserStatGetPayload<ExtractFindManyUserStatArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userStats',
    'userStats.findMany',
    args,
    []
  )
  UserStat.create = <T extends UserStatCreateArgs>(args: Subset<T, UserStatCreateArgs>) => args.select ? new UserStatClient<'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatArgsSelect<T>>> : UserStatClient<UserStat>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserStat',
    'userStats.create',
    args,
    []
  ) : new UserStatClient<UserStat>(
    dmmf,
    fetcher,
    'mutation',
    'createUserStat',
    'userStats.create',
    args,
    []
  )
  UserStat.updateMany = <T extends UserStatUpdateManyArgs>(args: Subset<T, UserStatUpdateManyArgs>) => args.select ? new UserStatClient<'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatArgsSelect<T>>> : UserStatClient<UserStat>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserStats',
    'userStats.updateMany',
    args,
    []
  ) : new UserStatClient<UserStat>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserStats',
    'userStats.updateMany',
    args,
    []
  )
  UserStat.deleteMany = <T extends UserStatDeleteManyArgs>(args: Subset<T, UserStatDeleteManyArgs>) => args.select ? new UserStatClient<'select' extends keyof T ? PromiseLike<UserStatGetPayload<ExtractUserStatArgsSelect<T>>> : UserStatClient<UserStat>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserStats',
    'userStats.deleteMany',
    args,
    []
  ) : new UserStatClient<UserStat>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserStats',
    'userStats.deleteMany',
    args,
    []
  )
  return UserStat as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserStatClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserStatArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserStat').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserStat').catch(onrejected)
  }
}


// InputTypes

export type FindManyUserStatArgs = {
  select?: UserStatSelect
  where?: UserStatWhereInput
  orderBy?: UserStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserStatArgsWithSelect = {
  select: UserStatSelect
  where?: UserStatWhereInput
  orderBy?: UserStatOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserStatArgsSelect<S extends undefined | boolean | FindManyUserStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserStatArgsWithSelect
  ? S['select']
  : true


export type UserStatCreateArgs = {
  select?: UserStatSelect
  data: UserStatCreateInput
}

export type UserStatCreateArgsWithSelect = {
  select: UserStatSelect
  data: UserStatCreateInput
}

type ExtractUserStatCreateArgsSelect<S extends undefined | boolean | UserStatCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserStatCreateArgsWithSelect
  ? S['select']
  : true


export type UserStatUpdateManyArgs = {
  select?: UserStatSelect
  data: UserStatUpdateManyMutationInput
  where?: UserStatWhereInput
}

export type UserStatUpdateManyArgsWithSelect = {
  select: UserStatSelect
  data: UserStatUpdateManyMutationInput
  where?: UserStatWhereInput
}

type ExtractUserStatUpdateManyArgsSelect<S extends undefined | boolean | UserStatUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserStatUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserStatDeleteManyArgs = {
  select?: UserStatSelect
  where?: UserStatWhereInput
}

export type UserStatDeleteManyArgsWithSelect = {
  select: UserStatSelect
  where?: UserStatWhereInput
}

type ExtractUserStatDeleteManyArgsSelect<S extends undefined | boolean | UserStatDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserStatDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserStatArgs = {
  select?: UserStatSelect
}

export type UserStatArgsWithSelect = {
  select: UserStatSelect
}

type ExtractUserStatArgsSelect<S extends undefined | boolean | UserStatArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserStatArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserUpload
 */

export type UserUpload = {
  id: number
  createdAt: string
  uploadId: number
  userId: number
}

export type UserUploadScalars = 'id' | 'createdAt' | 'uploadId' | 'userId'


export type UserUploadSelect = {
  id?: boolean
  createdAt?: boolean
  uploadId?: boolean
  userId?: boolean
}

type UserUploadDefault = {
  id: true
  createdAt: true
  uploadId: true
  userId: true
}


type UserUploadGetPayload<S extends boolean | UserUploadSelect> = S extends true
  ? UserUpload
  : S extends UserUploadSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserUploadDefault, S>>]: P extends UserUploadScalars
        ? UserUpload[P]
        : never
    }
   : never

export interface UserUploadDelegate {
  <T extends FindManyUserUploadArgs>(args?: Subset<T, FindManyUserUploadArgs>): PromiseLike<Array<UserUploadGetPayload<ExtractFindManyUserUploadArgsSelect<T>>>>
  findOne<T extends FindOneUserUploadArgs>(
    args: Subset<T, FindOneUserUploadArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractFindOneUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>
  findMany<T extends FindManyUserUploadArgs>(
    args?: Subset<T, FindManyUserUploadArgs>
  ): PromiseLike<Array<UserUploadGetPayload<ExtractFindManyUserUploadArgsSelect<T>>>>
  create<T extends UserUploadCreateArgs>(
    args: Subset<T, UserUploadCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadCreateArgsSelect<T>>> : UserUploadClient<UserUpload>
  update<T extends UserUploadUpdateArgs>(
    args: Subset<T, UserUploadUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadUpdateArgsSelect<T>>> : UserUploadClient<UserUpload>
  updateMany<T extends UserUploadUpdateManyArgs>(
    args: Subset<T, UserUploadUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadUpdateManyArgsSelect<T>>> : UserUploadClient<UserUpload>
  upsert<T extends UserUploadUpsertArgs>(
    args: Subset<T, UserUploadUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadUpsertArgsSelect<T>>> : UserUploadClient<UserUpload>
  delete<T extends UserUploadDeleteArgs>(
    args: Subset<T, UserUploadDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadDeleteArgsSelect<T>>> : UserUploadClient<UserUpload>
  deleteMany<T extends UserUploadDeleteManyArgs>(
    args: Subset<T, UserUploadDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadDeleteManyArgsSelect<T>>> : UserUploadClient<UserUpload>
}
function UserUploadDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserUploadDelegate {
  const UserUpload = <T extends FindManyUserUploadArgs>(args: Subset<T, FindManyUserUploadArgs>) => new UserUploadClient<PromiseLike<Array<UserUploadGetPayload<ExtractFindManyUserUploadArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userUploads', 'userUploads', args, [])
  UserUpload.findOne = <T extends FindOneUserUploadArgs>(args: Subset<T, FindOneUserUploadArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'query',
    'userUpload',
    'userUploads.findOne',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'query',
    'userUpload',
    'userUploads.findOne',
    args,
    []
  )
  UserUpload.findMany = <T extends FindManyUserUploadArgs>(args: Subset<T, FindManyUserUploadArgs>) => new UserUploadClient<PromiseLike<Array<UserUploadGetPayload<ExtractFindManyUserUploadArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userUploads',
    'userUploads.findMany',
    args,
    []
  )
  UserUpload.create = <T extends UserUploadCreateArgs>(args: Subset<T, UserUploadCreateArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserUpload',
    'userUploads.create',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'createUserUpload',
    'userUploads.create',
    args,
    []
  )
  UserUpload.update = <T extends UserUploadUpdateArgs>(args: Subset<T, UserUploadUpdateArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserUpload',
    'userUploads.update',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserUpload',
    'userUploads.update',
    args,
    []
  )
  UserUpload.updateMany = <T extends UserUploadUpdateManyArgs>(args: Subset<T, UserUploadUpdateManyArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserUploads',
    'userUploads.updateMany',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserUploads',
    'userUploads.updateMany',
    args,
    []
  )
  UserUpload.upsert = <T extends UserUploadUpsertArgs>(args: Subset<T, UserUploadUpsertArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserUpload',
    'userUploads.upsert',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserUpload',
    'userUploads.upsert',
    args,
    []
  )
  UserUpload.delete = <T extends UserUploadDeleteArgs>(args: Subset<T, UserUploadDeleteArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserUpload',
    'userUploads.delete',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserUpload',
    'userUploads.delete',
    args,
    []
  )
  UserUpload.deleteMany = <T extends UserUploadDeleteManyArgs>(args: Subset<T, UserUploadDeleteManyArgs>) => args.select ? new UserUploadClient<'select' extends keyof T ? PromiseLike<UserUploadGetPayload<ExtractUserUploadArgsSelect<T>>> : UserUploadClient<UserUpload>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserUploads',
    'userUploads.deleteMany',
    args,
    []
  ) : new UserUploadClient<UserUpload>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserUploads',
    'userUploads.deleteMany',
    args,
    []
  )
  return UserUpload as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserUploadClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserUploadArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserUpload').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserUpload').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserUploadArgs = {
  select?: UserUploadSelect
  where: UserUploadWhereUniqueInput
}

export type FindOneUserUploadArgsWithSelect = {
  select: UserUploadSelect
  where: UserUploadWhereUniqueInput
}

type ExtractFindOneUserUploadArgsSelect<S extends undefined | boolean | FindOneUserUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserUploadArgsWithSelect
  ? S['select']
  : true


export type FindManyUserUploadArgs = {
  select?: UserUploadSelect
  where?: UserUploadWhereInput
  orderBy?: UserUploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserUploadArgsWithSelect = {
  select: UserUploadSelect
  where?: UserUploadWhereInput
  orderBy?: UserUploadOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserUploadArgsSelect<S extends undefined | boolean | FindManyUserUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserUploadArgsWithSelect
  ? S['select']
  : true


export type UserUploadCreateArgs = {
  select?: UserUploadSelect
  data: UserUploadCreateInput
}

export type UserUploadCreateArgsWithSelect = {
  select: UserUploadSelect
  data: UserUploadCreateInput
}

type ExtractUserUploadCreateArgsSelect<S extends undefined | boolean | UserUploadCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadCreateArgsWithSelect
  ? S['select']
  : true


export type UserUploadUpdateArgs = {
  select?: UserUploadSelect
  data: UserUploadUpdateInput
  where: UserUploadWhereUniqueInput
}

export type UserUploadUpdateArgsWithSelect = {
  select: UserUploadSelect
  data: UserUploadUpdateInput
  where: UserUploadWhereUniqueInput
}

type ExtractUserUploadUpdateArgsSelect<S extends undefined | boolean | UserUploadUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadUpdateArgsWithSelect
  ? S['select']
  : true


export type UserUploadUpdateManyArgs = {
  select?: UserUploadSelect
  data: UserUploadUpdateManyMutationInput
  where?: UserUploadWhereInput
}

export type UserUploadUpdateManyArgsWithSelect = {
  select: UserUploadSelect
  data: UserUploadUpdateManyMutationInput
  where?: UserUploadWhereInput
}

type ExtractUserUploadUpdateManyArgsSelect<S extends undefined | boolean | UserUploadUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserUploadUpsertArgs = {
  select?: UserUploadSelect
  where: UserUploadWhereUniqueInput
  create: UserUploadCreateInput
  update: UserUploadUpdateInput
}

export type UserUploadUpsertArgsWithSelect = {
  select: UserUploadSelect
  where: UserUploadWhereUniqueInput
  create: UserUploadCreateInput
  update: UserUploadUpdateInput
}

type ExtractUserUploadUpsertArgsSelect<S extends undefined | boolean | UserUploadUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadUpsertArgsWithSelect
  ? S['select']
  : true


export type UserUploadDeleteArgs = {
  select?: UserUploadSelect
  where: UserUploadWhereUniqueInput
}

export type UserUploadDeleteArgsWithSelect = {
  select: UserUploadSelect
  where: UserUploadWhereUniqueInput
}

type ExtractUserUploadDeleteArgsSelect<S extends undefined | boolean | UserUploadDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadDeleteArgsWithSelect
  ? S['select']
  : true


export type UserUploadDeleteManyArgs = {
  select?: UserUploadSelect
  where?: UserUploadWhereInput
}

export type UserUploadDeleteManyArgsWithSelect = {
  select: UserUploadSelect
  where?: UserUploadWhereInput
}

type ExtractUserUploadDeleteManyArgsSelect<S extends undefined | boolean | UserUploadDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserUploadArgs = {
  select?: UserUploadSelect
}

export type UserUploadArgsWithSelect = {
  select: UserUploadSelect
}

type ExtractUserUploadArgsSelect<S extends undefined | boolean | UserUploadArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserUploadArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserVisit
 */

export type UserVisit = {
  id: number
  mobile: boolean | null
  postsRead: number | null
  timeRead: number
  userId: number
  visitedAt: string
}

export type UserVisitScalars = 'id' | 'mobile' | 'postsRead' | 'timeRead' | 'userId' | 'visitedAt'


export type UserVisitSelect = {
  id?: boolean
  mobile?: boolean
  postsRead?: boolean
  timeRead?: boolean
  userId?: boolean
  visitedAt?: boolean
}

type UserVisitDefault = {
  id: true
  mobile: true
  postsRead: true
  timeRead: true
  userId: true
  visitedAt: true
}


type UserVisitGetPayload<S extends boolean | UserVisitSelect> = S extends true
  ? UserVisit
  : S extends UserVisitSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserVisitDefault, S>>]: P extends UserVisitScalars
        ? UserVisit[P]
        : never
    }
   : never

export interface UserVisitDelegate {
  <T extends FindManyUserVisitArgs>(args?: Subset<T, FindManyUserVisitArgs>): PromiseLike<Array<UserVisitGetPayload<ExtractFindManyUserVisitArgsSelect<T>>>>
  findOne<T extends FindOneUserVisitArgs>(
    args: Subset<T, FindOneUserVisitArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractFindOneUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>
  findMany<T extends FindManyUserVisitArgs>(
    args?: Subset<T, FindManyUserVisitArgs>
  ): PromiseLike<Array<UserVisitGetPayload<ExtractFindManyUserVisitArgsSelect<T>>>>
  create<T extends UserVisitCreateArgs>(
    args: Subset<T, UserVisitCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitCreateArgsSelect<T>>> : UserVisitClient<UserVisit>
  update<T extends UserVisitUpdateArgs>(
    args: Subset<T, UserVisitUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitUpdateArgsSelect<T>>> : UserVisitClient<UserVisit>
  updateMany<T extends UserVisitUpdateManyArgs>(
    args: Subset<T, UserVisitUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitUpdateManyArgsSelect<T>>> : UserVisitClient<UserVisit>
  upsert<T extends UserVisitUpsertArgs>(
    args: Subset<T, UserVisitUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitUpsertArgsSelect<T>>> : UserVisitClient<UserVisit>
  delete<T extends UserVisitDeleteArgs>(
    args: Subset<T, UserVisitDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitDeleteArgsSelect<T>>> : UserVisitClient<UserVisit>
  deleteMany<T extends UserVisitDeleteManyArgs>(
    args: Subset<T, UserVisitDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitDeleteManyArgsSelect<T>>> : UserVisitClient<UserVisit>
}
function UserVisitDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserVisitDelegate {
  const UserVisit = <T extends FindManyUserVisitArgs>(args: Subset<T, FindManyUserVisitArgs>) => new UserVisitClient<PromiseLike<Array<UserVisitGetPayload<ExtractFindManyUserVisitArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userVisits', 'userVisits', args, [])
  UserVisit.findOne = <T extends FindOneUserVisitArgs>(args: Subset<T, FindOneUserVisitArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'query',
    'userVisit',
    'userVisits.findOne',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'query',
    'userVisit',
    'userVisits.findOne',
    args,
    []
  )
  UserVisit.findMany = <T extends FindManyUserVisitArgs>(args: Subset<T, FindManyUserVisitArgs>) => new UserVisitClient<PromiseLike<Array<UserVisitGetPayload<ExtractFindManyUserVisitArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userVisits',
    'userVisits.findMany',
    args,
    []
  )
  UserVisit.create = <T extends UserVisitCreateArgs>(args: Subset<T, UserVisitCreateArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserVisit',
    'userVisits.create',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'createUserVisit',
    'userVisits.create',
    args,
    []
  )
  UserVisit.update = <T extends UserVisitUpdateArgs>(args: Subset<T, UserVisitUpdateArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserVisit',
    'userVisits.update',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserVisit',
    'userVisits.update',
    args,
    []
  )
  UserVisit.updateMany = <T extends UserVisitUpdateManyArgs>(args: Subset<T, UserVisitUpdateManyArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserVisits',
    'userVisits.updateMany',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserVisits',
    'userVisits.updateMany',
    args,
    []
  )
  UserVisit.upsert = <T extends UserVisitUpsertArgs>(args: Subset<T, UserVisitUpsertArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserVisit',
    'userVisits.upsert',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserVisit',
    'userVisits.upsert',
    args,
    []
  )
  UserVisit.delete = <T extends UserVisitDeleteArgs>(args: Subset<T, UserVisitDeleteArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserVisit',
    'userVisits.delete',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserVisit',
    'userVisits.delete',
    args,
    []
  )
  UserVisit.deleteMany = <T extends UserVisitDeleteManyArgs>(args: Subset<T, UserVisitDeleteManyArgs>) => args.select ? new UserVisitClient<'select' extends keyof T ? PromiseLike<UserVisitGetPayload<ExtractUserVisitArgsSelect<T>>> : UserVisitClient<UserVisit>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserVisits',
    'userVisits.deleteMany',
    args,
    []
  ) : new UserVisitClient<UserVisit>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserVisits',
    'userVisits.deleteMany',
    args,
    []
  )
  return UserVisit as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserVisitClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserVisitArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserVisit').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserVisit').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserVisitArgs = {
  select?: UserVisitSelect
  where: UserVisitWhereUniqueInput
}

export type FindOneUserVisitArgsWithSelect = {
  select: UserVisitSelect
  where: UserVisitWhereUniqueInput
}

type ExtractFindOneUserVisitArgsSelect<S extends undefined | boolean | FindOneUserVisitArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserVisitArgsWithSelect
  ? S['select']
  : true


export type FindManyUserVisitArgs = {
  select?: UserVisitSelect
  where?: UserVisitWhereInput
  orderBy?: UserVisitOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserVisitArgsWithSelect = {
  select: UserVisitSelect
  where?: UserVisitWhereInput
  orderBy?: UserVisitOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserVisitArgsSelect<S extends undefined | boolean | FindManyUserVisitArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserVisitArgsWithSelect
  ? S['select']
  : true


export type UserVisitCreateArgs = {
  select?: UserVisitSelect
  data: UserVisitCreateInput
}

export type UserVisitCreateArgsWithSelect = {
  select: UserVisitSelect
  data: UserVisitCreateInput
}

type ExtractUserVisitCreateArgsSelect<S extends undefined | boolean | UserVisitCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitCreateArgsWithSelect
  ? S['select']
  : true


export type UserVisitUpdateArgs = {
  select?: UserVisitSelect
  data: UserVisitUpdateInput
  where: UserVisitWhereUniqueInput
}

export type UserVisitUpdateArgsWithSelect = {
  select: UserVisitSelect
  data: UserVisitUpdateInput
  where: UserVisitWhereUniqueInput
}

type ExtractUserVisitUpdateArgsSelect<S extends undefined | boolean | UserVisitUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitUpdateArgsWithSelect
  ? S['select']
  : true


export type UserVisitUpdateManyArgs = {
  select?: UserVisitSelect
  data: UserVisitUpdateManyMutationInput
  where?: UserVisitWhereInput
}

export type UserVisitUpdateManyArgsWithSelect = {
  select: UserVisitSelect
  data: UserVisitUpdateManyMutationInput
  where?: UserVisitWhereInput
}

type ExtractUserVisitUpdateManyArgsSelect<S extends undefined | boolean | UserVisitUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserVisitUpsertArgs = {
  select?: UserVisitSelect
  where: UserVisitWhereUniqueInput
  create: UserVisitCreateInput
  update: UserVisitUpdateInput
}

export type UserVisitUpsertArgsWithSelect = {
  select: UserVisitSelect
  where: UserVisitWhereUniqueInput
  create: UserVisitCreateInput
  update: UserVisitUpdateInput
}

type ExtractUserVisitUpsertArgsSelect<S extends undefined | boolean | UserVisitUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitUpsertArgsWithSelect
  ? S['select']
  : true


export type UserVisitDeleteArgs = {
  select?: UserVisitSelect
  where: UserVisitWhereUniqueInput
}

export type UserVisitDeleteArgsWithSelect = {
  select: UserVisitSelect
  where: UserVisitWhereUniqueInput
}

type ExtractUserVisitDeleteArgsSelect<S extends undefined | boolean | UserVisitDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitDeleteArgsWithSelect
  ? S['select']
  : true


export type UserVisitDeleteManyArgs = {
  select?: UserVisitSelect
  where?: UserVisitWhereInput
}

export type UserVisitDeleteManyArgsWithSelect = {
  select: UserVisitSelect
  where?: UserVisitWhereInput
}

type ExtractUserVisitDeleteManyArgsSelect<S extends undefined | boolean | UserVisitDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserVisitArgs = {
  select?: UserVisitSelect
}

export type UserVisitArgsWithSelect = {
  select: UserVisitSelect
}

type ExtractUserVisitArgsSelect<S extends undefined | boolean | UserVisitArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserVisitArgsWithSelect
  ? S['select']
  : true



/**
 * Model UserWarning
 */

export type UserWarning = {
  id: number
  createdAt: string | null
  createdById: number
  topicId: number
  updatedAt: string | null
  userId: number
}

export type UserWarningScalars = 'id' | 'createdAt' | 'createdById' | 'topicId' | 'updatedAt' | 'userId'


export type UserWarningSelect = {
  id?: boolean
  createdAt?: boolean
  createdById?: boolean
  topicId?: boolean
  updatedAt?: boolean
  userId?: boolean
}

type UserWarningDefault = {
  id: true
  createdAt: true
  createdById: true
  topicId: true
  updatedAt: true
  userId: true
}


type UserWarningGetPayload<S extends boolean | UserWarningSelect> = S extends true
  ? UserWarning
  : S extends UserWarningSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<UserWarningDefault, S>>]: P extends UserWarningScalars
        ? UserWarning[P]
        : never
    }
   : never

export interface UserWarningDelegate {
  <T extends FindManyUserWarningArgs>(args?: Subset<T, FindManyUserWarningArgs>): PromiseLike<Array<UserWarningGetPayload<ExtractFindManyUserWarningArgsSelect<T>>>>
  findOne<T extends FindOneUserWarningArgs>(
    args: Subset<T, FindOneUserWarningArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractFindOneUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>
  findMany<T extends FindManyUserWarningArgs>(
    args?: Subset<T, FindManyUserWarningArgs>
  ): PromiseLike<Array<UserWarningGetPayload<ExtractFindManyUserWarningArgsSelect<T>>>>
  create<T extends UserWarningCreateArgs>(
    args: Subset<T, UserWarningCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningCreateArgsSelect<T>>> : UserWarningClient<UserWarning>
  update<T extends UserWarningUpdateArgs>(
    args: Subset<T, UserWarningUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningUpdateArgsSelect<T>>> : UserWarningClient<UserWarning>
  updateMany<T extends UserWarningUpdateManyArgs>(
    args: Subset<T, UserWarningUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningUpdateManyArgsSelect<T>>> : UserWarningClient<UserWarning>
  upsert<T extends UserWarningUpsertArgs>(
    args: Subset<T, UserWarningUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningUpsertArgsSelect<T>>> : UserWarningClient<UserWarning>
  delete<T extends UserWarningDeleteArgs>(
    args: Subset<T, UserWarningDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningDeleteArgsSelect<T>>> : UserWarningClient<UserWarning>
  deleteMany<T extends UserWarningDeleteManyArgs>(
    args: Subset<T, UserWarningDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningDeleteManyArgsSelect<T>>> : UserWarningClient<UserWarning>
}
function UserWarningDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): UserWarningDelegate {
  const UserWarning = <T extends FindManyUserWarningArgs>(args: Subset<T, FindManyUserWarningArgs>) => new UserWarningClient<PromiseLike<Array<UserWarningGetPayload<ExtractFindManyUserWarningArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'userWarnings', 'userWarnings', args, [])
  UserWarning.findOne = <T extends FindOneUserWarningArgs>(args: Subset<T, FindOneUserWarningArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'query',
    'userWarning',
    'userWarnings.findOne',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'query',
    'userWarning',
    'userWarnings.findOne',
    args,
    []
  )
  UserWarning.findMany = <T extends FindManyUserWarningArgs>(args: Subset<T, FindManyUserWarningArgs>) => new UserWarningClient<PromiseLike<Array<UserWarningGetPayload<ExtractFindManyUserWarningArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'userWarnings',
    'userWarnings.findMany',
    args,
    []
  )
  UserWarning.create = <T extends UserWarningCreateArgs>(args: Subset<T, UserWarningCreateArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'createUserWarning',
    'userWarnings.create',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'createUserWarning',
    'userWarnings.create',
    args,
    []
  )
  UserWarning.update = <T extends UserWarningUpdateArgs>(args: Subset<T, UserWarningUpdateArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserWarning',
    'userWarnings.update',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'updateUserWarning',
    'userWarnings.update',
    args,
    []
  )
  UserWarning.updateMany = <T extends UserWarningUpdateManyArgs>(args: Subset<T, UserWarningUpdateManyArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserWarnings',
    'userWarnings.updateMany',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyUserWarnings',
    'userWarnings.updateMany',
    args,
    []
  )
  UserWarning.upsert = <T extends UserWarningUpsertArgs>(args: Subset<T, UserWarningUpsertArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserWarning',
    'userWarnings.upsert',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'upsertUserWarning',
    'userWarnings.upsert',
    args,
    []
  )
  UserWarning.delete = <T extends UserWarningDeleteArgs>(args: Subset<T, UserWarningDeleteArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserWarning',
    'userWarnings.delete',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'deleteUserWarning',
    'userWarnings.delete',
    args,
    []
  )
  UserWarning.deleteMany = <T extends UserWarningDeleteManyArgs>(args: Subset<T, UserWarningDeleteManyArgs>) => args.select ? new UserWarningClient<'select' extends keyof T ? PromiseLike<UserWarningGetPayload<ExtractUserWarningArgsSelect<T>>> : UserWarningClient<UserWarning>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserWarnings',
    'userWarnings.deleteMany',
    args,
    []
  ) : new UserWarningClient<UserWarning>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyUserWarnings',
    'userWarnings.deleteMany',
    args,
    []
  )
  return UserWarning as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class UserWarningClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: UserWarningArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserWarning').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'UserWarning').catch(onrejected)
  }
}


// InputTypes

export type FindOneUserWarningArgs = {
  select?: UserWarningSelect
  where: UserWarningWhereUniqueInput
}

export type FindOneUserWarningArgsWithSelect = {
  select: UserWarningSelect
  where: UserWarningWhereUniqueInput
}

type ExtractFindOneUserWarningArgsSelect<S extends undefined | boolean | FindOneUserWarningArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneUserWarningArgsWithSelect
  ? S['select']
  : true


export type FindManyUserWarningArgs = {
  select?: UserWarningSelect
  where?: UserWarningWhereInput
  orderBy?: UserWarningOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyUserWarningArgsWithSelect = {
  select: UserWarningSelect
  where?: UserWarningWhereInput
  orderBy?: UserWarningOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyUserWarningArgsSelect<S extends undefined | boolean | FindManyUserWarningArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyUserWarningArgsWithSelect
  ? S['select']
  : true


export type UserWarningCreateArgs = {
  select?: UserWarningSelect
  data: UserWarningCreateInput
}

export type UserWarningCreateArgsWithSelect = {
  select: UserWarningSelect
  data: UserWarningCreateInput
}

type ExtractUserWarningCreateArgsSelect<S extends undefined | boolean | UserWarningCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningCreateArgsWithSelect
  ? S['select']
  : true


export type UserWarningUpdateArgs = {
  select?: UserWarningSelect
  data: UserWarningUpdateInput
  where: UserWarningWhereUniqueInput
}

export type UserWarningUpdateArgsWithSelect = {
  select: UserWarningSelect
  data: UserWarningUpdateInput
  where: UserWarningWhereUniqueInput
}

type ExtractUserWarningUpdateArgsSelect<S extends undefined | boolean | UserWarningUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningUpdateArgsWithSelect
  ? S['select']
  : true


export type UserWarningUpdateManyArgs = {
  select?: UserWarningSelect
  data: UserWarningUpdateManyMutationInput
  where?: UserWarningWhereInput
}

export type UserWarningUpdateManyArgsWithSelect = {
  select: UserWarningSelect
  data: UserWarningUpdateManyMutationInput
  where?: UserWarningWhereInput
}

type ExtractUserWarningUpdateManyArgsSelect<S extends undefined | boolean | UserWarningUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningUpdateManyArgsWithSelect
  ? S['select']
  : true


export type UserWarningUpsertArgs = {
  select?: UserWarningSelect
  where: UserWarningWhereUniqueInput
  create: UserWarningCreateInput
  update: UserWarningUpdateInput
}

export type UserWarningUpsertArgsWithSelect = {
  select: UserWarningSelect
  where: UserWarningWhereUniqueInput
  create: UserWarningCreateInput
  update: UserWarningUpdateInput
}

type ExtractUserWarningUpsertArgsSelect<S extends undefined | boolean | UserWarningUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningUpsertArgsWithSelect
  ? S['select']
  : true


export type UserWarningDeleteArgs = {
  select?: UserWarningSelect
  where: UserWarningWhereUniqueInput
}

export type UserWarningDeleteArgsWithSelect = {
  select: UserWarningSelect
  where: UserWarningWhereUniqueInput
}

type ExtractUserWarningDeleteArgsSelect<S extends undefined | boolean | UserWarningDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningDeleteArgsWithSelect
  ? S['select']
  : true


export type UserWarningDeleteManyArgs = {
  select?: UserWarningSelect
  where?: UserWarningWhereInput
}

export type UserWarningDeleteManyArgsWithSelect = {
  select: UserWarningSelect
  where?: UserWarningWhereInput
}

type ExtractUserWarningDeleteManyArgsSelect<S extends undefined | boolean | UserWarningDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningDeleteManyArgsWithSelect
  ? S['select']
  : true


export type UserWarningArgs = {
  select?: UserWarningSelect
}

export type UserWarningArgsWithSelect = {
  select: UserWarningSelect
}

type ExtractUserWarningArgsSelect<S extends undefined | boolean | UserWarningArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends UserWarningArgsWithSelect
  ? S['select']
  : true



/**
 * Model WatchedWord
 */

export type WatchedWord = {
  id: number
  action: number
  createdAt: string | null
  updatedAt: string | null
  word: string
}

export type WatchedWordScalars = 'id' | 'action' | 'createdAt' | 'updatedAt' | 'word'


export type WatchedWordSelect = {
  id?: boolean
  action?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  word?: boolean
}

type WatchedWordDefault = {
  id: true
  action: true
  createdAt: true
  updatedAt: true
  word: true
}


type WatchedWordGetPayload<S extends boolean | WatchedWordSelect> = S extends true
  ? WatchedWord
  : S extends WatchedWordSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<WatchedWordDefault, S>>]: P extends WatchedWordScalars
        ? WatchedWord[P]
        : never
    }
   : never

export interface WatchedWordDelegate {
  <T extends FindManyWatchedWordArgs>(args?: Subset<T, FindManyWatchedWordArgs>): PromiseLike<Array<WatchedWordGetPayload<ExtractFindManyWatchedWordArgsSelect<T>>>>
  findOne<T extends FindOneWatchedWordArgs>(
    args: Subset<T, FindOneWatchedWordArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractFindOneWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  findMany<T extends FindManyWatchedWordArgs>(
    args?: Subset<T, FindManyWatchedWordArgs>
  ): PromiseLike<Array<WatchedWordGetPayload<ExtractFindManyWatchedWordArgsSelect<T>>>>
  create<T extends WatchedWordCreateArgs>(
    args: Subset<T, WatchedWordCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordCreateArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  update<T extends WatchedWordUpdateArgs>(
    args: Subset<T, WatchedWordUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordUpdateArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  updateMany<T extends WatchedWordUpdateManyArgs>(
    args: Subset<T, WatchedWordUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordUpdateManyArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  upsert<T extends WatchedWordUpsertArgs>(
    args: Subset<T, WatchedWordUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordUpsertArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  delete<T extends WatchedWordDeleteArgs>(
    args: Subset<T, WatchedWordDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordDeleteArgsSelect<T>>> : WatchedWordClient<WatchedWord>
  deleteMany<T extends WatchedWordDeleteManyArgs>(
    args: Subset<T, WatchedWordDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordDeleteManyArgsSelect<T>>> : WatchedWordClient<WatchedWord>
}
function WatchedWordDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): WatchedWordDelegate {
  const WatchedWord = <T extends FindManyWatchedWordArgs>(args: Subset<T, FindManyWatchedWordArgs>) => new WatchedWordClient<PromiseLike<Array<WatchedWordGetPayload<ExtractFindManyWatchedWordArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'watchedWords', 'watchedWords', args, [])
  WatchedWord.findOne = <T extends FindOneWatchedWordArgs>(args: Subset<T, FindOneWatchedWordArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'query',
    'watchedWord',
    'watchedWords.findOne',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'query',
    'watchedWord',
    'watchedWords.findOne',
    args,
    []
  )
  WatchedWord.findMany = <T extends FindManyWatchedWordArgs>(args: Subset<T, FindManyWatchedWordArgs>) => new WatchedWordClient<PromiseLike<Array<WatchedWordGetPayload<ExtractFindManyWatchedWordArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'watchedWords',
    'watchedWords.findMany',
    args,
    []
  )
  WatchedWord.create = <T extends WatchedWordCreateArgs>(args: Subset<T, WatchedWordCreateArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'createWatchedWord',
    'watchedWords.create',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'createWatchedWord',
    'watchedWords.create',
    args,
    []
  )
  WatchedWord.update = <T extends WatchedWordUpdateArgs>(args: Subset<T, WatchedWordUpdateArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'updateWatchedWord',
    'watchedWords.update',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'updateWatchedWord',
    'watchedWords.update',
    args,
    []
  )
  WatchedWord.updateMany = <T extends WatchedWordUpdateManyArgs>(args: Subset<T, WatchedWordUpdateManyArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWatchedWords',
    'watchedWords.updateMany',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWatchedWords',
    'watchedWords.updateMany',
    args,
    []
  )
  WatchedWord.upsert = <T extends WatchedWordUpsertArgs>(args: Subset<T, WatchedWordUpsertArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWatchedWord',
    'watchedWords.upsert',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWatchedWord',
    'watchedWords.upsert',
    args,
    []
  )
  WatchedWord.delete = <T extends WatchedWordDeleteArgs>(args: Subset<T, WatchedWordDeleteArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWatchedWord',
    'watchedWords.delete',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWatchedWord',
    'watchedWords.delete',
    args,
    []
  )
  WatchedWord.deleteMany = <T extends WatchedWordDeleteManyArgs>(args: Subset<T, WatchedWordDeleteManyArgs>) => args.select ? new WatchedWordClient<'select' extends keyof T ? PromiseLike<WatchedWordGetPayload<ExtractWatchedWordArgsSelect<T>>> : WatchedWordClient<WatchedWord>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWatchedWords',
    'watchedWords.deleteMany',
    args,
    []
  ) : new WatchedWordClient<WatchedWord>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWatchedWords',
    'watchedWords.deleteMany',
    args,
    []
  )
  return WatchedWord as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class WatchedWordClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: WatchedWordArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WatchedWord').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WatchedWord').catch(onrejected)
  }
}


// InputTypes

export type FindOneWatchedWordArgs = {
  select?: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
}

export type FindOneWatchedWordArgsWithSelect = {
  select: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
}

type ExtractFindOneWatchedWordArgsSelect<S extends undefined | boolean | FindOneWatchedWordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneWatchedWordArgsWithSelect
  ? S['select']
  : true


export type FindManyWatchedWordArgs = {
  select?: WatchedWordSelect
  where?: WatchedWordWhereInput
  orderBy?: WatchedWordOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyWatchedWordArgsWithSelect = {
  select: WatchedWordSelect
  where?: WatchedWordWhereInput
  orderBy?: WatchedWordOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyWatchedWordArgsSelect<S extends undefined | boolean | FindManyWatchedWordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyWatchedWordArgsWithSelect
  ? S['select']
  : true


export type WatchedWordCreateArgs = {
  select?: WatchedWordSelect
  data: WatchedWordCreateInput
}

export type WatchedWordCreateArgsWithSelect = {
  select: WatchedWordSelect
  data: WatchedWordCreateInput
}

type ExtractWatchedWordCreateArgsSelect<S extends undefined | boolean | WatchedWordCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordCreateArgsWithSelect
  ? S['select']
  : true


export type WatchedWordUpdateArgs = {
  select?: WatchedWordSelect
  data: WatchedWordUpdateInput
  where: WatchedWordWhereUniqueInput
}

export type WatchedWordUpdateArgsWithSelect = {
  select: WatchedWordSelect
  data: WatchedWordUpdateInput
  where: WatchedWordWhereUniqueInput
}

type ExtractWatchedWordUpdateArgsSelect<S extends undefined | boolean | WatchedWordUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordUpdateArgsWithSelect
  ? S['select']
  : true


export type WatchedWordUpdateManyArgs = {
  select?: WatchedWordSelect
  data: WatchedWordUpdateManyMutationInput
  where?: WatchedWordWhereInput
}

export type WatchedWordUpdateManyArgsWithSelect = {
  select: WatchedWordSelect
  data: WatchedWordUpdateManyMutationInput
  where?: WatchedWordWhereInput
}

type ExtractWatchedWordUpdateManyArgsSelect<S extends undefined | boolean | WatchedWordUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordUpdateManyArgsWithSelect
  ? S['select']
  : true


export type WatchedWordUpsertArgs = {
  select?: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
  create: WatchedWordCreateInput
  update: WatchedWordUpdateInput
}

export type WatchedWordUpsertArgsWithSelect = {
  select: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
  create: WatchedWordCreateInput
  update: WatchedWordUpdateInput
}

type ExtractWatchedWordUpsertArgsSelect<S extends undefined | boolean | WatchedWordUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordUpsertArgsWithSelect
  ? S['select']
  : true


export type WatchedWordDeleteArgs = {
  select?: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
}

export type WatchedWordDeleteArgsWithSelect = {
  select: WatchedWordSelect
  where: WatchedWordWhereUniqueInput
}

type ExtractWatchedWordDeleteArgsSelect<S extends undefined | boolean | WatchedWordDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordDeleteArgsWithSelect
  ? S['select']
  : true


export type WatchedWordDeleteManyArgs = {
  select?: WatchedWordSelect
  where?: WatchedWordWhereInput
}

export type WatchedWordDeleteManyArgsWithSelect = {
  select: WatchedWordSelect
  where?: WatchedWordWhereInput
}

type ExtractWatchedWordDeleteManyArgsSelect<S extends undefined | boolean | WatchedWordDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordDeleteManyArgsWithSelect
  ? S['select']
  : true


export type WatchedWordArgs = {
  select?: WatchedWordSelect
}

export type WatchedWordArgsWithSelect = {
  select: WatchedWordSelect
}

type ExtractWatchedWordArgsSelect<S extends undefined | boolean | WatchedWordArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WatchedWordArgsWithSelect
  ? S['select']
  : true



/**
 * Model WebCrawlerRequest
 */

export type WebCrawlerRequest = {
  id: number
  count: number
  date: string
  userAgent: string
}

export type WebCrawlerRequestScalars = 'id' | 'count' | 'date' | 'userAgent'


export type WebCrawlerRequestSelect = {
  id?: boolean
  count?: boolean
  date?: boolean
  userAgent?: boolean
}

type WebCrawlerRequestDefault = {
  id: true
  count: true
  date: true
  userAgent: true
}


type WebCrawlerRequestGetPayload<S extends boolean | WebCrawlerRequestSelect> = S extends true
  ? WebCrawlerRequest
  : S extends WebCrawlerRequestSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<WebCrawlerRequestDefault, S>>]: P extends WebCrawlerRequestScalars
        ? WebCrawlerRequest[P]
        : never
    }
   : never

export interface WebCrawlerRequestDelegate {
  <T extends FindManyWebCrawlerRequestArgs>(args?: Subset<T, FindManyWebCrawlerRequestArgs>): PromiseLike<Array<WebCrawlerRequestGetPayload<ExtractFindManyWebCrawlerRequestArgsSelect<T>>>>
  findOne<T extends FindOneWebCrawlerRequestArgs>(
    args: Subset<T, FindOneWebCrawlerRequestArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractFindOneWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  findMany<T extends FindManyWebCrawlerRequestArgs>(
    args?: Subset<T, FindManyWebCrawlerRequestArgs>
  ): PromiseLike<Array<WebCrawlerRequestGetPayload<ExtractFindManyWebCrawlerRequestArgsSelect<T>>>>
  create<T extends WebCrawlerRequestCreateArgs>(
    args: Subset<T, WebCrawlerRequestCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestCreateArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  update<T extends WebCrawlerRequestUpdateArgs>(
    args: Subset<T, WebCrawlerRequestUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestUpdateArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  updateMany<T extends WebCrawlerRequestUpdateManyArgs>(
    args: Subset<T, WebCrawlerRequestUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestUpdateManyArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  upsert<T extends WebCrawlerRequestUpsertArgs>(
    args: Subset<T, WebCrawlerRequestUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestUpsertArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  delete<T extends WebCrawlerRequestDeleteArgs>(
    args: Subset<T, WebCrawlerRequestDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestDeleteArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
  deleteMany<T extends WebCrawlerRequestDeleteManyArgs>(
    args: Subset<T, WebCrawlerRequestDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestDeleteManyArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>
}
function WebCrawlerRequestDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): WebCrawlerRequestDelegate {
  const WebCrawlerRequest = <T extends FindManyWebCrawlerRequestArgs>(args: Subset<T, FindManyWebCrawlerRequestArgs>) => new WebCrawlerRequestClient<PromiseLike<Array<WebCrawlerRequestGetPayload<ExtractFindManyWebCrawlerRequestArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'webCrawlerRequests', 'webCrawlerRequests', args, [])
  WebCrawlerRequest.findOne = <T extends FindOneWebCrawlerRequestArgs>(args: Subset<T, FindOneWebCrawlerRequestArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'query',
    'webCrawlerRequest',
    'webCrawlerRequests.findOne',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'query',
    'webCrawlerRequest',
    'webCrawlerRequests.findOne',
    args,
    []
  )
  WebCrawlerRequest.findMany = <T extends FindManyWebCrawlerRequestArgs>(args: Subset<T, FindManyWebCrawlerRequestArgs>) => new WebCrawlerRequestClient<PromiseLike<Array<WebCrawlerRequestGetPayload<ExtractFindManyWebCrawlerRequestArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'webCrawlerRequests',
    'webCrawlerRequests.findMany',
    args,
    []
  )
  WebCrawlerRequest.create = <T extends WebCrawlerRequestCreateArgs>(args: Subset<T, WebCrawlerRequestCreateArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'createWebCrawlerRequest',
    'webCrawlerRequests.create',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'createWebCrawlerRequest',
    'webCrawlerRequests.create',
    args,
    []
  )
  WebCrawlerRequest.update = <T extends WebCrawlerRequestUpdateArgs>(args: Subset<T, WebCrawlerRequestUpdateArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebCrawlerRequest',
    'webCrawlerRequests.update',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebCrawlerRequest',
    'webCrawlerRequests.update',
    args,
    []
  )
  WebCrawlerRequest.updateMany = <T extends WebCrawlerRequestUpdateManyArgs>(args: Subset<T, WebCrawlerRequestUpdateManyArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebCrawlerRequests',
    'webCrawlerRequests.updateMany',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebCrawlerRequests',
    'webCrawlerRequests.updateMany',
    args,
    []
  )
  WebCrawlerRequest.upsert = <T extends WebCrawlerRequestUpsertArgs>(args: Subset<T, WebCrawlerRequestUpsertArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebCrawlerRequest',
    'webCrawlerRequests.upsert',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebCrawlerRequest',
    'webCrawlerRequests.upsert',
    args,
    []
  )
  WebCrawlerRequest.delete = <T extends WebCrawlerRequestDeleteArgs>(args: Subset<T, WebCrawlerRequestDeleteArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebCrawlerRequest',
    'webCrawlerRequests.delete',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebCrawlerRequest',
    'webCrawlerRequests.delete',
    args,
    []
  )
  WebCrawlerRequest.deleteMany = <T extends WebCrawlerRequestDeleteManyArgs>(args: Subset<T, WebCrawlerRequestDeleteManyArgs>) => args.select ? new WebCrawlerRequestClient<'select' extends keyof T ? PromiseLike<WebCrawlerRequestGetPayload<ExtractWebCrawlerRequestArgsSelect<T>>> : WebCrawlerRequestClient<WebCrawlerRequest>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebCrawlerRequests',
    'webCrawlerRequests.deleteMany',
    args,
    []
  ) : new WebCrawlerRequestClient<WebCrawlerRequest>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebCrawlerRequests',
    'webCrawlerRequests.deleteMany',
    args,
    []
  )
  return WebCrawlerRequest as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class WebCrawlerRequestClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: WebCrawlerRequestArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebCrawlerRequest').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebCrawlerRequest').catch(onrejected)
  }
}


// InputTypes

export type FindOneWebCrawlerRequestArgs = {
  select?: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
}

export type FindOneWebCrawlerRequestArgsWithSelect = {
  select: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
}

type ExtractFindOneWebCrawlerRequestArgsSelect<S extends undefined | boolean | FindOneWebCrawlerRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneWebCrawlerRequestArgsWithSelect
  ? S['select']
  : true


export type FindManyWebCrawlerRequestArgs = {
  select?: WebCrawlerRequestSelect
  where?: WebCrawlerRequestWhereInput
  orderBy?: WebCrawlerRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyWebCrawlerRequestArgsWithSelect = {
  select: WebCrawlerRequestSelect
  where?: WebCrawlerRequestWhereInput
  orderBy?: WebCrawlerRequestOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyWebCrawlerRequestArgsSelect<S extends undefined | boolean | FindManyWebCrawlerRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyWebCrawlerRequestArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestCreateArgs = {
  select?: WebCrawlerRequestSelect
  data: WebCrawlerRequestCreateInput
}

export type WebCrawlerRequestCreateArgsWithSelect = {
  select: WebCrawlerRequestSelect
  data: WebCrawlerRequestCreateInput
}

type ExtractWebCrawlerRequestCreateArgsSelect<S extends undefined | boolean | WebCrawlerRequestCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestCreateArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestUpdateArgs = {
  select?: WebCrawlerRequestSelect
  data: WebCrawlerRequestUpdateInput
  where: WebCrawlerRequestWhereUniqueInput
}

export type WebCrawlerRequestUpdateArgsWithSelect = {
  select: WebCrawlerRequestSelect
  data: WebCrawlerRequestUpdateInput
  where: WebCrawlerRequestWhereUniqueInput
}

type ExtractWebCrawlerRequestUpdateArgsSelect<S extends undefined | boolean | WebCrawlerRequestUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestUpdateArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestUpdateManyArgs = {
  select?: WebCrawlerRequestSelect
  data: WebCrawlerRequestUpdateManyMutationInput
  where?: WebCrawlerRequestWhereInput
}

export type WebCrawlerRequestUpdateManyArgsWithSelect = {
  select: WebCrawlerRequestSelect
  data: WebCrawlerRequestUpdateManyMutationInput
  where?: WebCrawlerRequestWhereInput
}

type ExtractWebCrawlerRequestUpdateManyArgsSelect<S extends undefined | boolean | WebCrawlerRequestUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestUpdateManyArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestUpsertArgs = {
  select?: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
  create: WebCrawlerRequestCreateInput
  update: WebCrawlerRequestUpdateInput
}

export type WebCrawlerRequestUpsertArgsWithSelect = {
  select: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
  create: WebCrawlerRequestCreateInput
  update: WebCrawlerRequestUpdateInput
}

type ExtractWebCrawlerRequestUpsertArgsSelect<S extends undefined | boolean | WebCrawlerRequestUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestUpsertArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestDeleteArgs = {
  select?: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
}

export type WebCrawlerRequestDeleteArgsWithSelect = {
  select: WebCrawlerRequestSelect
  where: WebCrawlerRequestWhereUniqueInput
}

type ExtractWebCrawlerRequestDeleteArgsSelect<S extends undefined | boolean | WebCrawlerRequestDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestDeleteArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestDeleteManyArgs = {
  select?: WebCrawlerRequestSelect
  where?: WebCrawlerRequestWhereInput
}

export type WebCrawlerRequestDeleteManyArgsWithSelect = {
  select: WebCrawlerRequestSelect
  where?: WebCrawlerRequestWhereInput
}

type ExtractWebCrawlerRequestDeleteManyArgsSelect<S extends undefined | boolean | WebCrawlerRequestDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestDeleteManyArgsWithSelect
  ? S['select']
  : true


export type WebCrawlerRequestArgs = {
  select?: WebCrawlerRequestSelect
}

export type WebCrawlerRequestArgsWithSelect = {
  select: WebCrawlerRequestSelect
}

type ExtractWebCrawlerRequestArgsSelect<S extends undefined | boolean | WebCrawlerRequestArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebCrawlerRequestArgsWithSelect
  ? S['select']
  : true



/**
 * Model WebHook
 */

export type WebHook = {
  id: number
  active: boolean
  contentType: number
  createdAt: string | null
  lastDeliveryStatus: number
  payloadUrl: string
  secret: string | null
  status: number
  updatedAt: string | null
  verifyCertificate: boolean
  wildcardWebHook: boolean
}

export type WebHookScalars = 'id' | 'active' | 'contentType' | 'createdAt' | 'lastDeliveryStatus' | 'payloadUrl' | 'secret' | 'status' | 'updatedAt' | 'verifyCertificate' | 'wildcardWebHook'


export type WebHookSelect = {
  id?: boolean
  active?: boolean
  contentType?: boolean
  createdAt?: boolean
  lastDeliveryStatus?: boolean
  payloadUrl?: boolean
  secret?: boolean
  status?: boolean
  updatedAt?: boolean
  verifyCertificate?: boolean
  wildcardWebHook?: boolean
}

type WebHookDefault = {
  id: true
  active: true
  contentType: true
  createdAt: true
  lastDeliveryStatus: true
  payloadUrl: true
  secret: true
  status: true
  updatedAt: true
  verifyCertificate: true
  wildcardWebHook: true
}


type WebHookGetPayload<S extends boolean | WebHookSelect> = S extends true
  ? WebHook
  : S extends WebHookSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<WebHookDefault, S>>]: P extends WebHookScalars
        ? WebHook[P]
        : never
    }
   : never

export interface WebHookDelegate {
  <T extends FindManyWebHookArgs>(args?: Subset<T, FindManyWebHookArgs>): PromiseLike<Array<WebHookGetPayload<ExtractFindManyWebHookArgsSelect<T>>>>
  findOne<T extends FindOneWebHookArgs>(
    args: Subset<T, FindOneWebHookArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractFindOneWebHookArgsSelect<T>>> : WebHookClient<WebHook>
  findMany<T extends FindManyWebHookArgs>(
    args?: Subset<T, FindManyWebHookArgs>
  ): PromiseLike<Array<WebHookGetPayload<ExtractFindManyWebHookArgsSelect<T>>>>
  create<T extends WebHookCreateArgs>(
    args: Subset<T, WebHookCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookCreateArgsSelect<T>>> : WebHookClient<WebHook>
  update<T extends WebHookUpdateArgs>(
    args: Subset<T, WebHookUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookUpdateArgsSelect<T>>> : WebHookClient<WebHook>
  updateMany<T extends WebHookUpdateManyArgs>(
    args: Subset<T, WebHookUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookUpdateManyArgsSelect<T>>> : WebHookClient<WebHook>
  upsert<T extends WebHookUpsertArgs>(
    args: Subset<T, WebHookUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookUpsertArgsSelect<T>>> : WebHookClient<WebHook>
  delete<T extends WebHookDeleteArgs>(
    args: Subset<T, WebHookDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookDeleteArgsSelect<T>>> : WebHookClient<WebHook>
  deleteMany<T extends WebHookDeleteManyArgs>(
    args: Subset<T, WebHookDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookDeleteManyArgsSelect<T>>> : WebHookClient<WebHook>
}
function WebHookDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): WebHookDelegate {
  const WebHook = <T extends FindManyWebHookArgs>(args: Subset<T, FindManyWebHookArgs>) => new WebHookClient<PromiseLike<Array<WebHookGetPayload<ExtractFindManyWebHookArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'webHooks', 'webHooks', args, [])
  WebHook.findOne = <T extends FindOneWebHookArgs>(args: Subset<T, FindOneWebHookArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'query',
    'webHook',
    'webHooks.findOne',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'query',
    'webHook',
    'webHooks.findOne',
    args,
    []
  )
  WebHook.findMany = <T extends FindManyWebHookArgs>(args: Subset<T, FindManyWebHookArgs>) => new WebHookClient<PromiseLike<Array<WebHookGetPayload<ExtractFindManyWebHookArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'webHooks',
    'webHooks.findMany',
    args,
    []
  )
  WebHook.create = <T extends WebHookCreateArgs>(args: Subset<T, WebHookCreateArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHook',
    'webHooks.create',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHook',
    'webHooks.create',
    args,
    []
  )
  WebHook.update = <T extends WebHookUpdateArgs>(args: Subset<T, WebHookUpdateArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHook',
    'webHooks.update',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHook',
    'webHooks.update',
    args,
    []
  )
  WebHook.updateMany = <T extends WebHookUpdateManyArgs>(args: Subset<T, WebHookUpdateManyArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHooks',
    'webHooks.updateMany',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHooks',
    'webHooks.updateMany',
    args,
    []
  )
  WebHook.upsert = <T extends WebHookUpsertArgs>(args: Subset<T, WebHookUpsertArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHook',
    'webHooks.upsert',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHook',
    'webHooks.upsert',
    args,
    []
  )
  WebHook.delete = <T extends WebHookDeleteArgs>(args: Subset<T, WebHookDeleteArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHook',
    'webHooks.delete',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHook',
    'webHooks.delete',
    args,
    []
  )
  WebHook.deleteMany = <T extends WebHookDeleteManyArgs>(args: Subset<T, WebHookDeleteManyArgs>) => args.select ? new WebHookClient<'select' extends keyof T ? PromiseLike<WebHookGetPayload<ExtractWebHookArgsSelect<T>>> : WebHookClient<WebHook>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHooks',
    'webHooks.deleteMany',
    args,
    []
  ) : new WebHookClient<WebHook>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHooks',
    'webHooks.deleteMany',
    args,
    []
  )
  return WebHook as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class WebHookClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: WebHookArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHook').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHook').catch(onrejected)
  }
}


// InputTypes

export type FindOneWebHookArgs = {
  select?: WebHookSelect
  where: WebHookWhereUniqueInput
}

export type FindOneWebHookArgsWithSelect = {
  select: WebHookSelect
  where: WebHookWhereUniqueInput
}

type ExtractFindOneWebHookArgsSelect<S extends undefined | boolean | FindOneWebHookArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneWebHookArgsWithSelect
  ? S['select']
  : true


export type FindManyWebHookArgs = {
  select?: WebHookSelect
  where?: WebHookWhereInput
  orderBy?: WebHookOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyWebHookArgsWithSelect = {
  select: WebHookSelect
  where?: WebHookWhereInput
  orderBy?: WebHookOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyWebHookArgsSelect<S extends undefined | boolean | FindManyWebHookArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyWebHookArgsWithSelect
  ? S['select']
  : true


export type WebHookCreateArgs = {
  select?: WebHookSelect
  data: WebHookCreateInput
}

export type WebHookCreateArgsWithSelect = {
  select: WebHookSelect
  data: WebHookCreateInput
}

type ExtractWebHookCreateArgsSelect<S extends undefined | boolean | WebHookCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookCreateArgsWithSelect
  ? S['select']
  : true


export type WebHookUpdateArgs = {
  select?: WebHookSelect
  data: WebHookUpdateInput
  where: WebHookWhereUniqueInput
}

export type WebHookUpdateArgsWithSelect = {
  select: WebHookSelect
  data: WebHookUpdateInput
  where: WebHookWhereUniqueInput
}

type ExtractWebHookUpdateArgsSelect<S extends undefined | boolean | WebHookUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookUpdateArgsWithSelect
  ? S['select']
  : true


export type WebHookUpdateManyArgs = {
  select?: WebHookSelect
  data: WebHookUpdateManyMutationInput
  where?: WebHookWhereInput
}

export type WebHookUpdateManyArgsWithSelect = {
  select: WebHookSelect
  data: WebHookUpdateManyMutationInput
  where?: WebHookWhereInput
}

type ExtractWebHookUpdateManyArgsSelect<S extends undefined | boolean | WebHookUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookUpdateManyArgsWithSelect
  ? S['select']
  : true


export type WebHookUpsertArgs = {
  select?: WebHookSelect
  where: WebHookWhereUniqueInput
  create: WebHookCreateInput
  update: WebHookUpdateInput
}

export type WebHookUpsertArgsWithSelect = {
  select: WebHookSelect
  where: WebHookWhereUniqueInput
  create: WebHookCreateInput
  update: WebHookUpdateInput
}

type ExtractWebHookUpsertArgsSelect<S extends undefined | boolean | WebHookUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookUpsertArgsWithSelect
  ? S['select']
  : true


export type WebHookDeleteArgs = {
  select?: WebHookSelect
  where: WebHookWhereUniqueInput
}

export type WebHookDeleteArgsWithSelect = {
  select: WebHookSelect
  where: WebHookWhereUniqueInput
}

type ExtractWebHookDeleteArgsSelect<S extends undefined | boolean | WebHookDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookDeleteArgsWithSelect
  ? S['select']
  : true


export type WebHookDeleteManyArgs = {
  select?: WebHookSelect
  where?: WebHookWhereInput
}

export type WebHookDeleteManyArgsWithSelect = {
  select: WebHookSelect
  where?: WebHookWhereInput
}

type ExtractWebHookDeleteManyArgsSelect<S extends undefined | boolean | WebHookDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookDeleteManyArgsWithSelect
  ? S['select']
  : true


export type WebHookArgs = {
  select?: WebHookSelect
}

export type WebHookArgsWithSelect = {
  select: WebHookSelect
}

type ExtractWebHookArgsSelect<S extends undefined | boolean | WebHookArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookArgsWithSelect
  ? S['select']
  : true



/**
 * Model WebHookEvent
 */

export type WebHookEvent = {
  id: number
  createdAt: string | null
  duration: number | null
  headers: string | null
  payload: string | null
  responseBody: string | null
  responseHeaders: string | null
  status: number | null
  updatedAt: string | null
  webHookId: number
}

export type WebHookEventScalars = 'id' | 'createdAt' | 'duration' | 'headers' | 'payload' | 'responseBody' | 'responseHeaders' | 'status' | 'updatedAt' | 'webHookId'


export type WebHookEventSelect = {
  id?: boolean
  createdAt?: boolean
  duration?: boolean
  headers?: boolean
  payload?: boolean
  responseBody?: boolean
  responseHeaders?: boolean
  status?: boolean
  updatedAt?: boolean
  webHookId?: boolean
}

type WebHookEventDefault = {
  id: true
  createdAt: true
  duration: true
  headers: true
  payload: true
  responseBody: true
  responseHeaders: true
  status: true
  updatedAt: true
  webHookId: true
}


type WebHookEventGetPayload<S extends boolean | WebHookEventSelect> = S extends true
  ? WebHookEvent
  : S extends WebHookEventSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<WebHookEventDefault, S>>]: P extends WebHookEventScalars
        ? WebHookEvent[P]
        : never
    }
   : never

export interface WebHookEventDelegate {
  <T extends FindManyWebHookEventArgs>(args?: Subset<T, FindManyWebHookEventArgs>): PromiseLike<Array<WebHookEventGetPayload<ExtractFindManyWebHookEventArgsSelect<T>>>>
  findOne<T extends FindOneWebHookEventArgs>(
    args: Subset<T, FindOneWebHookEventArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractFindOneWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  findMany<T extends FindManyWebHookEventArgs>(
    args?: Subset<T, FindManyWebHookEventArgs>
  ): PromiseLike<Array<WebHookEventGetPayload<ExtractFindManyWebHookEventArgsSelect<T>>>>
  create<T extends WebHookEventCreateArgs>(
    args: Subset<T, WebHookEventCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventCreateArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  update<T extends WebHookEventUpdateArgs>(
    args: Subset<T, WebHookEventUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventUpdateArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  updateMany<T extends WebHookEventUpdateManyArgs>(
    args: Subset<T, WebHookEventUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventUpdateManyArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  upsert<T extends WebHookEventUpsertArgs>(
    args: Subset<T, WebHookEventUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventUpsertArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  delete<T extends WebHookEventDeleteArgs>(
    args: Subset<T, WebHookEventDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventDeleteArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
  deleteMany<T extends WebHookEventDeleteManyArgs>(
    args: Subset<T, WebHookEventDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventDeleteManyArgsSelect<T>>> : WebHookEventClient<WebHookEvent>
}
function WebHookEventDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): WebHookEventDelegate {
  const WebHookEvent = <T extends FindManyWebHookEventArgs>(args: Subset<T, FindManyWebHookEventArgs>) => new WebHookEventClient<PromiseLike<Array<WebHookEventGetPayload<ExtractFindManyWebHookEventArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'webHookEvents', 'webHookEvents', args, [])
  WebHookEvent.findOne = <T extends FindOneWebHookEventArgs>(args: Subset<T, FindOneWebHookEventArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'query',
    'webHookEvent',
    'webHookEvents.findOne',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'query',
    'webHookEvent',
    'webHookEvents.findOne',
    args,
    []
  )
  WebHookEvent.findMany = <T extends FindManyWebHookEventArgs>(args: Subset<T, FindManyWebHookEventArgs>) => new WebHookEventClient<PromiseLike<Array<WebHookEventGetPayload<ExtractFindManyWebHookEventArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'webHookEvents',
    'webHookEvents.findMany',
    args,
    []
  )
  WebHookEvent.create = <T extends WebHookEventCreateArgs>(args: Subset<T, WebHookEventCreateArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHookEvent',
    'webHookEvents.create',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHookEvent',
    'webHookEvents.create',
    args,
    []
  )
  WebHookEvent.update = <T extends WebHookEventUpdateArgs>(args: Subset<T, WebHookEventUpdateArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHookEvent',
    'webHookEvents.update',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHookEvent',
    'webHookEvents.update',
    args,
    []
  )
  WebHookEvent.updateMany = <T extends WebHookEventUpdateManyArgs>(args: Subset<T, WebHookEventUpdateManyArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHookEvents',
    'webHookEvents.updateMany',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHookEvents',
    'webHookEvents.updateMany',
    args,
    []
  )
  WebHookEvent.upsert = <T extends WebHookEventUpsertArgs>(args: Subset<T, WebHookEventUpsertArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHookEvent',
    'webHookEvents.upsert',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHookEvent',
    'webHookEvents.upsert',
    args,
    []
  )
  WebHookEvent.delete = <T extends WebHookEventDeleteArgs>(args: Subset<T, WebHookEventDeleteArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHookEvent',
    'webHookEvents.delete',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHookEvent',
    'webHookEvents.delete',
    args,
    []
  )
  WebHookEvent.deleteMany = <T extends WebHookEventDeleteManyArgs>(args: Subset<T, WebHookEventDeleteManyArgs>) => args.select ? new WebHookEventClient<'select' extends keyof T ? PromiseLike<WebHookEventGetPayload<ExtractWebHookEventArgsSelect<T>>> : WebHookEventClient<WebHookEvent>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHookEvents',
    'webHookEvents.deleteMany',
    args,
    []
  ) : new WebHookEventClient<WebHookEvent>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHookEvents',
    'webHookEvents.deleteMany',
    args,
    []
  )
  return WebHookEvent as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class WebHookEventClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: WebHookEventArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHookEvent').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHookEvent').catch(onrejected)
  }
}


// InputTypes

export type FindOneWebHookEventArgs = {
  select?: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
}

export type FindOneWebHookEventArgsWithSelect = {
  select: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
}

type ExtractFindOneWebHookEventArgsSelect<S extends undefined | boolean | FindOneWebHookEventArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneWebHookEventArgsWithSelect
  ? S['select']
  : true


export type FindManyWebHookEventArgs = {
  select?: WebHookEventSelect
  where?: WebHookEventWhereInput
  orderBy?: WebHookEventOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyWebHookEventArgsWithSelect = {
  select: WebHookEventSelect
  where?: WebHookEventWhereInput
  orderBy?: WebHookEventOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyWebHookEventArgsSelect<S extends undefined | boolean | FindManyWebHookEventArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyWebHookEventArgsWithSelect
  ? S['select']
  : true


export type WebHookEventCreateArgs = {
  select?: WebHookEventSelect
  data: WebHookEventCreateInput
}

export type WebHookEventCreateArgsWithSelect = {
  select: WebHookEventSelect
  data: WebHookEventCreateInput
}

type ExtractWebHookEventCreateArgsSelect<S extends undefined | boolean | WebHookEventCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventCreateArgsWithSelect
  ? S['select']
  : true


export type WebHookEventUpdateArgs = {
  select?: WebHookEventSelect
  data: WebHookEventUpdateInput
  where: WebHookEventWhereUniqueInput
}

export type WebHookEventUpdateArgsWithSelect = {
  select: WebHookEventSelect
  data: WebHookEventUpdateInput
  where: WebHookEventWhereUniqueInput
}

type ExtractWebHookEventUpdateArgsSelect<S extends undefined | boolean | WebHookEventUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventUpdateArgsWithSelect
  ? S['select']
  : true


export type WebHookEventUpdateManyArgs = {
  select?: WebHookEventSelect
  data: WebHookEventUpdateManyMutationInput
  where?: WebHookEventWhereInput
}

export type WebHookEventUpdateManyArgsWithSelect = {
  select: WebHookEventSelect
  data: WebHookEventUpdateManyMutationInput
  where?: WebHookEventWhereInput
}

type ExtractWebHookEventUpdateManyArgsSelect<S extends undefined | boolean | WebHookEventUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventUpdateManyArgsWithSelect
  ? S['select']
  : true


export type WebHookEventUpsertArgs = {
  select?: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
  create: WebHookEventCreateInput
  update: WebHookEventUpdateInput
}

export type WebHookEventUpsertArgsWithSelect = {
  select: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
  create: WebHookEventCreateInput
  update: WebHookEventUpdateInput
}

type ExtractWebHookEventUpsertArgsSelect<S extends undefined | boolean | WebHookEventUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventUpsertArgsWithSelect
  ? S['select']
  : true


export type WebHookEventDeleteArgs = {
  select?: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
}

export type WebHookEventDeleteArgsWithSelect = {
  select: WebHookEventSelect
  where: WebHookEventWhereUniqueInput
}

type ExtractWebHookEventDeleteArgsSelect<S extends undefined | boolean | WebHookEventDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventDeleteArgsWithSelect
  ? S['select']
  : true


export type WebHookEventDeleteManyArgs = {
  select?: WebHookEventSelect
  where?: WebHookEventWhereInput
}

export type WebHookEventDeleteManyArgsWithSelect = {
  select: WebHookEventSelect
  where?: WebHookEventWhereInput
}

type ExtractWebHookEventDeleteManyArgsSelect<S extends undefined | boolean | WebHookEventDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventDeleteManyArgsWithSelect
  ? S['select']
  : true


export type WebHookEventArgs = {
  select?: WebHookEventSelect
}

export type WebHookEventArgsWithSelect = {
  select: WebHookEventSelect
}

type ExtractWebHookEventArgsSelect<S extends undefined | boolean | WebHookEventArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventArgsWithSelect
  ? S['select']
  : true



/**
 * Model WebHookEventType
 */

export type WebHookEventType = {
  id: number
  name: string
}

export type WebHookEventTypeScalars = 'id' | 'name'


export type WebHookEventTypeSelect = {
  id?: boolean
  name?: boolean
}

type WebHookEventTypeDefault = {
  id: true
  name: true
}


type WebHookEventTypeGetPayload<S extends boolean | WebHookEventTypeSelect> = S extends true
  ? WebHookEventType
  : S extends WebHookEventTypeSelect
  ? {
      [P in CleanupNever<MergeTruthyValues<WebHookEventTypeDefault, S>>]: P extends WebHookEventTypeScalars
        ? WebHookEventType[P]
        : never
    }
   : never

export interface WebHookEventTypeDelegate {
  <T extends FindManyWebHookEventTypeArgs>(args?: Subset<T, FindManyWebHookEventTypeArgs>): PromiseLike<Array<WebHookEventTypeGetPayload<ExtractFindManyWebHookEventTypeArgsSelect<T>>>>
  findOne<T extends FindOneWebHookEventTypeArgs>(
    args: Subset<T, FindOneWebHookEventTypeArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractFindOneWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  findMany<T extends FindManyWebHookEventTypeArgs>(
    args?: Subset<T, FindManyWebHookEventTypeArgs>
  ): PromiseLike<Array<WebHookEventTypeGetPayload<ExtractFindManyWebHookEventTypeArgsSelect<T>>>>
  create<T extends WebHookEventTypeCreateArgs>(
    args: Subset<T, WebHookEventTypeCreateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeCreateArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  update<T extends WebHookEventTypeUpdateArgs>(
    args: Subset<T, WebHookEventTypeUpdateArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeUpdateArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  updateMany<T extends WebHookEventTypeUpdateManyArgs>(
    args: Subset<T, WebHookEventTypeUpdateManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeUpdateManyArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  upsert<T extends WebHookEventTypeUpsertArgs>(
    args: Subset<T, WebHookEventTypeUpsertArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeUpsertArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  delete<T extends WebHookEventTypeDeleteArgs>(
    args: Subset<T, WebHookEventTypeDeleteArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeDeleteArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
  deleteMany<T extends WebHookEventTypeDeleteManyArgs>(
    args: Subset<T, WebHookEventTypeDeleteManyArgs>
  ): 'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeDeleteManyArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>
}
function WebHookEventTypeDelegate(dmmf: DMMFClass, fetcher: PhotonFetcher): WebHookEventTypeDelegate {
  const WebHookEventType = <T extends FindManyWebHookEventTypeArgs>(args: Subset<T, FindManyWebHookEventTypeArgs>) => new WebHookEventTypeClient<PromiseLike<Array<WebHookEventTypeGetPayload<ExtractFindManyWebHookEventTypeArgsSelect<T>>>>>(dmmf, fetcher, 'query', 'webHookEventTypes', 'webHookEventTypes', args, [])
  WebHookEventType.findOne = <T extends FindOneWebHookEventTypeArgs>(args: Subset<T, FindOneWebHookEventTypeArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'query',
    'webHookEventType',
    'webHookEventTypes.findOne',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'query',
    'webHookEventType',
    'webHookEventTypes.findOne',
    args,
    []
  )
  WebHookEventType.findMany = <T extends FindManyWebHookEventTypeArgs>(args: Subset<T, FindManyWebHookEventTypeArgs>) => new WebHookEventTypeClient<PromiseLike<Array<WebHookEventTypeGetPayload<ExtractFindManyWebHookEventTypeArgsSelect<T>>>>>(
    dmmf,
    fetcher,
    'query',
    'webHookEventTypes',
    'webHookEventTypes.findMany',
    args,
    []
  )
  WebHookEventType.create = <T extends WebHookEventTypeCreateArgs>(args: Subset<T, WebHookEventTypeCreateArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHookEventType',
    'webHookEventTypes.create',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'createWebHookEventType',
    'webHookEventTypes.create',
    args,
    []
  )
  WebHookEventType.update = <T extends WebHookEventTypeUpdateArgs>(args: Subset<T, WebHookEventTypeUpdateArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHookEventType',
    'webHookEventTypes.update',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'updateWebHookEventType',
    'webHookEventTypes.update',
    args,
    []
  )
  WebHookEventType.updateMany = <T extends WebHookEventTypeUpdateManyArgs>(args: Subset<T, WebHookEventTypeUpdateManyArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHookEventTypes',
    'webHookEventTypes.updateMany',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'updateManyWebHookEventTypes',
    'webHookEventTypes.updateMany',
    args,
    []
  )
  WebHookEventType.upsert = <T extends WebHookEventTypeUpsertArgs>(args: Subset<T, WebHookEventTypeUpsertArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHookEventType',
    'webHookEventTypes.upsert',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'upsertWebHookEventType',
    'webHookEventTypes.upsert',
    args,
    []
  )
  WebHookEventType.delete = <T extends WebHookEventTypeDeleteArgs>(args: Subset<T, WebHookEventTypeDeleteArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHookEventType',
    'webHookEventTypes.delete',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'deleteWebHookEventType',
    'webHookEventTypes.delete',
    args,
    []
  )
  WebHookEventType.deleteMany = <T extends WebHookEventTypeDeleteManyArgs>(args: Subset<T, WebHookEventTypeDeleteManyArgs>) => args.select ? new WebHookEventTypeClient<'select' extends keyof T ? PromiseLike<WebHookEventTypeGetPayload<ExtractWebHookEventTypeArgsSelect<T>>> : WebHookEventTypeClient<WebHookEventType>>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHookEventTypes',
    'webHookEventTypes.deleteMany',
    args,
    []
  ) : new WebHookEventTypeClient<WebHookEventType>(
    dmmf,
    fetcher,
    'mutation',
    'deleteManyWebHookEventTypes',
    'webHookEventTypes.deleteMany',
    args,
    []
  )
  return WebHookEventType as any // any needed until https://github.com/microsoft/TypeScript/issues/31335 is resolved
}

class WebHookEventTypeClient<T> implements PromiseLike<T> {
  private callsite: any
  constructor(
    private readonly dmmf: DMMFClass,
    private readonly fetcher: PhotonFetcher,
    private readonly queryType: 'query' | 'mutation',
    private readonly rootField: string,
    private readonly clientMethod: string,
    private readonly args: WebHookEventTypeArgs,
    private readonly path: string[]
  ) {
    // @ts-ignore
    if (typeof window === 'undefined' && process.env.NODE_ENV !== 'production') {
      const error = new Error()
      const stack = error.stack.toString()
      const line = stack.split('\n').find(l => l.includes('at') && !l.includes('@generated/photon'))
      if (line) {
        this.callsite = line.trim().slice(3)
      }
    }
  }
  readonly [Symbol.toStringTag]: 'PhotonPromise'



  protected get query() {
    const { rootField } = this
    const document = makeDocument({
      dmmf: this.dmmf,
      rootField,
      rootTypeName: this.queryType,
      select: this.args
    })
    try {
      document.validate(this.args, false, this.clientMethod)
    } catch (e) {
      const x: any = e
      if (x.render) {
        if (this.callsite) {
          e.message = x.render(this.callsite)
        }
      }
      throw e
    }
    debug(String(document))
    const newDocument = transformDocument(document)
    return String(newDocument)
  }

  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,
  ): Promise<TResult1 | TResult2> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHookEventType').then(onfulfilled, onrejected)
  }

  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,
  ): Promise<T | TResult> {
    return this.fetcher.request<T>(this.query, this.path, this.rootField, 'WebHookEventType').catch(onrejected)
  }
}


// InputTypes

export type FindOneWebHookEventTypeArgs = {
  select?: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
}

export type FindOneWebHookEventTypeArgsWithSelect = {
  select: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
}

type ExtractFindOneWebHookEventTypeArgsSelect<S extends undefined | boolean | FindOneWebHookEventTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindOneWebHookEventTypeArgsWithSelect
  ? S['select']
  : true


export type FindManyWebHookEventTypeArgs = {
  select?: WebHookEventTypeSelect
  where?: WebHookEventTypeWhereInput
  orderBy?: WebHookEventTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

export type FindManyWebHookEventTypeArgsWithSelect = {
  select: WebHookEventTypeSelect
  where?: WebHookEventTypeWhereInput
  orderBy?: WebHookEventTypeOrderByInput
  skip?: string
  after?: string
  before?: string
  first?: number
  last?: number
}

type ExtractFindManyWebHookEventTypeArgsSelect<S extends undefined | boolean | FindManyWebHookEventTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends FindManyWebHookEventTypeArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeCreateArgs = {
  select?: WebHookEventTypeSelect
  data: WebHookEventTypeCreateInput
}

export type WebHookEventTypeCreateArgsWithSelect = {
  select: WebHookEventTypeSelect
  data: WebHookEventTypeCreateInput
}

type ExtractWebHookEventTypeCreateArgsSelect<S extends undefined | boolean | WebHookEventTypeCreateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeCreateArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeUpdateArgs = {
  select?: WebHookEventTypeSelect
  data: WebHookEventTypeUpdateInput
  where: WebHookEventTypeWhereUniqueInput
}

export type WebHookEventTypeUpdateArgsWithSelect = {
  select: WebHookEventTypeSelect
  data: WebHookEventTypeUpdateInput
  where: WebHookEventTypeWhereUniqueInput
}

type ExtractWebHookEventTypeUpdateArgsSelect<S extends undefined | boolean | WebHookEventTypeUpdateArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeUpdateArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeUpdateManyArgs = {
  select?: WebHookEventTypeSelect
  data: WebHookEventTypeUpdateManyMutationInput
  where?: WebHookEventTypeWhereInput
}

export type WebHookEventTypeUpdateManyArgsWithSelect = {
  select: WebHookEventTypeSelect
  data: WebHookEventTypeUpdateManyMutationInput
  where?: WebHookEventTypeWhereInput
}

type ExtractWebHookEventTypeUpdateManyArgsSelect<S extends undefined | boolean | WebHookEventTypeUpdateManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeUpdateManyArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeUpsertArgs = {
  select?: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
  create: WebHookEventTypeCreateInput
  update: WebHookEventTypeUpdateInput
}

export type WebHookEventTypeUpsertArgsWithSelect = {
  select: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
  create: WebHookEventTypeCreateInput
  update: WebHookEventTypeUpdateInput
}

type ExtractWebHookEventTypeUpsertArgsSelect<S extends undefined | boolean | WebHookEventTypeUpsertArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeUpsertArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeDeleteArgs = {
  select?: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
}

export type WebHookEventTypeDeleteArgsWithSelect = {
  select: WebHookEventTypeSelect
  where: WebHookEventTypeWhereUniqueInput
}

type ExtractWebHookEventTypeDeleteArgsSelect<S extends undefined | boolean | WebHookEventTypeDeleteArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeDeleteArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeDeleteManyArgs = {
  select?: WebHookEventTypeSelect
  where?: WebHookEventTypeWhereInput
}

export type WebHookEventTypeDeleteManyArgsWithSelect = {
  select: WebHookEventTypeSelect
  where?: WebHookEventTypeWhereInput
}

type ExtractWebHookEventTypeDeleteManyArgsSelect<S extends undefined | boolean | WebHookEventTypeDeleteManyArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeDeleteManyArgsWithSelect
  ? S['select']
  : true


export type WebHookEventTypeArgs = {
  select?: WebHookEventTypeSelect
}

export type WebHookEventTypeArgsWithSelect = {
  select: WebHookEventTypeSelect
}

type ExtractWebHookEventTypeArgsSelect<S extends undefined | boolean | WebHookEventTypeArgs> = S extends undefined
  ? false
  : S extends boolean
  ? S
  : S extends WebHookEventTypeArgsWithSelect
  ? S['select']
  : true



/**
 * Deep Input Types
 */


export type ApiKeyWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  createdById?: number | NullableIntFilter | null
  hidden?: boolean | BooleanFilter
  key?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<ApiKeyWhereInput>
  OR?: Enumerable<ApiKeyWhereInput>
  NOT?: Enumerable<ApiKeyWhereInput>
}

export type ApiKeyWhereUniqueInput = {
  id?: number
  userId?: number
}

export type ApplicationRequestWhereInput = {
  id?: number | IntFilter
  count?: number | IntFilter
  date?: string | Date | DateTimeFilter
  reqType?: number | IntFilter
  AND?: Enumerable<ApplicationRequestWhereInput>
  OR?: Enumerable<ApplicationRequestWhereInput>
  NOT?: Enumerable<ApplicationRequestWhereInput>
}

export type ApplicationRequestWhereUniqueInput = {
  id?: number
}

export type ArInternalMetadatumWhereInput = {
  key?: string | StringFilter
  createdAt?: string | Date | DateTimeFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<ArInternalMetadatumWhereInput>
  OR?: Enumerable<ArInternalMetadatumWhereInput>
  NOT?: Enumerable<ArInternalMetadatumWhereInput>
}

export type BadgeWhereInput = {
  id?: number | IntFilter
  allowTitle?: boolean | BooleanFilter
  autoRevoke?: boolean | BooleanFilter
  badgeGroupingId?: number | IntFilter
  badgeTypeId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  description?: string | NullableStringFilter | null
  enabled?: boolean | BooleanFilter
  grantCount?: number | IntFilter
  icon?: string | NullableStringFilter | null
  image?: string | NullableStringFilter | null
  listable?: boolean | NullableBooleanFilter | null
  longDescription?: string | NullableStringFilter | null
  multipleGrant?: boolean | BooleanFilter
  name?: string | StringFilter
  query?: string | NullableStringFilter | null
  showPosts?: boolean | BooleanFilter
  system?: boolean | BooleanFilter
  targetPosts?: boolean | NullableBooleanFilter | null
  trigger?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<BadgeWhereInput>
  OR?: Enumerable<BadgeWhereInput>
  NOT?: Enumerable<BadgeWhereInput>
}

export type BadgeWhereUniqueInput = {
  id?: number
  name?: string
}

export type BadgeGroupingWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  description?: string | NullableStringFilter | null
  name?: string | StringFilter
  position?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<BadgeGroupingWhereInput>
  OR?: Enumerable<BadgeGroupingWhereInput>
  NOT?: Enumerable<BadgeGroupingWhereInput>
}

export type BadgeGroupingWhereUniqueInput = {
  id?: number
}

export type BadgeTypeWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<BadgeTypeWhereInput>
  OR?: Enumerable<BadgeTypeWhereInput>
  NOT?: Enumerable<BadgeTypeWhereInput>
}

export type BadgeTypeWhereUniqueInput = {
  id?: number
  name?: string
}

export type CategoryWhereInput = {
  id?: number | IntFilter
  allowBadges?: boolean | BooleanFilter
  allTopicsWiki?: boolean | BooleanFilter
  autoCloseBasedOnLastPost?: boolean | NullableBooleanFilter | null
  autoCloseHours?: number | NullableFloatFilter | null
  color?: string | StringFilter
  containsMessages?: boolean | NullableBooleanFilter | null
  createdAt?: string | Date | DateTimeFilter
  defaultTopPeriod?: string | NullableStringFilter | null
  defaultView?: string | NullableStringFilter | null
  description?: string | NullableStringFilter | null
  emailIn?: string | NullableStringFilter | null
  emailInAllowStrangers?: boolean | NullableBooleanFilter | null
  latestPostId?: number | NullableIntFilter | null
  latestTopicId?: number | NullableIntFilter | null
  mailinglistMirror?: boolean | BooleanFilter
  minimumRequiredTags?: number | NullableIntFilter | null
  name?: string | StringFilter
  nameLower?: string | StringFilter
  navigateToFirstPostAfterRead?: boolean | BooleanFilter
  numFeaturedTopics?: number | NullableIntFilter | null
  parentCategoryId?: number | NullableIntFilter | null
  position?: number | NullableIntFilter | null
  postCount?: number | IntFilter
  postsDay?: number | NullableIntFilter | null
  postsMonth?: number | NullableIntFilter | null
  postsWeek?: number | NullableIntFilter | null
  postsYear?: number | NullableIntFilter | null
  readRestricted?: boolean | BooleanFilter
  showSubcategoryList?: boolean | NullableBooleanFilter | null
  slug?: string | StringFilter
  sortAscending?: boolean | NullableBooleanFilter | null
  sortOrder?: string | NullableStringFilter | null
  subcategoryListStyle?: string | NullableStringFilter | null
  suppressFromLatest?: boolean | NullableBooleanFilter | null
  textColor?: string | StringFilter
  topicCount?: number | IntFilter
  topicFeaturedLinkAllowed?: boolean | NullableBooleanFilter | null
  topicId?: number | NullableIntFilter | null
  topicsDay?: number | NullableIntFilter | null
  topicsMonth?: number | NullableIntFilter | null
  topicsWeek?: number | NullableIntFilter | null
  topicsYear?: number | NullableIntFilter | null
  topicTemplate?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  uploadedBackgroundId?: number | NullableIntFilter | null
  uploadedLogoId?: number | NullableIntFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<CategoryWhereInput>
  OR?: Enumerable<CategoryWhereInput>
  NOT?: Enumerable<CategoryWhereInput>
}

export type CategoryWhereUniqueInput = {
  id?: number
  emailIn?: string
  name?: string
}

export type CategoryCustomFieldWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<CategoryCustomFieldWhereInput>
  OR?: Enumerable<CategoryCustomFieldWhereInput>
  NOT?: Enumerable<CategoryCustomFieldWhereInput>
}

export type CategoryCustomFieldWhereUniqueInput = {
  id?: number
}

export type CategoryFeaturedTopicWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  rank?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<CategoryFeaturedTopicWhereInput>
  OR?: Enumerable<CategoryFeaturedTopicWhereInput>
  NOT?: Enumerable<CategoryFeaturedTopicWhereInput>
}

export type CategoryFeaturedTopicWhereUniqueInput = {
  id?: number
}

export type CategoryGroupWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | IntFilter
  permissionType?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<CategoryGroupWhereInput>
  OR?: Enumerable<CategoryGroupWhereInput>
  NOT?: Enumerable<CategoryGroupWhereInput>
}

export type CategoryGroupWhereUniqueInput = {
  id?: number
}

export type CategorySearchDatumWhereInput = {
  category_id?: number | IntFilter
  locale?: string | NullableStringFilter | null
  rawData?: string | NullableStringFilter | null
  version?: number | NullableIntFilter | null
  AND?: Enumerable<CategorySearchDatumWhereInput>
  OR?: Enumerable<CategorySearchDatumWhereInput>
  NOT?: Enumerable<CategorySearchDatumWhereInput>
}

export type CategoryTagWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  tagId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<CategoryTagWhereInput>
  OR?: Enumerable<CategoryTagWhereInput>
  NOT?: Enumerable<CategoryTagWhereInput>
}

export type CategoryTagWhereUniqueInput = {
  id?: number
}

export type CategoryTagGroupWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  tagGroupId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<CategoryTagGroupWhereInput>
  OR?: Enumerable<CategoryTagGroupWhereInput>
  NOT?: Enumerable<CategoryTagGroupWhereInput>
}

export type CategoryTagGroupWhereUniqueInput = {
  id?: number
}

export type CategoryTagStatWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  tagId?: number | IntFilter
  topicCount?: number | IntFilter
  AND?: Enumerable<CategoryTagStatWhereInput>
  OR?: Enumerable<CategoryTagStatWhereInput>
  NOT?: Enumerable<CategoryTagStatWhereInput>
}

export type CategoryTagStatWhereUniqueInput = {
  id?: number
}

export type CategoryUserWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  notificationLevel?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<CategoryUserWhereInput>
  OR?: Enumerable<CategoryUserWhereInput>
  NOT?: Enumerable<CategoryUserWhereInput>
}

export type CategoryUserWhereUniqueInput = {
  id?: number
}

export type ChildThemeWhereInput = {
  id?: number | IntFilter
  childThemeId?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  parentThemeId?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<ChildThemeWhereInput>
  OR?: Enumerable<ChildThemeWhereInput>
  NOT?: Enumerable<ChildThemeWhereInput>
}

export type ChildThemeWhereUniqueInput = {
  id?: number
}

export type ColorSchemeWhereInput = {
  id?: number | IntFilter
  baseSchemeId?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  themeId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  version?: number | IntFilter
  viaWizard?: boolean | BooleanFilter
  AND?: Enumerable<ColorSchemeWhereInput>
  OR?: Enumerable<ColorSchemeWhereInput>
  NOT?: Enumerable<ColorSchemeWhereInput>
}

export type ColorSchemeWhereUniqueInput = {
  id?: number
}

export type ColorSchemeColorWhereInput = {
  id?: number | IntFilter
  colorSchemeId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  hex?: string | StringFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<ColorSchemeColorWhereInput>
  OR?: Enumerable<ColorSchemeColorWhereInput>
  NOT?: Enumerable<ColorSchemeColorWhereInput>
}

export type ColorSchemeColorWhereUniqueInput = {
  id?: number
}

export type CustomEmojiWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  uploadId?: number | IntFilter
  AND?: Enumerable<CustomEmojiWhereInput>
  OR?: Enumerable<CustomEmojiWhereInput>
  NOT?: Enumerable<CustomEmojiWhereInput>
}

export type CustomEmojiWhereUniqueInput = {
  id?: number
  name?: string
}

export type DeveloperWhereInput = {
  id?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<DeveloperWhereInput>
  OR?: Enumerable<DeveloperWhereInput>
  NOT?: Enumerable<DeveloperWhereInput>
}

export type DeveloperWhereUniqueInput = {
  id?: number
}

export type DirectoryItemWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  daysVisited?: number | IntFilter
  likesGiven?: number | IntFilter
  likesReceived?: number | IntFilter
  periodType?: number | IntFilter
  postCount?: number | IntFilter
  postsRead?: number | IntFilter
  topicCount?: number | IntFilter
  topicsEntered?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<DirectoryItemWhereInput>
  OR?: Enumerable<DirectoryItemWhereInput>
  NOT?: Enumerable<DirectoryItemWhereInput>
}

export type DirectoryItemWhereUniqueInput = {
  id?: number
}

export type DraftWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  data?: string | StringFilter
  draftKey?: string | StringFilter
  revisions?: number | IntFilter
  sequence?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<DraftWhereInput>
  OR?: Enumerable<DraftWhereInput>
  NOT?: Enumerable<DraftWhereInput>
}

export type DraftWhereUniqueInput = {
  id?: number
}

export type DraftSequenceWhereInput = {
  id?: number | IntFilter
  draftKey?: string | StringFilter
  sequence?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<DraftSequenceWhereInput>
  OR?: Enumerable<DraftSequenceWhereInput>
  NOT?: Enumerable<DraftSequenceWhereInput>
}

export type DraftSequenceWhereUniqueInput = {
  id?: number
}

export type EmailChangeRequestWhereInput = {
  id?: number | IntFilter
  changeState?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  newEmail?: string | StringFilter
  newEmailTokenId?: number | NullableIntFilter | null
  oldEmail?: string | StringFilter
  oldEmailTokenId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<EmailChangeRequestWhereInput>
  OR?: Enumerable<EmailChangeRequestWhereInput>
  NOT?: Enumerable<EmailChangeRequestWhereInput>
}

export type EmailChangeRequestWhereUniqueInput = {
  id?: number
}

export type EmailLogWhereInput = {
  id?: number | IntFilter
  bounced?: boolean | BooleanFilter
  bounceKey?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  emailType?: string | StringFilter
  messageId?: string | NullableStringFilter | null
  postId?: number | NullableIntFilter | null
  toAddress?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<EmailLogWhereInput>
  OR?: Enumerable<EmailLogWhereInput>
  NOT?: Enumerable<EmailLogWhereInput>
}

export type EmailLogWhereUniqueInput = {
  id?: number
}

export type EmailTokenWhereInput = {
  id?: number | IntFilter
  confirmed?: boolean | BooleanFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | StringFilter
  expired?: boolean | BooleanFilter
  token?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<EmailTokenWhereInput>
  OR?: Enumerable<EmailTokenWhereInput>
  NOT?: Enumerable<EmailTokenWhereInput>
}

export type EmailTokenWhereUniqueInput = {
  id?: number
  token?: string
}

export type EmbeddableHostWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  className?: string | NullableStringFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  host?: string | StringFilter
  pathWhitelist?: string | NullableStringFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<EmbeddableHostWhereInput>
  OR?: Enumerable<EmbeddableHostWhereInput>
  NOT?: Enumerable<EmbeddableHostWhereInput>
}

export type EmbeddableHostWhereUniqueInput = {
  id?: number
}

export type FacebookUserInfoWhereInput = {
  id?: number | IntFilter
  aboutMe?: string | NullableStringFilter | null
  avatarUrl?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  email?: string | NullableStringFilter | null
  facebookUserId?: number | IntFilter
  firstName?: string | NullableStringFilter | null
  gender?: string | NullableStringFilter | null
  lastName?: string | NullableStringFilter | null
  link?: string | NullableStringFilter | null
  location?: string | NullableStringFilter | null
  name?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  username?: string | NullableStringFilter | null
  website?: string | NullableStringFilter | null
  AND?: Enumerable<FacebookUserInfoWhereInput>
  OR?: Enumerable<FacebookUserInfoWhereInput>
  NOT?: Enumerable<FacebookUserInfoWhereInput>
}

export type FacebookUserInfoWhereUniqueInput = {
  id?: number
  facebookUserId?: number
  userId?: number
}

export type GithubUserInfoWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  githubUserId?: number | IntFilter
  screenName?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<GithubUserInfoWhereInput>
  OR?: Enumerable<GithubUserInfoWhereInput>
  NOT?: Enumerable<GithubUserInfoWhereInput>
}

export type GithubUserInfoWhereUniqueInput = {
  id?: number
  githubUserId?: number
  userId?: number
}

export type GoogleUserInfoWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | NullableStringFilter | null
  firstName?: string | NullableStringFilter | null
  gender?: string | NullableStringFilter | null
  googleUserId?: string | StringFilter
  lastName?: string | NullableStringFilter | null
  link?: string | NullableStringFilter | null
  name?: string | NullableStringFilter | null
  picture?: string | NullableStringFilter | null
  profileLink?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<GoogleUserInfoWhereInput>
  OR?: Enumerable<GoogleUserInfoWhereInput>
  NOT?: Enumerable<GoogleUserInfoWhereInput>
}

export type GoogleUserInfoWhereUniqueInput = {
  id?: number
  googleUserId?: string
  userId?: number
}

export type GroupWhereInput = {
  id?: number | IntFilter
  allowMembershipRequests?: boolean | BooleanFilter
  automatic?: boolean | BooleanFilter
  automaticMembershipEmailDomains?: string | NullableStringFilter | null
  automaticMembershipRetroactive?: boolean | NullableBooleanFilter | null
  bioCooked?: string | NullableStringFilter | null
  bioRaw?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  defaultNotificationLevel?: number | IntFilter
  flairBgColor?: string | NullableStringFilter | null
  flairColor?: string | NullableStringFilter | null
  flairUrl?: string | NullableStringFilter | null
  fullName?: string | NullableStringFilter | null
  grantTrustLevel?: number | NullableIntFilter | null
  hasMessages?: boolean | BooleanFilter
  incomingEmail?: string | NullableStringFilter | null
  membershipRequestTemplate?: string | NullableStringFilter | null
  mentionableLevel?: number | NullableIntFilter | null
  messageableLevel?: number | NullableIntFilter | null
  name?: string | StringFilter
  primaryGroup?: boolean | BooleanFilter
  publicAdmission?: boolean | BooleanFilter
  publicExit?: boolean | BooleanFilter
  title?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userCount?: number | IntFilter
  visibilityLevel?: number | IntFilter
  AND?: Enumerable<GroupWhereInput>
  OR?: Enumerable<GroupWhereInput>
  NOT?: Enumerable<GroupWhereInput>
}

export type GroupWhereUniqueInput = {
  id?: number
  incomingEmail?: string
  name?: string
}

export type GroupArchivedMessageWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  groupId?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<GroupArchivedMessageWhereInput>
  OR?: Enumerable<GroupArchivedMessageWhereInput>
  NOT?: Enumerable<GroupArchivedMessageWhereInput>
}

export type GroupArchivedMessageWhereUniqueInput = {
  id?: number
}

export type GroupCustomFieldWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | IntFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<GroupCustomFieldWhereInput>
  OR?: Enumerable<GroupCustomFieldWhereInput>
  NOT?: Enumerable<GroupCustomFieldWhereInput>
}

export type GroupCustomFieldWhereUniqueInput = {
  id?: number
}

export type GroupHistoryWhereInput = {
  id?: number | IntFilter
  actingUserId?: number | IntFilter
  action?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | IntFilter
  newValue?: string | NullableStringFilter | null
  prevValue?: string | NullableStringFilter | null
  subject?: string | NullableStringFilter | null
  targetUserId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<GroupHistoryWhereInput>
  OR?: Enumerable<GroupHistoryWhereInput>
  NOT?: Enumerable<GroupHistoryWhereInput>
}

export type GroupHistoryWhereUniqueInput = {
  id?: number
}

export type GroupMentionWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  groupId?: number | NullableIntFilter | null
  postId?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<GroupMentionWhereInput>
  OR?: Enumerable<GroupMentionWhereInput>
  NOT?: Enumerable<GroupMentionWhereInput>
}

export type GroupMentionWhereUniqueInput = {
  id?: number
}

export type GroupUserWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | IntFilter
  notificationLevel?: number | IntFilter
  owner?: boolean | BooleanFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<GroupUserWhereInput>
  OR?: Enumerable<GroupUserWhereInput>
  NOT?: Enumerable<GroupUserWhereInput>
}

export type GroupUserWhereUniqueInput = {
  id?: number
}

export type IncomingDomainWhereInput = {
  id?: number | IntFilter
  https?: boolean | BooleanFilter
  name?: string | StringFilter
  port?: number | IntFilter
  AND?: Enumerable<IncomingDomainWhereInput>
  OR?: Enumerable<IncomingDomainWhereInput>
  NOT?: Enumerable<IncomingDomainWhereInput>
}

export type IncomingDomainWhereUniqueInput = {
  id?: number
}

export type IncomingEmailWhereInput = {
  id?: number | IntFilter
  ccAddresses?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  error?: string | NullableStringFilter | null
  fromAddress?: string | NullableStringFilter | null
  isAutoGenerated?: boolean | NullableBooleanFilter | null
  isBounce?: boolean | BooleanFilter
  messageId?: string | NullableStringFilter | null
  postId?: number | NullableIntFilter | null
  raw?: string | NullableStringFilter | null
  rejectionMessage?: string | NullableStringFilter | null
  subject?: string | NullableStringFilter | null
  toAddresses?: string | NullableStringFilter | null
  topicId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<IncomingEmailWhereInput>
  OR?: Enumerable<IncomingEmailWhereInput>
  NOT?: Enumerable<IncomingEmailWhereInput>
}

export type IncomingEmailWhereUniqueInput = {
  id?: number
}

export type IncomingLinkWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  currentUserId?: number | NullableIntFilter | null
  incomingRefererId?: number | NullableIntFilter | null
  postId?: number | IntFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<IncomingLinkWhereInput>
  OR?: Enumerable<IncomingLinkWhereInput>
  NOT?: Enumerable<IncomingLinkWhereInput>
}

export type IncomingLinkWhereUniqueInput = {
  id?: number
}

export type IncomingRefererWhereInput = {
  id?: number | IntFilter
  incomingDomainId?: number | IntFilter
  path?: string | StringFilter
  AND?: Enumerable<IncomingRefererWhereInput>
  OR?: Enumerable<IncomingRefererWhereInput>
  NOT?: Enumerable<IncomingRefererWhereInput>
}

export type IncomingRefererWhereUniqueInput = {
  id?: number
}

export type InstagramUserInfoWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  instagramUserId?: number | NullableIntFilter | null
  screenName?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<InstagramUserInfoWhereInput>
  OR?: Enumerable<InstagramUserInfoWhereInput>
  NOT?: Enumerable<InstagramUserInfoWhereInput>
}

export type InstagramUserInfoWhereUniqueInput = {
  id?: number
}

export type InviteWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  customMessage?: string | NullableStringFilter | null
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  email?: string | NullableStringFilter | null
  invalidatedAt?: string | Date | NullableDateTimeFilter | null
  invitedById?: number | IntFilter
  inviteKey?: string | StringFilter
  moderator?: boolean | BooleanFilter
  redeemedAt?: string | Date | NullableDateTimeFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<InviteWhereInput>
  OR?: Enumerable<InviteWhereInput>
  NOT?: Enumerable<InviteWhereInput>
}

export type InviteWhereUniqueInput = {
  id?: number
  inviteKey?: string
}

export type InvitedGroupWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | NullableIntFilter | null
  inviteId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<InvitedGroupWhereInput>
  OR?: Enumerable<InvitedGroupWhereInput>
  NOT?: Enumerable<InvitedGroupWhereInput>
}

export type InvitedGroupWhereUniqueInput = {
  id?: number
}

export type JavascriptCachWhereInput = {
  id?: number | IntFilter
  content?: string | StringFilter
  createdAt?: string | Date | DateTimeFilter
  digest?: string | NullableStringFilter | null
  themeFieldId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<JavascriptCachWhereInput>
  OR?: Enumerable<JavascriptCachWhereInput>
  NOT?: Enumerable<JavascriptCachWhereInput>
}

export type JavascriptCachWhereUniqueInput = {
  id?: number
}

export type MessageBusWhereInput = {
  id?: number | IntFilter
  context?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  data?: string | NullableStringFilter | null
  name?: string | NullableStringFilter | null
  AND?: Enumerable<MessageBusWhereInput>
  OR?: Enumerable<MessageBusWhereInput>
  NOT?: Enumerable<MessageBusWhereInput>
}

export type MessageBusWhereUniqueInput = {
  id?: number
}

export type MutedUserWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  mutedUserId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<MutedUserWhereInput>
  OR?: Enumerable<MutedUserWhereInput>
  NOT?: Enumerable<MutedUserWhereInput>
}

export type MutedUserWhereUniqueInput = {
  id?: number
}

export type NotificationWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  data?: string | StringFilter
  notificationType?: number | IntFilter
  postActionId?: number | NullableIntFilter | null
  postNumber?: number | NullableIntFilter | null
  read?: boolean | BooleanFilter
  topicId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<NotificationWhereInput>
  OR?: Enumerable<NotificationWhereInput>
  NOT?: Enumerable<NotificationWhereInput>
}

export type NotificationWhereUniqueInput = {
  id?: number
}

export type Oauth2UserInfoWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | NullableStringFilter | null
  name?: string | NullableStringFilter | null
  provider?: string | StringFilter
  uid?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<Oauth2UserInfoWhereInput>
  OR?: Enumerable<Oauth2UserInfoWhereInput>
  NOT?: Enumerable<Oauth2UserInfoWhereInput>
}

export type Oauth2UserInfoWhereUniqueInput = {
  id?: number
}

export type OnceoffLogWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  jobName?: string | NullableStringFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<OnceoffLogWhereInput>
  OR?: Enumerable<OnceoffLogWhereInput>
  NOT?: Enumerable<OnceoffLogWhereInput>
}

export type OnceoffLogWhereUniqueInput = {
  id?: number
}

export type OptimizedImageWhereInput = {
  id?: number | IntFilter
  extension?: string | StringFilter
  filesize?: number | NullableIntFilter | null
  height?: number | IntFilter
  sha1?: string | StringFilter
  uploadId?: number | IntFilter
  url?: string | StringFilter
  width?: number | IntFilter
  AND?: Enumerable<OptimizedImageWhereInput>
  OR?: Enumerable<OptimizedImageWhereInput>
  NOT?: Enumerable<OptimizedImageWhereInput>
}

export type OptimizedImageWhereUniqueInput = {
  id?: number
}

export type PermalinkWhereInput = {
  id?: number | IntFilter
  categoryId?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  externalUrl?: string | NullableStringFilter | null
  postId?: number | NullableIntFilter | null
  topicId?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  url?: string | StringFilter
  AND?: Enumerable<PermalinkWhereInput>
  OR?: Enumerable<PermalinkWhereInput>
  NOT?: Enumerable<PermalinkWhereInput>
}

export type PermalinkWhereUniqueInput = {
  id?: number
  url?: string
}

export type PluginStoreRowWhereInput = {
  id?: number | IntFilter
  key?: string | StringFilter
  pluginName?: string | StringFilter
  typeName?: string | StringFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<PluginStoreRowWhereInput>
  OR?: Enumerable<PluginStoreRowWhereInput>
  NOT?: Enumerable<PluginStoreRowWhereInput>
}

export type PluginStoreRowWhereUniqueInput = {
  id?: number
}

export type PostWhereInput = {
  id?: number | IntFilter
  actionCode?: string | NullableStringFilter | null
  avgTime?: number | NullableIntFilter | null
  bakedAt?: string | Date | NullableDateTimeFilter | null
  bakedVersion?: number | NullableIntFilter | null
  bookmarkCount?: number | IntFilter
  cooked?: string | StringFilter
  cookMethod?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  editReason?: string | NullableStringFilter | null
  hidden?: boolean | BooleanFilter
  hiddenAt?: string | Date | NullableDateTimeFilter | null
  hiddenReasonId?: number | NullableIntFilter | null
  illegalCount?: number | IntFilter
  imageUrl?: string | NullableStringFilter | null
  inappropriateCount?: number | IntFilter
  incomingLinkCount?: number | IntFilter
  lastEditorId?: number | NullableIntFilter | null
  lastVersionAt?: string | Date | DateTimeFilter
  likeCount?: number | IntFilter
  likeScore?: number | IntFilter
  lockedById?: number | NullableIntFilter | null
  notifyModeratorsCount?: number | IntFilter
  notifyUserCount?: number | IntFilter
  offTopicCount?: number | IntFilter
  percentRank?: number | NullableFloatFilter | null
  postNumber?: number | IntFilter
  postType?: number | IntFilter
  publicVersion?: number | IntFilter
  quoteCount?: number | IntFilter
  raw?: string | StringFilter
  rawEmail?: string | NullableStringFilter | null
  reads?: number | IntFilter
  replyCount?: number | IntFilter
  replyQuoted?: boolean | BooleanFilter
  replyToPostNumber?: number | NullableIntFilter | null
  replyToUserId?: number | NullableIntFilter | null
  score?: number | NullableFloatFilter | null
  selfEdits?: number | IntFilter
  sortOrder?: number | NullableIntFilter | null
  spamCount?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userDeleted?: boolean | BooleanFilter
  userId?: number | NullableIntFilter | null
  version?: number | IntFilter
  viaEmail?: boolean | BooleanFilter
  wiki?: boolean | BooleanFilter
  wordCount?: number | NullableIntFilter | null
  AND?: Enumerable<PostWhereInput>
  OR?: Enumerable<PostWhereInput>
  NOT?: Enumerable<PostWhereInput>
}

export type PostWhereUniqueInput = {
  id?: number
}

export type PostActionWhereInput = {
  id?: number | IntFilter
  agreedAt?: string | Date | NullableDateTimeFilter | null
  agreedById?: number | NullableIntFilter | null
  createdAt?: string | Date | DateTimeFilter
  deferredAt?: string | Date | NullableDateTimeFilter | null
  deferredById?: number | NullableIntFilter | null
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  disagreedAt?: string | Date | NullableDateTimeFilter | null
  disagreedById?: number | NullableIntFilter | null
  postActionTypeId?: number | IntFilter
  postId?: number | IntFilter
  relatedPostId?: number | NullableIntFilter | null
  staffTookAction?: boolean | BooleanFilter
  targetsTopic?: boolean | BooleanFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<PostActionWhereInput>
  OR?: Enumerable<PostActionWhereInput>
  NOT?: Enumerable<PostActionWhereInput>
}

export type PostActionWhereUniqueInput = {
  id?: number
}

export type PostActionTypeWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  icon?: string | NullableStringFilter | null
  isFlag?: boolean | BooleanFilter
  nameKey?: string | StringFilter
  position?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<PostActionTypeWhereInput>
  OR?: Enumerable<PostActionTypeWhereInput>
  NOT?: Enumerable<PostActionTypeWhereInput>
}

export type PostActionTypeWhereUniqueInput = {
  id?: number
}

export type PostCustomFieldWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  postId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<PostCustomFieldWhereInput>
  OR?: Enumerable<PostCustomFieldWhereInput>
  NOT?: Enumerable<PostCustomFieldWhereInput>
}

export type PostCustomFieldWhereUniqueInput = {
  id?: number
}

export type PostDetailWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  extra?: string | NullableStringFilter | null
  key?: string | NullableStringFilter | null
  postId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<PostDetailWhereInput>
  OR?: Enumerable<PostDetailWhereInput>
  NOT?: Enumerable<PostDetailWhereInput>
}

export type PostDetailWhereUniqueInput = {
  id?: number
}

export type PostReplyKeyWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  postId?: number | IntFilter
  replyKey?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<PostReplyKeyWhereInput>
  OR?: Enumerable<PostReplyKeyWhereInput>
  NOT?: Enumerable<PostReplyKeyWhereInput>
}

export type PostReplyKeyWhereUniqueInput = {
  id?: number
  replyKey?: string
}

export type PostRevisionWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  hidden?: boolean | BooleanFilter
  modifications?: string | NullableStringFilter | null
  number?: number | NullableIntFilter | null
  postId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<PostRevisionWhereInput>
  OR?: Enumerable<PostRevisionWhereInput>
  NOT?: Enumerable<PostRevisionWhereInput>
}

export type PostRevisionWhereUniqueInput = {
  id?: number
}

export type PostSearchDatumWhereInput = {
  post_id?: number | IntFilter
  locale?: string | NullableStringFilter | null
  rawData?: string | NullableStringFilter | null
  version?: number | NullableIntFilter | null
  AND?: Enumerable<PostSearchDatumWhereInput>
  OR?: Enumerable<PostSearchDatumWhereInput>
  NOT?: Enumerable<PostSearchDatumWhereInput>
}

export type PostStatWhereInput = {
  id?: number | IntFilter
  composerOpenDurationMsecs?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  draftsSaved?: number | NullableIntFilter | null
  postId?: number | NullableIntFilter | null
  typingDurationMsecs?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<PostStatWhereInput>
  OR?: Enumerable<PostStatWhereInput>
  NOT?: Enumerable<PostStatWhereInput>
}

export type PostStatWhereUniqueInput = {
  id?: number
}

export type PostUploadWhereInput = {
  id?: number | IntFilter
  postId?: number | IntFilter
  uploadId?: number | IntFilter
  AND?: Enumerable<PostUploadWhereInput>
  OR?: Enumerable<PostUploadWhereInput>
  NOT?: Enumerable<PostUploadWhereInput>
}

export type PostUploadWhereUniqueInput = {
  id?: number
}

export type PushSubscriptionWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  data?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<PushSubscriptionWhereInput>
  OR?: Enumerable<PushSubscriptionWhereInput>
  NOT?: Enumerable<PushSubscriptionWhereInput>
}

export type PushSubscriptionWhereUniqueInput = {
  id?: number
}

export type QueuedPostWhereInput = {
  id?: number | IntFilter
  approvedAt?: string | Date | NullableDateTimeFilter | null
  approvedById?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  queue?: string | StringFilter
  raw?: string | StringFilter
  rejectedAt?: string | Date | NullableDateTimeFilter | null
  rejectedById?: number | NullableIntFilter | null
  state?: number | IntFilter
  topicId?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<QueuedPostWhereInput>
  OR?: Enumerable<QueuedPostWhereInput>
  NOT?: Enumerable<QueuedPostWhereInput>
}

export type QueuedPostWhereUniqueInput = {
  id?: number
}

export type QuotedPostWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  postId?: number | IntFilter
  quotedPostId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<QuotedPostWhereInput>
  OR?: Enumerable<QuotedPostWhereInput>
  NOT?: Enumerable<QuotedPostWhereInput>
}

export type QuotedPostWhereUniqueInput = {
  id?: number
}

export type RemoteThemeWhereInput = {
  id?: number | IntFilter
  aboutUrl?: string | NullableStringFilter | null
  branch?: string | NullableStringFilter | null
  commitsBehind?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  lastErrorText?: string | NullableStringFilter | null
  licenseUrl?: string | NullableStringFilter | null
  localVersion?: string | NullableStringFilter | null
  privateKey?: string | NullableStringFilter | null
  remoteUpdatedAt?: string | Date | NullableDateTimeFilter | null
  remoteUrl?: string | StringFilter
  remoteVersion?: string | NullableStringFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<RemoteThemeWhereInput>
  OR?: Enumerable<RemoteThemeWhereInput>
  NOT?: Enumerable<RemoteThemeWhereInput>
}

export type RemoteThemeWhereUniqueInput = {
  id?: number
}

export type SchedulerStatWhereInput = {
  id?: number | IntFilter
  durationMs?: number | NullableIntFilter | null
  error?: string | NullableStringFilter | null
  hostname?: string | StringFilter
  liveSlotsFinish?: number | NullableIntFilter | null
  liveSlotsStart?: number | NullableIntFilter | null
  name?: string | StringFilter
  pid?: number | IntFilter
  startedAt?: string | Date | DateTimeFilter
  success?: boolean | NullableBooleanFilter | null
  AND?: Enumerable<SchedulerStatWhereInput>
  OR?: Enumerable<SchedulerStatWhereInput>
  NOT?: Enumerable<SchedulerStatWhereInput>
}

export type SchedulerStatWhereUniqueInput = {
  id?: number
}

export type SchemaMigrationWhereInput = {
  version?: string | StringFilter
  AND?: Enumerable<SchemaMigrationWhereInput>
  OR?: Enumerable<SchemaMigrationWhereInput>
  NOT?: Enumerable<SchemaMigrationWhereInput>
}

export type SchemaMigrationWhereUniqueInput = {
  version?: string
}

export type SchemaMigrationDetailWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  direction?: string | NullableStringFilter | null
  duration?: number | NullableIntFilter | null
  gitVersion?: string | NullableStringFilter | null
  hostname?: string | NullableStringFilter | null
  name?: string | NullableStringFilter | null
  railsVersion?: string | NullableStringFilter | null
  version?: string | StringFilter
  AND?: Enumerable<SchemaMigrationDetailWhereInput>
  OR?: Enumerable<SchemaMigrationDetailWhereInput>
  NOT?: Enumerable<SchemaMigrationDetailWhereInput>
}

export type SchemaMigrationDetailWhereUniqueInput = {
  id?: number
}

export type ScreenedEmailWhereInput = {
  id?: number | IntFilter
  actionType?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | StringFilter
  lastMatchAt?: string | Date | NullableDateTimeFilter | null
  matchCount?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<ScreenedEmailWhereInput>
  OR?: Enumerable<ScreenedEmailWhereInput>
  NOT?: Enumerable<ScreenedEmailWhereInput>
}

export type ScreenedEmailWhereUniqueInput = {
  id?: number
  email?: string
}

export type ScreenedIpAddressWhereInput = {
  id?: number | IntFilter
  actionType?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  lastMatchAt?: string | Date | NullableDateTimeFilter | null
  matchCount?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<ScreenedIpAddressWhereInput>
  OR?: Enumerable<ScreenedIpAddressWhereInput>
  NOT?: Enumerable<ScreenedIpAddressWhereInput>
}

export type ScreenedIpAddressWhereUniqueInput = {
  id?: number
}

export type ScreenedUrlWhereInput = {
  id?: number | IntFilter
  actionType?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  domain?: string | StringFilter
  lastMatchAt?: string | Date | NullableDateTimeFilter | null
  matchCount?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  url?: string | StringFilter
  AND?: Enumerable<ScreenedUrlWhereInput>
  OR?: Enumerable<ScreenedUrlWhereInput>
  NOT?: Enumerable<ScreenedUrlWhereInput>
}

export type ScreenedUrlWhereUniqueInput = {
  id?: number
  url?: string
}

export type SearchLogWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  searchResultId?: number | NullableIntFilter | null
  searchResultType?: number | NullableIntFilter | null
  searchType?: number | IntFilter
  term?: string | StringFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<SearchLogWhereInput>
  OR?: Enumerable<SearchLogWhereInput>
  NOT?: Enumerable<SearchLogWhereInput>
}

export type SearchLogWhereUniqueInput = {
  id?: number
}

export type SharedDraftWhereInput = {
  id?: number | IntFilter
  categoryId?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<SharedDraftWhereInput>
  OR?: Enumerable<SharedDraftWhereInput>
  NOT?: Enumerable<SharedDraftWhereInput>
}

export type SharedDraftWhereUniqueInput = {
  id?: number
  topicId?: number
}

export type SingleSignOnRecordWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  externalAvatarUrl?: string | NullableStringFilter | null
  externalCardBackgroundUrl?: string | NullableStringFilter | null
  externalEmail?: string | NullableStringFilter | null
  externalId?: string | StringFilter
  externalName?: string | NullableStringFilter | null
  externalProfileBackgroundUrl?: string | NullableStringFilter | null
  externalUsername?: string | NullableStringFilter | null
  lastPayload?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<SingleSignOnRecordWhereInput>
  OR?: Enumerable<SingleSignOnRecordWhereInput>
  NOT?: Enumerable<SingleSignOnRecordWhereInput>
}

export type SingleSignOnRecordWhereUniqueInput = {
  id?: number
  externalId?: string
}

export type SiteSettingWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  dataType?: number | IntFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<SiteSettingWhereInput>
  OR?: Enumerable<SiteSettingWhereInput>
  NOT?: Enumerable<SiteSettingWhereInput>
}

export type SiteSettingWhereUniqueInput = {
  id?: number
}

export type SkippedEmailLogWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  customReason?: string | NullableStringFilter | null
  emailType?: string | StringFilter
  postId?: number | NullableIntFilter | null
  reasonType?: number | IntFilter
  toAddress?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<SkippedEmailLogWhereInput>
  OR?: Enumerable<SkippedEmailLogWhereInput>
  NOT?: Enumerable<SkippedEmailLogWhereInput>
}

export type SkippedEmailLogWhereUniqueInput = {
  id?: number
}

export type StylesheetCacheWhereInput = {
  id?: number | IntFilter
  content?: string | StringFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  digest?: string | StringFilter
  sourceMap?: string | NullableStringFilter | null
  target?: string | StringFilter
  themeId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<StylesheetCacheWhereInput>
  OR?: Enumerable<StylesheetCacheWhereInput>
  NOT?: Enumerable<StylesheetCacheWhereInput>
}

export type StylesheetCacheWhereUniqueInput = {
  id?: number
}

export type TagWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  name?: string | StringFilter
  pmTopicCount?: number | IntFilter
  topicCount?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<TagWhereInput>
  OR?: Enumerable<TagWhereInput>
  NOT?: Enumerable<TagWhereInput>
}

export type TagWhereUniqueInput = {
  id?: number
  name?: string
}

export type TagGroupWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  name?: string | StringFilter
  onePerTopic?: boolean | NullableBooleanFilter | null
  parentTagId?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<TagGroupWhereInput>
  OR?: Enumerable<TagGroupWhereInput>
  NOT?: Enumerable<TagGroupWhereInput>
}

export type TagGroupWhereUniqueInput = {
  id?: number
}

export type TagGroupMembershipWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  tagGroupId?: number | IntFilter
  tagId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<TagGroupMembershipWhereInput>
  OR?: Enumerable<TagGroupMembershipWhereInput>
  NOT?: Enumerable<TagGroupMembershipWhereInput>
}

export type TagGroupMembershipWhereUniqueInput = {
  id?: number
}

export type TagGroupPermissionWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  groupId?: number | IntFilter
  permissionType?: number | IntFilter
  tagGroupId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<TagGroupPermissionWhereInput>
  OR?: Enumerable<TagGroupPermissionWhereInput>
  NOT?: Enumerable<TagGroupPermissionWhereInput>
}

export type TagGroupPermissionWhereUniqueInput = {
  id?: number
}

export type TagSearchDatumWhereInput = {
  tag_id?: number | IntFilter
  locale?: string | NullableStringFilter | null
  rawData?: string | NullableStringFilter | null
  version?: number | NullableIntFilter | null
  AND?: Enumerable<TagSearchDatumWhereInput>
  OR?: Enumerable<TagSearchDatumWhereInput>
  NOT?: Enumerable<TagSearchDatumWhereInput>
}

export type TagUserWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  notificationLevel?: number | IntFilter
  tagId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<TagUserWhereInput>
  OR?: Enumerable<TagUserWhereInput>
  NOT?: Enumerable<TagUserWhereInput>
}

export type TagUserWhereUniqueInput = {
  id?: number
}

export type ThemeWhereInput = {
  id?: number | IntFilter
  colorSchemeId?: number | NullableIntFilter | null
  compilerVersion?: number | IntFilter
  component?: boolean | BooleanFilter
  createdAt?: string | Date | DateTimeFilter
  hidden?: boolean | BooleanFilter
  name?: string | StringFilter
  remoteThemeId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  userSelectable?: boolean | BooleanFilter
  AND?: Enumerable<ThemeWhereInput>
  OR?: Enumerable<ThemeWhereInput>
  NOT?: Enumerable<ThemeWhereInput>
}

export type ThemeWhereUniqueInput = {
  id?: number
  remoteThemeId?: number
}

export type ThemeFieldWhereInput = {
  id?: number | IntFilter
  compilerVersion?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  error?: string | NullableStringFilter | null
  name?: string | StringFilter
  targetId?: number | IntFilter
  themeId?: number | IntFilter
  typeId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  uploadId?: number | NullableIntFilter | null
  value?: string | StringFilter
  valueBaked?: string | NullableStringFilter | null
  AND?: Enumerable<ThemeFieldWhereInput>
  OR?: Enumerable<ThemeFieldWhereInput>
  NOT?: Enumerable<ThemeFieldWhereInput>
}

export type ThemeFieldWhereUniqueInput = {
  id?: number
}

export type ThemeSettingWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  dataType?: number | IntFilter
  name?: string | StringFilter
  themeId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<ThemeSettingWhereInput>
  OR?: Enumerable<ThemeSettingWhereInput>
  NOT?: Enumerable<ThemeSettingWhereInput>
}

export type ThemeSettingWhereUniqueInput = {
  id?: number
}

export type TopTopicWhereInput = {
  id?: number | IntFilter
  allScore?: number | NullableFloatFilter | null
  dailyLikesCount?: number | IntFilter
  dailyOpLikesCount?: number | IntFilter
  dailyPostsCount?: number | IntFilter
  dailyScore?: number | NullableFloatFilter | null
  dailyViewsCount?: number | IntFilter
  monthlyLikesCount?: number | IntFilter
  monthlyOpLikesCount?: number | IntFilter
  monthlyPostsCount?: number | IntFilter
  monthlyScore?: number | NullableFloatFilter | null
  monthlyViewsCount?: number | IntFilter
  quarterlyLikesCount?: number | IntFilter
  quarterlyOpLikesCount?: number | IntFilter
  quarterlyPostsCount?: number | IntFilter
  quarterlyScore?: number | NullableFloatFilter | null
  quarterlyViewsCount?: number | IntFilter
  topicId?: number | NullableIntFilter | null
  weeklyLikesCount?: number | IntFilter
  weeklyOpLikesCount?: number | IntFilter
  weeklyPostsCount?: number | IntFilter
  weeklyScore?: number | NullableFloatFilter | null
  weeklyViewsCount?: number | IntFilter
  yearlyLikesCount?: number | IntFilter
  yearlyOpLikesCount?: number | IntFilter
  yearlyPostsCount?: number | IntFilter
  yearlyScore?: number | NullableFloatFilter | null
  yearlyViewsCount?: number | IntFilter
  AND?: Enumerable<TopTopicWhereInput>
  OR?: Enumerable<TopTopicWhereInput>
  NOT?: Enumerable<TopTopicWhereInput>
}

export type TopTopicWhereUniqueInput = {
  id?: number
  topicId?: number
}

export type TopicWhereInput = {
  id?: number | IntFilter
  archetype?: string | StringFilter
  archived?: boolean | BooleanFilter
  avgTime?: number | NullableIntFilter | null
  bumpedAt?: string | Date | DateTimeFilter
  categoryId?: number | NullableIntFilter | null
  closed?: boolean | BooleanFilter
  createdAt?: string | Date | DateTimeFilter
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  excerpt?: string | NullableStringFilter | null
  fancyTitle?: string | NullableStringFilter | null
  featuredLink?: string | NullableStringFilter | null
  featuredUser1Id?: number | NullableIntFilter | null
  featuredUser2Id?: number | NullableIntFilter | null
  featuredUser3Id?: number | NullableIntFilter | null
  featuredUser4Id?: number | NullableIntFilter | null
  hasSummary?: boolean | BooleanFilter
  highestPostNumber?: number | IntFilter
  highestStaffPostNumber?: number | IntFilter
  imageUrl?: string | NullableStringFilter | null
  incomingLinkCount?: number | IntFilter
  lastPostedAt?: string | Date | NullableDateTimeFilter | null
  lastPostUserId?: number | IntFilter
  likeCount?: number | IntFilter
  moderatorPostsCount?: number | IntFilter
  notifyModeratorsCount?: number | IntFilter
  participantCount?: number | NullableIntFilter | null
  percentRank?: number | FloatFilter
  pinnedAt?: string | Date | NullableDateTimeFilter | null
  pinnedGlobally?: boolean | BooleanFilter
  pinnedUntil?: string | Date | NullableDateTimeFilter | null
  postsCount?: number | IntFilter
  replyCount?: number | IntFilter
  score?: number | NullableFloatFilter | null
  slug?: string | NullableStringFilter | null
  spamCount?: number | IntFilter
  subtype?: string | NullableStringFilter | null
  title?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  views?: number | IntFilter
  visible?: boolean | BooleanFilter
  wordCount?: number | NullableIntFilter | null
  AND?: Enumerable<TopicWhereInput>
  OR?: Enumerable<TopicWhereInput>
  NOT?: Enumerable<TopicWhereInput>
}

export type TopicWhereUniqueInput = {
  id?: number
}

export type TopicAllowedGroupWhereInput = {
  id?: number | IntFilter
  groupId?: number | IntFilter
  topicId?: number | IntFilter
  AND?: Enumerable<TopicAllowedGroupWhereInput>
  OR?: Enumerable<TopicAllowedGroupWhereInput>
  NOT?: Enumerable<TopicAllowedGroupWhereInput>
}

export type TopicAllowedGroupWhereUniqueInput = {
  id?: number
}

export type TopicAllowedUserWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<TopicAllowedUserWhereInput>
  OR?: Enumerable<TopicAllowedUserWhereInput>
  NOT?: Enumerable<TopicAllowedUserWhereInput>
}

export type TopicAllowedUserWhereUniqueInput = {
  id?: number
}

export type TopicCustomFieldWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<TopicCustomFieldWhereInput>
  OR?: Enumerable<TopicCustomFieldWhereInput>
  NOT?: Enumerable<TopicCustomFieldWhereInput>
}

export type TopicCustomFieldWhereUniqueInput = {
  id?: number
}

export type TopicEmbedWhereInput = {
  id?: number | IntFilter
  contentSha1?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  embedUrl?: string | StringFilter
  postId?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<TopicEmbedWhereInput>
  OR?: Enumerable<TopicEmbedWhereInput>
  NOT?: Enumerable<TopicEmbedWhereInput>
}

export type TopicEmbedWhereUniqueInput = {
  id?: number
  embedUrl?: string
}

export type TopicInviteWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  inviteId?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<TopicInviteWhereInput>
  OR?: Enumerable<TopicInviteWhereInput>
  NOT?: Enumerable<TopicInviteWhereInput>
}

export type TopicInviteWhereUniqueInput = {
  id?: number
}

export type TopicLinkWhereInput = {
  id?: number | IntFilter
  clicks?: number | IntFilter
  crawledAt?: string | Date | NullableDateTimeFilter | null
  createdAt?: string | Date | DateTimeFilter
  domain?: string | StringFilter
  extension?: string | NullableStringFilter | null
  internal?: boolean | BooleanFilter
  linkPostId?: number | NullableIntFilter | null
  linkTopicId?: number | NullableIntFilter | null
  postId?: number | NullableIntFilter | null
  quote?: boolean | BooleanFilter
  reflection?: boolean | NullableBooleanFilter | null
  title?: string | NullableStringFilter | null
  topicId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  url?: string | StringFilter
  userId?: number | IntFilter
  AND?: Enumerable<TopicLinkWhereInput>
  OR?: Enumerable<TopicLinkWhereInput>
  NOT?: Enumerable<TopicLinkWhereInput>
}

export type TopicLinkWhereUniqueInput = {
  id?: number
}

export type TopicLinkClickWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  topicLinkId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<TopicLinkClickWhereInput>
  OR?: Enumerable<TopicLinkClickWhereInput>
  NOT?: Enumerable<TopicLinkClickWhereInput>
}

export type TopicLinkClickWhereUniqueInput = {
  id?: number
}

export type TopicSearchDatumWhereInput = {
  topic_id?: number | IntFilter
  locale?: string | StringFilter
  rawData?: string | NullableStringFilter | null
  version?: number | NullableIntFilter | null
  AND?: Enumerable<TopicSearchDatumWhereInput>
  OR?: Enumerable<TopicSearchDatumWhereInput>
  NOT?: Enumerable<TopicSearchDatumWhereInput>
}

export type TopicTagWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  tagId?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<TopicTagWhereInput>
  OR?: Enumerable<TopicTagWhereInput>
  NOT?: Enumerable<TopicTagWhereInput>
}

export type TopicTagWhereUniqueInput = {
  id?: number
}

export type TopicTimerWhereInput = {
  id?: number | IntFilter
  basedOnLastPost?: boolean | BooleanFilter
  categoryId?: number | NullableIntFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  deletedAt?: string | Date | NullableDateTimeFilter | null
  deletedById?: number | NullableIntFilter | null
  executeAt?: string | Date | DateTimeFilter
  publicType?: boolean | NullableBooleanFilter | null
  statusType?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<TopicTimerWhereInput>
  OR?: Enumerable<TopicTimerWhereInput>
  NOT?: Enumerable<TopicTimerWhereInput>
}

export type TopicTimerWhereUniqueInput = {
  id?: number
  topicId?: number
}

export type TopicUserWhereInput = {
  id?: number | IntFilter
  bookmarked?: boolean | NullableBooleanFilter | null
  clearedPinnedAt?: string | Date | NullableDateTimeFilter | null
  firstVisitedAt?: string | Date | NullableDateTimeFilter | null
  highestSeenPostNumber?: number | NullableIntFilter | null
  lastEmailedPostNumber?: number | NullableIntFilter | null
  lastReadPostNumber?: number | NullableIntFilter | null
  lastVisitedAt?: string | Date | NullableDateTimeFilter | null
  liked?: boolean | NullableBooleanFilter | null
  notificationLevel?: number | IntFilter
  notificationsChangedAt?: string | Date | NullableDateTimeFilter | null
  notificationsReasonId?: number | NullableIntFilter | null
  posted?: boolean | BooleanFilter
  topicId?: number | IntFilter
  totalMsecsViewed?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<TopicUserWhereInput>
  OR?: Enumerable<TopicUserWhereInput>
  NOT?: Enumerable<TopicUserWhereInput>
}

export type TopicUserWhereUniqueInput = {
  id?: number
}

export type TranslationOverrideWhereInput = {
  id?: number | IntFilter
  compiledJs?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  locale?: string | StringFilter
  translationKey?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  value?: string | StringFilter
  AND?: Enumerable<TranslationOverrideWhereInput>
  OR?: Enumerable<TranslationOverrideWhereInput>
  NOT?: Enumerable<TranslationOverrideWhereInput>
}

export type TranslationOverrideWhereUniqueInput = {
  id?: number
}

export type TwitterUserInfoWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | NullableStringFilter | null
  screenName?: string | StringFilter
  twitterUserId?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<TwitterUserInfoWhereInput>
  OR?: Enumerable<TwitterUserInfoWhereInput>
  NOT?: Enumerable<TwitterUserInfoWhereInput>
}

export type TwitterUserInfoWhereUniqueInput = {
  id?: number
  twitterUserId?: number
  userId?: number
}

export type UnsubscribeKeyWhereInput = {
  key?: string | StringFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  postId?: number | NullableIntFilter | null
  topicId?: number | NullableIntFilter | null
  unsubscribeKeyType?: string | NullableStringFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UnsubscribeKeyWhereInput>
  OR?: Enumerable<UnsubscribeKeyWhereInput>
  NOT?: Enumerable<UnsubscribeKeyWhereInput>
}

export type UploadWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  extension?: string | NullableStringFilter | null
  filesize?: number | IntFilter
  height?: number | NullableIntFilter | null
  origin?: string | NullableStringFilter | null
  originalFilename?: string | StringFilter
  retainHours?: number | NullableIntFilter | null
  sha1?: string | NullableStringFilter | null
  thumbnailHeight?: number | NullableIntFilter | null
  thumbnailWidth?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  url?: string | StringFilter
  userId?: number | IntFilter
  width?: number | NullableIntFilter | null
  AND?: Enumerable<UploadWhereInput>
  OR?: Enumerable<UploadWhereInput>
  NOT?: Enumerable<UploadWhereInput>
}

export type UploadWhereUniqueInput = {
  id?: number
  sha1?: string
}

export type UserWhereInput = {
  id?: number | IntFilter
  active?: boolean | BooleanFilter
  admin?: boolean | BooleanFilter
  approved?: boolean | BooleanFilter
  approvedAt?: string | Date | NullableDateTimeFilter | null
  approvedById?: number | NullableIntFilter | null
  createdAt?: string | Date | DateTimeFilter
  dateOfBirth?: string | Date | NullableDateTimeFilter | null
  firstSeenAt?: string | Date | NullableDateTimeFilter | null
  flagLevel?: number | IntFilter
  groupLockedTrustLevel?: number | NullableIntFilter | null
  lastEmailedAt?: string | Date | NullableDateTimeFilter | null
  lastPostedAt?: string | Date | NullableDateTimeFilter | null
  lastSeenAt?: string | Date | NullableDateTimeFilter | null
  locale?: string | NullableStringFilter | null
  manualLockedTrustLevel?: number | NullableIntFilter | null
  moderator?: boolean | NullableBooleanFilter | null
  name?: string | NullableStringFilter | null
  passwordHash?: string | NullableStringFilter | null
  previousVisitAt?: string | Date | NullableDateTimeFilter | null
  primaryGroupId?: number | NullableIntFilter | null
  salt?: string | NullableStringFilter | null
  seenNotificationId?: number | IntFilter
  silencedTill?: string | Date | NullableDateTimeFilter | null
  staged?: boolean | BooleanFilter
  suspendedAt?: string | Date | NullableDateTimeFilter | null
  suspendedTill?: string | Date | NullableDateTimeFilter | null
  title?: string | NullableStringFilter | null
  trustLevel?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  uploadedAvatarId?: number | NullableIntFilter | null
  username?: string | StringFilter
  usernameLower?: string | StringFilter
  views?: number | IntFilter
  AND?: Enumerable<UserWhereInput>
  OR?: Enumerable<UserWhereInput>
  NOT?: Enumerable<UserWhereInput>
}

export type UserWhereUniqueInput = {
  id?: number
  username?: string
  usernameLower?: string
}

export type UserActionWhereInput = {
  id?: number | IntFilter
  actingUserId?: number | NullableIntFilter | null
  actionType?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  queuedPostId?: number | NullableIntFilter | null
  targetPostId?: number | NullableIntFilter | null
  targetTopicId?: number | NullableIntFilter | null
  targetUserId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserActionWhereInput>
  OR?: Enumerable<UserActionWhereInput>
  NOT?: Enumerable<UserActionWhereInput>
}

export type UserActionWhereUniqueInput = {
  id?: number
}

export type UserApiKeyWhereInput = {
  id?: number | IntFilter
  applicationName?: string | StringFilter
  clientId?: string | StringFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  key?: string | StringFilter
  lastUsedAt?: string | Date | DateTimeFilter
  pushUrl?: string | NullableStringFilter | null
  revokedAt?: string | Date | NullableDateTimeFilter | null
  scopes?: string | StringFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserApiKeyWhereInput>
  OR?: Enumerable<UserApiKeyWhereInput>
  NOT?: Enumerable<UserApiKeyWhereInput>
}

export type UserApiKeyWhereUniqueInput = {
  id?: number
  clientId?: string
  key?: string
}

export type UserArchivedMessageWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  topicId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserArchivedMessageWhereInput>
  OR?: Enumerable<UserArchivedMessageWhereInput>
  NOT?: Enumerable<UserArchivedMessageWhereInput>
}

export type UserArchivedMessageWhereUniqueInput = {
  id?: number
}

export type UserAuthTokenWhereInput = {
  id?: number | IntFilter
  authToken?: string | StringFilter
  authTokenSeen?: boolean | BooleanFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  prevAuthToken?: string | StringFilter
  rotatedAt?: string | Date | DateTimeFilter
  seenAt?: string | Date | NullableDateTimeFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userAgent?: string | NullableStringFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserAuthTokenWhereInput>
  OR?: Enumerable<UserAuthTokenWhereInput>
  NOT?: Enumerable<UserAuthTokenWhereInput>
}

export type UserAuthTokenWhereUniqueInput = {
  id?: number
  authToken?: string
  prevAuthToken?: string
}

export type UserAuthTokenLogWhereInput = {
  id?: number | IntFilter
  action?: string | StringFilter
  authToken?: string | NullableStringFilter | null
  createdAt?: string | Date | NullableDateTimeFilter | null
  path?: string | NullableStringFilter | null
  userAgent?: string | NullableStringFilter | null
  userAuthTokenId?: number | NullableIntFilter | null
  userId?: number | NullableIntFilter | null
  AND?: Enumerable<UserAuthTokenLogWhereInput>
  OR?: Enumerable<UserAuthTokenLogWhereInput>
  NOT?: Enumerable<UserAuthTokenLogWhereInput>
}

export type UserAuthTokenLogWhereUniqueInput = {
  id?: number
}

export type UserAvatarWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  customUploadId?: number | NullableIntFilter | null
  gravatarUploadId?: number | NullableIntFilter | null
  lastGravatarDownloadAttempt?: string | Date | NullableDateTimeFilter | null
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserAvatarWhereInput>
  OR?: Enumerable<UserAvatarWhereInput>
  NOT?: Enumerable<UserAvatarWhereInput>
}

export type UserAvatarWhereUniqueInput = {
  id?: number
}

export type UserBadgeWhereInput = {
  id?: number | IntFilter
  badgeId?: number | IntFilter
  grantedAt?: string | Date | DateTimeFilter
  grantedById?: number | IntFilter
  notificationId?: number | NullableIntFilter | null
  postId?: number | NullableIntFilter | null
  seq?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserBadgeWhereInput>
  OR?: Enumerable<UserBadgeWhereInput>
  NOT?: Enumerable<UserBadgeWhereInput>
}

export type UserBadgeWhereUniqueInput = {
  id?: number
}

export type UserCustomFieldWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  name?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  value?: string | NullableStringFilter | null
  AND?: Enumerable<UserCustomFieldWhereInput>
  OR?: Enumerable<UserCustomFieldWhereInput>
  NOT?: Enumerable<UserCustomFieldWhereInput>
}

export type UserCustomFieldWhereUniqueInput = {
  id?: number
}

export type UserEmailWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  email?: string | StringFilter
  primary?: boolean | BooleanFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserEmailWhereInput>
  OR?: Enumerable<UserEmailWhereInput>
  NOT?: Enumerable<UserEmailWhereInput>
}

export type UserEmailWhereUniqueInput = {
  id?: number
}

export type UserExportWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  fileName?: string | StringFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  uploadId?: number | NullableIntFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserExportWhereInput>
  OR?: Enumerable<UserExportWhereInput>
  NOT?: Enumerable<UserExportWhereInput>
}

export type UserExportWhereUniqueInput = {
  id?: number
}

export type UserFieldWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  description?: string | StringFilter
  editable?: boolean | BooleanFilter
  externalName?: string | NullableStringFilter | null
  externalType?: string | NullableStringFilter | null
  fieldType?: string | StringFilter
  name?: string | StringFilter
  position?: number | NullableIntFilter | null
  required?: boolean | BooleanFilter
  showOnProfile?: boolean | BooleanFilter
  showOnUserCard?: boolean | BooleanFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  AND?: Enumerable<UserFieldWhereInput>
  OR?: Enumerable<UserFieldWhereInput>
  NOT?: Enumerable<UserFieldWhereInput>
}

export type UserFieldWhereUniqueInput = {
  id?: number
}

export type UserFieldOptionWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userFieldId?: number | IntFilter
  value?: string | StringFilter
  AND?: Enumerable<UserFieldOptionWhereInput>
  OR?: Enumerable<UserFieldOptionWhereInput>
  NOT?: Enumerable<UserFieldOptionWhereInput>
}

export type UserFieldOptionWhereUniqueInput = {
  id?: number
}

export type UserHistoryWhereInput = {
  id?: number | IntFilter
  actingUserId?: number | NullableIntFilter | null
  action?: number | IntFilter
  adminOnly?: boolean | NullableBooleanFilter | null
  categoryId?: number | NullableIntFilter | null
  context?: string | NullableStringFilter | null
  createdAt?: string | Date | DateTimeFilter
  customType?: string | NullableStringFilter | null
  details?: string | NullableStringFilter | null
  email?: string | NullableStringFilter | null
  ipAddress?: string | NullableStringFilter | null
  newValue?: string | NullableStringFilter | null
  postId?: number | NullableIntFilter | null
  previousValue?: string | NullableStringFilter | null
  subject?: string | NullableStringFilter | null
  targetUserId?: number | NullableIntFilter | null
  topicId?: number | NullableIntFilter | null
  updatedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<UserHistoryWhereInput>
  OR?: Enumerable<UserHistoryWhereInput>
  NOT?: Enumerable<UserHistoryWhereInput>
}

export type UserHistoryWhereUniqueInput = {
  id?: number
}

export type UserOpenIdWhereInput = {
  id?: number | IntFilter
  active?: boolean | BooleanFilter
  createdAt?: string | Date | DateTimeFilter
  email?: string | StringFilter
  updatedAt?: string | Date | DateTimeFilter
  url?: string | StringFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserOpenIdWhereInput>
  OR?: Enumerable<UserOpenIdWhereInput>
  NOT?: Enumerable<UserOpenIdWhereInput>
}

export type UserOpenIdWhereUniqueInput = {
  id?: number
}

export type UserOptionWhereInput = {
  user_id?: number | IntFilter
  allowPrivateMessages?: boolean | BooleanFilter
  automaticallyUnpinTopics?: boolean | BooleanFilter
  autoTrackTopicsAfterMsecs?: number | NullableIntFilter | null
  digestAfterMinutes?: number | NullableIntFilter | null
  disableJumpReply?: boolean | BooleanFilter
  dynamicFavicon?: boolean | BooleanFilter
  emailAlways?: boolean | BooleanFilter
  emailDigests?: boolean | NullableBooleanFilter | null
  emailDirect?: boolean | BooleanFilter
  emailInReplyTo?: boolean | BooleanFilter
  emailPreviousReplies?: number | IntFilter
  emailPrivateMessages?: boolean | BooleanFilter
  enableQuoting?: boolean | BooleanFilter
  externalLinksInNewTab?: boolean | BooleanFilter
  hideProfileAndPresence?: boolean | BooleanFilter
  homepageId?: number | NullableIntFilter | null
  includeTl0InDigests?: boolean | NullableBooleanFilter | null
  lastRedirectedToTopAt?: string | Date | NullableDateTimeFilter | null
  likeNotificationFrequency?: number | IntFilter
  mailingListMode?: boolean | BooleanFilter
  mailingListModeFrequency?: number | IntFilter
  newTopicDurationMinutes?: number | NullableIntFilter | null
  notificationLevelWhenReplying?: number | NullableIntFilter | null
  themeIds?: number | IntFilter
  themeKeySeq?: number | IntFilter
  AND?: Enumerable<UserOptionWhereInput>
  OR?: Enumerable<UserOptionWhereInput>
  NOT?: Enumerable<UserOptionWhereInput>
}

export type UserOptionWhereUniqueInput = {
  user_id?: number
}

export type UserProfileWhereInput = {
  user_id?: number | IntFilter
  badgeGrantedTitle?: boolean | NullableBooleanFilter | null
  bioCooked?: string | NullableStringFilter | null
  bioCookedVersion?: number | NullableIntFilter | null
  bioRaw?: string | NullableStringFilter | null
  cardBackground?: string | NullableStringFilter | null
  dismissedBannerKey?: number | NullableIntFilter | null
  location?: string | NullableStringFilter | null
  profileBackground?: string | NullableStringFilter | null
  views?: number | IntFilter
  website?: string | NullableStringFilter | null
  AND?: Enumerable<UserProfileWhereInput>
  OR?: Enumerable<UserProfileWhereInput>
  NOT?: Enumerable<UserProfileWhereInput>
}

export type UserProfileViewWhereInput = {
  id?: number | IntFilter
  userId?: number | NullableIntFilter | null
  userProfileId?: number | IntFilter
  viewedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<UserProfileViewWhereInput>
  OR?: Enumerable<UserProfileViewWhereInput>
  NOT?: Enumerable<UserProfileViewWhereInput>
}

export type UserProfileViewWhereUniqueInput = {
  id?: number
}

export type UserSearchDatumWhereInput = {
  user_id?: number | IntFilter
  locale?: string | NullableStringFilter | null
  rawData?: string | NullableStringFilter | null
  version?: number | NullableIntFilter | null
  AND?: Enumerable<UserSearchDatumWhereInput>
  OR?: Enumerable<UserSearchDatumWhereInput>
  NOT?: Enumerable<UserSearchDatumWhereInput>
}

export type UserSecondFactorWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  data?: string | StringFilter
  enabled?: boolean | BooleanFilter
  lastUsed?: string | Date | NullableDateTimeFilter | null
  method?: number | IntFilter
  updatedAt?: string | Date | DateTimeFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserSecondFactorWhereInput>
  OR?: Enumerable<UserSecondFactorWhereInput>
  NOT?: Enumerable<UserSecondFactorWhereInput>
}

export type UserSecondFactorWhereUniqueInput = {
  id?: number
}

export type UserStatWhereInput = {
  user_id?: number | IntFilter
  bounceScore?: number | FloatFilter
  daysVisited?: number | IntFilter
  firstPostCreatedAt?: string | Date | NullableDateTimeFilter | null
  likesGiven?: number | IntFilter
  likesReceived?: number | IntFilter
  newSince?: string | Date | DateTimeFilter
  postCount?: number | IntFilter
  postsReadCount?: number | IntFilter
  readFaq?: string | Date | NullableDateTimeFilter | null
  resetBounceScoreAfter?: string | Date | NullableDateTimeFilter | null
  timeRead?: number | IntFilter
  topicCount?: number | IntFilter
  topicReplyCount?: number | IntFilter
  topicsEntered?: number | IntFilter
  AND?: Enumerable<UserStatWhereInput>
  OR?: Enumerable<UserStatWhereInput>
  NOT?: Enumerable<UserStatWhereInput>
}

export type UserUploadWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | DateTimeFilter
  uploadId?: number | IntFilter
  userId?: number | IntFilter
  AND?: Enumerable<UserUploadWhereInput>
  OR?: Enumerable<UserUploadWhereInput>
  NOT?: Enumerable<UserUploadWhereInput>
}

export type UserUploadWhereUniqueInput = {
  id?: number
}

export type UserVisitWhereInput = {
  id?: number | IntFilter
  mobile?: boolean | NullableBooleanFilter | null
  postsRead?: number | NullableIntFilter | null
  timeRead?: number | IntFilter
  userId?: number | IntFilter
  visitedAt?: string | Date | DateTimeFilter
  AND?: Enumerable<UserVisitWhereInput>
  OR?: Enumerable<UserVisitWhereInput>
  NOT?: Enumerable<UserVisitWhereInput>
}

export type UserVisitWhereUniqueInput = {
  id?: number
}

export type UserWarningWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  createdById?: number | IntFilter
  topicId?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  userId?: number | IntFilter
  AND?: Enumerable<UserWarningWhereInput>
  OR?: Enumerable<UserWarningWhereInput>
  NOT?: Enumerable<UserWarningWhereInput>
}

export type UserWarningWhereUniqueInput = {
  id?: number
  topicId?: number
}

export type WatchedWordWhereInput = {
  id?: number | IntFilter
  action?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  word?: string | StringFilter
  AND?: Enumerable<WatchedWordWhereInput>
  OR?: Enumerable<WatchedWordWhereInput>
  NOT?: Enumerable<WatchedWordWhereInput>
}

export type WatchedWordWhereUniqueInput = {
  id?: number
}

export type WebCrawlerRequestWhereInput = {
  id?: number | IntFilter
  count?: number | IntFilter
  date?: string | Date | DateTimeFilter
  userAgent?: string | StringFilter
  AND?: Enumerable<WebCrawlerRequestWhereInput>
  OR?: Enumerable<WebCrawlerRequestWhereInput>
  NOT?: Enumerable<WebCrawlerRequestWhereInput>
}

export type WebCrawlerRequestWhereUniqueInput = {
  id?: number
}

export type WebHookWhereInput = {
  id?: number | IntFilter
  active?: boolean | BooleanFilter
  contentType?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  lastDeliveryStatus?: number | IntFilter
  payloadUrl?: string | StringFilter
  secret?: string | NullableStringFilter | null
  status?: number | IntFilter
  updatedAt?: string | Date | NullableDateTimeFilter | null
  verifyCertificate?: boolean | BooleanFilter
  wildcardWebHook?: boolean | BooleanFilter
  AND?: Enumerable<WebHookWhereInput>
  OR?: Enumerable<WebHookWhereInput>
  NOT?: Enumerable<WebHookWhereInput>
}

export type WebHookWhereUniqueInput = {
  id?: number
}

export type WebHookEventWhereInput = {
  id?: number | IntFilter
  createdAt?: string | Date | NullableDateTimeFilter | null
  duration?: number | NullableIntFilter | null
  headers?: string | NullableStringFilter | null
  payload?: string | NullableStringFilter | null
  responseBody?: string | NullableStringFilter | null
  responseHeaders?: string | NullableStringFilter | null
  status?: number | NullableIntFilter | null
  updatedAt?: string | Date | NullableDateTimeFilter | null
  webHookId?: number | IntFilter
  AND?: Enumerable<WebHookEventWhereInput>
  OR?: Enumerable<WebHookEventWhereInput>
  NOT?: Enumerable<WebHookEventWhereInput>
}

export type WebHookEventWhereUniqueInput = {
  id?: number
}

export type WebHookEventTypeWhereInput = {
  id?: number | IntFilter
  name?: string | StringFilter
  AND?: Enumerable<WebHookEventTypeWhereInput>
  OR?: Enumerable<WebHookEventTypeWhereInput>
  NOT?: Enumerable<WebHookEventTypeWhereInput>
}

export type WebHookEventTypeWhereUniqueInput = {
  id?: number
}

export type ApiKeyCreateInput = {
  createdById?: number
  hidden: boolean
  key: string
  userId?: number
}

export type ApiKeyUpdateInput = {
  createdById?: number
  hidden?: boolean
  key?: string
  userId?: number
}

export type ApiKeyUpdateManyMutationInput = {
  createdById?: number
  hidden?: boolean
  key?: string
  userId?: number
}

export type ApplicationRequestCreateInput = {
  count: number
  date: string | Date
  reqType: number
}

export type ApplicationRequestUpdateInput = {
  count?: number
  date?: string | Date
  reqType?: number
}

export type ApplicationRequestUpdateManyMutationInput = {
  count?: number
  date?: string | Date
  reqType?: number
}

export type ArInternalMetadatumCreateInput = {
  key: string
  value?: string
}

export type ArInternalMetadatumUpdateManyMutationInput = {
  key?: string
  value?: string
}

export type BadgeCreateInput = {
  allowTitle: boolean
  autoRevoke: boolean
  badgeGroupingId: number
  badgeTypeId: number
  description?: string
  enabled: boolean
  grantCount: number
  icon?: string
  image?: string
  listable?: boolean
  longDescription?: string
  multipleGrant: boolean
  name: string
  query?: string
  showPosts: boolean
  system: boolean
  targetPosts?: boolean
  trigger?: number
}

export type BadgeUpdateInput = {
  allowTitle?: boolean
  autoRevoke?: boolean
  badgeGroupingId?: number
  badgeTypeId?: number
  description?: string
  enabled?: boolean
  grantCount?: number
  icon?: string
  image?: string
  listable?: boolean
  longDescription?: string
  multipleGrant?: boolean
  name?: string
  query?: string
  showPosts?: boolean
  system?: boolean
  targetPosts?: boolean
  trigger?: number
}

export type BadgeUpdateManyMutationInput = {
  allowTitle?: boolean
  autoRevoke?: boolean
  badgeGroupingId?: number
  badgeTypeId?: number
  description?: string
  enabled?: boolean
  grantCount?: number
  icon?: string
  image?: string
  listable?: boolean
  longDescription?: string
  multipleGrant?: boolean
  name?: string
  query?: string
  showPosts?: boolean
  system?: boolean
  targetPosts?: boolean
  trigger?: number
}

export type BadgeGroupingCreateInput = {
  description?: string
  name: string
  position: number
}

export type BadgeGroupingUpdateInput = {
  description?: string
  name?: string
  position?: number
}

export type BadgeGroupingUpdateManyMutationInput = {
  description?: string
  name?: string
  position?: number
}

export type BadgeTypeCreateInput = {
  name: string
}

export type BadgeTypeUpdateInput = {
  name?: string
}

export type BadgeTypeUpdateManyMutationInput = {
  name?: string
}

export type CategoryCreateInput = {
  allowBadges: boolean
  allTopicsWiki: boolean
  autoCloseBasedOnLastPost?: boolean
  autoCloseHours?: number
  color: string
  containsMessages?: boolean
  defaultTopPeriod?: string
  defaultView?: string
  description?: string
  emailIn?: string
  emailInAllowStrangers?: boolean
  latestPostId?: number
  latestTopicId?: number
  mailinglistMirror: boolean
  minimumRequiredTags?: number
  name: string
  nameLower: string
  navigateToFirstPostAfterRead: boolean
  numFeaturedTopics?: number
  parentCategoryId?: number
  position?: number
  postCount: number
  postsDay?: number
  postsMonth?: number
  postsWeek?: number
  postsYear?: number
  readRestricted: boolean
  showSubcategoryList?: boolean
  slug: string
  sortAscending?: boolean
  sortOrder?: string
  subcategoryListStyle?: string
  suppressFromLatest?: boolean
  textColor: string
  topicCount: number
  topicFeaturedLinkAllowed?: boolean
  topicId?: number
  topicsDay?: number
  topicsMonth?: number
  topicsWeek?: number
  topicsYear?: number
  topicTemplate?: string
  uploadedBackgroundId?: number
  uploadedLogoId?: number
  userId: number
}

export type CategoryUpdateInput = {
  allowBadges?: boolean
  allTopicsWiki?: boolean
  autoCloseBasedOnLastPost?: boolean
  autoCloseHours?: number
  color?: string
  containsMessages?: boolean
  defaultTopPeriod?: string
  defaultView?: string
  description?: string
  emailIn?: string
  emailInAllowStrangers?: boolean
  latestPostId?: number
  latestTopicId?: number
  mailinglistMirror?: boolean
  minimumRequiredTags?: number
  name?: string
  nameLower?: string
  navigateToFirstPostAfterRead?: boolean
  numFeaturedTopics?: number
  parentCategoryId?: number
  position?: number
  postCount?: number
  postsDay?: number
  postsMonth?: number
  postsWeek?: number
  postsYear?: number
  readRestricted?: boolean
  showSubcategoryList?: boolean
  slug?: string
  sortAscending?: boolean
  sortOrder?: string
  subcategoryListStyle?: string
  suppressFromLatest?: boolean
  textColor?: string
  topicCount?: number
  topicFeaturedLinkAllowed?: boolean
  topicId?: number
  topicsDay?: number
  topicsMonth?: number
  topicsWeek?: number
  topicsYear?: number
  topicTemplate?: string
  uploadedBackgroundId?: number
  uploadedLogoId?: number
  userId?: number
}

export type CategoryUpdateManyMutationInput = {
  allowBadges?: boolean
  allTopicsWiki?: boolean
  autoCloseBasedOnLastPost?: boolean
  autoCloseHours?: number
  color?: string
  containsMessages?: boolean
  defaultTopPeriod?: string
  defaultView?: string
  description?: string
  emailIn?: string
  emailInAllowStrangers?: boolean
  latestPostId?: number
  latestTopicId?: number
  mailinglistMirror?: boolean
  minimumRequiredTags?: number
  name?: string
  nameLower?: string
  navigateToFirstPostAfterRead?: boolean
  numFeaturedTopics?: number
  parentCategoryId?: number
  position?: number
  postCount?: number
  postsDay?: number
  postsMonth?: number
  postsWeek?: number
  postsYear?: number
  readRestricted?: boolean
  showSubcategoryList?: boolean
  slug?: string
  sortAscending?: boolean
  sortOrder?: string
  subcategoryListStyle?: string
  suppressFromLatest?: boolean
  textColor?: string
  topicCount?: number
  topicFeaturedLinkAllowed?: boolean
  topicId?: number
  topicsDay?: number
  topicsMonth?: number
  topicsWeek?: number
  topicsYear?: number
  topicTemplate?: string
  uploadedBackgroundId?: number
  uploadedLogoId?: number
  userId?: number
}

export type CategoryCustomFieldCreateInput = {
  categoryId: number
  name: string
  value?: string
}

export type CategoryCustomFieldUpdateInput = {
  categoryId?: number
  name?: string
  value?: string
}

export type CategoryCustomFieldUpdateManyMutationInput = {
  categoryId?: number
  name?: string
  value?: string
}

export type CategoryFeaturedTopicCreateInput = {
  categoryId: number
  rank: number
  topicId: number
}

export type CategoryFeaturedTopicUpdateInput = {
  categoryId?: number
  rank?: number
  topicId?: number
}

export type CategoryFeaturedTopicUpdateManyMutationInput = {
  categoryId?: number
  rank?: number
  topicId?: number
}

export type CategoryGroupCreateInput = {
  categoryId: number
  groupId: number
  permissionType?: number
}

export type CategoryGroupUpdateInput = {
  categoryId?: number
  groupId?: number
  permissionType?: number
}

export type CategoryGroupUpdateManyMutationInput = {
  categoryId?: number
  groupId?: number
  permissionType?: number
}

export type CategorySearchDatumCreateInput = {
  category_id: number
  locale?: string
  rawData?: string
  version?: number
}

export type CategorySearchDatumUpdateManyMutationInput = {
  category_id?: number
  locale?: string
  rawData?: string
  version?: number
}

export type CategoryTagCreateInput = {
  categoryId: number
  tagId: number
}

export type CategoryTagUpdateInput = {
  categoryId?: number
  tagId?: number
}

export type CategoryTagUpdateManyMutationInput = {
  categoryId?: number
  tagId?: number
}

export type CategoryTagGroupCreateInput = {
  categoryId: number
  tagGroupId: number
}

export type CategoryTagGroupUpdateInput = {
  categoryId?: number
  tagGroupId?: number
}

export type CategoryTagGroupUpdateManyMutationInput = {
  categoryId?: number
  tagGroupId?: number
}

export type CategoryTagStatCreateInput = {
  categoryId: number
  tagId: number
  topicCount: number
}

export type CategoryTagStatUpdateInput = {
  categoryId?: number
  tagId?: number
  topicCount?: number
}

export type CategoryTagStatUpdateManyMutationInput = {
  categoryId?: number
  tagId?: number
  topicCount?: number
}

export type CategoryUserCreateInput = {
  categoryId: number
  notificationLevel: number
  userId: number
}

export type CategoryUserUpdateInput = {
  categoryId?: number
  notificationLevel?: number
  userId?: number
}

export type CategoryUserUpdateManyMutationInput = {
  categoryId?: number
  notificationLevel?: number
  userId?: number
}

export type ChildThemeCreateInput = {
  childThemeId?: number
  parentThemeId?: number
}

export type ChildThemeUpdateInput = {
  childThemeId?: number
  parentThemeId?: number
}

export type ChildThemeUpdateManyMutationInput = {
  childThemeId?: number
  parentThemeId?: number
}

export type ColorSchemeCreateInput = {
  baseSchemeId?: string
  name: string
  themeId?: number
  version: number
  viaWizard: boolean
}

export type ColorSchemeUpdateInput = {
  baseSchemeId?: string
  name?: string
  themeId?: number
  version?: number
  viaWizard?: boolean
}

export type ColorSchemeUpdateManyMutationInput = {
  baseSchemeId?: string
  name?: string
  themeId?: number
  version?: number
  viaWizard?: boolean
}

export type ColorSchemeColorCreateInput = {
  colorSchemeId: number
  hex: string
  name: string
}

export type ColorSchemeColorUpdateInput = {
  colorSchemeId?: number
  hex?: string
  name?: string
}

export type ColorSchemeColorUpdateManyMutationInput = {
  colorSchemeId?: number
  hex?: string
  name?: string
}

export type CustomEmojiCreateInput = {
  name: string
  uploadId: number
}

export type CustomEmojiUpdateInput = {
  name?: string
  uploadId?: number
}

export type CustomEmojiUpdateManyMutationInput = {
  name?: string
  uploadId?: number
}

export type DeveloperCreateInput = {
  userId: number
}

export type DeveloperUpdateInput = {
  userId?: number
}

export type DeveloperUpdateManyMutationInput = {
  userId?: number
}

export type DirectoryItemCreateInput = {
  daysVisited: number
  likesGiven: number
  likesReceived: number
  periodType: number
  postCount: number
  postsRead: number
  topicCount: number
  topicsEntered: number
  userId: number
}

export type DirectoryItemUpdateInput = {
  daysVisited?: number
  likesGiven?: number
  likesReceived?: number
  periodType?: number
  postCount?: number
  postsRead?: number
  topicCount?: number
  topicsEntered?: number
  userId?: number
}

export type DirectoryItemUpdateManyMutationInput = {
  daysVisited?: number
  likesGiven?: number
  likesReceived?: number
  periodType?: number
  postCount?: number
  postsRead?: number
  topicCount?: number
  topicsEntered?: number
  userId?: number
}

export type DraftCreateInput = {
  data: string
  draftKey: string
  revisions: number
  sequence: number
  userId: number
}

export type DraftUpdateInput = {
  data?: string
  draftKey?: string
  revisions?: number
  sequence?: number
  userId?: number
}

export type DraftUpdateManyMutationInput = {
  data?: string
  draftKey?: string
  revisions?: number
  sequence?: number
  userId?: number
}

export type DraftSequenceCreateInput = {
  draftKey: string
  sequence: number
  userId: number
}

export type DraftSequenceUpdateInput = {
  draftKey?: string
  sequence?: number
  userId?: number
}

export type DraftSequenceUpdateManyMutationInput = {
  draftKey?: string
  sequence?: number
  userId?: number
}

export type EmailChangeRequestCreateInput = {
  changeState: number
  newEmail: string
  newEmailTokenId?: number
  oldEmail: string
  oldEmailTokenId?: number
  userId: number
}

export type EmailChangeRequestUpdateInput = {
  changeState?: number
  newEmail?: string
  newEmailTokenId?: number
  oldEmail?: string
  oldEmailTokenId?: number
  userId?: number
}

export type EmailChangeRequestUpdateManyMutationInput = {
  changeState?: number
  newEmail?: string
  newEmailTokenId?: number
  oldEmail?: string
  oldEmailTokenId?: number
  userId?: number
}

export type EmailLogCreateInput = {
  bounced: boolean
  bounceKey?: string
  emailType: string
  messageId?: string
  postId?: number
  toAddress: string
  userId?: number
}

export type EmailLogUpdateInput = {
  bounced?: boolean
  bounceKey?: string
  emailType?: string
  messageId?: string
  postId?: number
  toAddress?: string
  userId?: number
}

export type EmailLogUpdateManyMutationInput = {
  bounced?: boolean
  bounceKey?: string
  emailType?: string
  messageId?: string
  postId?: number
  toAddress?: string
  userId?: number
}

export type EmailTokenCreateInput = {
  confirmed: boolean
  email: string
  expired: boolean
  token: string
  userId: number
}

export type EmailTokenUpdateInput = {
  confirmed?: boolean
  email?: string
  expired?: boolean
  token?: string
  userId?: number
}

export type EmailTokenUpdateManyMutationInput = {
  confirmed?: boolean
  email?: string
  expired?: boolean
  token?: string
  userId?: number
}

export type EmbeddableHostCreateInput = {
  categoryId: number
  className?: string
  host: string
  pathWhitelist?: string
}

export type EmbeddableHostUpdateInput = {
  categoryId?: number
  className?: string
  host?: string
  pathWhitelist?: string
}

export type EmbeddableHostUpdateManyMutationInput = {
  categoryId?: number
  className?: string
  host?: string
  pathWhitelist?: string
}

export type FacebookUserInfoCreateInput = {
  aboutMe?: string
  avatarUrl?: string
  email?: string
  facebookUserId: number
  firstName?: string
  gender?: string
  lastName?: string
  link?: string
  location?: string
  name?: string
  userId: number
  username?: string
  website?: string
}

export type FacebookUserInfoUpdateInput = {
  aboutMe?: string
  avatarUrl?: string
  email?: string
  facebookUserId?: number
  firstName?: string
  gender?: string
  lastName?: string
  link?: string
  location?: string
  name?: string
  userId?: number
  username?: string
  website?: string
}

export type FacebookUserInfoUpdateManyMutationInput = {
  aboutMe?: string
  avatarUrl?: string
  email?: string
  facebookUserId?: number
  firstName?: string
  gender?: string
  lastName?: string
  link?: string
  location?: string
  name?: string
  userId?: number
  username?: string
  website?: string
}

export type GithubUserInfoCreateInput = {
  githubUserId: number
  screenName: string
  userId: number
}

export type GithubUserInfoUpdateInput = {
  githubUserId?: number
  screenName?: string
  userId?: number
}

export type GithubUserInfoUpdateManyMutationInput = {
  githubUserId?: number
  screenName?: string
  userId?: number
}

export type GoogleUserInfoCreateInput = {
  email?: string
  firstName?: string
  gender?: string
  googleUserId: string
  lastName?: string
  link?: string
  name?: string
  picture?: string
  profileLink?: string
  userId: number
}

export type GoogleUserInfoUpdateInput = {
  email?: string
  firstName?: string
  gender?: string
  googleUserId?: string
  lastName?: string
  link?: string
  name?: string
  picture?: string
  profileLink?: string
  userId?: number
}

export type GoogleUserInfoUpdateManyMutationInput = {
  email?: string
  firstName?: string
  gender?: string
  googleUserId?: string
  lastName?: string
  link?: string
  name?: string
  picture?: string
  profileLink?: string
  userId?: number
}

export type GroupCreateInput = {
  allowMembershipRequests: boolean
  automatic: boolean
  automaticMembershipEmailDomains?: string
  automaticMembershipRetroactive?: boolean
  bioCooked?: string
  bioRaw?: string
  defaultNotificationLevel: number
  flairBgColor?: string
  flairColor?: string
  flairUrl?: string
  fullName?: string
  grantTrustLevel?: number
  hasMessages: boolean
  incomingEmail?: string
  membershipRequestTemplate?: string
  mentionableLevel?: number
  messageableLevel?: number
  name: string
  primaryGroup: boolean
  publicAdmission: boolean
  publicExit: boolean
  title?: string
  userCount: number
  visibilityLevel: number
}

export type GroupUpdateInput = {
  allowMembershipRequests?: boolean
  automatic?: boolean
  automaticMembershipEmailDomains?: string
  automaticMembershipRetroactive?: boolean
  bioCooked?: string
  bioRaw?: string
  defaultNotificationLevel?: number
  flairBgColor?: string
  flairColor?: string
  flairUrl?: string
  fullName?: string
  grantTrustLevel?: number
  hasMessages?: boolean
  incomingEmail?: string
  membershipRequestTemplate?: string
  mentionableLevel?: number
  messageableLevel?: number
  name?: string
  primaryGroup?: boolean
  publicAdmission?: boolean
  publicExit?: boolean
  title?: string
  userCount?: number
  visibilityLevel?: number
}

export type GroupUpdateManyMutationInput = {
  allowMembershipRequests?: boolean
  automatic?: boolean
  automaticMembershipEmailDomains?: string
  automaticMembershipRetroactive?: boolean
  bioCooked?: string
  bioRaw?: string
  defaultNotificationLevel?: number
  flairBgColor?: string
  flairColor?: string
  flairUrl?: string
  fullName?: string
  grantTrustLevel?: number
  hasMessages?: boolean
  incomingEmail?: string
  membershipRequestTemplate?: string
  mentionableLevel?: number
  messageableLevel?: number
  name?: string
  primaryGroup?: boolean
  publicAdmission?: boolean
  publicExit?: boolean
  title?: string
  userCount?: number
  visibilityLevel?: number
}

export type GroupArchivedMessageCreateInput = {
  groupId: number
  topicId: number
}

export type GroupArchivedMessageUpdateInput = {
  groupId?: number
  topicId?: number
}

export type GroupArchivedMessageUpdateManyMutationInput = {
  groupId?: number
  topicId?: number
}

export type GroupCustomFieldCreateInput = {
  groupId: number
  name: string
  value?: string
}

export type GroupCustomFieldUpdateInput = {
  groupId?: number
  name?: string
  value?: string
}

export type GroupCustomFieldUpdateManyMutationInput = {
  groupId?: number
  name?: string
  value?: string
}

export type GroupHistoryCreateInput = {
  actingUserId: number
  action: number
  groupId: number
  newValue?: string
  prevValue?: string
  subject?: string
  targetUserId?: number
}

export type GroupHistoryUpdateInput = {
  actingUserId?: number
  action?: number
  groupId?: number
  newValue?: string
  prevValue?: string
  subject?: string
  targetUserId?: number
}

export type GroupHistoryUpdateManyMutationInput = {
  actingUserId?: number
  action?: number
  groupId?: number
  newValue?: string
  prevValue?: string
  subject?: string
  targetUserId?: number
}

export type GroupMentionCreateInput = {
  groupId?: number
  postId?: number
}

export type GroupMentionUpdateInput = {
  groupId?: number
  postId?: number
}

export type GroupMentionUpdateManyMutationInput = {
  groupId?: number
  postId?: number
}

export type GroupUserCreateInput = {
  groupId: number
  notificationLevel: number
  owner: boolean
  userId: number
}

export type GroupUserUpdateInput = {
  groupId?: number
  notificationLevel?: number
  owner?: boolean
  userId?: number
}

export type GroupUserUpdateManyMutationInput = {
  groupId?: number
  notificationLevel?: number
  owner?: boolean
  userId?: number
}

export type IncomingDomainCreateInput = {
  https: boolean
  name: string
  port: number
}

export type IncomingDomainUpdateInput = {
  https?: boolean
  name?: string
  port?: number
}

export type IncomingDomainUpdateManyMutationInput = {
  https?: boolean
  name?: string
  port?: number
}

export type IncomingEmailCreateInput = {
  ccAddresses?: string
  error?: string
  fromAddress?: string
  isAutoGenerated?: boolean
  isBounce: boolean
  messageId?: string
  postId?: number
  raw?: string
  rejectionMessage?: string
  subject?: string
  toAddresses?: string
  topicId?: number
  userId?: number
}

export type IncomingEmailUpdateInput = {
  ccAddresses?: string
  error?: string
  fromAddress?: string
  isAutoGenerated?: boolean
  isBounce?: boolean
  messageId?: string
  postId?: number
  raw?: string
  rejectionMessage?: string
  subject?: string
  toAddresses?: string
  topicId?: number
  userId?: number
}

export type IncomingEmailUpdateManyMutationInput = {
  ccAddresses?: string
  error?: string
  fromAddress?: string
  isAutoGenerated?: boolean
  isBounce?: boolean
  messageId?: string
  postId?: number
  raw?: string
  rejectionMessage?: string
  subject?: string
  toAddresses?: string
  topicId?: number
  userId?: number
}

export type IncomingLinkCreateInput = {
  currentUserId?: number
  incomingRefererId?: number
  postId: number
  userId?: number
}

export type IncomingLinkUpdateInput = {
  currentUserId?: number
  incomingRefererId?: number
  postId?: number
  userId?: number
}

export type IncomingLinkUpdateManyMutationInput = {
  currentUserId?: number
  incomingRefererId?: number
  postId?: number
  userId?: number
}

export type IncomingRefererCreateInput = {
  incomingDomainId: number
  path: string
}

export type IncomingRefererUpdateInput = {
  incomingDomainId?: number
  path?: string
}

export type IncomingRefererUpdateManyMutationInput = {
  incomingDomainId?: number
  path?: string
}

export type InstagramUserInfoCreateInput = {
  instagramUserId?: number
  screenName?: string
  userId?: number
}

export type InstagramUserInfoUpdateInput = {
  instagramUserId?: number
  screenName?: string
  userId?: number
}

export type InstagramUserInfoUpdateManyMutationInput = {
  instagramUserId?: number
  screenName?: string
  userId?: number
}

export type InviteCreateInput = {
  customMessage?: string
  deletedAt?: string | Date
  deletedById?: number
  email?: string
  invalidatedAt?: string | Date
  invitedById: number
  inviteKey: string
  moderator: boolean
  redeemedAt?: string | Date
  userId?: number
}

export type InviteUpdateInput = {
  customMessage?: string
  deletedAt?: string | Date
  deletedById?: number
  email?: string
  invalidatedAt?: string | Date
  invitedById?: number
  inviteKey?: string
  moderator?: boolean
  redeemedAt?: string | Date
  userId?: number
}

export type InviteUpdateManyMutationInput = {
  customMessage?: string
  deletedAt?: string | Date
  deletedById?: number
  email?: string
  invalidatedAt?: string | Date
  invitedById?: number
  inviteKey?: string
  moderator?: boolean
  redeemedAt?: string | Date
  userId?: number
}

export type InvitedGroupCreateInput = {
  groupId?: number
  inviteId?: number
}

export type InvitedGroupUpdateInput = {
  groupId?: number
  inviteId?: number
}

export type InvitedGroupUpdateManyMutationInput = {
  groupId?: number
  inviteId?: number
}

export type JavascriptCachCreateInput = {
  content: string
  digest?: string
  themeFieldId: number
}

export type JavascriptCachUpdateInput = {
  content?: string
  digest?: string
  themeFieldId?: number
}

export type JavascriptCachUpdateManyMutationInput = {
  content?: string
  digest?: string
  themeFieldId?: number
}

export type MessageBusCreateInput = {
  context?: string
  data?: string
  name?: string
}

export type MessageBusUpdateInput = {
  context?: string
  data?: string
  name?: string
}

export type MessageBusUpdateManyMutationInput = {
  context?: string
  data?: string
  name?: string
}

export type MutedUserCreateInput = {
  mutedUserId: number
  userId: number
}

export type MutedUserUpdateInput = {
  mutedUserId?: number
  userId?: number
}

export type MutedUserUpdateManyMutationInput = {
  mutedUserId?: number
  userId?: number
}

export type NotificationCreateInput = {
  data: string
  notificationType: number
  postActionId?: number
  postNumber?: number
  read: boolean
  topicId?: number
  userId: number
}

export type NotificationUpdateInput = {
  data?: string
  notificationType?: number
  postActionId?: number
  postNumber?: number
  read?: boolean
  topicId?: number
  userId?: number
}

export type NotificationUpdateManyMutationInput = {
  data?: string
  notificationType?: number
  postActionId?: number
  postNumber?: number
  read?: boolean
  topicId?: number
  userId?: number
}

export type Oauth2UserInfoCreateInput = {
  email?: string
  name?: string
  provider: string
  uid: string
  userId: number
}

export type Oauth2UserInfoUpdateInput = {
  email?: string
  name?: string
  provider?: string
  uid?: string
  userId?: number
}

export type Oauth2UserInfoUpdateManyMutationInput = {
  email?: string
  name?: string
  provider?: string
  uid?: string
  userId?: number
}

export type OnceoffLogCreateInput = {
  jobName?: string
}

export type OnceoffLogUpdateInput = {
  jobName?: string
}

export type OnceoffLogUpdateManyMutationInput = {
  jobName?: string
}

export type OptimizedImageCreateInput = {
  extension: string
  filesize?: number
  height: number
  sha1: string
  uploadId: number
  url: string
  width: number
}

export type OptimizedImageUpdateInput = {
  extension?: string
  filesize?: number
  height?: number
  sha1?: string
  uploadId?: number
  url?: string
  width?: number
}

export type OptimizedImageUpdateManyMutationInput = {
  extension?: string
  filesize?: number
  height?: number
  sha1?: string
  uploadId?: number
  url?: string
  width?: number
}

export type PermalinkCreateInput = {
  categoryId?: number
  externalUrl?: string
  postId?: number
  topicId?: number
  url: string
}

export type PermalinkUpdateInput = {
  categoryId?: number
  externalUrl?: string
  postId?: number
  topicId?: number
  url?: string
}

export type PermalinkUpdateManyMutationInput = {
  categoryId?: number
  externalUrl?: string
  postId?: number
  topicId?: number
  url?: string
}

export type PluginStoreRowCreateInput = {
  key: string
  pluginName: string
  typeName: string
  value?: string
}

export type PluginStoreRowUpdateInput = {
  key?: string
  pluginName?: string
  typeName?: string
  value?: string
}

export type PluginStoreRowUpdateManyMutationInput = {
  key?: string
  pluginName?: string
  typeName?: string
  value?: string
}

export type PostCreateInput = {
  actionCode?: string
  avgTime?: number
  bakedAt?: string | Date
  bakedVersion?: number
  bookmarkCount: number
  cooked: string
  cookMethod: number
  deletedAt?: string | Date
  deletedById?: number
  editReason?: string
  hidden: boolean
  hiddenAt?: string | Date
  hiddenReasonId?: number
  illegalCount: number
  imageUrl?: string
  inappropriateCount: number
  incomingLinkCount: number
  lastEditorId?: number
  lastVersionAt: string | Date
  likeCount: number
  likeScore: number
  lockedById?: number
  notifyModeratorsCount: number
  notifyUserCount: number
  offTopicCount: number
  percentRank?: number
  postNumber: number
  postType: number
  publicVersion: number
  quoteCount: number
  raw: string
  rawEmail?: string
  reads: number
  replyCount: number
  replyQuoted: boolean
  replyToPostNumber?: number
  replyToUserId?: number
  score?: number
  selfEdits: number
  sortOrder?: number
  spamCount: number
  topicId: number
  userDeleted: boolean
  userId?: number
  version: number
  viaEmail: boolean
  wiki: boolean
  wordCount?: number
}

export type PostUpdateInput = {
  actionCode?: string
  avgTime?: number
  bakedAt?: string | Date
  bakedVersion?: number
  bookmarkCount?: number
  cooked?: string
  cookMethod?: number
  deletedAt?: string | Date
  deletedById?: number
  editReason?: string
  hidden?: boolean
  hiddenAt?: string | Date
  hiddenReasonId?: number
  illegalCount?: number
  imageUrl?: string
  inappropriateCount?: number
  incomingLinkCount?: number
  lastEditorId?: number
  lastVersionAt?: string | Date
  likeCount?: number
  likeScore?: number
  lockedById?: number
  notifyModeratorsCount?: number
  notifyUserCount?: number
  offTopicCount?: number
  percentRank?: number
  postNumber?: number
  postType?: number
  publicVersion?: number
  quoteCount?: number
  raw?: string
  rawEmail?: string
  reads?: number
  replyCount?: number
  replyQuoted?: boolean
  replyToPostNumber?: number
  replyToUserId?: number
  score?: number
  selfEdits?: number
  sortOrder?: number
  spamCount?: number
  topicId?: number
  userDeleted?: boolean
  userId?: number
  version?: number
  viaEmail?: boolean
  wiki?: boolean
  wordCount?: number
}

export type PostUpdateManyMutationInput = {
  actionCode?: string
  avgTime?: number
  bakedAt?: string | Date
  bakedVersion?: number
  bookmarkCount?: number
  cooked?: string
  cookMethod?: number
  deletedAt?: string | Date
  deletedById?: number
  editReason?: string
  hidden?: boolean
  hiddenAt?: string | Date
  hiddenReasonId?: number
  illegalCount?: number
  imageUrl?: string
  inappropriateCount?: number
  incomingLinkCount?: number
  lastEditorId?: number
  lastVersionAt?: string | Date
  likeCount?: number
  likeScore?: number
  lockedById?: number
  notifyModeratorsCount?: number
  notifyUserCount?: number
  offTopicCount?: number
  percentRank?: number
  postNumber?: number
  postType?: number
  publicVersion?: number
  quoteCount?: number
  raw?: string
  rawEmail?: string
  reads?: number
  replyCount?: number
  replyQuoted?: boolean
  replyToPostNumber?: number
  replyToUserId?: number
  score?: number
  selfEdits?: number
  sortOrder?: number
  spamCount?: number
  topicId?: number
  userDeleted?: boolean
  userId?: number
  version?: number
  viaEmail?: boolean
  wiki?: boolean
  wordCount?: number
}

export type PostActionCreateInput = {
  agreedAt?: string | Date
  agreedById?: number
  deferredAt?: string | Date
  deferredById?: number
  deletedAt?: string | Date
  deletedById?: number
  disagreedAt?: string | Date
  disagreedById?: number
  postActionTypeId: number
  postId: number
  relatedPostId?: number
  staffTookAction: boolean
  targetsTopic: boolean
  userId: number
}

export type PostActionUpdateInput = {
  agreedAt?: string | Date
  agreedById?: number
  deferredAt?: string | Date
  deferredById?: number
  deletedAt?: string | Date
  deletedById?: number
  disagreedAt?: string | Date
  disagreedById?: number
  postActionTypeId?: number
  postId?: number
  relatedPostId?: number
  staffTookAction?: boolean
  targetsTopic?: boolean
  userId?: number
}

export type PostActionUpdateManyMutationInput = {
  agreedAt?: string | Date
  agreedById?: number
  deferredAt?: string | Date
  deferredById?: number
  deletedAt?: string | Date
  deletedById?: number
  disagreedAt?: string | Date
  disagreedById?: number
  postActionTypeId?: number
  postId?: number
  relatedPostId?: number
  staffTookAction?: boolean
  targetsTopic?: boolean
  userId?: number
}

export type PostActionTypeCreateInput = {
  icon?: string
  isFlag: boolean
  nameKey: string
  position: number
}

export type PostActionTypeUpdateInput = {
  icon?: string
  isFlag?: boolean
  nameKey?: string
  position?: number
}

export type PostActionTypeUpdateManyMutationInput = {
  icon?: string
  isFlag?: boolean
  nameKey?: string
  position?: number
}

export type PostCustomFieldCreateInput = {
  name: string
  postId: number
  value?: string
}

export type PostCustomFieldUpdateInput = {
  name?: string
  postId?: number
  value?: string
}

export type PostCustomFieldUpdateManyMutationInput = {
  name?: string
  postId?: number
  value?: string
}

export type PostDetailCreateInput = {
  extra?: string
  key?: string
  postId?: number
  value?: string
}

export type PostDetailUpdateInput = {
  extra?: string
  key?: string
  postId?: number
  value?: string
}

export type PostDetailUpdateManyMutationInput = {
  extra?: string
  key?: string
  postId?: number
  value?: string
}

export type PostReplyKeyCreateInput = {
  postId: number
  replyKey: string
  userId: number
}

export type PostReplyKeyUpdateInput = {
  postId?: number
  replyKey?: string
  userId?: number
}

export type PostReplyKeyUpdateManyMutationInput = {
  postId?: number
  replyKey?: string
  userId?: number
}

export type PostRevisionCreateInput = {
  hidden: boolean
  modifications?: string
  number?: number
  postId?: number
  userId?: number
}

export type PostRevisionUpdateInput = {
  hidden?: boolean
  modifications?: string
  number?: number
  postId?: number
  userId?: number
}

export type PostRevisionUpdateManyMutationInput = {
  hidden?: boolean
  modifications?: string
  number?: number
  postId?: number
  userId?: number
}

export type PostSearchDatumCreateInput = {
  post_id: number
  locale?: string
  rawData?: string
  version?: number
}

export type PostSearchDatumUpdateManyMutationInput = {
  post_id?: number
  locale?: string
  rawData?: string
  version?: number
}

export type PostStatCreateInput = {
  composerOpenDurationMsecs?: number
  draftsSaved?: number
  postId?: number
  typingDurationMsecs?: number
}

export type PostStatUpdateInput = {
  composerOpenDurationMsecs?: number
  draftsSaved?: number
  postId?: number
  typingDurationMsecs?: number
}

export type PostStatUpdateManyMutationInput = {
  composerOpenDurationMsecs?: number
  draftsSaved?: number
  postId?: number
  typingDurationMsecs?: number
}

export type PostUploadCreateInput = {
  postId: number
  uploadId: number
}

export type PostUploadUpdateInput = {
  postId?: number
  uploadId?: number
}

export type PostUploadUpdateManyMutationInput = {
  postId?: number
  uploadId?: number
}

export type PushSubscriptionCreateInput = {
  data: string
  userId: number
}

export type PushSubscriptionUpdateInput = {
  data?: string
  userId?: number
}

export type PushSubscriptionUpdateManyMutationInput = {
  data?: string
  userId?: number
}

export type QueuedPostCreateInput = {
  approvedAt?: string | Date
  approvedById?: number
  queue: string
  raw: string
  rejectedAt?: string | Date
  rejectedById?: number
  state: number
  topicId?: number
  userId: number
}

export type QueuedPostUpdateInput = {
  approvedAt?: string | Date
  approvedById?: number
  queue?: string
  raw?: string
  rejectedAt?: string | Date
  rejectedById?: number
  state?: number
  topicId?: number
  userId?: number
}

export type QueuedPostUpdateManyMutationInput = {
  approvedAt?: string | Date
  approvedById?: number
  queue?: string
  raw?: string
  rejectedAt?: string | Date
  rejectedById?: number
  state?: number
  topicId?: number
  userId?: number
}

export type QuotedPostCreateInput = {
  postId: number
  quotedPostId: number
}

export type QuotedPostUpdateInput = {
  postId?: number
  quotedPostId?: number
}

export type QuotedPostUpdateManyMutationInput = {
  postId?: number
  quotedPostId?: number
}

export type RemoteThemeCreateInput = {
  aboutUrl?: string
  branch?: string
  commitsBehind?: number
  lastErrorText?: string
  licenseUrl?: string
  localVersion?: string
  privateKey?: string
  remoteUpdatedAt?: string | Date
  remoteUrl: string
  remoteVersion?: string
}

export type RemoteThemeUpdateInput = {
  aboutUrl?: string
  branch?: string
  commitsBehind?: number
  lastErrorText?: string
  licenseUrl?: string
  localVersion?: string
  privateKey?: string
  remoteUpdatedAt?: string | Date
  remoteUrl?: string
  remoteVersion?: string
}

export type RemoteThemeUpdateManyMutationInput = {
  aboutUrl?: string
  branch?: string
  commitsBehind?: number
  lastErrorText?: string
  licenseUrl?: string
  localVersion?: string
  privateKey?: string
  remoteUpdatedAt?: string | Date
  remoteUrl?: string
  remoteVersion?: string
}

export type SchedulerStatCreateInput = {
  durationMs?: number
  error?: string
  hostname: string
  liveSlotsFinish?: number
  liveSlotsStart?: number
  name: string
  pid: number
  startedAt: string | Date
  success?: boolean
}

export type SchedulerStatUpdateInput = {
  durationMs?: number
  error?: string
  hostname?: string
  liveSlotsFinish?: number
  liveSlotsStart?: number
  name?: string
  pid?: number
  startedAt?: string | Date
  success?: boolean
}

export type SchedulerStatUpdateManyMutationInput = {
  durationMs?: number
  error?: string
  hostname?: string
  liveSlotsFinish?: number
  liveSlotsStart?: number
  name?: string
  pid?: number
  startedAt?: string | Date
  success?: boolean
}

export type SchemaMigrationCreateInput = {
  version: string
}

export type SchemaMigrationUpdateInput = {
  version?: string
}

export type SchemaMigrationUpdateManyMutationInput = {
  version?: string
}

export type SchemaMigrationDetailCreateInput = {
  direction?: string
  duration?: number
  gitVersion?: string
  hostname?: string
  name?: string
  railsVersion?: string
  version: string
}

export type SchemaMigrationDetailUpdateInput = {
  direction?: string
  duration?: number
  gitVersion?: string
  hostname?: string
  name?: string
  railsVersion?: string
  version?: string
}

export type SchemaMigrationDetailUpdateManyMutationInput = {
  direction?: string
  duration?: number
  gitVersion?: string
  hostname?: string
  name?: string
  railsVersion?: string
  version?: string
}

export type ScreenedEmailCreateInput = {
  actionType: number
  email: string
  lastMatchAt?: string | Date
  matchCount: number
}

export type ScreenedEmailUpdateInput = {
  actionType?: number
  email?: string
  lastMatchAt?: string | Date
  matchCount?: number
}

export type ScreenedEmailUpdateManyMutationInput = {
  actionType?: number
  email?: string
  lastMatchAt?: string | Date
  matchCount?: number
}

export type ScreenedIpAddressCreateInput = {
  actionType: number
  lastMatchAt?: string | Date
  matchCount: number
}

export type ScreenedIpAddressUpdateInput = {
  actionType?: number
  lastMatchAt?: string | Date
  matchCount?: number
}

export type ScreenedIpAddressUpdateManyMutationInput = {
  actionType?: number
  lastMatchAt?: string | Date
  matchCount?: number
}

export type ScreenedUrlCreateInput = {
  actionType: number
  domain: string
  lastMatchAt?: string | Date
  matchCount: number
  url: string
}

export type ScreenedUrlUpdateInput = {
  actionType?: number
  domain?: string
  lastMatchAt?: string | Date
  matchCount?: number
  url?: string
}

export type ScreenedUrlUpdateManyMutationInput = {
  actionType?: number
  domain?: string
  lastMatchAt?: string | Date
  matchCount?: number
  url?: string
}

export type SearchLogCreateInput = {
  searchResultId?: number
  searchResultType?: number
  searchType: number
  term: string
  userId?: number
}

export type SearchLogUpdateInput = {
  searchResultId?: number
  searchResultType?: number
  searchType?: number
  term?: string
  userId?: number
}

export type SearchLogUpdateManyMutationInput = {
  searchResultId?: number
  searchResultType?: number
  searchType?: number
  term?: string
  userId?: number
}

export type SharedDraftCreateInput = {
  categoryId: number
  topicId: number
}

export type SharedDraftUpdateInput = {
  categoryId?: number
  topicId?: number
}

export type SharedDraftUpdateManyMutationInput = {
  categoryId?: number
  topicId?: number
}

export type SingleSignOnRecordCreateInput = {
  externalAvatarUrl?: string
  externalCardBackgroundUrl?: string
  externalEmail?: string
  externalId: string
  externalName?: string
  externalProfileBackgroundUrl?: string
  externalUsername?: string
  lastPayload: string
  userId: number
}

export type SingleSignOnRecordUpdateInput = {
  externalAvatarUrl?: string
  externalCardBackgroundUrl?: string
  externalEmail?: string
  externalId?: string
  externalName?: string
  externalProfileBackgroundUrl?: string
  externalUsername?: string
  lastPayload?: string
  userId?: number
}

export type SingleSignOnRecordUpdateManyMutationInput = {
  externalAvatarUrl?: string
  externalCardBackgroundUrl?: string
  externalEmail?: string
  externalId?: string
  externalName?: string
  externalProfileBackgroundUrl?: string
  externalUsername?: string
  lastPayload?: string
  userId?: number
}

export type SiteSettingCreateInput = {
  dataType: number
  name: string
  value?: string
}

export type SiteSettingUpdateInput = {
  dataType?: number
  name?: string
  value?: string
}

export type SiteSettingUpdateManyMutationInput = {
  dataType?: number
  name?: string
  value?: string
}

export type SkippedEmailLogCreateInput = {
  customReason?: string
  emailType: string
  postId?: number
  reasonType: number
  toAddress: string
  userId?: number
}

export type SkippedEmailLogUpdateInput = {
  customReason?: string
  emailType?: string
  postId?: number
  reasonType?: number
  toAddress?: string
  userId?: number
}

export type SkippedEmailLogUpdateManyMutationInput = {
  customReason?: string
  emailType?: string
  postId?: number
  reasonType?: number
  toAddress?: string
  userId?: number
}

export type StylesheetCacheCreateInput = {
  content: string
  digest: string
  sourceMap?: string
  target: string
  themeId: number
}

export type StylesheetCacheUpdateInput = {
  content?: string
  digest?: string
  sourceMap?: string
  target?: string
  themeId?: number
}

export type StylesheetCacheUpdateManyMutationInput = {
  content?: string
  digest?: string
  sourceMap?: string
  target?: string
  themeId?: number
}

export type TagCreateInput = {
  name: string
  pmTopicCount: number
  topicCount: number
}

export type TagUpdateInput = {
  name?: string
  pmTopicCount?: number
  topicCount?: number
}

export type TagUpdateManyMutationInput = {
  name?: string
  pmTopicCount?: number
  topicCount?: number
}

export type TagGroupCreateInput = {
  name: string
  onePerTopic?: boolean
  parentTagId?: number
}

export type TagGroupUpdateInput = {
  name?: string
  onePerTopic?: boolean
  parentTagId?: number
}

export type TagGroupUpdateManyMutationInput = {
  name?: string
  onePerTopic?: boolean
  parentTagId?: number
}

export type TagGroupMembershipCreateInput = {
  tagGroupId: number
  tagId: number
}

export type TagGroupMembershipUpdateInput = {
  tagGroupId?: number
  tagId?: number
}

export type TagGroupMembershipUpdateManyMutationInput = {
  tagGroupId?: number
  tagId?: number
}

export type TagGroupPermissionCreateInput = {
  groupId: number
  permissionType: number
  tagGroupId: number
}

export type TagGroupPermissionUpdateInput = {
  groupId?: number
  permissionType?: number
  tagGroupId?: number
}

export type TagGroupPermissionUpdateManyMutationInput = {
  groupId?: number
  permissionType?: number
  tagGroupId?: number
}

export type TagSearchDatumCreateInput = {
  tag_id: number
  locale?: string
  rawData?: string
  version?: number
}

export type TagSearchDatumUpdateManyMutationInput = {
  tag_id?: number
  locale?: string
  rawData?: string
  version?: number
}

export type TagUserCreateInput = {
  notificationLevel: number
  tagId: number
  userId: number
}

export type TagUserUpdateInput = {
  notificationLevel?: number
  tagId?: number
  userId?: number
}

export type TagUserUpdateManyMutationInput = {
  notificationLevel?: number
  tagId?: number
  userId?: number
}

export type ThemeCreateInput = {
  colorSchemeId?: number
  compilerVersion: number
  component: boolean
  hidden: boolean
  name: string
  remoteThemeId?: number
  userId: number
  userSelectable: boolean
}

export type ThemeUpdateInput = {
  colorSchemeId?: number
  compilerVersion?: number
  component?: boolean
  hidden?: boolean
  name?: string
  remoteThemeId?: number
  userId?: number
  userSelectable?: boolean
}

export type ThemeUpdateManyMutationInput = {
  colorSchemeId?: number
  compilerVersion?: number
  component?: boolean
  hidden?: boolean
  name?: string
  remoteThemeId?: number
  userId?: number
  userSelectable?: boolean
}

export type ThemeFieldCreateInput = {
  compilerVersion: number
  error?: string
  name: string
  targetId: number
  themeId: number
  typeId: number
  uploadId?: number
  value: string
  valueBaked?: string
}

export type ThemeFieldUpdateInput = {
  compilerVersion?: number
  error?: string
  name?: string
  targetId?: number
  themeId?: number
  typeId?: number
  uploadId?: number
  value?: string
  valueBaked?: string
}

export type ThemeFieldUpdateManyMutationInput = {
  compilerVersion?: number
  error?: string
  name?: string
  targetId?: number
  themeId?: number
  typeId?: number
  uploadId?: number
  value?: string
  valueBaked?: string
}

export type ThemeSettingCreateInput = {
  dataType: number
  name: string
  themeId: number
  value?: string
}

export type ThemeSettingUpdateInput = {
  dataType?: number
  name?: string
  themeId?: number
  value?: string
}

export type ThemeSettingUpdateManyMutationInput = {
  dataType?: number
  name?: string
  themeId?: number
  value?: string
}

export type TopTopicCreateInput = {
  allScore?: number
  dailyLikesCount: number
  dailyOpLikesCount: number
  dailyPostsCount: number
  dailyScore?: number
  dailyViewsCount: number
  monthlyLikesCount: number
  monthlyOpLikesCount: number
  monthlyPostsCount: number
  monthlyScore?: number
  monthlyViewsCount: number
  quarterlyLikesCount: number
  quarterlyOpLikesCount: number
  quarterlyPostsCount: number
  quarterlyScore?: number
  quarterlyViewsCount: number
  topicId?: number
  weeklyLikesCount: number
  weeklyOpLikesCount: number
  weeklyPostsCount: number
  weeklyScore?: number
  weeklyViewsCount: number
  yearlyLikesCount: number
  yearlyOpLikesCount: number
  yearlyPostsCount: number
  yearlyScore?: number
  yearlyViewsCount: number
}

export type TopTopicUpdateInput = {
  allScore?: number
  dailyLikesCount?: number
  dailyOpLikesCount?: number
  dailyPostsCount?: number
  dailyScore?: number
  dailyViewsCount?: number
  monthlyLikesCount?: number
  monthlyOpLikesCount?: number
  monthlyPostsCount?: number
  monthlyScore?: number
  monthlyViewsCount?: number
  quarterlyLikesCount?: number
  quarterlyOpLikesCount?: number
  quarterlyPostsCount?: number
  quarterlyScore?: number
  quarterlyViewsCount?: number
  topicId?: number
  weeklyLikesCount?: number
  weeklyOpLikesCount?: number
  weeklyPostsCount?: number
  weeklyScore?: number
  weeklyViewsCount?: number
  yearlyLikesCount?: number
  yearlyOpLikesCount?: number
  yearlyPostsCount?: number
  yearlyScore?: number
  yearlyViewsCount?: number
}

export type TopTopicUpdateManyMutationInput = {
  allScore?: number
  dailyLikesCount?: number
  dailyOpLikesCount?: number
  dailyPostsCount?: number
  dailyScore?: number
  dailyViewsCount?: number
  monthlyLikesCount?: number
  monthlyOpLikesCount?: number
  monthlyPostsCount?: number
  monthlyScore?: number
  monthlyViewsCount?: number
  quarterlyLikesCount?: number
  quarterlyOpLikesCount?: number
  quarterlyPostsCount?: number
  quarterlyScore?: number
  quarterlyViewsCount?: number
  topicId?: number
  weeklyLikesCount?: number
  weeklyOpLikesCount?: number
  weeklyPostsCount?: number
  weeklyScore?: number
  weeklyViewsCount?: number
  yearlyLikesCount?: number
  yearlyOpLikesCount?: number
  yearlyPostsCount?: number
  yearlyScore?: number
  yearlyViewsCount?: number
}

export type TopicCreateInput = {
  archetype: string
  archived: boolean
  avgTime?: number
  bumpedAt: string | Date
  categoryId?: number
  closed: boolean
  deletedAt?: string | Date
  deletedById?: number
  excerpt?: string
  fancyTitle?: string
  featuredLink?: string
  featuredUser1Id?: number
  featuredUser2Id?: number
  featuredUser3Id?: number
  featuredUser4Id?: number
  hasSummary: boolean
  highestPostNumber: number
  highestStaffPostNumber: number
  imageUrl?: string
  incomingLinkCount: number
  lastPostedAt?: string | Date
  lastPostUserId: number
  likeCount: number
  moderatorPostsCount: number
  notifyModeratorsCount: number
  participantCount?: number
  percentRank: number
  pinnedAt?: string | Date
  pinnedGlobally: boolean
  pinnedUntil?: string | Date
  postsCount: number
  replyCount: number
  score?: number
  slug?: string
  spamCount: number
  subtype?: string
  title: string
  userId?: number
  views: number
  visible: boolean
  wordCount?: number
}

export type TopicUpdateInput = {
  archetype?: string
  archived?: boolean
  avgTime?: number
  bumpedAt?: string | Date
  categoryId?: number
  closed?: boolean
  deletedAt?: string | Date
  deletedById?: number
  excerpt?: string
  fancyTitle?: string
  featuredLink?: string
  featuredUser1Id?: number
  featuredUser2Id?: number
  featuredUser3Id?: number
  featuredUser4Id?: number
  hasSummary?: boolean
  highestPostNumber?: number
  highestStaffPostNumber?: number
  imageUrl?: string
  incomingLinkCount?: number
  lastPostedAt?: string | Date
  lastPostUserId?: number
  likeCount?: number
  moderatorPostsCount?: number
  notifyModeratorsCount?: number
  participantCount?: number
  percentRank?: number
  pinnedAt?: string | Date
  pinnedGlobally?: boolean
  pinnedUntil?: string | Date
  postsCount?: number
  replyCount?: number
  score?: number
  slug?: string
  spamCount?: number
  subtype?: string
  title?: string
  userId?: number
  views?: number
  visible?: boolean
  wordCount?: number
}

export type TopicUpdateManyMutationInput = {
  archetype?: string
  archived?: boolean
  avgTime?: number
  bumpedAt?: string | Date
  categoryId?: number
  closed?: boolean
  deletedAt?: string | Date
  deletedById?: number
  excerpt?: string
  fancyTitle?: string
  featuredLink?: string
  featuredUser1Id?: number
  featuredUser2Id?: number
  featuredUser3Id?: number
  featuredUser4Id?: number
  hasSummary?: boolean
  highestPostNumber?: number
  highestStaffPostNumber?: number
  imageUrl?: string
  incomingLinkCount?: number
  lastPostedAt?: string | Date
  lastPostUserId?: number
  likeCount?: number
  moderatorPostsCount?: number
  notifyModeratorsCount?: number
  participantCount?: number
  percentRank?: number
  pinnedAt?: string | Date
  pinnedGlobally?: boolean
  pinnedUntil?: string | Date
  postsCount?: number
  replyCount?: number
  score?: number
  slug?: string
  spamCount?: number
  subtype?: string
  title?: string
  userId?: number
  views?: number
  visible?: boolean
  wordCount?: number
}

export type TopicAllowedGroupCreateInput = {
  groupId: number
  topicId: number
}

export type TopicAllowedGroupUpdateInput = {
  groupId?: number
  topicId?: number
}

export type TopicAllowedGroupUpdateManyMutationInput = {
  groupId?: number
  topicId?: number
}

export type TopicAllowedUserCreateInput = {
  topicId: number
  userId: number
}

export type TopicAllowedUserUpdateInput = {
  topicId?: number
  userId?: number
}

export type TopicAllowedUserUpdateManyMutationInput = {
  topicId?: number
  userId?: number
}

export type TopicCustomFieldCreateInput = {
  name: string
  topicId: number
  value?: string
}

export type TopicCustomFieldUpdateInput = {
  name?: string
  topicId?: number
  value?: string
}

export type TopicCustomFieldUpdateManyMutationInput = {
  name?: string
  topicId?: number
  value?: string
}

export type TopicEmbedCreateInput = {
  contentSha1?: string
  deletedAt?: string | Date
  deletedById?: number
  embedUrl: string
  postId: number
  topicId: number
}

export type TopicEmbedUpdateInput = {
  contentSha1?: string
  deletedAt?: string | Date
  deletedById?: number
  embedUrl?: string
  postId?: number
  topicId?: number
}

export type TopicEmbedUpdateManyMutationInput = {
  contentSha1?: string
  deletedAt?: string | Date
  deletedById?: number
  embedUrl?: string
  postId?: number
  topicId?: number
}

export type TopicInviteCreateInput = {
  inviteId: number
  topicId: number
}

export type TopicInviteUpdateInput = {
  inviteId?: number
  topicId?: number
}

export type TopicInviteUpdateManyMutationInput = {
  inviteId?: number
  topicId?: number
}

export type TopicLinkCreateInput = {
  clicks: number
  crawledAt?: string | Date
  domain: string
  extension?: string
  internal: boolean
  linkPostId?: number
  linkTopicId?: number
  postId?: number
  quote: boolean
  reflection?: boolean
  title?: string
  topicId: number
  url: string
  userId: number
}

export type TopicLinkUpdateInput = {
  clicks?: number
  crawledAt?: string | Date
  domain?: string
  extension?: string
  internal?: boolean
  linkPostId?: number
  linkTopicId?: number
  postId?: number
  quote?: boolean
  reflection?: boolean
  title?: string
  topicId?: number
  url?: string
  userId?: number
}

export type TopicLinkUpdateManyMutationInput = {
  clicks?: number
  crawledAt?: string | Date
  domain?: string
  extension?: string
  internal?: boolean
  linkPostId?: number
  linkTopicId?: number
  postId?: number
  quote?: boolean
  reflection?: boolean
  title?: string
  topicId?: number
  url?: string
  userId?: number
}

export type TopicLinkClickCreateInput = {
  topicLinkId: number
  userId?: number
}

export type TopicLinkClickUpdateInput = {
  topicLinkId?: number
  userId?: number
}

export type TopicLinkClickUpdateManyMutationInput = {
  topicLinkId?: number
  userId?: number
}

export type TopicSearchDatumCreateInput = {
  topic_id: number
  locale: string
  rawData?: string
  version?: number
}

export type TopicSearchDatumUpdateManyMutationInput = {
  topic_id?: number
  locale?: string
  rawData?: string
  version?: number
}

export type TopicTagCreateInput = {
  tagId: number
  topicId: number
}

export type TopicTagUpdateInput = {
  tagId?: number
  topicId?: number
}

export type TopicTagUpdateManyMutationInput = {
  tagId?: number
  topicId?: number
}

export type TopicTimerCreateInput = {
  basedOnLastPost: boolean
  categoryId?: number
  deletedAt?: string | Date
  deletedById?: number
  executeAt: string | Date
  publicType?: boolean
  statusType: number
  topicId: number
  userId: number
}

export type TopicTimerUpdateInput = {
  basedOnLastPost?: boolean
  categoryId?: number
  deletedAt?: string | Date
  deletedById?: number
  executeAt?: string | Date
  publicType?: boolean
  statusType?: number
  topicId?: number
  userId?: number
}

export type TopicTimerUpdateManyMutationInput = {
  basedOnLastPost?: boolean
  categoryId?: number
  deletedAt?: string | Date
  deletedById?: number
  executeAt?: string | Date
  publicType?: boolean
  statusType?: number
  topicId?: number
  userId?: number
}

export type TopicUserCreateInput = {
  bookmarked?: boolean
  clearedPinnedAt?: string | Date
  firstVisitedAt?: string | Date
  highestSeenPostNumber?: number
  lastEmailedPostNumber?: number
  lastReadPostNumber?: number
  lastVisitedAt?: string | Date
  liked?: boolean
  notificationLevel: number
  notificationsChangedAt?: string | Date
  notificationsReasonId?: number
  posted: boolean
  topicId: number
  totalMsecsViewed: number
  userId: number
}

export type TopicUserUpdateInput = {
  bookmarked?: boolean
  clearedPinnedAt?: string | Date
  firstVisitedAt?: string | Date
  highestSeenPostNumber?: number
  lastEmailedPostNumber?: number
  lastReadPostNumber?: number
  lastVisitedAt?: string | Date
  liked?: boolean
  notificationLevel?: number
  notificationsChangedAt?: string | Date
  notificationsReasonId?: number
  posted?: boolean
  topicId?: number
  totalMsecsViewed?: number
  userId?: number
}

export type TopicUserUpdateManyMutationInput = {
  bookmarked?: boolean
  clearedPinnedAt?: string | Date
  firstVisitedAt?: string | Date
  highestSeenPostNumber?: number
  lastEmailedPostNumber?: number
  lastReadPostNumber?: number
  lastVisitedAt?: string | Date
  liked?: boolean
  notificationLevel?: number
  notificationsChangedAt?: string | Date
  notificationsReasonId?: number
  posted?: boolean
  topicId?: number
  totalMsecsViewed?: number
  userId?: number
}

export type TranslationOverrideCreateInput = {
  compiledJs?: string
  locale: string
  translationKey: string
  value: string
}

export type TranslationOverrideUpdateInput = {
  compiledJs?: string
  locale?: string
  translationKey?: string
  value?: string
}

export type TranslationOverrideUpdateManyMutationInput = {
  compiledJs?: string
  locale?: string
  translationKey?: string
  value?: string
}

export type TwitterUserInfoCreateInput = {
  email?: string
  screenName: string
  twitterUserId: number
  userId: number
}

export type TwitterUserInfoUpdateInput = {
  email?: string
  screenName?: string
  twitterUserId?: number
  userId?: number
}

export type TwitterUserInfoUpdateManyMutationInput = {
  email?: string
  screenName?: string
  twitterUserId?: number
  userId?: number
}

export type UnsubscribeKeyCreateInput = {
  key: string
  postId?: number
  topicId?: number
  unsubscribeKeyType?: string
  userId: number
}

export type UnsubscribeKeyUpdateManyMutationInput = {
  key?: string
  postId?: number
  topicId?: number
  unsubscribeKeyType?: string
  userId?: number
}

export type UploadCreateInput = {
  extension?: string
  filesize: number
  height?: number
  origin?: string
  originalFilename: string
  retainHours?: number
  sha1?: string
  thumbnailHeight?: number
  thumbnailWidth?: number
  url: string
  userId: number
  width?: number
}

export type UploadUpdateInput = {
  extension?: string
  filesize?: number
  height?: number
  origin?: string
  originalFilename?: string
  retainHours?: number
  sha1?: string
  thumbnailHeight?: number
  thumbnailWidth?: number
  url?: string
  userId?: number
  width?: number
}

export type UploadUpdateManyMutationInput = {
  extension?: string
  filesize?: number
  height?: number
  origin?: string
  originalFilename?: string
  retainHours?: number
  sha1?: string
  thumbnailHeight?: number
  thumbnailWidth?: number
  url?: string
  userId?: number
  width?: number
}

export type UserCreateInput = {
  active: boolean
  admin: boolean
  approved: boolean
  approvedAt?: string | Date
  approvedById?: number
  dateOfBirth?: string | Date
  firstSeenAt?: string | Date
  flagLevel: number
  groupLockedTrustLevel?: number
  lastEmailedAt?: string | Date
  lastPostedAt?: string | Date
  lastSeenAt?: string | Date
  locale?: string
  manualLockedTrustLevel?: number
  moderator?: boolean
  name?: string
  passwordHash?: string
  previousVisitAt?: string | Date
  primaryGroupId?: number
  salt?: string
  seenNotificationId: number
  silencedTill?: string | Date
  staged: boolean
  suspendedAt?: string | Date
  suspendedTill?: string | Date
  title?: string
  trustLevel: number
  uploadedAvatarId?: number
  username: string
  usernameLower: string
  views: number
}

export type UserUpdateInput = {
  active?: boolean
  admin?: boolean
  approved?: boolean
  approvedAt?: string | Date
  approvedById?: number
  dateOfBirth?: string | Date
  firstSeenAt?: string | Date
  flagLevel?: number
  groupLockedTrustLevel?: number
  lastEmailedAt?: string | Date
  lastPostedAt?: string | Date
  lastSeenAt?: string | Date
  locale?: string
  manualLockedTrustLevel?: number
  moderator?: boolean
  name?: string
  passwordHash?: string
  previousVisitAt?: string | Date
  primaryGroupId?: number
  salt?: string
  seenNotificationId?: number
  silencedTill?: string | Date
  staged?: boolean
  suspendedAt?: string | Date
  suspendedTill?: string | Date
  title?: string
  trustLevel?: number
  uploadedAvatarId?: number
  username?: string
  usernameLower?: string
  views?: number
}

export type UserUpdateManyMutationInput = {
  active?: boolean
  admin?: boolean
  approved?: boolean
  approvedAt?: string | Date
  approvedById?: number
  dateOfBirth?: string | Date
  firstSeenAt?: string | Date
  flagLevel?: number
  groupLockedTrustLevel?: number
  lastEmailedAt?: string | Date
  lastPostedAt?: string | Date
  lastSeenAt?: string | Date
  locale?: string
  manualLockedTrustLevel?: number
  moderator?: boolean
  name?: string
  passwordHash?: string
  previousVisitAt?: string | Date
  primaryGroupId?: number
  salt?: string
  seenNotificationId?: number
  silencedTill?: string | Date
  staged?: boolean
  suspendedAt?: string | Date
  suspendedTill?: string | Date
  title?: string
  trustLevel?: number
  uploadedAvatarId?: number
  username?: string
  usernameLower?: string
  views?: number
}

export type UserActionCreateInput = {
  actingUserId?: number
  actionType: number
  queuedPostId?: number
  targetPostId?: number
  targetTopicId?: number
  targetUserId?: number
  userId: number
}

export type UserActionUpdateInput = {
  actingUserId?: number
  actionType?: number
  queuedPostId?: number
  targetPostId?: number
  targetTopicId?: number
  targetUserId?: number
  userId?: number
}

export type UserActionUpdateManyMutationInput = {
  actingUserId?: number
  actionType?: number
  queuedPostId?: number
  targetPostId?: number
  targetTopicId?: number
  targetUserId?: number
  userId?: number
}

export type UserApiKeyCreateInput = {
  applicationName: string
  clientId: string
  key: string
  lastUsedAt: string | Date
  pushUrl?: string
  revokedAt?: string | Date
  scopes: string
  userId: number
}

export type UserApiKeyUpdateInput = {
  applicationName?: string
  clientId?: string
  key?: string
  lastUsedAt?: string | Date
  pushUrl?: string
  revokedAt?: string | Date
  scopes?: string
  userId?: number
}

export type UserApiKeyUpdateManyMutationInput = {
  applicationName?: string
  clientId?: string
  key?: string
  lastUsedAt?: string | Date
  pushUrl?: string
  revokedAt?: string | Date
  scopes?: string
  userId?: number
}

export type UserArchivedMessageCreateInput = {
  topicId: number
  userId: number
}

export type UserArchivedMessageUpdateInput = {
  topicId?: number
  userId?: number
}

export type UserArchivedMessageUpdateManyMutationInput = {
  topicId?: number
  userId?: number
}

export type UserAuthTokenCreateInput = {
  authToken: string
  authTokenSeen: boolean
  prevAuthToken: string
  rotatedAt: string | Date
  seenAt?: string | Date
  userAgent?: string
  userId: number
}

export type UserAuthTokenUpdateInput = {
  authToken?: string
  authTokenSeen?: boolean
  prevAuthToken?: string
  rotatedAt?: string | Date
  seenAt?: string | Date
  userAgent?: string
  userId?: number
}

export type UserAuthTokenUpdateManyMutationInput = {
  authToken?: string
  authTokenSeen?: boolean
  prevAuthToken?: string
  rotatedAt?: string | Date
  seenAt?: string | Date
  userAgent?: string
  userId?: number
}

export type UserAuthTokenLogCreateInput = {
  action: string
  authToken?: string
  path?: string
  userAgent?: string
  userAuthTokenId?: number
  userId?: number
}

export type UserAuthTokenLogUpdateInput = {
  action?: string
  authToken?: string
  path?: string
  userAgent?: string
  userAuthTokenId?: number
  userId?: number
}

export type UserAuthTokenLogUpdateManyMutationInput = {
  action?: string
  authToken?: string
  path?: string
  userAgent?: string
  userAuthTokenId?: number
  userId?: number
}

export type UserAvatarCreateInput = {
  customUploadId?: number
  gravatarUploadId?: number
  lastGravatarDownloadAttempt?: string | Date
  userId: number
}

export type UserAvatarUpdateInput = {
  customUploadId?: number
  gravatarUploadId?: number
  lastGravatarDownloadAttempt?: string | Date
  userId?: number
}

export type UserAvatarUpdateManyMutationInput = {
  customUploadId?: number
  gravatarUploadId?: number
  lastGravatarDownloadAttempt?: string | Date
  userId?: number
}

export type UserBadgeCreateInput = {
  badgeId: number
  grantedAt: string | Date
  grantedById: number
  notificationId?: number
  postId?: number
  seq: number
  userId: number
}

export type UserBadgeUpdateInput = {
  badgeId?: number
  grantedAt?: string | Date
  grantedById?: number
  notificationId?: number
  postId?: number
  seq?: number
  userId?: number
}

export type UserBadgeUpdateManyMutationInput = {
  badgeId?: number
  grantedAt?: string | Date
  grantedById?: number
  notificationId?: number
  postId?: number
  seq?: number
  userId?: number
}

export type UserCustomFieldCreateInput = {
  name: string
  userId: number
  value?: string
}

export type UserCustomFieldUpdateInput = {
  name?: string
  userId?: number
  value?: string
}

export type UserCustomFieldUpdateManyMutationInput = {
  name?: string
  userId?: number
  value?: string
}

export type UserEmailCreateInput = {
  email: string
  primary: boolean
  userId: number
}

export type UserEmailUpdateInput = {
  email?: string
  primary?: boolean
  userId?: number
}

export type UserEmailUpdateManyMutationInput = {
  email?: string
  primary?: boolean
  userId?: number
}

export type UserExportCreateInput = {
  fileName: string
  uploadId?: number
  userId: number
}

export type UserExportUpdateInput = {
  fileName?: string
  uploadId?: number
  userId?: number
}

export type UserExportUpdateManyMutationInput = {
  fileName?: string
  uploadId?: number
  userId?: number
}

export type UserFieldCreateInput = {
  description: string
  editable: boolean
  externalName?: string
  externalType?: string
  fieldType: string
  name: string
  position?: number
  required: boolean
  showOnProfile: boolean
  showOnUserCard: boolean
}

export type UserFieldUpdateInput = {
  description?: string
  editable?: boolean
  externalName?: string
  externalType?: string
  fieldType?: string
  name?: string
  position?: number
  required?: boolean
  showOnProfile?: boolean
  showOnUserCard?: boolean
}

export type UserFieldUpdateManyMutationInput = {
  description?: string
  editable?: boolean
  externalName?: string
  externalType?: string
  fieldType?: string
  name?: string
  position?: number
  required?: boolean
  showOnProfile?: boolean
  showOnUserCard?: boolean
}

export type UserFieldOptionCreateInput = {
  userFieldId: number
  value: string
}

export type UserFieldOptionUpdateInput = {
  userFieldId?: number
  value?: string
}

export type UserFieldOptionUpdateManyMutationInput = {
  userFieldId?: number
  value?: string
}

export type UserHistoryCreateInput = {
  actingUserId?: number
  action: number
  adminOnly?: boolean
  categoryId?: number
  context?: string
  customType?: string
  details?: string
  email?: string
  ipAddress?: string
  newValue?: string
  postId?: number
  previousValue?: string
  subject?: string
  targetUserId?: number
  topicId?: number
}

export type UserHistoryUpdateInput = {
  actingUserId?: number
  action?: number
  adminOnly?: boolean
  categoryId?: number
  context?: string
  customType?: string
  details?: string
  email?: string
  ipAddress?: string
  newValue?: string
  postId?: number
  previousValue?: string
  subject?: string
  targetUserId?: number
  topicId?: number
}

export type UserHistoryUpdateManyMutationInput = {
  actingUserId?: number
  action?: number
  adminOnly?: boolean
  categoryId?: number
  context?: string
  customType?: string
  details?: string
  email?: string
  ipAddress?: string
  newValue?: string
  postId?: number
  previousValue?: string
  subject?: string
  targetUserId?: number
  topicId?: number
}

export type UserOpenIdCreateInput = {
  active: boolean
  email: string
  url: string
  userId: number
}

export type UserOpenIdUpdateInput = {
  active?: boolean
  email?: string
  url?: string
  userId?: number
}

export type UserOpenIdUpdateManyMutationInput = {
  active?: boolean
  email?: string
  url?: string
  userId?: number
}

export type UserOptionCreateInput = {
  user_id: number
  allowPrivateMessages: boolean
  automaticallyUnpinTopics: boolean
  autoTrackTopicsAfterMsecs?: number
  digestAfterMinutes?: number
  disableJumpReply: boolean
  dynamicFavicon: boolean
  emailAlways: boolean
  emailDigests?: boolean
  emailDirect: boolean
  emailInReplyTo: boolean
  emailPreviousReplies: number
  emailPrivateMessages: boolean
  enableQuoting: boolean
  externalLinksInNewTab: boolean
  hideProfileAndPresence: boolean
  homepageId?: number
  includeTl0InDigests?: boolean
  lastRedirectedToTopAt?: string | Date
  likeNotificationFrequency: number
  mailingListMode: boolean
  mailingListModeFrequency: number
  newTopicDurationMinutes?: number
  notificationLevelWhenReplying?: number
  themeIds: number
  themeKeySeq: number
}

export type UserOptionUpdateInput = {
  user_id?: number
  allowPrivateMessages?: boolean
  automaticallyUnpinTopics?: boolean
  autoTrackTopicsAfterMsecs?: number
  digestAfterMinutes?: number
  disableJumpReply?: boolean
  dynamicFavicon?: boolean
  emailAlways?: boolean
  emailDigests?: boolean
  emailDirect?: boolean
  emailInReplyTo?: boolean
  emailPreviousReplies?: number
  emailPrivateMessages?: boolean
  enableQuoting?: boolean
  externalLinksInNewTab?: boolean
  hideProfileAndPresence?: boolean
  homepageId?: number
  includeTl0InDigests?: boolean
  lastRedirectedToTopAt?: string | Date
  likeNotificationFrequency?: number
  mailingListMode?: boolean
  mailingListModeFrequency?: number
  newTopicDurationMinutes?: number
  notificationLevelWhenReplying?: number
  themeIds?: number
  themeKeySeq?: number
}

export type UserOptionUpdateManyMutationInput = {
  user_id?: number
  allowPrivateMessages?: boolean
  automaticallyUnpinTopics?: boolean
  autoTrackTopicsAfterMsecs?: number
  digestAfterMinutes?: number
  disableJumpReply?: boolean
  dynamicFavicon?: boolean
  emailAlways?: boolean
  emailDigests?: boolean
  emailDirect?: boolean
  emailInReplyTo?: boolean
  emailPreviousReplies?: number
  emailPrivateMessages?: boolean
  enableQuoting?: boolean
  externalLinksInNewTab?: boolean
  hideProfileAndPresence?: boolean
  homepageId?: number
  includeTl0InDigests?: boolean
  lastRedirectedToTopAt?: string | Date
  likeNotificationFrequency?: number
  mailingListMode?: boolean
  mailingListModeFrequency?: number
  newTopicDurationMinutes?: number
  notificationLevelWhenReplying?: number
  themeIds?: number
  themeKeySeq?: number
}

export type UserProfileCreateInput = {
  user_id: number
  badgeGrantedTitle?: boolean
  bioCooked?: string
  bioCookedVersion?: number
  bioRaw?: string
  cardBackground?: string
  dismissedBannerKey?: number
  location?: string
  profileBackground?: string
  views: number
  website?: string
}

export type UserProfileUpdateManyMutationInput = {
  user_id?: number
  badgeGrantedTitle?: boolean
  bioCooked?: string
  bioCookedVersion?: number
  bioRaw?: string
  cardBackground?: string
  dismissedBannerKey?: number
  location?: string
  profileBackground?: string
  views?: number
  website?: string
}

export type UserProfileViewCreateInput = {
  userId?: number
  userProfileId: number
  viewedAt: string | Date
}

export type UserProfileViewUpdateInput = {
  userId?: number
  userProfileId?: number
  viewedAt?: string | Date
}

export type UserProfileViewUpdateManyMutationInput = {
  userId?: number
  userProfileId?: number
  viewedAt?: string | Date
}

export type UserSearchDatumCreateInput = {
  user_id: number
  locale?: string
  rawData?: string
  version?: number
}

export type UserSearchDatumUpdateManyMutationInput = {
  user_id?: number
  locale?: string
  rawData?: string
  version?: number
}

export type UserSecondFactorCreateInput = {
  data: string
  enabled: boolean
  lastUsed?: string | Date
  method: number
  userId: number
}

export type UserSecondFactorUpdateInput = {
  data?: string
  enabled?: boolean
  lastUsed?: string | Date
  method?: number
  userId?: number
}

export type UserSecondFactorUpdateManyMutationInput = {
  data?: string
  enabled?: boolean
  lastUsed?: string | Date
  method?: number
  userId?: number
}

export type UserStatCreateInput = {
  user_id: number
  bounceScore: number
  daysVisited: number
  firstPostCreatedAt?: string | Date
  likesGiven: number
  likesReceived: number
  newSince: string | Date
  postCount: number
  postsReadCount: number
  readFaq?: string | Date
  resetBounceScoreAfter?: string | Date
  timeRead: number
  topicCount: number
  topicReplyCount: number
  topicsEntered: number
}

export type UserStatUpdateManyMutationInput = {
  user_id?: number
  bounceScore?: number
  daysVisited?: number
  firstPostCreatedAt?: string | Date
  likesGiven?: number
  likesReceived?: number
  newSince?: string | Date
  postCount?: number
  postsReadCount?: number
  readFaq?: string | Date
  resetBounceScoreAfter?: string | Date
  timeRead?: number
  topicCount?: number
  topicReplyCount?: number
  topicsEntered?: number
}

export type UserUploadCreateInput = {
  uploadId: number
  userId: number
}

export type UserUploadUpdateInput = {
  uploadId?: number
  userId?: number
}

export type UserUploadUpdateManyMutationInput = {
  uploadId?: number
  userId?: number
}

export type UserVisitCreateInput = {
  mobile?: boolean
  postsRead?: number
  timeRead: number
  userId: number
  visitedAt: string | Date
}

export type UserVisitUpdateInput = {
  mobile?: boolean
  postsRead?: number
  timeRead?: number
  userId?: number
  visitedAt?: string | Date
}

export type UserVisitUpdateManyMutationInput = {
  mobile?: boolean
  postsRead?: number
  timeRead?: number
  userId?: number
  visitedAt?: string | Date
}

export type UserWarningCreateInput = {
  createdById: number
  topicId: number
  userId: number
}

export type UserWarningUpdateInput = {
  createdById?: number
  topicId?: number
  userId?: number
}

export type UserWarningUpdateManyMutationInput = {
  createdById?: number
  topicId?: number
  userId?: number
}

export type WatchedWordCreateInput = {
  action: number
  word: string
}

export type WatchedWordUpdateInput = {
  action?: number
  word?: string
}

export type WatchedWordUpdateManyMutationInput = {
  action?: number
  word?: string
}

export type WebCrawlerRequestCreateInput = {
  count: number
  date: string | Date
  userAgent: string
}

export type WebCrawlerRequestUpdateInput = {
  count?: number
  date?: string | Date
  userAgent?: string
}

export type WebCrawlerRequestUpdateManyMutationInput = {
  count?: number
  date?: string | Date
  userAgent?: string
}

export type WebHookCreateInput = {
  active: boolean
  contentType: number
  lastDeliveryStatus: number
  payloadUrl: string
  secret?: string
  status: number
  verifyCertificate: boolean
  wildcardWebHook: boolean
}

export type WebHookUpdateInput = {
  active?: boolean
  contentType?: number
  lastDeliveryStatus?: number
  payloadUrl?: string
  secret?: string
  status?: number
  verifyCertificate?: boolean
  wildcardWebHook?: boolean
}

export type WebHookUpdateManyMutationInput = {
  active?: boolean
  contentType?: number
  lastDeliveryStatus?: number
  payloadUrl?: string
  secret?: string
  status?: number
  verifyCertificate?: boolean
  wildcardWebHook?: boolean
}

export type WebHookEventCreateInput = {
  duration?: number
  headers?: string
  payload?: string
  responseBody?: string
  responseHeaders?: string
  status?: number
  webHookId: number
}

export type WebHookEventUpdateInput = {
  duration?: number
  headers?: string
  payload?: string
  responseBody?: string
  responseHeaders?: string
  status?: number
  webHookId?: number
}

export type WebHookEventUpdateManyMutationInput = {
  duration?: number
  headers?: string
  payload?: string
  responseBody?: string
  responseHeaders?: string
  status?: number
  webHookId?: number
}

export type WebHookEventTypeCreateInput = {
  name: string
}

export type WebHookEventTypeUpdateInput = {
  name?: string
}

export type WebHookEventTypeUpdateManyMutationInput = {
  name?: string
}

export type IntFilter = {
  equals?: number
  not?: number | IntFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type DateTimeFilter = {
  equals?: string | Date
  not?: string | Date | DateTimeFilter
  in?: Enumerable<string | Date>
  notIn?: Enumerable<string | Date>
  lt?: string | Date
  lte?: string | Date
  gt?: string | Date
  gte?: string | Date
}

export type NullableIntFilter = {
  equals?: number | null
  not?: number | null | NullableIntFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type BooleanFilter = {
  equals?: boolean
  not?: boolean | BooleanFilter
}

export type StringFilter = {
  equals?: string
  not?: string | StringFilter
  in?: Enumerable<string>
  notIn?: Enumerable<string>
  lt?: string
  lte?: string
  gt?: string
  gte?: string
  contains?: string
  startsWith?: string
  endsWith?: string
}

export type NullableStringFilter = {
  equals?: string | null
  not?: string | null | NullableStringFilter
  in?: Enumerable<string>
  notIn?: Enumerable<string>
  lt?: string
  lte?: string
  gt?: string
  gte?: string
  contains?: string
  startsWith?: string
  endsWith?: string
}

export type NullableBooleanFilter = {
  equals?: boolean | null
  not?: boolean | null | NullableBooleanFilter
}

export type NullableFloatFilter = {
  equals?: number | null
  not?: number | null | NullableFloatFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type NullableDateTimeFilter = {
  equals?: string | Date | null
  not?: string | Date | null | NullableDateTimeFilter
  in?: Enumerable<string | Date>
  notIn?: Enumerable<string | Date>
  lt?: string | Date
  lte?: string | Date
  gt?: string | Date
  gte?: string | Date
}

export type FloatFilter = {
  equals?: number
  not?: number | FloatFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type ApiKeyOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  createdById?: OrderByArg
  hidden?: OrderByArg
  key?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type ApplicationRequestOrderByInput = {
  id?: OrderByArg
  count?: OrderByArg
  date?: OrderByArg
  reqType?: OrderByArg
}

export type ArInternalMetadatumOrderByInput = {
  key?: OrderByArg
  createdAt?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type BadgeOrderByInput = {
  id?: OrderByArg
  allowTitle?: OrderByArg
  autoRevoke?: OrderByArg
  badgeGroupingId?: OrderByArg
  badgeTypeId?: OrderByArg
  createdAt?: OrderByArg
  description?: OrderByArg
  enabled?: OrderByArg
  grantCount?: OrderByArg
  icon?: OrderByArg
  image?: OrderByArg
  listable?: OrderByArg
  longDescription?: OrderByArg
  multipleGrant?: OrderByArg
  name?: OrderByArg
  query?: OrderByArg
  showPosts?: OrderByArg
  system?: OrderByArg
  targetPosts?: OrderByArg
  trigger?: OrderByArg
  updatedAt?: OrderByArg
}

export type BadgeGroupingOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  description?: OrderByArg
  name?: OrderByArg
  position?: OrderByArg
  updatedAt?: OrderByArg
}

export type BadgeTypeOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
}

export type CategoryOrderByInput = {
  id?: OrderByArg
  allowBadges?: OrderByArg
  allTopicsWiki?: OrderByArg
  autoCloseBasedOnLastPost?: OrderByArg
  autoCloseHours?: OrderByArg
  color?: OrderByArg
  containsMessages?: OrderByArg
  createdAt?: OrderByArg
  defaultTopPeriod?: OrderByArg
  defaultView?: OrderByArg
  description?: OrderByArg
  emailIn?: OrderByArg
  emailInAllowStrangers?: OrderByArg
  latestPostId?: OrderByArg
  latestTopicId?: OrderByArg
  mailinglistMirror?: OrderByArg
  minimumRequiredTags?: OrderByArg
  name?: OrderByArg
  nameLower?: OrderByArg
  navigateToFirstPostAfterRead?: OrderByArg
  numFeaturedTopics?: OrderByArg
  parentCategoryId?: OrderByArg
  position?: OrderByArg
  postCount?: OrderByArg
  postsDay?: OrderByArg
  postsMonth?: OrderByArg
  postsWeek?: OrderByArg
  postsYear?: OrderByArg
  readRestricted?: OrderByArg
  showSubcategoryList?: OrderByArg
  slug?: OrderByArg
  sortAscending?: OrderByArg
  sortOrder?: OrderByArg
  subcategoryListStyle?: OrderByArg
  suppressFromLatest?: OrderByArg
  textColor?: OrderByArg
  topicCount?: OrderByArg
  topicFeaturedLinkAllowed?: OrderByArg
  topicId?: OrderByArg
  topicsDay?: OrderByArg
  topicsMonth?: OrderByArg
  topicsWeek?: OrderByArg
  topicsYear?: OrderByArg
  topicTemplate?: OrderByArg
  updatedAt?: OrderByArg
  uploadedBackgroundId?: OrderByArg
  uploadedLogoId?: OrderByArg
  userId?: OrderByArg
}

export type CategoryCustomFieldOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type CategoryFeaturedTopicOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  rank?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type CategoryGroupOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  permissionType?: OrderByArg
  updatedAt?: OrderByArg
}

export type CategorySearchDatumOrderByInput = {
  category_id?: OrderByArg
  locale?: OrderByArg
  rawData?: OrderByArg
  version?: OrderByArg
}

export type CategoryTagOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  tagId?: OrderByArg
  updatedAt?: OrderByArg
}

export type CategoryTagGroupOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  tagGroupId?: OrderByArg
  updatedAt?: OrderByArg
}

export type CategoryTagStatOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  tagId?: OrderByArg
  topicCount?: OrderByArg
}

export type CategoryUserOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  notificationLevel?: OrderByArg
  userId?: OrderByArg
}

export type ChildThemeOrderByInput = {
  id?: OrderByArg
  childThemeId?: OrderByArg
  createdAt?: OrderByArg
  parentThemeId?: OrderByArg
  updatedAt?: OrderByArg
}

export type ColorSchemeOrderByInput = {
  id?: OrderByArg
  baseSchemeId?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  themeId?: OrderByArg
  updatedAt?: OrderByArg
  version?: OrderByArg
  viaWizard?: OrderByArg
}

export type ColorSchemeColorOrderByInput = {
  id?: OrderByArg
  colorSchemeId?: OrderByArg
  createdAt?: OrderByArg
  hex?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
}

export type CustomEmojiOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  uploadId?: OrderByArg
}

export type DeveloperOrderByInput = {
  id?: OrderByArg
  userId?: OrderByArg
}

export type DirectoryItemOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  daysVisited?: OrderByArg
  likesGiven?: OrderByArg
  likesReceived?: OrderByArg
  periodType?: OrderByArg
  postCount?: OrderByArg
  postsRead?: OrderByArg
  topicCount?: OrderByArg
  topicsEntered?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type DraftOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  data?: OrderByArg
  draftKey?: OrderByArg
  revisions?: OrderByArg
  sequence?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type DraftSequenceOrderByInput = {
  id?: OrderByArg
  draftKey?: OrderByArg
  sequence?: OrderByArg
  userId?: OrderByArg
}

export type EmailChangeRequestOrderByInput = {
  id?: OrderByArg
  changeState?: OrderByArg
  createdAt?: OrderByArg
  newEmail?: OrderByArg
  newEmailTokenId?: OrderByArg
  oldEmail?: OrderByArg
  oldEmailTokenId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type EmailLogOrderByInput = {
  id?: OrderByArg
  bounced?: OrderByArg
  bounceKey?: OrderByArg
  createdAt?: OrderByArg
  emailType?: OrderByArg
  messageId?: OrderByArg
  postId?: OrderByArg
  toAddress?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type EmailTokenOrderByInput = {
  id?: OrderByArg
  confirmed?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  expired?: OrderByArg
  token?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type EmbeddableHostOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  className?: OrderByArg
  createdAt?: OrderByArg
  host?: OrderByArg
  pathWhitelist?: OrderByArg
  updatedAt?: OrderByArg
}

export type FacebookUserInfoOrderByInput = {
  id?: OrderByArg
  aboutMe?: OrderByArg
  avatarUrl?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  facebookUserId?: OrderByArg
  firstName?: OrderByArg
  gender?: OrderByArg
  lastName?: OrderByArg
  link?: OrderByArg
  location?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
  username?: OrderByArg
  website?: OrderByArg
}

export type GithubUserInfoOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  githubUserId?: OrderByArg
  screenName?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type GoogleUserInfoOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  firstName?: OrderByArg
  gender?: OrderByArg
  googleUserId?: OrderByArg
  lastName?: OrderByArg
  link?: OrderByArg
  name?: OrderByArg
  picture?: OrderByArg
  profileLink?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type GroupOrderByInput = {
  id?: OrderByArg
  allowMembershipRequests?: OrderByArg
  automatic?: OrderByArg
  automaticMembershipEmailDomains?: OrderByArg
  automaticMembershipRetroactive?: OrderByArg
  bioCooked?: OrderByArg
  bioRaw?: OrderByArg
  createdAt?: OrderByArg
  defaultNotificationLevel?: OrderByArg
  flairBgColor?: OrderByArg
  flairColor?: OrderByArg
  flairUrl?: OrderByArg
  fullName?: OrderByArg
  grantTrustLevel?: OrderByArg
  hasMessages?: OrderByArg
  incomingEmail?: OrderByArg
  membershipRequestTemplate?: OrderByArg
  mentionableLevel?: OrderByArg
  messageableLevel?: OrderByArg
  name?: OrderByArg
  primaryGroup?: OrderByArg
  publicAdmission?: OrderByArg
  publicExit?: OrderByArg
  title?: OrderByArg
  updatedAt?: OrderByArg
  userCount?: OrderByArg
  visibilityLevel?: OrderByArg
}

export type GroupArchivedMessageOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type GroupCustomFieldOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type GroupHistoryOrderByInput = {
  id?: OrderByArg
  actingUserId?: OrderByArg
  action?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  newValue?: OrderByArg
  prevValue?: OrderByArg
  subject?: OrderByArg
  targetUserId?: OrderByArg
  updatedAt?: OrderByArg
}

export type GroupMentionOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  postId?: OrderByArg
  updatedAt?: OrderByArg
}

export type GroupUserOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  notificationLevel?: OrderByArg
  owner?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type IncomingDomainOrderByInput = {
  id?: OrderByArg
  https?: OrderByArg
  name?: OrderByArg
  port?: OrderByArg
}

export type IncomingEmailOrderByInput = {
  id?: OrderByArg
  ccAddresses?: OrderByArg
  createdAt?: OrderByArg
  error?: OrderByArg
  fromAddress?: OrderByArg
  isAutoGenerated?: OrderByArg
  isBounce?: OrderByArg
  messageId?: OrderByArg
  postId?: OrderByArg
  raw?: OrderByArg
  rejectionMessage?: OrderByArg
  subject?: OrderByArg
  toAddresses?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type IncomingLinkOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  currentUserId?: OrderByArg
  incomingRefererId?: OrderByArg
  postId?: OrderByArg
  userId?: OrderByArg
}

export type IncomingRefererOrderByInput = {
  id?: OrderByArg
  incomingDomainId?: OrderByArg
  path?: OrderByArg
}

export type InstagramUserInfoOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  instagramUserId?: OrderByArg
  screenName?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type InviteOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  customMessage?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  email?: OrderByArg
  invalidatedAt?: OrderByArg
  invitedById?: OrderByArg
  inviteKey?: OrderByArg
  moderator?: OrderByArg
  redeemedAt?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type InvitedGroupOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  inviteId?: OrderByArg
  updatedAt?: OrderByArg
}

export type JavascriptCachOrderByInput = {
  id?: OrderByArg
  content?: OrderByArg
  createdAt?: OrderByArg
  digest?: OrderByArg
  themeFieldId?: OrderByArg
  updatedAt?: OrderByArg
}

export type MessageBusOrderByInput = {
  id?: OrderByArg
  context?: OrderByArg
  createdAt?: OrderByArg
  data?: OrderByArg
  name?: OrderByArg
}

export type MutedUserOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  mutedUserId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type NotificationOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  data?: OrderByArg
  notificationType?: OrderByArg
  postActionId?: OrderByArg
  postNumber?: OrderByArg
  read?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type Oauth2UserInfoOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  name?: OrderByArg
  provider?: OrderByArg
  uid?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type OnceoffLogOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  jobName?: OrderByArg
  updatedAt?: OrderByArg
}

export type OptimizedImageOrderByInput = {
  id?: OrderByArg
  extension?: OrderByArg
  filesize?: OrderByArg
  height?: OrderByArg
  sha1?: OrderByArg
  uploadId?: OrderByArg
  url?: OrderByArg
  width?: OrderByArg
}

export type PermalinkOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  externalUrl?: OrderByArg
  postId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  url?: OrderByArg
}

export type PluginStoreRowOrderByInput = {
  id?: OrderByArg
  key?: OrderByArg
  pluginName?: OrderByArg
  typeName?: OrderByArg
  value?: OrderByArg
}

export type PostOrderByInput = {
  id?: OrderByArg
  actionCode?: OrderByArg
  avgTime?: OrderByArg
  bakedAt?: OrderByArg
  bakedVersion?: OrderByArg
  bookmarkCount?: OrderByArg
  cooked?: OrderByArg
  cookMethod?: OrderByArg
  createdAt?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  editReason?: OrderByArg
  hidden?: OrderByArg
  hiddenAt?: OrderByArg
  hiddenReasonId?: OrderByArg
  illegalCount?: OrderByArg
  imageUrl?: OrderByArg
  inappropriateCount?: OrderByArg
  incomingLinkCount?: OrderByArg
  lastEditorId?: OrderByArg
  lastVersionAt?: OrderByArg
  likeCount?: OrderByArg
  likeScore?: OrderByArg
  lockedById?: OrderByArg
  notifyModeratorsCount?: OrderByArg
  notifyUserCount?: OrderByArg
  offTopicCount?: OrderByArg
  percentRank?: OrderByArg
  postNumber?: OrderByArg
  postType?: OrderByArg
  publicVersion?: OrderByArg
  quoteCount?: OrderByArg
  raw?: OrderByArg
  rawEmail?: OrderByArg
  reads?: OrderByArg
  replyCount?: OrderByArg
  replyQuoted?: OrderByArg
  replyToPostNumber?: OrderByArg
  replyToUserId?: OrderByArg
  score?: OrderByArg
  selfEdits?: OrderByArg
  sortOrder?: OrderByArg
  spamCount?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userDeleted?: OrderByArg
  userId?: OrderByArg
  version?: OrderByArg
  viaEmail?: OrderByArg
  wiki?: OrderByArg
  wordCount?: OrderByArg
}

export type PostActionOrderByInput = {
  id?: OrderByArg
  agreedAt?: OrderByArg
  agreedById?: OrderByArg
  createdAt?: OrderByArg
  deferredAt?: OrderByArg
  deferredById?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  disagreedAt?: OrderByArg
  disagreedById?: OrderByArg
  postActionTypeId?: OrderByArg
  postId?: OrderByArg
  relatedPostId?: OrderByArg
  staffTookAction?: OrderByArg
  targetsTopic?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type PostActionTypeOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  icon?: OrderByArg
  isFlag?: OrderByArg
  nameKey?: OrderByArg
  position?: OrderByArg
  updatedAt?: OrderByArg
}

export type PostCustomFieldOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  postId?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type PostDetailOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  extra?: OrderByArg
  key?: OrderByArg
  postId?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type PostReplyKeyOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  postId?: OrderByArg
  replyKey?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type PostRevisionOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  hidden?: OrderByArg
  modifications?: OrderByArg
  number?: OrderByArg
  postId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type PostSearchDatumOrderByInput = {
  post_id?: OrderByArg
  locale?: OrderByArg
  rawData?: OrderByArg
  version?: OrderByArg
}

export type PostStatOrderByInput = {
  id?: OrderByArg
  composerOpenDurationMsecs?: OrderByArg
  createdAt?: OrderByArg
  draftsSaved?: OrderByArg
  postId?: OrderByArg
  typingDurationMsecs?: OrderByArg
  updatedAt?: OrderByArg
}

export type PostUploadOrderByInput = {
  id?: OrderByArg
  postId?: OrderByArg
  uploadId?: OrderByArg
}

export type PushSubscriptionOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  data?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type QueuedPostOrderByInput = {
  id?: OrderByArg
  approvedAt?: OrderByArg
  approvedById?: OrderByArg
  createdAt?: OrderByArg
  queue?: OrderByArg
  raw?: OrderByArg
  rejectedAt?: OrderByArg
  rejectedById?: OrderByArg
  state?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type QuotedPostOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  postId?: OrderByArg
  quotedPostId?: OrderByArg
  updatedAt?: OrderByArg
}

export type RemoteThemeOrderByInput = {
  id?: OrderByArg
  aboutUrl?: OrderByArg
  branch?: OrderByArg
  commitsBehind?: OrderByArg
  createdAt?: OrderByArg
  lastErrorText?: OrderByArg
  licenseUrl?: OrderByArg
  localVersion?: OrderByArg
  privateKey?: OrderByArg
  remoteUpdatedAt?: OrderByArg
  remoteUrl?: OrderByArg
  remoteVersion?: OrderByArg
  updatedAt?: OrderByArg
}

export type SchedulerStatOrderByInput = {
  id?: OrderByArg
  durationMs?: OrderByArg
  error?: OrderByArg
  hostname?: OrderByArg
  liveSlotsFinish?: OrderByArg
  liveSlotsStart?: OrderByArg
  name?: OrderByArg
  pid?: OrderByArg
  startedAt?: OrderByArg
  success?: OrderByArg
}

export type SchemaMigrationOrderByInput = {
  version?: OrderByArg
}

export type SchemaMigrationDetailOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  direction?: OrderByArg
  duration?: OrderByArg
  gitVersion?: OrderByArg
  hostname?: OrderByArg
  name?: OrderByArg
  railsVersion?: OrderByArg
  version?: OrderByArg
}

export type ScreenedEmailOrderByInput = {
  id?: OrderByArg
  actionType?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  lastMatchAt?: OrderByArg
  matchCount?: OrderByArg
  updatedAt?: OrderByArg
}

export type ScreenedIpAddressOrderByInput = {
  id?: OrderByArg
  actionType?: OrderByArg
  createdAt?: OrderByArg
  lastMatchAt?: OrderByArg
  matchCount?: OrderByArg
  updatedAt?: OrderByArg
}

export type ScreenedUrlOrderByInput = {
  id?: OrderByArg
  actionType?: OrderByArg
  createdAt?: OrderByArg
  domain?: OrderByArg
  lastMatchAt?: OrderByArg
  matchCount?: OrderByArg
  updatedAt?: OrderByArg
  url?: OrderByArg
}

export type SearchLogOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  searchResultId?: OrderByArg
  searchResultType?: OrderByArg
  searchType?: OrderByArg
  term?: OrderByArg
  userId?: OrderByArg
}

export type SharedDraftOrderByInput = {
  id?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type SingleSignOnRecordOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  externalAvatarUrl?: OrderByArg
  externalCardBackgroundUrl?: OrderByArg
  externalEmail?: OrderByArg
  externalId?: OrderByArg
  externalName?: OrderByArg
  externalProfileBackgroundUrl?: OrderByArg
  externalUsername?: OrderByArg
  lastPayload?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type SiteSettingOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  dataType?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type SkippedEmailLogOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  customReason?: OrderByArg
  emailType?: OrderByArg
  postId?: OrderByArg
  reasonType?: OrderByArg
  toAddress?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type StylesheetCacheOrderByInput = {
  id?: OrderByArg
  content?: OrderByArg
  createdAt?: OrderByArg
  digest?: OrderByArg
  sourceMap?: OrderByArg
  target?: OrderByArg
  themeId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TagOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  pmTopicCount?: OrderByArg
  topicCount?: OrderByArg
  updatedAt?: OrderByArg
}

export type TagGroupOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  onePerTopic?: OrderByArg
  parentTagId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TagGroupMembershipOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  tagGroupId?: OrderByArg
  tagId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TagGroupPermissionOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  groupId?: OrderByArg
  permissionType?: OrderByArg
  tagGroupId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TagSearchDatumOrderByInput = {
  tag_id?: OrderByArg
  locale?: OrderByArg
  rawData?: OrderByArg
  version?: OrderByArg
}

export type TagUserOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  notificationLevel?: OrderByArg
  tagId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type ThemeOrderByInput = {
  id?: OrderByArg
  colorSchemeId?: OrderByArg
  compilerVersion?: OrderByArg
  component?: OrderByArg
  createdAt?: OrderByArg
  hidden?: OrderByArg
  name?: OrderByArg
  remoteThemeId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
  userSelectable?: OrderByArg
}

export type ThemeFieldOrderByInput = {
  id?: OrderByArg
  compilerVersion?: OrderByArg
  createdAt?: OrderByArg
  error?: OrderByArg
  name?: OrderByArg
  targetId?: OrderByArg
  themeId?: OrderByArg
  typeId?: OrderByArg
  updatedAt?: OrderByArg
  uploadId?: OrderByArg
  value?: OrderByArg
  valueBaked?: OrderByArg
}

export type ThemeSettingOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  dataType?: OrderByArg
  name?: OrderByArg
  themeId?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type TopTopicOrderByInput = {
  id?: OrderByArg
  allScore?: OrderByArg
  dailyLikesCount?: OrderByArg
  dailyOpLikesCount?: OrderByArg
  dailyPostsCount?: OrderByArg
  dailyScore?: OrderByArg
  dailyViewsCount?: OrderByArg
  monthlyLikesCount?: OrderByArg
  monthlyOpLikesCount?: OrderByArg
  monthlyPostsCount?: OrderByArg
  monthlyScore?: OrderByArg
  monthlyViewsCount?: OrderByArg
  quarterlyLikesCount?: OrderByArg
  quarterlyOpLikesCount?: OrderByArg
  quarterlyPostsCount?: OrderByArg
  quarterlyScore?: OrderByArg
  quarterlyViewsCount?: OrderByArg
  topicId?: OrderByArg
  weeklyLikesCount?: OrderByArg
  weeklyOpLikesCount?: OrderByArg
  weeklyPostsCount?: OrderByArg
  weeklyScore?: OrderByArg
  weeklyViewsCount?: OrderByArg
  yearlyLikesCount?: OrderByArg
  yearlyOpLikesCount?: OrderByArg
  yearlyPostsCount?: OrderByArg
  yearlyScore?: OrderByArg
  yearlyViewsCount?: OrderByArg
}

export type TopicOrderByInput = {
  id?: OrderByArg
  archetype?: OrderByArg
  archived?: OrderByArg
  avgTime?: OrderByArg
  bumpedAt?: OrderByArg
  categoryId?: OrderByArg
  closed?: OrderByArg
  createdAt?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  excerpt?: OrderByArg
  fancyTitle?: OrderByArg
  featuredLink?: OrderByArg
  featuredUser1Id?: OrderByArg
  featuredUser2Id?: OrderByArg
  featuredUser3Id?: OrderByArg
  featuredUser4Id?: OrderByArg
  hasSummary?: OrderByArg
  highestPostNumber?: OrderByArg
  highestStaffPostNumber?: OrderByArg
  imageUrl?: OrderByArg
  incomingLinkCount?: OrderByArg
  lastPostedAt?: OrderByArg
  lastPostUserId?: OrderByArg
  likeCount?: OrderByArg
  moderatorPostsCount?: OrderByArg
  notifyModeratorsCount?: OrderByArg
  participantCount?: OrderByArg
  percentRank?: OrderByArg
  pinnedAt?: OrderByArg
  pinnedGlobally?: OrderByArg
  pinnedUntil?: OrderByArg
  postsCount?: OrderByArg
  replyCount?: OrderByArg
  score?: OrderByArg
  slug?: OrderByArg
  spamCount?: OrderByArg
  subtype?: OrderByArg
  title?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
  views?: OrderByArg
  visible?: OrderByArg
  wordCount?: OrderByArg
}

export type TopicAllowedGroupOrderByInput = {
  id?: OrderByArg
  groupId?: OrderByArg
  topicId?: OrderByArg
}

export type TopicAllowedUserOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type TopicCustomFieldOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type TopicEmbedOrderByInput = {
  id?: OrderByArg
  contentSha1?: OrderByArg
  createdAt?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  embedUrl?: OrderByArg
  postId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TopicInviteOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  inviteId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TopicLinkOrderByInput = {
  id?: OrderByArg
  clicks?: OrderByArg
  crawledAt?: OrderByArg
  createdAt?: OrderByArg
  domain?: OrderByArg
  extension?: OrderByArg
  internal?: OrderByArg
  linkPostId?: OrderByArg
  linkTopicId?: OrderByArg
  postId?: OrderByArg
  quote?: OrderByArg
  reflection?: OrderByArg
  title?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  url?: OrderByArg
  userId?: OrderByArg
}

export type TopicLinkClickOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  topicLinkId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type TopicSearchDatumOrderByInput = {
  topic_id?: OrderByArg
  locale?: OrderByArg
  rawData?: OrderByArg
  version?: OrderByArg
}

export type TopicTagOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  tagId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type TopicTimerOrderByInput = {
  id?: OrderByArg
  basedOnLastPost?: OrderByArg
  categoryId?: OrderByArg
  createdAt?: OrderByArg
  deletedAt?: OrderByArg
  deletedById?: OrderByArg
  executeAt?: OrderByArg
  publicType?: OrderByArg
  statusType?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type TopicUserOrderByInput = {
  id?: OrderByArg
  bookmarked?: OrderByArg
  clearedPinnedAt?: OrderByArg
  firstVisitedAt?: OrderByArg
  highestSeenPostNumber?: OrderByArg
  lastEmailedPostNumber?: OrderByArg
  lastReadPostNumber?: OrderByArg
  lastVisitedAt?: OrderByArg
  liked?: OrderByArg
  notificationLevel?: OrderByArg
  notificationsChangedAt?: OrderByArg
  notificationsReasonId?: OrderByArg
  posted?: OrderByArg
  topicId?: OrderByArg
  totalMsecsViewed?: OrderByArg
  userId?: OrderByArg
}

export type TranslationOverrideOrderByInput = {
  id?: OrderByArg
  compiledJs?: OrderByArg
  createdAt?: OrderByArg
  locale?: OrderByArg
  translationKey?: OrderByArg
  updatedAt?: OrderByArg
  value?: OrderByArg
}

export type TwitterUserInfoOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  screenName?: OrderByArg
  twitterUserId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UnsubscribeKeyOrderByInput = {
  key?: OrderByArg
  createdAt?: OrderByArg
  postId?: OrderByArg
  topicId?: OrderByArg
  unsubscribeKeyType?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UploadOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  extension?: OrderByArg
  filesize?: OrderByArg
  height?: OrderByArg
  origin?: OrderByArg
  originalFilename?: OrderByArg
  retainHours?: OrderByArg
  sha1?: OrderByArg
  thumbnailHeight?: OrderByArg
  thumbnailWidth?: OrderByArg
  updatedAt?: OrderByArg
  url?: OrderByArg
  userId?: OrderByArg
  width?: OrderByArg
}

export type UserOrderByInput = {
  id?: OrderByArg
  active?: OrderByArg
  admin?: OrderByArg
  approved?: OrderByArg
  approvedAt?: OrderByArg
  approvedById?: OrderByArg
  createdAt?: OrderByArg
  dateOfBirth?: OrderByArg
  firstSeenAt?: OrderByArg
  flagLevel?: OrderByArg
  groupLockedTrustLevel?: OrderByArg
  lastEmailedAt?: OrderByArg
  lastPostedAt?: OrderByArg
  lastSeenAt?: OrderByArg
  locale?: OrderByArg
  manualLockedTrustLevel?: OrderByArg
  moderator?: OrderByArg
  name?: OrderByArg
  passwordHash?: OrderByArg
  previousVisitAt?: OrderByArg
  primaryGroupId?: OrderByArg
  salt?: OrderByArg
  seenNotificationId?: OrderByArg
  silencedTill?: OrderByArg
  staged?: OrderByArg
  suspendedAt?: OrderByArg
  suspendedTill?: OrderByArg
  title?: OrderByArg
  trustLevel?: OrderByArg
  updatedAt?: OrderByArg
  uploadedAvatarId?: OrderByArg
  username?: OrderByArg
  usernameLower?: OrderByArg
  views?: OrderByArg
}

export type UserActionOrderByInput = {
  id?: OrderByArg
  actingUserId?: OrderByArg
  actionType?: OrderByArg
  createdAt?: OrderByArg
  queuedPostId?: OrderByArg
  targetPostId?: OrderByArg
  targetTopicId?: OrderByArg
  targetUserId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserApiKeyOrderByInput = {
  id?: OrderByArg
  applicationName?: OrderByArg
  clientId?: OrderByArg
  createdAt?: OrderByArg
  key?: OrderByArg
  lastUsedAt?: OrderByArg
  pushUrl?: OrderByArg
  revokedAt?: OrderByArg
  scopes?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserArchivedMessageOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserAuthTokenOrderByInput = {
  id?: OrderByArg
  authToken?: OrderByArg
  authTokenSeen?: OrderByArg
  createdAt?: OrderByArg
  prevAuthToken?: OrderByArg
  rotatedAt?: OrderByArg
  seenAt?: OrderByArg
  updatedAt?: OrderByArg
  userAgent?: OrderByArg
  userId?: OrderByArg
}

export type UserAuthTokenLogOrderByInput = {
  id?: OrderByArg
  action?: OrderByArg
  authToken?: OrderByArg
  createdAt?: OrderByArg
  path?: OrderByArg
  userAgent?: OrderByArg
  userAuthTokenId?: OrderByArg
  userId?: OrderByArg
}

export type UserAvatarOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  customUploadId?: OrderByArg
  gravatarUploadId?: OrderByArg
  lastGravatarDownloadAttempt?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserBadgeOrderByInput = {
  id?: OrderByArg
  badgeId?: OrderByArg
  grantedAt?: OrderByArg
  grantedById?: OrderByArg
  notificationId?: OrderByArg
  postId?: OrderByArg
  seq?: OrderByArg
  userId?: OrderByArg
}

export type UserCustomFieldOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  name?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
  value?: OrderByArg
}

export type UserEmailOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  primary?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserExportOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  fileName?: OrderByArg
  updatedAt?: OrderByArg
  uploadId?: OrderByArg
  userId?: OrderByArg
}

export type UserFieldOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  description?: OrderByArg
  editable?: OrderByArg
  externalName?: OrderByArg
  externalType?: OrderByArg
  fieldType?: OrderByArg
  name?: OrderByArg
  position?: OrderByArg
  required?: OrderByArg
  showOnProfile?: OrderByArg
  showOnUserCard?: OrderByArg
  updatedAt?: OrderByArg
}

export type UserFieldOptionOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  updatedAt?: OrderByArg
  userFieldId?: OrderByArg
  value?: OrderByArg
}

export type UserHistoryOrderByInput = {
  id?: OrderByArg
  actingUserId?: OrderByArg
  action?: OrderByArg
  adminOnly?: OrderByArg
  categoryId?: OrderByArg
  context?: OrderByArg
  createdAt?: OrderByArg
  customType?: OrderByArg
  details?: OrderByArg
  email?: OrderByArg
  ipAddress?: OrderByArg
  newValue?: OrderByArg
  postId?: OrderByArg
  previousValue?: OrderByArg
  subject?: OrderByArg
  targetUserId?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
}

export type UserOpenIdOrderByInput = {
  id?: OrderByArg
  active?: OrderByArg
  createdAt?: OrderByArg
  email?: OrderByArg
  updatedAt?: OrderByArg
  url?: OrderByArg
  userId?: OrderByArg
}

export type UserOptionOrderByInput = {
  user_id?: OrderByArg
  allowPrivateMessages?: OrderByArg
  automaticallyUnpinTopics?: OrderByArg
  autoTrackTopicsAfterMsecs?: OrderByArg
  digestAfterMinutes?: OrderByArg
  disableJumpReply?: OrderByArg
  dynamicFavicon?: OrderByArg
  emailAlways?: OrderByArg
  emailDigests?: OrderByArg
  emailDirect?: OrderByArg
  emailInReplyTo?: OrderByArg
  emailPreviousReplies?: OrderByArg
  emailPrivateMessages?: OrderByArg
  enableQuoting?: OrderByArg
  externalLinksInNewTab?: OrderByArg
  hideProfileAndPresence?: OrderByArg
  homepageId?: OrderByArg
  includeTl0InDigests?: OrderByArg
  lastRedirectedToTopAt?: OrderByArg
  likeNotificationFrequency?: OrderByArg
  mailingListMode?: OrderByArg
  mailingListModeFrequency?: OrderByArg
  newTopicDurationMinutes?: OrderByArg
  notificationLevelWhenReplying?: OrderByArg
  themeIds?: OrderByArg
  themeKeySeq?: OrderByArg
}

export type UserProfileOrderByInput = {
  user_id?: OrderByArg
  badgeGrantedTitle?: OrderByArg
  bioCooked?: OrderByArg
  bioCookedVersion?: OrderByArg
  bioRaw?: OrderByArg
  cardBackground?: OrderByArg
  dismissedBannerKey?: OrderByArg
  location?: OrderByArg
  profileBackground?: OrderByArg
  views?: OrderByArg
  website?: OrderByArg
}

export type UserProfileViewOrderByInput = {
  id?: OrderByArg
  userId?: OrderByArg
  userProfileId?: OrderByArg
  viewedAt?: OrderByArg
}

export type UserSearchDatumOrderByInput = {
  user_id?: OrderByArg
  locale?: OrderByArg
  rawData?: OrderByArg
  version?: OrderByArg
}

export type UserSecondFactorOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  data?: OrderByArg
  enabled?: OrderByArg
  lastUsed?: OrderByArg
  method?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type UserStatOrderByInput = {
  user_id?: OrderByArg
  bounceScore?: OrderByArg
  daysVisited?: OrderByArg
  firstPostCreatedAt?: OrderByArg
  likesGiven?: OrderByArg
  likesReceived?: OrderByArg
  newSince?: OrderByArg
  postCount?: OrderByArg
  postsReadCount?: OrderByArg
  readFaq?: OrderByArg
  resetBounceScoreAfter?: OrderByArg
  timeRead?: OrderByArg
  topicCount?: OrderByArg
  topicReplyCount?: OrderByArg
  topicsEntered?: OrderByArg
}

export type UserUploadOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  uploadId?: OrderByArg
  userId?: OrderByArg
}

export type UserVisitOrderByInput = {
  id?: OrderByArg
  mobile?: OrderByArg
  postsRead?: OrderByArg
  timeRead?: OrderByArg
  userId?: OrderByArg
  visitedAt?: OrderByArg
}

export type UserWarningOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  createdById?: OrderByArg
  topicId?: OrderByArg
  updatedAt?: OrderByArg
  userId?: OrderByArg
}

export type WatchedWordOrderByInput = {
  id?: OrderByArg
  action?: OrderByArg
  createdAt?: OrderByArg
  updatedAt?: OrderByArg
  word?: OrderByArg
}

export type WebCrawlerRequestOrderByInput = {
  id?: OrderByArg
  count?: OrderByArg
  date?: OrderByArg
  userAgent?: OrderByArg
}

export type WebHookOrderByInput = {
  id?: OrderByArg
  active?: OrderByArg
  contentType?: OrderByArg
  createdAt?: OrderByArg
  lastDeliveryStatus?: OrderByArg
  payloadUrl?: OrderByArg
  secret?: OrderByArg
  status?: OrderByArg
  updatedAt?: OrderByArg
  verifyCertificate?: OrderByArg
  wildcardWebHook?: OrderByArg
}

export type WebHookEventOrderByInput = {
  id?: OrderByArg
  createdAt?: OrderByArg
  duration?: OrderByArg
  headers?: OrderByArg
  payload?: OrderByArg
  responseBody?: OrderByArg
  responseHeaders?: OrderByArg
  status?: OrderByArg
  updatedAt?: OrderByArg
  webHookId?: OrderByArg
}

export type WebHookEventTypeOrderByInput = {
  id?: OrderByArg
  name?: OrderByArg
}

/**
 * DMMF
 */

const dmmf: DMMF.Document = {"datamodel":{"enums":[],"models":[{"name":"ApiKey","isEmbedded":false,"dbName":"api_keys","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"createdById","kind":"scalar","dbName":"created_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"hidden","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ApplicationRequest","isEmbedded":false,"dbName":"application_requests","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"count","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"date","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"reqType","kind":"scalar","dbName":"req_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ArInternalMetadatum","isEmbedded":false,"dbName":"ar_internal_metadata","fields":[{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"String","default":{"name":"cuid","returnType":"String","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Badge","isEmbedded":false,"dbName":"badges","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"allowTitle","kind":"scalar","dbName":"allow_title","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"autoRevoke","kind":"scalar","dbName":"auto_revoke","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"badgeGroupingId","kind":"scalar","dbName":"badge_grouping_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"badgeTypeId","kind":"scalar","dbName":"badge_type_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"enabled","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"grantCount","kind":"scalar","dbName":"grant_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"icon","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"image","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"listable","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"longDescription","kind":"scalar","dbName":"long_description","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"multipleGrant","kind":"scalar","dbName":"multiple_grant","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"query","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"showPosts","kind":"scalar","dbName":"show_posts","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"system","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"targetPosts","kind":"scalar","dbName":"target_posts","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"trigger","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"BadgeGrouping","isEmbedded":false,"dbName":"badge_groupings","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"position","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"BadgeType","isEmbedded":false,"dbName":"badge_types","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Category","isEmbedded":false,"dbName":"categories","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"allowBadges","kind":"scalar","dbName":"allow_badges","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"allTopicsWiki","kind":"scalar","dbName":"all_topics_wiki","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"autoCloseBasedOnLastPost","kind":"scalar","dbName":"auto_close_based_on_last_post","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"autoCloseHours","kind":"scalar","dbName":"auto_close_hours","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"color","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"containsMessages","kind":"scalar","dbName":"contains_messages","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"defaultTopPeriod","kind":"scalar","dbName":"default_top_period","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"defaultView","kind":"scalar","dbName":"default_view","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"emailIn","kind":"scalar","dbName":"email_in","isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"emailInAllowStrangers","kind":"scalar","dbName":"email_in_allow_strangers","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"latestPostId","kind":"scalar","dbName":"latest_post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"latestTopicId","kind":"scalar","dbName":"latest_topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"mailinglistMirror","kind":"scalar","dbName":"mailinglist_mirror","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"minimumRequiredTags","kind":"scalar","dbName":"minimum_required_tags","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"nameLower","kind":"scalar","dbName":"name_lower","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"navigateToFirstPostAfterRead","kind":"scalar","dbName":"navigate_to_first_post_after_read","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"numFeaturedTopics","kind":"scalar","dbName":"num_featured_topics","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"parentCategoryId","kind":"scalar","dbName":"parent_category_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"position","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postCount","kind":"scalar","dbName":"post_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsDay","kind":"scalar","dbName":"posts_day","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsMonth","kind":"scalar","dbName":"posts_month","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsWeek","kind":"scalar","dbName":"posts_week","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsYear","kind":"scalar","dbName":"posts_year","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"readRestricted","kind":"scalar","dbName":"read_restricted","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"showSubcategoryList","kind":"scalar","dbName":"show_subcategory_list","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"slug","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"sortAscending","kind":"scalar","dbName":"sort_ascending","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"sortOrder","kind":"scalar","dbName":"sort_order","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"subcategoryListStyle","kind":"scalar","dbName":"subcategory_list_style","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"suppressFromLatest","kind":"scalar","dbName":"suppress_from_latest","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"textColor","kind":"scalar","dbName":"text_color","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"topicCount","kind":"scalar","dbName":"topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicFeaturedLinkAllowed","kind":"scalar","dbName":"topic_featured_link_allowed","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsDay","kind":"scalar","dbName":"topics_day","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsMonth","kind":"scalar","dbName":"topics_month","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsWeek","kind":"scalar","dbName":"topics_week","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsYear","kind":"scalar","dbName":"topics_year","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicTemplate","kind":"scalar","dbName":"topic_template","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadedBackgroundId","kind":"scalar","dbName":"uploaded_background_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"uploadedLogoId","kind":"scalar","dbName":"uploaded_logo_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryCustomField","isEmbedded":false,"dbName":"category_custom_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryFeaturedTopic","isEmbedded":false,"dbName":"category_featured_topics","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"rank","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryGroup","isEmbedded":false,"dbName":"category_groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"permissionType","kind":"scalar","dbName":"permission_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategorySearchDatum","isEmbedded":false,"dbName":"category_search_data","fields":[{"name":"category_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawData","kind":"scalar","dbName":"raw_data","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryTag","isEmbedded":false,"dbName":"category_tags","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"tagId","kind":"scalar","dbName":"tag_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryTagGroup","isEmbedded":false,"dbName":"category_tag_groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"tagGroupId","kind":"scalar","dbName":"tag_group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryTagStat","isEmbedded":false,"dbName":"category_tag_stats","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"tagId","kind":"scalar","dbName":"tag_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicCount","kind":"scalar","dbName":"topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CategoryUser","isEmbedded":false,"dbName":"category_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notificationLevel","kind":"scalar","dbName":"notification_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ChildTheme","isEmbedded":false,"dbName":"child_themes","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"childThemeId","kind":"scalar","dbName":"child_theme_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"parentThemeId","kind":"scalar","dbName":"parent_theme_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ColorScheme","isEmbedded":false,"dbName":"color_schemes","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"baseSchemeId","kind":"scalar","dbName":"base_scheme_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"themeId","kind":"scalar","dbName":"theme_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"viaWizard","kind":"scalar","dbName":"via_wizard","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ColorSchemeColor","isEmbedded":false,"dbName":"color_scheme_colors","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"colorSchemeId","kind":"scalar","dbName":"color_scheme_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"hex","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"CustomEmoji","isEmbedded":false,"dbName":"custom_emojis","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Developer","isEmbedded":false,"dbName":"developers","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"DirectoryItem","isEmbedded":false,"dbName":"directory_items","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"daysVisited","kind":"scalar","dbName":"days_visited","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"likesGiven","kind":"scalar","dbName":"likes_given","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"likesReceived","kind":"scalar","dbName":"likes_received","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"periodType","kind":"scalar","dbName":"period_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postCount","kind":"scalar","dbName":"post_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsRead","kind":"scalar","dbName":"posts_read","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicCount","kind":"scalar","dbName":"topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsEntered","kind":"scalar","dbName":"topics_entered","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Draft","isEmbedded":false,"dbName":"drafts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"draftKey","kind":"scalar","dbName":"draft_key","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"revisions","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"sequence","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"DraftSequence","isEmbedded":false,"dbName":"draft_sequences","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"draftKey","kind":"scalar","dbName":"draft_key","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"sequence","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"EmailChangeRequest","isEmbedded":false,"dbName":"email_change_requests","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"changeState","kind":"scalar","dbName":"change_state","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"newEmail","kind":"scalar","dbName":"new_email","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"newEmailTokenId","kind":"scalar","dbName":"new_email_token_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"oldEmail","kind":"scalar","dbName":"old_email","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"oldEmailTokenId","kind":"scalar","dbName":"old_email_token_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"EmailLog","isEmbedded":false,"dbName":"email_logs","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bounced","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"bounceKey","kind":"scalar","dbName":"bounce_key","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","default":{"name":"uuid","returnType":"String","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"emailType","kind":"scalar","dbName":"email_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"messageId","kind":"scalar","dbName":"message_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"toAddress","kind":"scalar","dbName":"to_address","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"EmailToken","isEmbedded":false,"dbName":"email_tokens","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"confirmed","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"expired","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"token","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"EmbeddableHost","isEmbedded":false,"dbName":"embeddable_hosts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"className","kind":"scalar","dbName":"class_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"host","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"pathWhitelist","kind":"scalar","dbName":"path_whitelist","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"FacebookUserInfo","isEmbedded":false,"dbName":"facebook_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"aboutMe","kind":"scalar","dbName":"about_me","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"avatarUrl","kind":"scalar","dbName":"avatar_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"facebookUserId","kind":"scalar","dbName":"facebook_user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"firstName","kind":"scalar","dbName":"first_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"gender","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastName","kind":"scalar","dbName":"last_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"link","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"location","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"username","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"website","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GithubUserInfo","isEmbedded":false,"dbName":"github_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"githubUserId","kind":"scalar","dbName":"github_user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"screenName","kind":"scalar","dbName":"screen_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GoogleUserInfo","isEmbedded":false,"dbName":"google_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"firstName","kind":"scalar","dbName":"first_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"gender","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"googleUserId","kind":"scalar","dbName":"google_user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastName","kind":"scalar","dbName":"last_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"link","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"picture","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"profileLink","kind":"scalar","dbName":"profile_link","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Group","isEmbedded":false,"dbName":"groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"allowMembershipRequests","kind":"scalar","dbName":"allow_membership_requests","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"automatic","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"automaticMembershipEmailDomains","kind":"scalar","dbName":"automatic_membership_email_domains","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"automaticMembershipRetroactive","kind":"scalar","dbName":"automatic_membership_retroactive","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"bioCooked","kind":"scalar","dbName":"bio_cooked","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"bioRaw","kind":"scalar","dbName":"bio_raw","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"defaultNotificationLevel","kind":"scalar","dbName":"default_notification_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"flairBgColor","kind":"scalar","dbName":"flair_bg_color","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"flairColor","kind":"scalar","dbName":"flair_color","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"flairUrl","kind":"scalar","dbName":"flair_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"fullName","kind":"scalar","dbName":"full_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"grantTrustLevel","kind":"scalar","dbName":"grant_trust_level","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"hasMessages","kind":"scalar","dbName":"has_messages","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"incomingEmail","kind":"scalar","dbName":"incoming_email","isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"membershipRequestTemplate","kind":"scalar","dbName":"membership_request_template","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"mentionableLevel","kind":"scalar","dbName":"mentionable_level","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"messageableLevel","kind":"scalar","dbName":"messageable_level","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"primaryGroup","kind":"scalar","dbName":"primary_group","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"publicAdmission","kind":"scalar","dbName":"public_admission","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"publicExit","kind":"scalar","dbName":"public_exit","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userCount","kind":"scalar","dbName":"user_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"visibilityLevel","kind":"scalar","dbName":"visibility_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GroupArchivedMessage","isEmbedded":false,"dbName":"group_archived_messages","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GroupCustomField","isEmbedded":false,"dbName":"group_custom_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GroupHistory","isEmbedded":false,"dbName":"group_histories","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actingUserId","kind":"scalar","dbName":"acting_user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"action","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"newValue","kind":"scalar","dbName":"new_value","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"prevValue","kind":"scalar","dbName":"prev_value","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"subject","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"targetUserId","kind":"scalar","dbName":"target_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GroupMention","isEmbedded":false,"dbName":"group_mentions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"GroupUser","isEmbedded":false,"dbName":"group_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notificationLevel","kind":"scalar","dbName":"notification_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"owner","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"IncomingDomain","isEmbedded":false,"dbName":"incoming_domains","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"https","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"port","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"IncomingEmail","isEmbedded":false,"dbName":"incoming_emails","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"ccAddresses","kind":"scalar","dbName":"cc_addresses","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"error","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"fromAddress","kind":"scalar","dbName":"from_address","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"isAutoGenerated","kind":"scalar","dbName":"is_auto_generated","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"isBounce","kind":"scalar","dbName":"is_bounce","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"messageId","kind":"scalar","dbName":"message_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"raw","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rejectionMessage","kind":"scalar","dbName":"rejection_message","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"subject","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"toAddresses","kind":"scalar","dbName":"to_addresses","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"IncomingLink","isEmbedded":false,"dbName":"incoming_links","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"currentUserId","kind":"scalar","dbName":"current_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"incomingRefererId","kind":"scalar","dbName":"incoming_referer_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"IncomingReferer","isEmbedded":false,"dbName":"incoming_referers","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"incomingDomainId","kind":"scalar","dbName":"incoming_domain_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"path","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"InstagramUserInfo","isEmbedded":false,"dbName":"instagram_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"instagramUserId","kind":"scalar","dbName":"instagram_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"screenName","kind":"scalar","dbName":"screen_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Invite","isEmbedded":false,"dbName":"invites","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"customMessage","kind":"scalar","dbName":"custom_message","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"invalidatedAt","kind":"scalar","dbName":"invalidated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"invitedById","kind":"scalar","dbName":"invited_by_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"inviteKey","kind":"scalar","dbName":"invite_key","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"moderator","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"redeemedAt","kind":"scalar","dbName":"redeemed_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"InvitedGroup","isEmbedded":false,"dbName":"invited_groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"inviteId","kind":"scalar","dbName":"invite_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"JavascriptCach","isEmbedded":false,"dbName":"javascript_caches","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"content","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"digest","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"themeFieldId","kind":"scalar","dbName":"theme_field_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"MessageBus","isEmbedded":false,"dbName":"message_bus","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"context","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"MutedUser","isEmbedded":false,"dbName":"muted_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"mutedUserId","kind":"scalar","dbName":"muted_user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Notification","isEmbedded":false,"dbName":"notifications","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"notificationType","kind":"scalar","dbName":"notification_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postActionId","kind":"scalar","dbName":"post_action_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postNumber","kind":"scalar","dbName":"post_number","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"read","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Oauth2UserInfo","isEmbedded":false,"dbName":"oauth2_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"provider","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"uid","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"OnceoffLog","isEmbedded":false,"dbName":"onceoff_logs","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"jobName","kind":"scalar","dbName":"job_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"OptimizedImage","isEmbedded":false,"dbName":"optimized_images","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"extension","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"filesize","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"height","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"sha1","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"width","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Permalink","isEmbedded":false,"dbName":"permalinks","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"externalUrl","kind":"scalar","dbName":"external_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PluginStoreRow","isEmbedded":false,"dbName":"plugin_store_rows","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"pluginName","kind":"scalar","dbName":"plugin_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"typeName","kind":"scalar","dbName":"type_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Post","isEmbedded":false,"dbName":"posts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actionCode","kind":"scalar","dbName":"action_code","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"avgTime","kind":"scalar","dbName":"avg_time","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bakedAt","kind":"scalar","dbName":"baked_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"bakedVersion","kind":"scalar","dbName":"baked_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bookmarkCount","kind":"scalar","dbName":"bookmark_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"cooked","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cookMethod","kind":"scalar","dbName":"cook_method","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"editReason","kind":"scalar","dbName":"edit_reason","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hidden","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"hiddenAt","kind":"scalar","dbName":"hidden_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"hiddenReasonId","kind":"scalar","dbName":"hidden_reason_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"illegalCount","kind":"scalar","dbName":"illegal_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"imageUrl","kind":"scalar","dbName":"image_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"inappropriateCount","kind":"scalar","dbName":"inappropriate_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"incomingLinkCount","kind":"scalar","dbName":"incoming_link_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastEditorId","kind":"scalar","dbName":"last_editor_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastVersionAt","kind":"scalar","dbName":"last_version_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"likeCount","kind":"scalar","dbName":"like_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"likeScore","kind":"scalar","dbName":"like_score","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lockedById","kind":"scalar","dbName":"locked_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notifyModeratorsCount","kind":"scalar","dbName":"notify_moderators_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notifyUserCount","kind":"scalar","dbName":"notify_user_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"offTopicCount","kind":"scalar","dbName":"off_topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"percentRank","kind":"scalar","dbName":"percent_rank","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"postNumber","kind":"scalar","dbName":"post_number","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postType","kind":"scalar","dbName":"post_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"publicVersion","kind":"scalar","dbName":"public_version","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quoteCount","kind":"scalar","dbName":"quote_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"raw","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawEmail","kind":"scalar","dbName":"raw_email","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"reads","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"replyCount","kind":"scalar","dbName":"reply_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"replyQuoted","kind":"scalar","dbName":"reply_quoted","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"replyToPostNumber","kind":"scalar","dbName":"reply_to_post_number","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"replyToUserId","kind":"scalar","dbName":"reply_to_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"score","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"selfEdits","kind":"scalar","dbName":"self_edits","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"sortOrder","kind":"scalar","dbName":"sort_order","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"spamCount","kind":"scalar","dbName":"spam_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userDeleted","kind":"scalar","dbName":"user_deleted","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"viaEmail","kind":"scalar","dbName":"via_email","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"wiki","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"wordCount","kind":"scalar","dbName":"word_count","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostAction","isEmbedded":false,"dbName":"post_actions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"agreedAt","kind":"scalar","dbName":"agreed_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"agreedById","kind":"scalar","dbName":"agreed_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deferredAt","kind":"scalar","dbName":"deferred_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deferredById","kind":"scalar","dbName":"deferred_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"disagreedAt","kind":"scalar","dbName":"disagreed_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"disagreedById","kind":"scalar","dbName":"disagreed_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postActionTypeId","kind":"scalar","dbName":"post_action_type_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"relatedPostId","kind":"scalar","dbName":"related_post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"staffTookAction","kind":"scalar","dbName":"staff_took_action","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"targetsTopic","kind":"scalar","dbName":"targets_topic","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostActionType","isEmbedded":false,"dbName":"post_action_types","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"icon","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"isFlag","kind":"scalar","dbName":"is_flag","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"nameKey","kind":"scalar","dbName":"name_key","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"position","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostCustomField","isEmbedded":false,"dbName":"post_custom_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostDetail","isEmbedded":false,"dbName":"post_details","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"extra","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostReplyKey","isEmbedded":false,"dbName":"post_reply_keys","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"replyKey","kind":"scalar","dbName":"reply_key","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","default":{"name":"uuid","returnType":"String","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostRevision","isEmbedded":false,"dbName":"post_revisions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"hidden","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"modifications","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"number","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostSearchDatum","isEmbedded":false,"dbName":"post_search_data","fields":[{"name":"post_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawData","kind":"scalar","dbName":"raw_data","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostStat","isEmbedded":false,"dbName":"post_stats","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"composerOpenDurationMsecs","kind":"scalar","dbName":"composer_open_duration_msecs","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"draftsSaved","kind":"scalar","dbName":"drafts_saved","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"typingDurationMsecs","kind":"scalar","dbName":"typing_duration_msecs","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PostUpload","isEmbedded":false,"dbName":"post_uploads","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"PushSubscription","isEmbedded":false,"dbName":"push_subscriptions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"QueuedPost","isEmbedded":false,"dbName":"queued_posts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"approvedAt","kind":"scalar","dbName":"approved_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"approvedById","kind":"scalar","dbName":"approved_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"queue","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"raw","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rejectedAt","kind":"scalar","dbName":"rejected_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"rejectedById","kind":"scalar","dbName":"rejected_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"state","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"QuotedPost","isEmbedded":false,"dbName":"quoted_posts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quotedPostId","kind":"scalar","dbName":"quoted_post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"RemoteTheme","isEmbedded":false,"dbName":"remote_themes","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"aboutUrl","kind":"scalar","dbName":"about_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"branch","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"commitsBehind","kind":"scalar","dbName":"commits_behind","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastErrorText","kind":"scalar","dbName":"last_error_text","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"licenseUrl","kind":"scalar","dbName":"license_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"localVersion","kind":"scalar","dbName":"local_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"privateKey","kind":"scalar","dbName":"private_key","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"remoteUpdatedAt","kind":"scalar","dbName":"remote_updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"remoteUrl","kind":"scalar","dbName":"remote_url","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"remoteVersion","kind":"scalar","dbName":"remote_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SchedulerStat","isEmbedded":false,"dbName":"scheduler_stats","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"durationMs","kind":"scalar","dbName":"duration_ms","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"error","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hostname","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"liveSlotsFinish","kind":"scalar","dbName":"live_slots_finish","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"liveSlotsStart","kind":"scalar","dbName":"live_slots_start","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"pid","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"startedAt","kind":"scalar","dbName":"started_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"success","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SchemaMigration","isEmbedded":false,"dbName":"schema_migrations","fields":[{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":true,"type":"String","default":{"name":"cuid","returnType":"String","args":[]},"isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SchemaMigrationDetail","isEmbedded":false,"dbName":"schema_migration_details","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"direction","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"duration","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"gitVersion","kind":"scalar","dbName":"git_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hostname","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"railsVersion","kind":"scalar","dbName":"rails_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ScreenedEmail","isEmbedded":false,"dbName":"screened_emails","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actionType","kind":"scalar","dbName":"action_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastMatchAt","kind":"scalar","dbName":"last_match_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"matchCount","kind":"scalar","dbName":"match_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ScreenedIpAddress","isEmbedded":false,"dbName":"screened_ip_addresses","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actionType","kind":"scalar","dbName":"action_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastMatchAt","kind":"scalar","dbName":"last_match_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"matchCount","kind":"scalar","dbName":"match_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ScreenedUrl","isEmbedded":false,"dbName":"screened_urls","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actionType","kind":"scalar","dbName":"action_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"domain","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastMatchAt","kind":"scalar","dbName":"last_match_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"matchCount","kind":"scalar","dbName":"match_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SearchLog","isEmbedded":false,"dbName":"search_logs","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"searchResultId","kind":"scalar","dbName":"search_result_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"searchResultType","kind":"scalar","dbName":"search_result_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"searchType","kind":"scalar","dbName":"search_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"term","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SharedDraft","isEmbedded":false,"dbName":"shared_drafts","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SingleSignOnRecord","isEmbedded":false,"dbName":"single_sign_on_records","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"externalAvatarUrl","kind":"scalar","dbName":"external_avatar_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalCardBackgroundUrl","kind":"scalar","dbName":"external_card_background_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalEmail","kind":"scalar","dbName":"external_email","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalId","kind":"scalar","dbName":"external_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalName","kind":"scalar","dbName":"external_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalProfileBackgroundUrl","kind":"scalar","dbName":"external_profile_background_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalUsername","kind":"scalar","dbName":"external_username","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastPayload","kind":"scalar","dbName":"last_payload","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SiteSetting","isEmbedded":false,"dbName":"site_settings","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"dataType","kind":"scalar","dbName":"data_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"SkippedEmailLog","isEmbedded":false,"dbName":"skipped_email_logs","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"customReason","kind":"scalar","dbName":"custom_reason","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"emailType","kind":"scalar","dbName":"email_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"reasonType","kind":"scalar","dbName":"reason_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"toAddress","kind":"scalar","dbName":"to_address","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"StylesheetCache","isEmbedded":false,"dbName":"stylesheet_cache","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"content","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"digest","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"sourceMap","kind":"scalar","dbName":"source_map","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"target","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"themeId","kind":"scalar","dbName":"theme_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Tag","isEmbedded":false,"dbName":"tags","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"pmTopicCount","kind":"scalar","dbName":"pm_topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicCount","kind":"scalar","dbName":"topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TagGroup","isEmbedded":false,"dbName":"tag_groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"onePerTopic","kind":"scalar","dbName":"one_per_topic","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"parentTagId","kind":"scalar","dbName":"parent_tag_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TagGroupMembership","isEmbedded":false,"dbName":"tag_group_memberships","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"tagGroupId","kind":"scalar","dbName":"tag_group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"tagId","kind":"scalar","dbName":"tag_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TagGroupPermission","isEmbedded":false,"dbName":"tag_group_permissions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"permissionType","kind":"scalar","dbName":"permission_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"tagGroupId","kind":"scalar","dbName":"tag_group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TagSearchDatum","isEmbedded":false,"dbName":"tag_search_data","fields":[{"name":"tag_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawData","kind":"scalar","dbName":"raw_data","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TagUser","isEmbedded":false,"dbName":"tag_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"notificationLevel","kind":"scalar","dbName":"notification_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"tagId","kind":"scalar","dbName":"tag_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Theme","isEmbedded":false,"dbName":"themes","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"colorSchemeId","kind":"scalar","dbName":"color_scheme_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"compilerVersion","kind":"scalar","dbName":"compiler_version","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"component","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"hidden","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"remoteThemeId","kind":"scalar","dbName":"remote_theme_id","isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userSelectable","kind":"scalar","dbName":"user_selectable","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ThemeField","isEmbedded":false,"dbName":"theme_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"compilerVersion","kind":"scalar","dbName":"compiler_version","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"error","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"targetId","kind":"scalar","dbName":"target_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"themeId","kind":"scalar","dbName":"theme_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"typeId","kind":"scalar","dbName":"type_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"valueBaked","kind":"scalar","dbName":"value_baked","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"ThemeSetting","isEmbedded":false,"dbName":"theme_settings","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"dataType","kind":"scalar","dbName":"data_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"themeId","kind":"scalar","dbName":"theme_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopTopic","isEmbedded":false,"dbName":"top_topics","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"allScore","kind":"scalar","dbName":"all_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"dailyLikesCount","kind":"scalar","dbName":"daily_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"dailyOpLikesCount","kind":"scalar","dbName":"daily_op_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"dailyPostsCount","kind":"scalar","dbName":"daily_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"dailyScore","kind":"scalar","dbName":"daily_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"dailyViewsCount","kind":"scalar","dbName":"daily_views_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"monthlyLikesCount","kind":"scalar","dbName":"monthly_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"monthlyOpLikesCount","kind":"scalar","dbName":"monthly_op_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"monthlyPostsCount","kind":"scalar","dbName":"monthly_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"monthlyScore","kind":"scalar","dbName":"monthly_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"monthlyViewsCount","kind":"scalar","dbName":"monthly_views_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quarterlyLikesCount","kind":"scalar","dbName":"quarterly_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quarterlyOpLikesCount","kind":"scalar","dbName":"quarterly_op_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quarterlyPostsCount","kind":"scalar","dbName":"quarterly_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quarterlyScore","kind":"scalar","dbName":"quarterly_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"quarterlyViewsCount","kind":"scalar","dbName":"quarterly_views_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"weeklyLikesCount","kind":"scalar","dbName":"weekly_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"weeklyOpLikesCount","kind":"scalar","dbName":"weekly_op_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"weeklyPostsCount","kind":"scalar","dbName":"weekly_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"weeklyScore","kind":"scalar","dbName":"weekly_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"weeklyViewsCount","kind":"scalar","dbName":"weekly_views_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"yearlyLikesCount","kind":"scalar","dbName":"yearly_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"yearlyOpLikesCount","kind":"scalar","dbName":"yearly_op_likes_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"yearlyPostsCount","kind":"scalar","dbName":"yearly_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"yearlyScore","kind":"scalar","dbName":"yearly_score","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"yearlyViewsCount","kind":"scalar","dbName":"yearly_views_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Topic","isEmbedded":false,"dbName":"topics","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"archetype","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"archived","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"avgTime","kind":"scalar","dbName":"avg_time","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bumpedAt","kind":"scalar","dbName":"bumped_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"closed","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"excerpt","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"fancyTitle","kind":"scalar","dbName":"fancy_title","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"featuredLink","kind":"scalar","dbName":"featured_link","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"featuredUser1Id","kind":"scalar","dbName":"featured_user1_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"featuredUser2Id","kind":"scalar","dbName":"featured_user2_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"featuredUser3Id","kind":"scalar","dbName":"featured_user3_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"featuredUser4Id","kind":"scalar","dbName":"featured_user4_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"hasSummary","kind":"scalar","dbName":"has_summary","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"highestPostNumber","kind":"scalar","dbName":"highest_post_number","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"highestStaffPostNumber","kind":"scalar","dbName":"highest_staff_post_number","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"imageUrl","kind":"scalar","dbName":"image_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"incomingLinkCount","kind":"scalar","dbName":"incoming_link_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastPostedAt","kind":"scalar","dbName":"last_posted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastPostUserId","kind":"scalar","dbName":"last_post_user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"likeCount","kind":"scalar","dbName":"like_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"moderatorPostsCount","kind":"scalar","dbName":"moderator_posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notifyModeratorsCount","kind":"scalar","dbName":"notify_moderators_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"participantCount","kind":"scalar","dbName":"participant_count","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"percentRank","kind":"scalar","dbName":"percent_rank","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"pinnedAt","kind":"scalar","dbName":"pinned_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"pinnedGlobally","kind":"scalar","dbName":"pinned_globally","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"pinnedUntil","kind":"scalar","dbName":"pinned_until","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"postsCount","kind":"scalar","dbName":"posts_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"replyCount","kind":"scalar","dbName":"reply_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"score","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"slug","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"spamCount","kind":"scalar","dbName":"spam_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"subtype","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"views","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"visible","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"wordCount","kind":"scalar","dbName":"word_count","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicAllowedGroup","isEmbedded":false,"dbName":"topic_allowed_groups","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"groupId","kind":"scalar","dbName":"group_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicAllowedUser","isEmbedded":false,"dbName":"topic_allowed_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicCustomField","isEmbedded":false,"dbName":"topic_custom_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicEmbed","isEmbedded":false,"dbName":"topic_embeds","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"contentSha1","kind":"scalar","dbName":"content_sha1","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"embedUrl","kind":"scalar","dbName":"embed_url","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicInvite","isEmbedded":false,"dbName":"topic_invites","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"inviteId","kind":"scalar","dbName":"invite_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicLink","isEmbedded":false,"dbName":"topic_links","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"clicks","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"crawledAt","kind":"scalar","dbName":"crawled_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"domain","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"extension","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"internal","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"linkPostId","kind":"scalar","dbName":"link_post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"linkTopicId","kind":"scalar","dbName":"link_topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"quote","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"reflection","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicLinkClick","isEmbedded":false,"dbName":"topic_link_clicks","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"topicLinkId","kind":"scalar","dbName":"topic_link_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicSearchDatum","isEmbedded":false,"dbName":"topic_search_data","fields":[{"name":"topic_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawData","kind":"scalar","dbName":"raw_data","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicTag","isEmbedded":false,"dbName":"topic_tags","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"tagId","kind":"scalar","dbName":"tag_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicTimer","isEmbedded":false,"dbName":"topic_timers","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"basedOnLastPost","kind":"scalar","dbName":"based_on_last_post","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedAt","kind":"scalar","dbName":"deleted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"deletedById","kind":"scalar","dbName":"deleted_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"executeAt","kind":"scalar","dbName":"execute_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"publicType","kind":"scalar","dbName":"public_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"statusType","kind":"scalar","dbName":"status_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TopicUser","isEmbedded":false,"dbName":"topic_users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bookmarked","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"clearedPinnedAt","kind":"scalar","dbName":"cleared_pinned_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"firstVisitedAt","kind":"scalar","dbName":"first_visited_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"highestSeenPostNumber","kind":"scalar","dbName":"highest_seen_post_number","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastEmailedPostNumber","kind":"scalar","dbName":"last_emailed_post_number","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastReadPostNumber","kind":"scalar","dbName":"last_read_post_number","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastVisitedAt","kind":"scalar","dbName":"last_visited_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"liked","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"notificationLevel","kind":"scalar","dbName":"notification_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notificationsChangedAt","kind":"scalar","dbName":"notifications_changed_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"notificationsReasonId","kind":"scalar","dbName":"notifications_reason_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"posted","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"totalMsecsViewed","kind":"scalar","dbName":"total_msecs_viewed","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TranslationOverride","isEmbedded":false,"dbName":"translation_overrides","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"compiledJs","kind":"scalar","dbName":"compiled_js","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"translationKey","kind":"scalar","dbName":"translation_key","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"TwitterUserInfo","isEmbedded":false,"dbName":"twitter_user_infos","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"screenName","kind":"scalar","dbName":"screen_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"twitterUserId","kind":"scalar","dbName":"twitter_user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UnsubscribeKey","isEmbedded":false,"dbName":"unsubscribe_keys","fields":[{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"String","default":{"name":"cuid","returnType":"String","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"unsubscribeKeyType","kind":"scalar","dbName":"unsubscribe_key_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"Upload","isEmbedded":false,"dbName":"uploads","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"extension","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"filesize","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"height","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"origin","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"originalFilename","kind":"scalar","dbName":"original_filename","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"retainHours","kind":"scalar","dbName":"retain_hours","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"sha1","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"thumbnailHeight","kind":"scalar","dbName":"thumbnail_height","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"thumbnailWidth","kind":"scalar","dbName":"thumbnail_width","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"width","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"User","isEmbedded":false,"dbName":"users","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"active","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"admin","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"approved","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"approvedAt","kind":"scalar","dbName":"approved_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"approvedById","kind":"scalar","dbName":"approved_by_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"dateOfBirth","kind":"scalar","dbName":"date_of_birth","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"firstSeenAt","kind":"scalar","dbName":"first_seen_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"flagLevel","kind":"scalar","dbName":"flag_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"groupLockedTrustLevel","kind":"scalar","dbName":"group_locked_trust_level","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastEmailedAt","kind":"scalar","dbName":"last_emailed_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastPostedAt","kind":"scalar","dbName":"last_posted_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastSeenAt","kind":"scalar","dbName":"last_seen_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"manualLockedTrustLevel","kind":"scalar","dbName":"manual_locked_trust_level","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"moderator","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"passwordHash","kind":"scalar","dbName":"password_hash","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"previousVisitAt","kind":"scalar","dbName":"previous_visit_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"primaryGroupId","kind":"scalar","dbName":"primary_group_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"salt","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"seenNotificationId","kind":"scalar","dbName":"seen_notification_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"silencedTill","kind":"scalar","dbName":"silenced_till","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"staged","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"suspendedAt","kind":"scalar","dbName":"suspended_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"suspendedTill","kind":"scalar","dbName":"suspended_till","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"trustLevel","kind":"scalar","dbName":"trust_level","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadedAvatarId","kind":"scalar","dbName":"uploaded_avatar_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"username","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"usernameLower","kind":"scalar","dbName":"username_lower","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"views","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserAction","isEmbedded":false,"dbName":"user_actions","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actingUserId","kind":"scalar","dbName":"acting_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actionType","kind":"scalar","dbName":"action_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"queuedPostId","kind":"scalar","dbName":"queued_post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"targetPostId","kind":"scalar","dbName":"target_post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"targetTopicId","kind":"scalar","dbName":"target_topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"targetUserId","kind":"scalar","dbName":"target_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserApiKey","isEmbedded":false,"dbName":"user_api_keys","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"applicationName","kind":"scalar","dbName":"application_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"clientId","kind":"scalar","dbName":"client_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"key","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lastUsedAt","kind":"scalar","dbName":"last_used_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"pushUrl","kind":"scalar","dbName":"push_url","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"revokedAt","kind":"scalar","dbName":"revoked_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"scopes","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserArchivedMessage","isEmbedded":false,"dbName":"user_archived_messages","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserAuthToken","isEmbedded":false,"dbName":"user_auth_tokens","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"authToken","kind":"scalar","dbName":"auth_token","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"authTokenSeen","kind":"scalar","dbName":"auth_token_seen","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"prevAuthToken","kind":"scalar","dbName":"prev_auth_token","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rotatedAt","kind":"scalar","dbName":"rotated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"seenAt","kind":"scalar","dbName":"seen_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userAgent","kind":"scalar","dbName":"user_agent","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserAuthTokenLog","isEmbedded":false,"dbName":"user_auth_token_logs","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"action","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"authToken","kind":"scalar","dbName":"auth_token","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"path","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userAgent","kind":"scalar","dbName":"user_agent","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userAuthTokenId","kind":"scalar","dbName":"user_auth_token_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserAvatar","isEmbedded":false,"dbName":"user_avatars","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"customUploadId","kind":"scalar","dbName":"custom_upload_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"gravatarUploadId","kind":"scalar","dbName":"gravatar_upload_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"lastGravatarDownloadAttempt","kind":"scalar","dbName":"last_gravatar_download_attempt","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserBadge","isEmbedded":false,"dbName":"user_badges","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"badgeId","kind":"scalar","dbName":"badge_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"grantedAt","kind":"scalar","dbName":"granted_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"grantedById","kind":"scalar","dbName":"granted_by_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notificationId","kind":"scalar","dbName":"notification_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"seq","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserCustomField","isEmbedded":false,"dbName":"user_custom_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserEmail","isEmbedded":false,"dbName":"user_emails","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"primary","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserExport","isEmbedded":false,"dbName":"user_exports","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"fileName","kind":"scalar","dbName":"file_name","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserField","isEmbedded":false,"dbName":"user_fields","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"editable","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"externalName","kind":"scalar","dbName":"external_name","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"externalType","kind":"scalar","dbName":"external_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"fieldType","kind":"scalar","dbName":"field_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"position","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"required","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"showOnProfile","kind":"scalar","dbName":"show_on_profile","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"showOnUserCard","kind":"scalar","dbName":"show_on_user_card","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserFieldOption","isEmbedded":false,"dbName":"user_field_options","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userFieldId","kind":"scalar","dbName":"user_field_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"value","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserHistory","isEmbedded":false,"dbName":"user_histories","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"actingUserId","kind":"scalar","dbName":"acting_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"action","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"adminOnly","kind":"scalar","dbName":"admin_only","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"categoryId","kind":"scalar","dbName":"category_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"context","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"customType","kind":"scalar","dbName":"custom_type","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"details","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"ipAddress","kind":"scalar","dbName":"ip_address","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"newValue","kind":"scalar","dbName":"new_value","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"postId","kind":"scalar","dbName":"post_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"previousValue","kind":"scalar","dbName":"previous_value","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"subject","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"targetUserId","kind":"scalar","dbName":"target_user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserOpenId","isEmbedded":false,"dbName":"user_open_ids","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"active","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"url","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserOption","isEmbedded":false,"dbName":"user_options","fields":[{"name":"user_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":true,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"allowPrivateMessages","kind":"scalar","dbName":"allow_private_messages","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"automaticallyUnpinTopics","kind":"scalar","dbName":"automatically_unpin_topics","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"autoTrackTopicsAfterMsecs","kind":"scalar","dbName":"auto_track_topics_after_msecs","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"digestAfterMinutes","kind":"scalar","dbName":"digest_after_minutes","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"disableJumpReply","kind":"scalar","dbName":"disable_jump_reply","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"dynamicFavicon","kind":"scalar","dbName":"dynamic_favicon","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"emailAlways","kind":"scalar","dbName":"email_always","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"emailDigests","kind":"scalar","dbName":"email_digests","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"emailDirect","kind":"scalar","dbName":"email_direct","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"emailInReplyTo","kind":"scalar","dbName":"email_in_reply_to","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"emailPreviousReplies","kind":"scalar","dbName":"email_previous_replies","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"emailPrivateMessages","kind":"scalar","dbName":"email_private_messages","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"enableQuoting","kind":"scalar","dbName":"enable_quoting","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"externalLinksInNewTab","kind":"scalar","dbName":"external_links_in_new_tab","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"hideProfileAndPresence","kind":"scalar","dbName":"hide_profile_and_presence","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"homepageId","kind":"scalar","dbName":"homepage_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"includeTl0InDigests","kind":"scalar","dbName":"include_tl0_in_digests","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"lastRedirectedToTopAt","kind":"scalar","dbName":"last_redirected_to_top_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"likeNotificationFrequency","kind":"scalar","dbName":"like_notification_frequency","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"mailingListMode","kind":"scalar","dbName":"mailing_list_mode","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"mailingListModeFrequency","kind":"scalar","dbName":"mailing_list_mode_frequency","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"newTopicDurationMinutes","kind":"scalar","dbName":"new_topic_duration_minutes","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"notificationLevelWhenReplying","kind":"scalar","dbName":"notification_level_when_replying","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"themeIds","kind":"scalar","dbName":"theme_ids","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"themeKeySeq","kind":"scalar","dbName":"theme_key_seq","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserProfile","isEmbedded":false,"dbName":"user_profiles","fields":[{"name":"user_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"badgeGrantedTitle","kind":"scalar","dbName":"badge_granted_title","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"bioCooked","kind":"scalar","dbName":"bio_cooked","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"bioCookedVersion","kind":"scalar","dbName":"bio_cooked_version","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bioRaw","kind":"scalar","dbName":"bio_raw","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cardBackground","kind":"scalar","dbName":"card_background","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"dismissedBannerKey","kind":"scalar","dbName":"dismissed_banner_key","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"location","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"profileBackground","kind":"scalar","dbName":"profile_background","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"views","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"website","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserProfileView","isEmbedded":false,"dbName":"user_profile_views","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userProfileId","kind":"scalar","dbName":"user_profile_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"viewedAt","kind":"scalar","dbName":"viewed_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserSearchDatum","isEmbedded":false,"dbName":"user_search_data","fields":[{"name":"user_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"locale","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"rawData","kind":"scalar","dbName":"raw_data","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"version","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserSecondFactor","isEmbedded":false,"dbName":"user_second_factors","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"data","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"enabled","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"lastUsed","kind":"scalar","dbName":"last_used","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"method","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserStat","isEmbedded":false,"dbName":"user_stats","fields":[{"name":"user_id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"bounceScore","kind":"scalar","dbName":"bounce_score","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Float","isGenerated":false,"isUpdatedAt":false},{"name":"daysVisited","kind":"scalar","dbName":"days_visited","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"firstPostCreatedAt","kind":"scalar","dbName":"first_post_created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"likesGiven","kind":"scalar","dbName":"likes_given","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"likesReceived","kind":"scalar","dbName":"likes_received","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"newSince","kind":"scalar","dbName":"new_since","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"postCount","kind":"scalar","dbName":"post_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"postsReadCount","kind":"scalar","dbName":"posts_read_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"readFaq","kind":"scalar","dbName":"read_faq","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"resetBounceScoreAfter","kind":"scalar","dbName":"reset_bounce_score_after","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"timeRead","kind":"scalar","dbName":"time_read","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicCount","kind":"scalar","dbName":"topic_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicReplyCount","kind":"scalar","dbName":"topic_reply_count","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicsEntered","kind":"scalar","dbName":"topics_entered","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserUpload","isEmbedded":false,"dbName":"user_uploads","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"uploadId","kind":"scalar","dbName":"upload_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserVisit","isEmbedded":false,"dbName":"user_visits","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"mobile","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"postsRead","kind":"scalar","dbName":"posts_read","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"timeRead","kind":"scalar","dbName":"time_read","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"visitedAt","kind":"scalar","dbName":"visited_at","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"UserWarning","isEmbedded":false,"dbName":"user_warnings","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"createdById","kind":"scalar","dbName":"created_by_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"topicId","kind":"scalar","dbName":"topic_id","isList":false,"isRequired":true,"isUnique":true,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userId","kind":"scalar","dbName":"user_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"WatchedWord","isEmbedded":false,"dbName":"watched_words","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"action","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"word","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"WebCrawlerRequest","isEmbedded":false,"dbName":"web_crawler_requests","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"count","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"date","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"userAgent","kind":"scalar","dbName":"user_agent","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"WebHook","isEmbedded":false,"dbName":"web_hooks","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"active","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"contentType","kind":"scalar","dbName":"content_type","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"lastDeliveryStatus","kind":"scalar","dbName":"last_delivery_status","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"payloadUrl","kind":"scalar","dbName":"payload_url","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"secret","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"status","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"verifyCertificate","kind":"scalar","dbName":"verify_certificate","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false},{"name":"wildcardWebHook","kind":"scalar","dbName":"wildcard_web_hook","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Boolean","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"WebHookEvent","isEmbedded":false,"dbName":"web_hook_events","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","dbName":"created_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"duration","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"headers","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"payload","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"responseBody","kind":"scalar","dbName":"response_body","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"responseHeaders","kind":"scalar","dbName":"response_headers","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"status","kind":"scalar","dbName":null,"isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","dbName":"updated_at","isList":false,"isRequired":false,"isUnique":false,"isId":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":false},{"name":"webHookId","kind":"scalar","dbName":"web_hook_id","isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false},{"name":"WebHookEventType","isEmbedded":false,"dbName":"web_hook_event_types","fields":[{"name":"id","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":true,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"name","kind":"scalar","dbName":null,"isList":false,"isRequired":true,"isUnique":false,"isId":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"isGenerated":false}]},"mappings":[{"model":"ApiKey","findOne":"apiKey","findMany":"apiKeys","create":"createApiKey","update":"updateApiKey","updateMany":"updateManyApiKeys","upsert":"upsertApiKey","delete":"deleteApiKey","deleteMany":"deleteManyApiKeys"},{"model":"ApplicationRequest","findOne":"applicationRequest","findMany":"applicationRequests","create":"createApplicationRequest","update":"updateApplicationRequest","updateMany":"updateManyApplicationRequests","upsert":"upsertApplicationRequest","delete":"deleteApplicationRequest","deleteMany":"deleteManyApplicationRequests"},{"model":"ArInternalMetadatum","findOne":null,"findMany":"arInternalMetadata","create":"createArInternalMetadatum","update":null,"updateMany":"updateManyArInternalMetadata","upsert":null,"delete":null,"deleteMany":"deleteManyArInternalMetadata"},{"model":"Badge","findOne":"badge","findMany":"badges","create":"createBadge","update":"updateBadge","updateMany":"updateManyBadges","upsert":"upsertBadge","delete":"deleteBadge","deleteMany":"deleteManyBadges"},{"model":"BadgeGrouping","findOne":"badgeGrouping","findMany":"badgeGroupings","create":"createBadgeGrouping","update":"updateBadgeGrouping","updateMany":"updateManyBadgeGroupings","upsert":"upsertBadgeGrouping","delete":"deleteBadgeGrouping","deleteMany":"deleteManyBadgeGroupings"},{"model":"BadgeType","findOne":"badgeType","findMany":"badgeTypes","create":"createBadgeType","update":"updateBadgeType","updateMany":"updateManyBadgeTypes","upsert":"upsertBadgeType","delete":"deleteBadgeType","deleteMany":"deleteManyBadgeTypes"},{"model":"Category","findOne":"category","findMany":"categories","create":"createCategory","update":"updateCategory","updateMany":"updateManyCategories","upsert":"upsertCategory","delete":"deleteCategory","deleteMany":"deleteManyCategories"},{"model":"CategoryCustomField","findOne":"categoryCustomField","findMany":"categoryCustomFields","create":"createCategoryCustomField","update":"updateCategoryCustomField","updateMany":"updateManyCategoryCustomFields","upsert":"upsertCategoryCustomField","delete":"deleteCategoryCustomField","deleteMany":"deleteManyCategoryCustomFields"},{"model":"CategoryFeaturedTopic","findOne":"categoryFeaturedTopic","findMany":"categoryFeaturedTopics","create":"createCategoryFeaturedTopic","update":"updateCategoryFeaturedTopic","updateMany":"updateManyCategoryFeaturedTopics","upsert":"upsertCategoryFeaturedTopic","delete":"deleteCategoryFeaturedTopic","deleteMany":"deleteManyCategoryFeaturedTopics"},{"model":"CategoryGroup","findOne":"categoryGroup","findMany":"categoryGroups","create":"createCategoryGroup","update":"updateCategoryGroup","updateMany":"updateManyCategoryGroups","upsert":"upsertCategoryGroup","delete":"deleteCategoryGroup","deleteMany":"deleteManyCategoryGroups"},{"model":"CategorySearchDatum","findOne":null,"findMany":"categorySearchData","create":"createCategorySearchDatum","update":null,"updateMany":"updateManyCategorySearchData","upsert":null,"delete":null,"deleteMany":"deleteManyCategorySearchData"},{"model":"CategoryTag","findOne":"categoryTag","findMany":"categoryTags","create":"createCategoryTag","update":"updateCategoryTag","updateMany":"updateManyCategoryTags","upsert":"upsertCategoryTag","delete":"deleteCategoryTag","deleteMany":"deleteManyCategoryTags"},{"model":"CategoryTagGroup","findOne":"categoryTagGroup","findMany":"categoryTagGroups","create":"createCategoryTagGroup","update":"updateCategoryTagGroup","updateMany":"updateManyCategoryTagGroups","upsert":"upsertCategoryTagGroup","delete":"deleteCategoryTagGroup","deleteMany":"deleteManyCategoryTagGroups"},{"model":"CategoryTagStat","findOne":"categoryTagStat","findMany":"categoryTagStats","create":"createCategoryTagStat","update":"updateCategoryTagStat","updateMany":"updateManyCategoryTagStats","upsert":"upsertCategoryTagStat","delete":"deleteCategoryTagStat","deleteMany":"deleteManyCategoryTagStats"},{"model":"CategoryUser","findOne":"categoryUser","findMany":"categoryUsers","create":"createCategoryUser","update":"updateCategoryUser","updateMany":"updateManyCategoryUsers","upsert":"upsertCategoryUser","delete":"deleteCategoryUser","deleteMany":"deleteManyCategoryUsers"},{"model":"ChildTheme","findOne":"childTheme","findMany":"childThemes","create":"createChildTheme","update":"updateChildTheme","updateMany":"updateManyChildThemes","upsert":"upsertChildTheme","delete":"deleteChildTheme","deleteMany":"deleteManyChildThemes"},{"model":"ColorScheme","findOne":"colorScheme","findMany":"colorSchemes","create":"createColorScheme","update":"updateColorScheme","updateMany":"updateManyColorSchemes","upsert":"upsertColorScheme","delete":"deleteColorScheme","deleteMany":"deleteManyColorSchemes"},{"model":"ColorSchemeColor","findOne":"colorSchemeColor","findMany":"colorSchemeColors","create":"createColorSchemeColor","update":"updateColorSchemeColor","updateMany":"updateManyColorSchemeColors","upsert":"upsertColorSchemeColor","delete":"deleteColorSchemeColor","deleteMany":"deleteManyColorSchemeColors"},{"model":"CustomEmoji","findOne":"customEmoji","findMany":"customEmojis","create":"createCustomEmoji","update":"updateCustomEmoji","updateMany":"updateManyCustomEmojis","upsert":"upsertCustomEmoji","delete":"deleteCustomEmoji","deleteMany":"deleteManyCustomEmojis"},{"model":"Developer","findOne":"developer","findMany":"developers","create":"createDeveloper","update":"updateDeveloper","updateMany":"updateManyDevelopers","upsert":"upsertDeveloper","delete":"deleteDeveloper","deleteMany":"deleteManyDevelopers"},{"model":"DirectoryItem","findOne":"directoryItem","findMany":"directoryItems","create":"createDirectoryItem","update":"updateDirectoryItem","updateMany":"updateManyDirectoryItems","upsert":"upsertDirectoryItem","delete":"deleteDirectoryItem","deleteMany":"deleteManyDirectoryItems"},{"model":"Draft","findOne":"draft","findMany":"drafts","create":"createDraft","update":"updateDraft","updateMany":"updateManyDrafts","upsert":"upsertDraft","delete":"deleteDraft","deleteMany":"deleteManyDrafts"},{"model":"DraftSequence","findOne":"draftSequence","findMany":"draftSequences","create":"createDraftSequence","update":"updateDraftSequence","updateMany":"updateManyDraftSequences","upsert":"upsertDraftSequence","delete":"deleteDraftSequence","deleteMany":"deleteManyDraftSequences"},{"model":"EmailChangeRequest","findOne":"emailChangeRequest","findMany":"emailChangeRequests","create":"createEmailChangeRequest","update":"updateEmailChangeRequest","updateMany":"updateManyEmailChangeRequests","upsert":"upsertEmailChangeRequest","delete":"deleteEmailChangeRequest","deleteMany":"deleteManyEmailChangeRequests"},{"model":"EmailLog","findOne":"emailLog","findMany":"emailLogs","create":"createEmailLog","update":"updateEmailLog","updateMany":"updateManyEmailLogs","upsert":"upsertEmailLog","delete":"deleteEmailLog","deleteMany":"deleteManyEmailLogs"},{"model":"EmailToken","findOne":"emailToken","findMany":"emailTokens","create":"createEmailToken","update":"updateEmailToken","updateMany":"updateManyEmailTokens","upsert":"upsertEmailToken","delete":"deleteEmailToken","deleteMany":"deleteManyEmailTokens"},{"model":"EmbeddableHost","findOne":"embeddableHost","findMany":"embeddableHosts","create":"createEmbeddableHost","update":"updateEmbeddableHost","updateMany":"updateManyEmbeddableHosts","upsert":"upsertEmbeddableHost","delete":"deleteEmbeddableHost","deleteMany":"deleteManyEmbeddableHosts"},{"model":"FacebookUserInfo","findOne":"facebookUserInfo","findMany":"facebookUserInfoes","create":"createFacebookUserInfo","update":"updateFacebookUserInfo","updateMany":"updateManyFacebookUserInfoes","upsert":"upsertFacebookUserInfo","delete":"deleteFacebookUserInfo","deleteMany":"deleteManyFacebookUserInfoes"},{"model":"GithubUserInfo","findOne":"githubUserInfo","findMany":"githubUserInfoes","create":"createGithubUserInfo","update":"updateGithubUserInfo","updateMany":"updateManyGithubUserInfoes","upsert":"upsertGithubUserInfo","delete":"deleteGithubUserInfo","deleteMany":"deleteManyGithubUserInfoes"},{"model":"GoogleUserInfo","findOne":"googleUserInfo","findMany":"googleUserInfoes","create":"createGoogleUserInfo","update":"updateGoogleUserInfo","updateMany":"updateManyGoogleUserInfoes","upsert":"upsertGoogleUserInfo","delete":"deleteGoogleUserInfo","deleteMany":"deleteManyGoogleUserInfoes"},{"model":"Group","findOne":"group","findMany":"groups","create":"createGroup","update":"updateGroup","updateMany":"updateManyGroups","upsert":"upsertGroup","delete":"deleteGroup","deleteMany":"deleteManyGroups"},{"model":"GroupArchivedMessage","findOne":"groupArchivedMessage","findMany":"groupArchivedMessages","create":"createGroupArchivedMessage","update":"updateGroupArchivedMessage","updateMany":"updateManyGroupArchivedMessages","upsert":"upsertGroupArchivedMessage","delete":"deleteGroupArchivedMessage","deleteMany":"deleteManyGroupArchivedMessages"},{"model":"GroupCustomField","findOne":"groupCustomField","findMany":"groupCustomFields","create":"createGroupCustomField","update":"updateGroupCustomField","updateMany":"updateManyGroupCustomFields","upsert":"upsertGroupCustomField","delete":"deleteGroupCustomField","deleteMany":"deleteManyGroupCustomFields"},{"model":"GroupHistory","findOne":"groupHistory","findMany":"groupHistories","create":"createGroupHistory","update":"updateGroupHistory","updateMany":"updateManyGroupHistories","upsert":"upsertGroupHistory","delete":"deleteGroupHistory","deleteMany":"deleteManyGroupHistories"},{"model":"GroupMention","findOne":"groupMention","findMany":"groupMentions","create":"createGroupMention","update":"updateGroupMention","updateMany":"updateManyGroupMentions","upsert":"upsertGroupMention","delete":"deleteGroupMention","deleteMany":"deleteManyGroupMentions"},{"model":"GroupUser","findOne":"groupUser","findMany":"groupUsers","create":"createGroupUser","update":"updateGroupUser","updateMany":"updateManyGroupUsers","upsert":"upsertGroupUser","delete":"deleteGroupUser","deleteMany":"deleteManyGroupUsers"},{"model":"IncomingDomain","findOne":"incomingDomain","findMany":"incomingDomains","create":"createIncomingDomain","update":"updateIncomingDomain","updateMany":"updateManyIncomingDomains","upsert":"upsertIncomingDomain","delete":"deleteIncomingDomain","deleteMany":"deleteManyIncomingDomains"},{"model":"IncomingEmail","findOne":"incomingEmail","findMany":"incomingEmails","create":"createIncomingEmail","update":"updateIncomingEmail","updateMany":"updateManyIncomingEmails","upsert":"upsertIncomingEmail","delete":"deleteIncomingEmail","deleteMany":"deleteManyIncomingEmails"},{"model":"IncomingLink","findOne":"incomingLink","findMany":"incomingLinks","create":"createIncomingLink","update":"updateIncomingLink","updateMany":"updateManyIncomingLinks","upsert":"upsertIncomingLink","delete":"deleteIncomingLink","deleteMany":"deleteManyIncomingLinks"},{"model":"IncomingReferer","findOne":"incomingReferer","findMany":"incomingReferers","create":"createIncomingReferer","update":"updateIncomingReferer","updateMany":"updateManyIncomingReferers","upsert":"upsertIncomingReferer","delete":"deleteIncomingReferer","deleteMany":"deleteManyIncomingReferers"},{"model":"InstagramUserInfo","findOne":"instagramUserInfo","findMany":"instagramUserInfoes","create":"createInstagramUserInfo","update":"updateInstagramUserInfo","updateMany":"updateManyInstagramUserInfoes","upsert":"upsertInstagramUserInfo","delete":"deleteInstagramUserInfo","deleteMany":"deleteManyInstagramUserInfoes"},{"model":"Invite","findOne":"invite","findMany":"invites","create":"createInvite","update":"updateInvite","updateMany":"updateManyInvites","upsert":"upsertInvite","delete":"deleteInvite","deleteMany":"deleteManyInvites"},{"model":"InvitedGroup","findOne":"invitedGroup","findMany":"invitedGroups","create":"createInvitedGroup","update":"updateInvitedGroup","updateMany":"updateManyInvitedGroups","upsert":"upsertInvitedGroup","delete":"deleteInvitedGroup","deleteMany":"deleteManyInvitedGroups"},{"model":"JavascriptCach","findOne":"javascriptCach","findMany":"javascriptCaches","create":"createJavascriptCach","update":"updateJavascriptCach","updateMany":"updateManyJavascriptCaches","upsert":"upsertJavascriptCach","delete":"deleteJavascriptCach","deleteMany":"deleteManyJavascriptCaches"},{"model":"MessageBus","findOne":"messageBus","findMany":"messageBuses","create":"createMessageBus","update":"updateMessageBus","updateMany":"updateManyMessageBuses","upsert":"upsertMessageBus","delete":"deleteMessageBus","deleteMany":"deleteManyMessageBuses"},{"model":"MutedUser","findOne":"mutedUser","findMany":"mutedUsers","create":"createMutedUser","update":"updateMutedUser","updateMany":"updateManyMutedUsers","upsert":"upsertMutedUser","delete":"deleteMutedUser","deleteMany":"deleteManyMutedUsers"},{"model":"Notification","findOne":"notification","findMany":"notifications","create":"createNotification","update":"updateNotification","updateMany":"updateManyNotifications","upsert":"upsertNotification","delete":"deleteNotification","deleteMany":"deleteManyNotifications"},{"model":"Oauth2UserInfo","findOne":"oauth2UserInfo","findMany":"oauth2UserInfoes","create":"createOauth2UserInfo","update":"updateOauth2UserInfo","updateMany":"updateManyOauth2UserInfoes","upsert":"upsertOauth2UserInfo","delete":"deleteOauth2UserInfo","deleteMany":"deleteManyOauth2UserInfoes"},{"model":"OnceoffLog","findOne":"onceoffLog","findMany":"onceoffLogs","create":"createOnceoffLog","update":"updateOnceoffLog","updateMany":"updateManyOnceoffLogs","upsert":"upsertOnceoffLog","delete":"deleteOnceoffLog","deleteMany":"deleteManyOnceoffLogs"},{"model":"OptimizedImage","findOne":"optimizedImage","findMany":"optimizedImages","create":"createOptimizedImage","update":"updateOptimizedImage","updateMany":"updateManyOptimizedImages","upsert":"upsertOptimizedImage","delete":"deleteOptimizedImage","deleteMany":"deleteManyOptimizedImages"},{"model":"Permalink","findOne":"permalink","findMany":"permalinks","create":"createPermalink","update":"updatePermalink","updateMany":"updateManyPermalinks","upsert":"upsertPermalink","delete":"deletePermalink","deleteMany":"deleteManyPermalinks"},{"model":"PluginStoreRow","findOne":"pluginStoreRow","findMany":"pluginStoreRows","create":"createPluginStoreRow","update":"updatePluginStoreRow","updateMany":"updateManyPluginStoreRows","upsert":"upsertPluginStoreRow","delete":"deletePluginStoreRow","deleteMany":"deleteManyPluginStoreRows"},{"model":"Post","findOne":"post","findMany":"posts","create":"createPost","update":"updatePost","updateMany":"updateManyPosts","upsert":"upsertPost","delete":"deletePost","deleteMany":"deleteManyPosts"},{"model":"PostAction","findOne":"postAction","findMany":"postActions","create":"createPostAction","update":"updatePostAction","updateMany":"updateManyPostActions","upsert":"upsertPostAction","delete":"deletePostAction","deleteMany":"deleteManyPostActions"},{"model":"PostActionType","findOne":"postActionType","findMany":"postActionTypes","create":"createPostActionType","update":"updatePostActionType","updateMany":"updateManyPostActionTypes","upsert":"upsertPostActionType","delete":"deletePostActionType","deleteMany":"deleteManyPostActionTypes"},{"model":"PostCustomField","findOne":"postCustomField","findMany":"postCustomFields","create":"createPostCustomField","update":"updatePostCustomField","updateMany":"updateManyPostCustomFields","upsert":"upsertPostCustomField","delete":"deletePostCustomField","deleteMany":"deleteManyPostCustomFields"},{"model":"PostDetail","findOne":"postDetail","findMany":"postDetails","create":"createPostDetail","update":"updatePostDetail","updateMany":"updateManyPostDetails","upsert":"upsertPostDetail","delete":"deletePostDetail","deleteMany":"deleteManyPostDetails"},{"model":"PostReplyKey","findOne":"postReplyKey","findMany":"postReplyKeys","create":"createPostReplyKey","update":"updatePostReplyKey","updateMany":"updateManyPostReplyKeys","upsert":"upsertPostReplyKey","delete":"deletePostReplyKey","deleteMany":"deleteManyPostReplyKeys"},{"model":"PostRevision","findOne":"postRevision","findMany":"postRevisions","create":"createPostRevision","update":"updatePostRevision","updateMany":"updateManyPostRevisions","upsert":"upsertPostRevision","delete":"deletePostRevision","deleteMany":"deleteManyPostRevisions"},{"model":"PostSearchDatum","findOne":null,"findMany":"postSearchData","create":"createPostSearchDatum","update":null,"updateMany":"updateManyPostSearchData","upsert":null,"delete":null,"deleteMany":"deleteManyPostSearchData"},{"model":"PostStat","findOne":"postStat","findMany":"postStats","create":"createPostStat","update":"updatePostStat","updateMany":"updateManyPostStats","upsert":"upsertPostStat","delete":"deletePostStat","deleteMany":"deleteManyPostStats"},{"model":"PostUpload","findOne":"postUpload","findMany":"postUploads","create":"createPostUpload","update":"updatePostUpload","updateMany":"updateManyPostUploads","upsert":"upsertPostUpload","delete":"deletePostUpload","deleteMany":"deleteManyPostUploads"},{"model":"PushSubscription","findOne":"pushSubscription","findMany":"pushSubscriptions","create":"createPushSubscription","update":"updatePushSubscription","updateMany":"updateManyPushSubscriptions","upsert":"upsertPushSubscription","delete":"deletePushSubscription","deleteMany":"deleteManyPushSubscriptions"},{"model":"QueuedPost","findOne":"queuedPost","findMany":"queuedPosts","create":"createQueuedPost","update":"updateQueuedPost","updateMany":"updateManyQueuedPosts","upsert":"upsertQueuedPost","delete":"deleteQueuedPost","deleteMany":"deleteManyQueuedPosts"},{"model":"QuotedPost","findOne":"quotedPost","findMany":"quotedPosts","create":"createQuotedPost","update":"updateQuotedPost","updateMany":"updateManyQuotedPosts","upsert":"upsertQuotedPost","delete":"deleteQuotedPost","deleteMany":"deleteManyQuotedPosts"},{"model":"RemoteTheme","findOne":"remoteTheme","findMany":"remoteThemes","create":"createRemoteTheme","update":"updateRemoteTheme","updateMany":"updateManyRemoteThemes","upsert":"upsertRemoteTheme","delete":"deleteRemoteTheme","deleteMany":"deleteManyRemoteThemes"},{"model":"SchedulerStat","findOne":"schedulerStat","findMany":"schedulerStats","create":"createSchedulerStat","update":"updateSchedulerStat","updateMany":"updateManySchedulerStats","upsert":"upsertSchedulerStat","delete":"deleteSchedulerStat","deleteMany":"deleteManySchedulerStats"},{"model":"SchemaMigration","findOne":"schemaMigration","findMany":"schemaMigrations","create":"createSchemaMigration","update":"updateSchemaMigration","updateMany":"updateManySchemaMigrations","upsert":"upsertSchemaMigration","delete":"deleteSchemaMigration","deleteMany":"deleteManySchemaMigrations"},{"model":"SchemaMigrationDetail","findOne":"schemaMigrationDetail","findMany":"schemaMigrationDetails","create":"createSchemaMigrationDetail","update":"updateSchemaMigrationDetail","updateMany":"updateManySchemaMigrationDetails","upsert":"upsertSchemaMigrationDetail","delete":"deleteSchemaMigrationDetail","deleteMany":"deleteManySchemaMigrationDetails"},{"model":"ScreenedEmail","findOne":"screenedEmail","findMany":"screenedEmails","create":"createScreenedEmail","update":"updateScreenedEmail","updateMany":"updateManyScreenedEmails","upsert":"upsertScreenedEmail","delete":"deleteScreenedEmail","deleteMany":"deleteManyScreenedEmails"},{"model":"ScreenedIpAddress","findOne":"screenedIpAddress","findMany":"screenedIpAddresses","create":"createScreenedIpAddress","update":"updateScreenedIpAddress","updateMany":"updateManyScreenedIpAddresses","upsert":"upsertScreenedIpAddress","delete":"deleteScreenedIpAddress","deleteMany":"deleteManyScreenedIpAddresses"},{"model":"ScreenedUrl","findOne":"screenedUrl","findMany":"screenedUrls","create":"createScreenedUrl","update":"updateScreenedUrl","updateMany":"updateManyScreenedUrls","upsert":"upsertScreenedUrl","delete":"deleteScreenedUrl","deleteMany":"deleteManyScreenedUrls"},{"model":"SearchLog","findOne":"searchLog","findMany":"searchLogs","create":"createSearchLog","update":"updateSearchLog","updateMany":"updateManySearchLogs","upsert":"upsertSearchLog","delete":"deleteSearchLog","deleteMany":"deleteManySearchLogs"},{"model":"SharedDraft","findOne":"sharedDraft","findMany":"sharedDrafts","create":"createSharedDraft","update":"updateSharedDraft","updateMany":"updateManySharedDrafts","upsert":"upsertSharedDraft","delete":"deleteSharedDraft","deleteMany":"deleteManySharedDrafts"},{"model":"SingleSignOnRecord","findOne":"singleSignOnRecord","findMany":"singleSignOnRecords","create":"createSingleSignOnRecord","update":"updateSingleSignOnRecord","updateMany":"updateManySingleSignOnRecords","upsert":"upsertSingleSignOnRecord","delete":"deleteSingleSignOnRecord","deleteMany":"deleteManySingleSignOnRecords"},{"model":"SiteSetting","findOne":"siteSetting","findMany":"siteSettings","create":"createSiteSetting","update":"updateSiteSetting","updateMany":"updateManySiteSettings","upsert":"upsertSiteSetting","delete":"deleteSiteSetting","deleteMany":"deleteManySiteSettings"},{"model":"SkippedEmailLog","findOne":"skippedEmailLog","findMany":"skippedEmailLogs","create":"createSkippedEmailLog","update":"updateSkippedEmailLog","updateMany":"updateManySkippedEmailLogs","upsert":"upsertSkippedEmailLog","delete":"deleteSkippedEmailLog","deleteMany":"deleteManySkippedEmailLogs"},{"model":"StylesheetCache","findOne":"stylesheetCache","findMany":"stylesheetCaches","create":"createStylesheetCache","update":"updateStylesheetCache","updateMany":"updateManyStylesheetCaches","upsert":"upsertStylesheetCache","delete":"deleteStylesheetCache","deleteMany":"deleteManyStylesheetCaches"},{"model":"Tag","findOne":"tag","findMany":"tags","create":"createTag","update":"updateTag","updateMany":"updateManyTags","upsert":"upsertTag","delete":"deleteTag","deleteMany":"deleteManyTags"},{"model":"TagGroup","findOne":"tagGroup","findMany":"tagGroups","create":"createTagGroup","update":"updateTagGroup","updateMany":"updateManyTagGroups","upsert":"upsertTagGroup","delete":"deleteTagGroup","deleteMany":"deleteManyTagGroups"},{"model":"TagGroupMembership","findOne":"tagGroupMembership","findMany":"tagGroupMemberships","create":"createTagGroupMembership","update":"updateTagGroupMembership","updateMany":"updateManyTagGroupMemberships","upsert":"upsertTagGroupMembership","delete":"deleteTagGroupMembership","deleteMany":"deleteManyTagGroupMemberships"},{"model":"TagGroupPermission","findOne":"tagGroupPermission","findMany":"tagGroupPermissions","create":"createTagGroupPermission","update":"updateTagGroupPermission","updateMany":"updateManyTagGroupPermissions","upsert":"upsertTagGroupPermission","delete":"deleteTagGroupPermission","deleteMany":"deleteManyTagGroupPermissions"},{"model":"TagSearchDatum","findOne":null,"findMany":"tagSearchData","create":"createTagSearchDatum","update":null,"updateMany":"updateManyTagSearchData","upsert":null,"delete":null,"deleteMany":"deleteManyTagSearchData"},{"model":"TagUser","findOne":"tagUser","findMany":"tagUsers","create":"createTagUser","update":"updateTagUser","updateMany":"updateManyTagUsers","upsert":"upsertTagUser","delete":"deleteTagUser","deleteMany":"deleteManyTagUsers"},{"model":"Theme","findOne":"theme","findMany":"themes","create":"createTheme","update":"updateTheme","updateMany":"updateManyThemes","upsert":"upsertTheme","delete":"deleteTheme","deleteMany":"deleteManyThemes"},{"model":"ThemeField","findOne":"themeField","findMany":"themeFields","create":"createThemeField","update":"updateThemeField","updateMany":"updateManyThemeFields","upsert":"upsertThemeField","delete":"deleteThemeField","deleteMany":"deleteManyThemeFields"},{"model":"ThemeSetting","findOne":"themeSetting","findMany":"themeSettings","create":"createThemeSetting","update":"updateThemeSetting","updateMany":"updateManyThemeSettings","upsert":"upsertThemeSetting","delete":"deleteThemeSetting","deleteMany":"deleteManyThemeSettings"},{"model":"TopTopic","findOne":"topTopic","findMany":"topTopics","create":"createTopTopic","update":"updateTopTopic","updateMany":"updateManyTopTopics","upsert":"upsertTopTopic","delete":"deleteTopTopic","deleteMany":"deleteManyTopTopics"},{"model":"Topic","findOne":"topic","findMany":"topics","create":"createTopic","update":"updateTopic","updateMany":"updateManyTopics","upsert":"upsertTopic","delete":"deleteTopic","deleteMany":"deleteManyTopics"},{"model":"TopicAllowedGroup","findOne":"topicAllowedGroup","findMany":"topicAllowedGroups","create":"createTopicAllowedGroup","update":"updateTopicAllowedGroup","updateMany":"updateManyTopicAllowedGroups","upsert":"upsertTopicAllowedGroup","delete":"deleteTopicAllowedGroup","deleteMany":"deleteManyTopicAllowedGroups"},{"model":"TopicAllowedUser","findOne":"topicAllowedUser","findMany":"topicAllowedUsers","create":"createTopicAllowedUser","update":"updateTopicAllowedUser","updateMany":"updateManyTopicAllowedUsers","upsert":"upsertTopicAllowedUser","delete":"deleteTopicAllowedUser","deleteMany":"deleteManyTopicAllowedUsers"},{"model":"TopicCustomField","findOne":"topicCustomField","findMany":"topicCustomFields","create":"createTopicCustomField","update":"updateTopicCustomField","updateMany":"updateManyTopicCustomFields","upsert":"upsertTopicCustomField","delete":"deleteTopicCustomField","deleteMany":"deleteManyTopicCustomFields"},{"model":"TopicEmbed","findOne":"topicEmbed","findMany":"topicEmbeds","create":"createTopicEmbed","update":"updateTopicEmbed","updateMany":"updateManyTopicEmbeds","upsert":"upsertTopicEmbed","delete":"deleteTopicEmbed","deleteMany":"deleteManyTopicEmbeds"},{"model":"TopicInvite","findOne":"topicInvite","findMany":"topicInvites","create":"createTopicInvite","update":"updateTopicInvite","updateMany":"updateManyTopicInvites","upsert":"upsertTopicInvite","delete":"deleteTopicInvite","deleteMany":"deleteManyTopicInvites"},{"model":"TopicLink","findOne":"topicLink","findMany":"topicLinks","create":"createTopicLink","update":"updateTopicLink","updateMany":"updateManyTopicLinks","upsert":"upsertTopicLink","delete":"deleteTopicLink","deleteMany":"deleteManyTopicLinks"},{"model":"TopicLinkClick","findOne":"topicLinkClick","findMany":"topicLinkClicks","create":"createTopicLinkClick","update":"updateTopicLinkClick","updateMany":"updateManyTopicLinkClicks","upsert":"upsertTopicLinkClick","delete":"deleteTopicLinkClick","deleteMany":"deleteManyTopicLinkClicks"},{"model":"TopicSearchDatum","findOne":null,"findMany":"topicSearchData","create":"createTopicSearchDatum","update":null,"updateMany":"updateManyTopicSearchData","upsert":null,"delete":null,"deleteMany":"deleteManyTopicSearchData"},{"model":"TopicTag","findOne":"topicTag","findMany":"topicTags","create":"createTopicTag","update":"updateTopicTag","updateMany":"updateManyTopicTags","upsert":"upsertTopicTag","delete":"deleteTopicTag","deleteMany":"deleteManyTopicTags"},{"model":"TopicTimer","findOne":"topicTimer","findMany":"topicTimers","create":"createTopicTimer","update":"updateTopicTimer","updateMany":"updateManyTopicTimers","upsert":"upsertTopicTimer","delete":"deleteTopicTimer","deleteMany":"deleteManyTopicTimers"},{"model":"TopicUser","findOne":"topicUser","findMany":"topicUsers","create":"createTopicUser","update":"updateTopicUser","updateMany":"updateManyTopicUsers","upsert":"upsertTopicUser","delete":"deleteTopicUser","deleteMany":"deleteManyTopicUsers"},{"model":"TranslationOverride","findOne":"translationOverride","findMany":"translationOverrides","create":"createTranslationOverride","update":"updateTranslationOverride","updateMany":"updateManyTranslationOverrides","upsert":"upsertTranslationOverride","delete":"deleteTranslationOverride","deleteMany":"deleteManyTranslationOverrides"},{"model":"TwitterUserInfo","findOne":"twitterUserInfo","findMany":"twitterUserInfoes","create":"createTwitterUserInfo","update":"updateTwitterUserInfo","updateMany":"updateManyTwitterUserInfoes","upsert":"upsertTwitterUserInfo","delete":"deleteTwitterUserInfo","deleteMany":"deleteManyTwitterUserInfoes"},{"model":"UnsubscribeKey","findOne":null,"findMany":"unsubscribeKeys","create":"createUnsubscribeKey","update":null,"updateMany":"updateManyUnsubscribeKeys","upsert":null,"delete":null,"deleteMany":"deleteManyUnsubscribeKeys"},{"model":"Upload","findOne":"upload","findMany":"uploads","create":"createUpload","update":"updateUpload","updateMany":"updateManyUploads","upsert":"upsertUpload","delete":"deleteUpload","deleteMany":"deleteManyUploads"},{"model":"User","findOne":"user","findMany":"users","create":"createUser","update":"updateUser","updateMany":"updateManyUsers","upsert":"upsertUser","delete":"deleteUser","deleteMany":"deleteManyUsers"},{"model":"UserAction","findOne":"userAction","findMany":"userActions","create":"createUserAction","update":"updateUserAction","updateMany":"updateManyUserActions","upsert":"upsertUserAction","delete":"deleteUserAction","deleteMany":"deleteManyUserActions"},{"model":"UserApiKey","findOne":"userApiKey","findMany":"userApiKeys","create":"createUserApiKey","update":"updateUserApiKey","updateMany":"updateManyUserApiKeys","upsert":"upsertUserApiKey","delete":"deleteUserApiKey","deleteMany":"deleteManyUserApiKeys"},{"model":"UserArchivedMessage","findOne":"userArchivedMessage","findMany":"userArchivedMessages","create":"createUserArchivedMessage","update":"updateUserArchivedMessage","updateMany":"updateManyUserArchivedMessages","upsert":"upsertUserArchivedMessage","delete":"deleteUserArchivedMessage","deleteMany":"deleteManyUserArchivedMessages"},{"model":"UserAuthToken","findOne":"userAuthToken","findMany":"userAuthTokens","create":"createUserAuthToken","update":"updateUserAuthToken","updateMany":"updateManyUserAuthTokens","upsert":"upsertUserAuthToken","delete":"deleteUserAuthToken","deleteMany":"deleteManyUserAuthTokens"},{"model":"UserAuthTokenLog","findOne":"userAuthTokenLog","findMany":"userAuthTokenLogs","create":"createUserAuthTokenLog","update":"updateUserAuthTokenLog","updateMany":"updateManyUserAuthTokenLogs","upsert":"upsertUserAuthTokenLog","delete":"deleteUserAuthTokenLog","deleteMany":"deleteManyUserAuthTokenLogs"},{"model":"UserAvatar","findOne":"userAvatar","findMany":"userAvatars","create":"createUserAvatar","update":"updateUserAvatar","updateMany":"updateManyUserAvatars","upsert":"upsertUserAvatar","delete":"deleteUserAvatar","deleteMany":"deleteManyUserAvatars"},{"model":"UserBadge","findOne":"userBadge","findMany":"userBadges","create":"createUserBadge","update":"updateUserBadge","updateMany":"updateManyUserBadges","upsert":"upsertUserBadge","delete":"deleteUserBadge","deleteMany":"deleteManyUserBadges"},{"model":"UserCustomField","findOne":"userCustomField","findMany":"userCustomFields","create":"createUserCustomField","update":"updateUserCustomField","updateMany":"updateManyUserCustomFields","upsert":"upsertUserCustomField","delete":"deleteUserCustomField","deleteMany":"deleteManyUserCustomFields"},{"model":"UserEmail","findOne":"userEmail","findMany":"userEmails","create":"createUserEmail","update":"updateUserEmail","updateMany":"updateManyUserEmails","upsert":"upsertUserEmail","delete":"deleteUserEmail","deleteMany":"deleteManyUserEmails"},{"model":"UserExport","findOne":"userExport","findMany":"userExports","create":"createUserExport","update":"updateUserExport","updateMany":"updateManyUserExports","upsert":"upsertUserExport","delete":"deleteUserExport","deleteMany":"deleteManyUserExports"},{"model":"UserField","findOne":"userField","findMany":"userFields","create":"createUserField","update":"updateUserField","updateMany":"updateManyUserFields","upsert":"upsertUserField","delete":"deleteUserField","deleteMany":"deleteManyUserFields"},{"model":"UserFieldOption","findOne":"userFieldOption","findMany":"userFieldOptions","create":"createUserFieldOption","update":"updateUserFieldOption","updateMany":"updateManyUserFieldOptions","upsert":"upsertUserFieldOption","delete":"deleteUserFieldOption","deleteMany":"deleteManyUserFieldOptions"},{"model":"UserHistory","findOne":"userHistory","findMany":"userHistories","create":"createUserHistory","update":"updateUserHistory","updateMany":"updateManyUserHistories","upsert":"upsertUserHistory","delete":"deleteUserHistory","deleteMany":"deleteManyUserHistories"},{"model":"UserOpenId","findOne":"userOpenId","findMany":"userOpenIds","create":"createUserOpenId","update":"updateUserOpenId","updateMany":"updateManyUserOpenIds","upsert":"upsertUserOpenId","delete":"deleteUserOpenId","deleteMany":"deleteManyUserOpenIds"},{"model":"UserOption","findOne":"userOption","findMany":"userOptions","create":"createUserOption","update":"updateUserOption","updateMany":"updateManyUserOptions","upsert":"upsertUserOption","delete":"deleteUserOption","deleteMany":"deleteManyUserOptions"},{"model":"UserProfile","findOne":null,"findMany":"userProfiles","create":"createUserProfile","update":null,"updateMany":"updateManyUserProfiles","upsert":null,"delete":null,"deleteMany":"deleteManyUserProfiles"},{"model":"UserProfileView","findOne":"userProfileView","findMany":"userProfileViews","create":"createUserProfileView","update":"updateUserProfileView","updateMany":"updateManyUserProfileViews","upsert":"upsertUserProfileView","delete":"deleteUserProfileView","deleteMany":"deleteManyUserProfileViews"},{"model":"UserSearchDatum","findOne":null,"findMany":"userSearchData","create":"createUserSearchDatum","update":null,"updateMany":"updateManyUserSearchData","upsert":null,"delete":null,"deleteMany":"deleteManyUserSearchData"},{"model":"UserSecondFactor","findOne":"userSecondFactor","findMany":"userSecondFactors","create":"createUserSecondFactor","update":"updateUserSecondFactor","updateMany":"updateManyUserSecondFactors","upsert":"upsertUserSecondFactor","delete":"deleteUserSecondFactor","deleteMany":"deleteManyUserSecondFactors"},{"model":"UserStat","findOne":null,"findMany":"userStats","create":"createUserStat","update":null,"updateMany":"updateManyUserStats","upsert":null,"delete":null,"deleteMany":"deleteManyUserStats"},{"model":"UserUpload","findOne":"userUpload","findMany":"userUploads","create":"createUserUpload","update":"updateUserUpload","updateMany":"updateManyUserUploads","upsert":"upsertUserUpload","delete":"deleteUserUpload","deleteMany":"deleteManyUserUploads"},{"model":"UserVisit","findOne":"userVisit","findMany":"userVisits","create":"createUserVisit","update":"updateUserVisit","updateMany":"updateManyUserVisits","upsert":"upsertUserVisit","delete":"deleteUserVisit","deleteMany":"deleteManyUserVisits"},{"model":"UserWarning","findOne":"userWarning","findMany":"userWarnings","create":"createUserWarning","update":"updateUserWarning","updateMany":"updateManyUserWarnings","upsert":"upsertUserWarning","delete":"deleteUserWarning","deleteMany":"deleteManyUserWarnings"},{"model":"WatchedWord","findOne":"watchedWord","findMany":"watchedWords","create":"createWatchedWord","update":"updateWatchedWord","updateMany":"updateManyWatchedWords","upsert":"upsertWatchedWord","delete":"deleteWatchedWord","deleteMany":"deleteManyWatchedWords"},{"model":"WebCrawlerRequest","findOne":"webCrawlerRequest","findMany":"webCrawlerRequests","create":"createWebCrawlerRequest","update":"updateWebCrawlerRequest","updateMany":"updateManyWebCrawlerRequests","upsert":"upsertWebCrawlerRequest","delete":"deleteWebCrawlerRequest","deleteMany":"deleteManyWebCrawlerRequests"},{"model":"WebHook","findOne":"webHook","findMany":"webHooks","create":"createWebHook","update":"updateWebHook","updateMany":"updateManyWebHooks","upsert":"upsertWebHook","delete":"deleteWebHook","deleteMany":"deleteManyWebHooks"},{"model":"WebHookEvent","findOne":"webHookEvent","findMany":"webHookEvents","create":"createWebHookEvent","update":"updateWebHookEvent","updateMany":"updateManyWebHookEvents","upsert":"upsertWebHookEvent","delete":"deleteWebHookEvent","deleteMany":"deleteManyWebHookEvents"},{"model":"WebHookEventType","findOne":"webHookEventType","findMany":"webHookEventTypes","create":"createWebHookEventType","update":"updateWebHookEventType","updateMany":"updateManyWebHookEventTypes","upsert":"upsertWebHookEventType","delete":"deleteWebHookEventType","deleteMany":"deleteManyWebHookEventTypes"}],"schema":{"enums":[{"name":"OrderByArg","values":["asc","desc"]}],"outputTypes":[{"name":"ApiKey","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"hidden","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"key","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"ApplicationRequest","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"count","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"date","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"reqType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ArInternalMetadatum","fields":[{"name":"key","args":[],"outputType":{"type":"ID","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"Badge","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"allowTitle","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"autoRevoke","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"badgeGroupingId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"badgeTypeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"description","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"enabled","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"grantCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"icon","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"image","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"listable","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"longDescription","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"multipleGrant","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"query","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"showPosts","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"system","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"targetPosts","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"trigger","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"BadgeGrouping","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"description","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"position","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"BadgeType","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Category","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"allowBadges","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"allTopicsWiki","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"autoCloseBasedOnLastPost","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"autoCloseHours","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"color","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"containsMessages","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"defaultTopPeriod","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"defaultView","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"description","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"emailIn","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"emailInAllowStrangers","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"latestPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"latestTopicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"mailinglistMirror","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"minimumRequiredTags","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"nameLower","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"navigateToFirstPostAfterRead","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"numFeaturedTopics","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"parentCategoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"position","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postsDay","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postsMonth","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postsWeek","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postsYear","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"readRestricted","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"showSubcategoryList","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"slug","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"sortAscending","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"sortOrder","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"subcategoryListStyle","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"suppressFromLatest","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"textColor","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicFeaturedLinkAllowed","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicsDay","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicsMonth","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicsWeek","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicsYear","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicTemplate","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadedBackgroundId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"uploadedLogoId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"CategoryCustomField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"CategoryFeaturedTopic","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"rank","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"CategoryGroup","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"permissionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"CategorySearchDatum","fields":[{"name":"category_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"rawData","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"CategoryTag","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"tagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"CategoryTagGroup","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"tagGroupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"CategoryTagStat","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"tagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"CategoryUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notificationLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ChildTheme","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"childThemeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"parentThemeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"ColorScheme","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"baseSchemeId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"themeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"viaWizard","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ColorSchemeColor","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"colorSchemeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"hex","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"CustomEmoji","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Developer","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"DirectoryItem","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"daysVisited","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"likesGiven","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"likesReceived","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"periodType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postsRead","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicsEntered","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Draft","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"data","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"draftKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"revisions","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"sequence","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"DraftSequence","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"draftKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"sequence","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"EmailChangeRequest","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"changeState","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"newEmail","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"newEmailTokenId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"oldEmail","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"oldEmailTokenId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"EmailLog","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"bounced","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"bounceKey","args":[],"outputType":{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"messageId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"toAddress","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"EmailToken","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"confirmed","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"expired","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"token","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"EmbeddableHost","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"className","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"host","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"pathWhitelist","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"FacebookUserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"aboutMe","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"avatarUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"facebookUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"firstName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"gender","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"link","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"location","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"username","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"website","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"GithubUserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"githubUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"screenName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"GoogleUserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"firstName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"gender","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"googleUserId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"link","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"picture","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"profileLink","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Group","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"allowMembershipRequests","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"automatic","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"automaticMembershipEmailDomains","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"automaticMembershipRetroactive","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"bioCooked","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"bioRaw","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"defaultNotificationLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"flairBgColor","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"flairColor","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"flairUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"fullName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"grantTrustLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"hasMessages","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"incomingEmail","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"membershipRequestTemplate","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"mentionableLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"messageableLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"primaryGroup","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"publicAdmission","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"publicExit","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"title","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"visibilityLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"GroupArchivedMessage","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"GroupCustomField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"GroupHistory","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actingUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"action","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"newValue","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"prevValue","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"subject","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"targetUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"GroupMention","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"GroupUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notificationLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"owner","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"IncomingDomain","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"https","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"port","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"IncomingEmail","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"ccAddresses","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"error","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"fromAddress","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"isAutoGenerated","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"isBounce","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"messageId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"raw","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"rejectionMessage","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"subject","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"toAddresses","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"IncomingLink","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"currentUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"incomingRefererId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"IncomingReferer","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"incomingDomainId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"path","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"InstagramUserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"instagramUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"screenName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"Invite","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"customMessage","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"invalidatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"invitedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"inviteKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"moderator","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"redeemedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"InvitedGroup","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"inviteId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"JavascriptCach","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"content","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"digest","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"themeFieldId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"MessageBus","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"context","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"data","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"MutedUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"mutedUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Notification","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"data","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"notificationType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postActionId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"read","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Oauth2UserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"provider","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"uid","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"OnceoffLog","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"jobName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"OptimizedImage","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"extension","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"filesize","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"height","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"sha1","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"width","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Permalink","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"PluginStoreRow","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"key","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"pluginName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"typeName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"Post","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actionCode","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"avgTime","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"bakedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"bakedVersion","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"bookmarkCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"cooked","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"cookMethod","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"editReason","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"hidden","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"hiddenAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"hiddenReasonId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"illegalCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"imageUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"inappropriateCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"incomingLinkCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastEditorId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastVersionAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"likeCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"likeScore","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"lockedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"notifyModeratorsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notifyUserCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"offTopicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"percentRank","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"postNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"publicVersion","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quoteCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"raw","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"rawEmail","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"reads","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"replyCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"replyQuoted","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"replyToPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"replyToUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"score","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"selfEdits","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"sortOrder","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"spamCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userDeleted","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"viaEmail","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"wiki","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"wordCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostAction","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"agreedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"agreedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"deferredAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deferredById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"disagreedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"disagreedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postActionTypeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"relatedPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"staffTookAction","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"targetsTopic","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"PostActionType","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"icon","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"isFlag","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"nameKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"position","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"PostCustomField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostDetail","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"extra","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"key","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostReplyKey","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"replyKey","args":[],"outputType":{"type":"UUID","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"PostRevision","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"hidden","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"modifications","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"number","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostSearchDatum","fields":[{"name":"post_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"rawData","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostStat","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"composerOpenDurationMsecs","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"draftsSaved","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"typingDurationMsecs","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"PostUpload","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"PushSubscription","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"data","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"QueuedPost","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"approvedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"approvedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"queue","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"raw","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"rejectedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"rejectedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"state","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"QuotedPost","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quotedPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"RemoteTheme","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"aboutUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"branch","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"commitsBehind","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastErrorText","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"licenseUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"localVersion","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"privateKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"remoteUpdatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"remoteUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"remoteVersion","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"SchedulerStat","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"durationMs","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"error","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"hostname","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"liveSlotsFinish","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"liveSlotsStart","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"pid","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"startedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"success","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"SchemaMigration","fields":[{"name":"version","args":[],"outputType":{"type":"ID","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"SchemaMigrationDetail","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"direction","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"duration","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"gitVersion","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"hostname","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"railsVersion","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ScreenedEmail","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastMatchAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"matchCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ScreenedIpAddress","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastMatchAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"matchCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ScreenedUrl","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"domain","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastMatchAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"matchCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"SearchLog","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"searchResultId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"searchResultType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"searchType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"term","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"SharedDraft","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"SingleSignOnRecord","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"externalAvatarUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalCardBackgroundUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalEmail","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"externalName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalProfileBackgroundUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalUsername","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastPayload","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"SiteSetting","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"dataType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"SkippedEmailLog","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"customReason","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"emailType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"reasonType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"toAddress","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"StylesheetCache","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"content","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"digest","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"sourceMap","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"target","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"themeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"Tag","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"pmTopicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TagGroup","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"onePerTopic","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"parentTagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TagGroupMembership","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"tagGroupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"tagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TagGroupPermission","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"permissionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"tagGroupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TagSearchDatum","fields":[{"name":"tag_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"rawData","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TagUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"notificationLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"tagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Theme","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"colorSchemeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"compilerVersion","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"component","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"hidden","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"remoteThemeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userSelectable","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"ThemeField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"compilerVersion","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"error","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"targetId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"themeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"typeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"valueBaked","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"ThemeSetting","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"dataType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"themeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopTopic","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"allScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"dailyLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"dailyOpLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"dailyPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"dailyScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"dailyViewsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"monthlyLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"monthlyOpLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"monthlyPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"monthlyScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"monthlyViewsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quarterlyLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quarterlyOpLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quarterlyPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"quarterlyScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"quarterlyViewsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"weeklyLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"weeklyOpLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"weeklyPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"weeklyScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"weeklyViewsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"yearlyLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"yearlyOpLikesCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"yearlyPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"yearlyScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"yearlyViewsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Topic","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"archetype","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"archived","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"avgTime","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"bumpedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"closed","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"excerpt","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"fancyTitle","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"featuredLink","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"featuredUser1Id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"featuredUser2Id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"featuredUser3Id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"featuredUser4Id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"hasSummary","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"highestPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"highestStaffPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"imageUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"incomingLinkCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastPostedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastPostUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"likeCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"moderatorPostsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notifyModeratorsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"participantCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"percentRank","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":true,"isList":false}},{"name":"pinnedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"pinnedGlobally","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"pinnedUntil","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"postsCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"replyCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"score","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":false,"isList":false}},{"name":"slug","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"spamCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"subtype","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"title","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"views","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"visible","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"wordCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopicAllowedGroup","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicAllowedUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicCustomField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopicEmbed","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"contentSha1","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"embedUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicInvite","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"inviteId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicLink","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"clicks","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"crawledAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"domain","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"extension","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"internal","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"linkPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"linkTopicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"quote","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"reflection","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"title","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicLinkClick","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicLinkId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopicSearchDatum","fields":[{"name":"topic_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"rawData","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopicTag","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"tagId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"TopicTimer","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"basedOnLastPost","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"deletedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"executeAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"publicType","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"statusType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TopicUser","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"bookmarked","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"clearedPinnedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"firstVisitedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"highestSeenPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastEmailedPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastReadPostNumber","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastVisitedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"liked","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"notificationLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notificationsChangedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"notificationsReasonId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"posted","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"totalMsecsViewed","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TranslationOverride","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"compiledJs","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"translationKey","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"TwitterUserInfo","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"screenName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"twitterUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UnsubscribeKey","fields":[{"name":"key","args":[],"outputType":{"type":"ID","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"unsubscribeKeyType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Upload","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"extension","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"filesize","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"height","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"origin","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"originalFilename","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"retainHours","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"sha1","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"thumbnailHeight","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"thumbnailWidth","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"width","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"User","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"active","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"admin","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"approved","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"approvedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"approvedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"dateOfBirth","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"firstSeenAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"flagLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"groupLockedTrustLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastEmailedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastPostedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastSeenAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"manualLockedTrustLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"moderator","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"passwordHash","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"previousVisitAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"primaryGroupId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"salt","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"seenNotificationId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"silencedTill","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"staged","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"suspendedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"suspendedTill","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"title","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"trustLevel","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadedAvatarId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"username","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"usernameLower","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"views","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserAction","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actingUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"actionType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"queuedPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"targetPostId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"targetTopicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"targetUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserApiKey","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"applicationName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"clientId","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"key","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastUsedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"pushUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"revokedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"scopes","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserArchivedMessage","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserAuthToken","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"authToken","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"authTokenSeen","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"prevAuthToken","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"rotatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"seenAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userAgent","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserAuthTokenLog","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"action","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"authToken","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"path","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"userAgent","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"userAuthTokenId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"UserAvatar","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"customUploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"gravatarUploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastGravatarDownloadAttempt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserBadge","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"badgeId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"grantedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"grantedById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"notificationId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"seq","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserCustomField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"UserEmail","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"primary","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserExport","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"fileName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserField","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"description","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"editable","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"externalName","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"externalType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"fieldType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"position","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"required","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"showOnProfile","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"showOnUserCard","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"UserFieldOption","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userFieldId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"value","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserHistory","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"actingUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"action","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"adminOnly","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"categoryId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"context","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"customType","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"details","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"ipAddress","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"newValue","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"postId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"previousValue","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"subject","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"targetUserId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserOpenId","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"active","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"email","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"url","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserOption","fields":[{"name":"user_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"allowPrivateMessages","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"automaticallyUnpinTopics","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"autoTrackTopicsAfterMsecs","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"digestAfterMinutes","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"disableJumpReply","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"dynamicFavicon","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailAlways","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailDigests","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"emailDirect","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailInReplyTo","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailPreviousReplies","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"emailPrivateMessages","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"enableQuoting","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"externalLinksInNewTab","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"hideProfileAndPresence","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"homepageId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"includeTl0InDigests","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastRedirectedToTopAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"likeNotificationFrequency","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"mailingListMode","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"mailingListModeFrequency","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"newTopicDurationMinutes","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"notificationLevelWhenReplying","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"themeIds","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"themeKeySeq","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserProfile","fields":[{"name":"user_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"badgeGrantedTitle","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"bioCooked","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"bioCookedVersion","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"bioRaw","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"cardBackground","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"dismissedBannerKey","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"location","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"profileBackground","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"views","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"website","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"UserProfileView","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"userProfileId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"viewedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserSearchDatum","fields":[{"name":"user_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"locale","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"rawData","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"version","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}}]},{"name":"UserSecondFactor","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"data","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"enabled","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"lastUsed","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"method","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserStat","fields":[{"name":"user_id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"bounceScore","args":[],"outputType":{"type":"Float","kind":"scalar","isRequired":true,"isList":false}},{"name":"daysVisited","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"firstPostCreatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"likesGiven","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"likesReceived","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"newSince","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"postCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"postsReadCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"readFaq","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"resetBounceScoreAfter","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"timeRead","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicReplyCount","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicsEntered","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserUpload","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"uploadId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserVisit","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"mobile","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}},{"name":"postsRead","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"timeRead","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"visitedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"UserWarning","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"createdById","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"topicId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"userId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"WatchedWord","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"action","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"word","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"WebCrawlerRequest","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"count","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"date","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}},{"name":"userAgent","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"WebHook","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"active","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"contentType","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"lastDeliveryStatus","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"payloadUrl","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}},{"name":"secret","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"status","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"verifyCertificate","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}},{"name":"wildcardWebHook","args":[],"outputType":{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"WebHookEvent","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"createdAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"duration","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"headers","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"payload","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"responseBody","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"responseHeaders","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":false,"isList":false}},{"name":"status","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":false,"isList":false}},{"name":"updatedAt","args":[],"outputType":{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}},{"name":"webHookId","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"WebHookEventType","fields":[{"name":"id","args":[],"outputType":{"type":"Int","kind":"scalar","isRequired":true,"isList":false}},{"name":"name","args":[],"outputType":{"type":"String","kind":"scalar","isRequired":true,"isList":false}}]},{"name":"Query","fields":[{"name":"apiKeys","args":[{"name":"where","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ApiKeyOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":false,"isList":true}},{"name":"apiKey","args":[{"name":"where","inputType":[{"type":"ApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"applicationRequests","args":[{"name":"where","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ApplicationRequestOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":false,"isList":true}},{"name":"applicationRequest","args":[{"name":"where","inputType":[{"type":"ApplicationRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":false,"isList":false}},{"name":"arInternalMetadata","args":[{"name":"where","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ArInternalMetadatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ArInternalMetadatum","kind":"object","isRequired":false,"isList":true}},{"name":"badges","args":[{"name":"where","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"BadgeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":false,"isList":true}},{"name":"badge","args":[{"name":"where","inputType":[{"type":"BadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":false,"isList":false}},{"name":"badgeGroupings","args":[{"name":"where","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"BadgeGroupingOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":false,"isList":true}},{"name":"badgeGrouping","args":[{"name":"where","inputType":[{"type":"BadgeGroupingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":false,"isList":false}},{"name":"badgeTypes","args":[{"name":"where","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"BadgeTypeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":false,"isList":true}},{"name":"badgeType","args":[{"name":"where","inputType":[{"type":"BadgeTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":false,"isList":false}},{"name":"categories","args":[{"name":"where","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":false,"isList":true}},{"name":"category","args":[{"name":"where","inputType":[{"type":"CategoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":false,"isList":false}},{"name":"categoryCustomFields","args":[{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryCustomFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":false,"isList":true}},{"name":"categoryCustomField","args":[{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"categoryFeaturedTopics","args":[{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryFeaturedTopicOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":false,"isList":true}},{"name":"categoryFeaturedTopic","args":[{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":false,"isList":false}},{"name":"categoryGroups","args":[{"name":"where","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryGroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":false,"isList":true}},{"name":"categoryGroup","args":[{"name":"where","inputType":[{"type":"CategoryGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":false,"isList":false}},{"name":"categorySearchData","args":[{"name":"where","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategorySearchDatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategorySearchDatum","kind":"object","isRequired":false,"isList":true}},{"name":"categoryTags","args":[{"name":"where","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryTagOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":false,"isList":true}},{"name":"categoryTag","args":[{"name":"where","inputType":[{"type":"CategoryTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":false,"isList":false}},{"name":"categoryTagGroups","args":[{"name":"where","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryTagGroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":false,"isList":true}},{"name":"categoryTagGroup","args":[{"name":"where","inputType":[{"type":"CategoryTagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"categoryTagStats","args":[{"name":"where","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryTagStatOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":false,"isList":true}},{"name":"categoryTagStat","args":[{"name":"where","inputType":[{"type":"CategoryTagStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":false,"isList":false}},{"name":"categoryUsers","args":[{"name":"where","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CategoryUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":false,"isList":true}},{"name":"categoryUser","args":[{"name":"where","inputType":[{"type":"CategoryUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":false,"isList":false}},{"name":"childThemes","args":[{"name":"where","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ChildThemeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":false,"isList":true}},{"name":"childTheme","args":[{"name":"where","inputType":[{"type":"ChildThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":false,"isList":false}},{"name":"colorSchemes","args":[{"name":"where","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ColorSchemeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":false,"isList":true}},{"name":"colorScheme","args":[{"name":"where","inputType":[{"type":"ColorSchemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":false,"isList":false}},{"name":"colorSchemeColors","args":[{"name":"where","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ColorSchemeColorOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":false,"isList":true}},{"name":"colorSchemeColor","args":[{"name":"where","inputType":[{"type":"ColorSchemeColorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":false,"isList":false}},{"name":"customEmojis","args":[{"name":"where","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"CustomEmojiOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":false,"isList":true}},{"name":"customEmoji","args":[{"name":"where","inputType":[{"type":"CustomEmojiWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":false,"isList":false}},{"name":"developers","args":[{"name":"where","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"DeveloperOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":false,"isList":true}},{"name":"developer","args":[{"name":"where","inputType":[{"type":"DeveloperWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":false,"isList":false}},{"name":"directoryItems","args":[{"name":"where","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"DirectoryItemOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":false,"isList":true}},{"name":"directoryItem","args":[{"name":"where","inputType":[{"type":"DirectoryItemWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":false,"isList":false}},{"name":"drafts","args":[{"name":"where","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"DraftOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":false,"isList":true}},{"name":"draft","args":[{"name":"where","inputType":[{"type":"DraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":false,"isList":false}},{"name":"draftSequences","args":[{"name":"where","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"DraftSequenceOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":false,"isList":true}},{"name":"draftSequence","args":[{"name":"where","inputType":[{"type":"DraftSequenceWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":false,"isList":false}},{"name":"emailChangeRequests","args":[{"name":"where","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"EmailChangeRequestOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":false,"isList":true}},{"name":"emailChangeRequest","args":[{"name":"where","inputType":[{"type":"EmailChangeRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":false,"isList":false}},{"name":"emailLogs","args":[{"name":"where","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"EmailLogOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":false,"isList":true}},{"name":"emailLog","args":[{"name":"where","inputType":[{"type":"EmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"emailTokens","args":[{"name":"where","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"EmailTokenOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":false,"isList":true}},{"name":"emailToken","args":[{"name":"where","inputType":[{"type":"EmailTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":false,"isList":false}},{"name":"embeddableHosts","args":[{"name":"where","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"EmbeddableHostOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":false,"isList":true}},{"name":"embeddableHost","args":[{"name":"where","inputType":[{"type":"EmbeddableHostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":false,"isList":false}},{"name":"facebookUserInfoes","args":[{"name":"where","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"FacebookUserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"facebookUserInfo","args":[{"name":"where","inputType":[{"type":"FacebookUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"githubUserInfoes","args":[{"name":"where","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GithubUserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"githubUserInfo","args":[{"name":"where","inputType":[{"type":"GithubUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"googleUserInfoes","args":[{"name":"where","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GoogleUserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"googleUserInfo","args":[{"name":"where","inputType":[{"type":"GoogleUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"groups","args":[{"name":"where","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":false,"isList":true}},{"name":"group","args":[{"name":"where","inputType":[{"type":"GroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":false,"isList":false}},{"name":"groupArchivedMessages","args":[{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupArchivedMessageOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":false,"isList":true}},{"name":"groupArchivedMessage","args":[{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"groupCustomFields","args":[{"name":"where","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupCustomFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":false,"isList":true}},{"name":"groupCustomField","args":[{"name":"where","inputType":[{"type":"GroupCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"groupHistories","args":[{"name":"where","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupHistoryOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":false,"isList":true}},{"name":"groupHistory","args":[{"name":"where","inputType":[{"type":"GroupHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":false,"isList":false}},{"name":"groupMentions","args":[{"name":"where","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupMentionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":false,"isList":true}},{"name":"groupMention","args":[{"name":"where","inputType":[{"type":"GroupMentionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":false,"isList":false}},{"name":"groupUsers","args":[{"name":"where","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"GroupUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":false,"isList":true}},{"name":"groupUser","args":[{"name":"where","inputType":[{"type":"GroupUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":false,"isList":false}},{"name":"incomingDomains","args":[{"name":"where","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"IncomingDomainOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":false,"isList":true}},{"name":"incomingDomain","args":[{"name":"where","inputType":[{"type":"IncomingDomainWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":false,"isList":false}},{"name":"incomingEmails","args":[{"name":"where","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"IncomingEmailOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":false,"isList":true}},{"name":"incomingEmail","args":[{"name":"where","inputType":[{"type":"IncomingEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":false,"isList":false}},{"name":"incomingLinks","args":[{"name":"where","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"IncomingLinkOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":false,"isList":true}},{"name":"incomingLink","args":[{"name":"where","inputType":[{"type":"IncomingLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":false,"isList":false}},{"name":"incomingReferers","args":[{"name":"where","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"IncomingRefererOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":false,"isList":true}},{"name":"incomingReferer","args":[{"name":"where","inputType":[{"type":"IncomingRefererWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":false,"isList":false}},{"name":"instagramUserInfoes","args":[{"name":"where","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"InstagramUserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"instagramUserInfo","args":[{"name":"where","inputType":[{"type":"InstagramUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"invites","args":[{"name":"where","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"InviteOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":false,"isList":true}},{"name":"invite","args":[{"name":"where","inputType":[{"type":"InviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":false,"isList":false}},{"name":"invitedGroups","args":[{"name":"where","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"InvitedGroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":false,"isList":true}},{"name":"invitedGroup","args":[{"name":"where","inputType":[{"type":"InvitedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"javascriptCaches","args":[{"name":"where","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"JavascriptCachOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":false,"isList":true}},{"name":"javascriptCach","args":[{"name":"where","inputType":[{"type":"JavascriptCachWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":false,"isList":false}},{"name":"messageBuses","args":[{"name":"where","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"MessageBusOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":false,"isList":true}},{"name":"messageBus","args":[{"name":"where","inputType":[{"type":"MessageBusWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":false,"isList":false}},{"name":"mutedUsers","args":[{"name":"where","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"MutedUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":false,"isList":true}},{"name":"mutedUser","args":[{"name":"where","inputType":[{"type":"MutedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":false,"isList":false}},{"name":"notifications","args":[{"name":"where","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"NotificationOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":false,"isList":true}},{"name":"notification","args":[{"name":"where","inputType":[{"type":"NotificationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":false,"isList":false}},{"name":"oauth2UserInfoes","args":[{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"Oauth2UserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"oauth2UserInfo","args":[{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"onceoffLogs","args":[{"name":"where","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"OnceoffLogOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":false,"isList":true}},{"name":"onceoffLog","args":[{"name":"where","inputType":[{"type":"OnceoffLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":false,"isList":false}},{"name":"optimizedImages","args":[{"name":"where","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"OptimizedImageOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":false,"isList":true}},{"name":"optimizedImage","args":[{"name":"where","inputType":[{"type":"OptimizedImageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":false,"isList":false}},{"name":"permalinks","args":[{"name":"where","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PermalinkOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":false,"isList":true}},{"name":"permalink","args":[{"name":"where","inputType":[{"type":"PermalinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":false,"isList":false}},{"name":"pluginStoreRows","args":[{"name":"where","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PluginStoreRowOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":false,"isList":true}},{"name":"pluginStoreRow","args":[{"name":"where","inputType":[{"type":"PluginStoreRowWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":false,"isList":false}},{"name":"posts","args":[{"name":"where","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":false,"isList":true}},{"name":"post","args":[{"name":"where","inputType":[{"type":"PostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":false,"isList":false}},{"name":"postActions","args":[{"name":"where","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostActionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":false,"isList":true}},{"name":"postAction","args":[{"name":"where","inputType":[{"type":"PostActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":false,"isList":false}},{"name":"postActionTypes","args":[{"name":"where","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostActionTypeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":false,"isList":true}},{"name":"postActionType","args":[{"name":"where","inputType":[{"type":"PostActionTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":false,"isList":false}},{"name":"postCustomFields","args":[{"name":"where","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostCustomFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":false,"isList":true}},{"name":"postCustomField","args":[{"name":"where","inputType":[{"type":"PostCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"postDetails","args":[{"name":"where","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostDetailOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":false,"isList":true}},{"name":"postDetail","args":[{"name":"where","inputType":[{"type":"PostDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":false,"isList":false}},{"name":"postReplyKeys","args":[{"name":"where","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostReplyKeyOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":false,"isList":true}},{"name":"postReplyKey","args":[{"name":"where","inputType":[{"type":"PostReplyKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":false,"isList":false}},{"name":"postRevisions","args":[{"name":"where","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostRevisionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":false,"isList":true}},{"name":"postRevision","args":[{"name":"where","inputType":[{"type":"PostRevisionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":false,"isList":false}},{"name":"postSearchData","args":[{"name":"where","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostSearchDatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostSearchDatum","kind":"object","isRequired":false,"isList":true}},{"name":"postStats","args":[{"name":"where","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostStatOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":false,"isList":true}},{"name":"postStat","args":[{"name":"where","inputType":[{"type":"PostStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":false,"isList":false}},{"name":"postUploads","args":[{"name":"where","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PostUploadOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":false,"isList":true}},{"name":"postUpload","args":[{"name":"where","inputType":[{"type":"PostUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":false,"isList":false}},{"name":"pushSubscriptions","args":[{"name":"where","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"PushSubscriptionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":false,"isList":true}},{"name":"pushSubscription","args":[{"name":"where","inputType":[{"type":"PushSubscriptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":false,"isList":false}},{"name":"queuedPosts","args":[{"name":"where","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"QueuedPostOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":false,"isList":true}},{"name":"queuedPost","args":[{"name":"where","inputType":[{"type":"QueuedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":false,"isList":false}},{"name":"quotedPosts","args":[{"name":"where","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"QuotedPostOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":false,"isList":true}},{"name":"quotedPost","args":[{"name":"where","inputType":[{"type":"QuotedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":false,"isList":false}},{"name":"remoteThemes","args":[{"name":"where","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"RemoteThemeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":false,"isList":true}},{"name":"remoteTheme","args":[{"name":"where","inputType":[{"type":"RemoteThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":false,"isList":false}},{"name":"schedulerStats","args":[{"name":"where","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SchedulerStatOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":false,"isList":true}},{"name":"schedulerStat","args":[{"name":"where","inputType":[{"type":"SchedulerStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":false,"isList":false}},{"name":"schemaMigrations","args":[{"name":"where","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SchemaMigrationOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":false,"isList":true}},{"name":"schemaMigration","args":[{"name":"where","inputType":[{"type":"SchemaMigrationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":false,"isList":false}},{"name":"schemaMigrationDetails","args":[{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SchemaMigrationDetailOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":false,"isList":true}},{"name":"schemaMigrationDetail","args":[{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":false,"isList":false}},{"name":"screenedEmails","args":[{"name":"where","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ScreenedEmailOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":false,"isList":true}},{"name":"screenedEmail","args":[{"name":"where","inputType":[{"type":"ScreenedEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":false,"isList":false}},{"name":"screenedIpAddresses","args":[{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ScreenedIpAddressOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":false,"isList":true}},{"name":"screenedIpAddress","args":[{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":false,"isList":false}},{"name":"screenedUrls","args":[{"name":"where","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ScreenedUrlOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":false,"isList":true}},{"name":"screenedUrl","args":[{"name":"where","inputType":[{"type":"ScreenedUrlWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":false,"isList":false}},{"name":"searchLogs","args":[{"name":"where","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SearchLogOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":false,"isList":true}},{"name":"searchLog","args":[{"name":"where","inputType":[{"type":"SearchLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":false,"isList":false}},{"name":"sharedDrafts","args":[{"name":"where","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SharedDraftOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":false,"isList":true}},{"name":"sharedDraft","args":[{"name":"where","inputType":[{"type":"SharedDraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":false,"isList":false}},{"name":"singleSignOnRecords","args":[{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SingleSignOnRecordOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":false,"isList":true}},{"name":"singleSignOnRecord","args":[{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":false,"isList":false}},{"name":"siteSettings","args":[{"name":"where","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SiteSettingOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":false,"isList":true}},{"name":"siteSetting","args":[{"name":"where","inputType":[{"type":"SiteSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":false,"isList":false}},{"name":"skippedEmailLogs","args":[{"name":"where","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"SkippedEmailLogOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":false,"isList":true}},{"name":"skippedEmailLog","args":[{"name":"where","inputType":[{"type":"SkippedEmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"stylesheetCaches","args":[{"name":"where","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"StylesheetCacheOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":false,"isList":true}},{"name":"stylesheetCache","args":[{"name":"where","inputType":[{"type":"StylesheetCacheWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":false,"isList":false}},{"name":"tags","args":[{"name":"where","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":false,"isList":true}},{"name":"tag","args":[{"name":"where","inputType":[{"type":"TagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":false,"isList":false}},{"name":"tagGroups","args":[{"name":"where","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagGroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":false,"isList":true}},{"name":"tagGroup","args":[{"name":"where","inputType":[{"type":"TagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"tagGroupMemberships","args":[{"name":"where","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagGroupMembershipOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":false,"isList":true}},{"name":"tagGroupMembership","args":[{"name":"where","inputType":[{"type":"TagGroupMembershipWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":false,"isList":false}},{"name":"tagGroupPermissions","args":[{"name":"where","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagGroupPermissionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":false,"isList":true}},{"name":"tagGroupPermission","args":[{"name":"where","inputType":[{"type":"TagGroupPermissionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":false,"isList":false}},{"name":"tagSearchData","args":[{"name":"where","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagSearchDatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TagSearchDatum","kind":"object","isRequired":false,"isList":true}},{"name":"tagUsers","args":[{"name":"where","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TagUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":false,"isList":true}},{"name":"tagUser","args":[{"name":"where","inputType":[{"type":"TagUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":false,"isList":false}},{"name":"themes","args":[{"name":"where","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ThemeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":false,"isList":true}},{"name":"theme","args":[{"name":"where","inputType":[{"type":"ThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":false,"isList":false}},{"name":"themeFields","args":[{"name":"where","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ThemeFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":false,"isList":true}},{"name":"themeField","args":[{"name":"where","inputType":[{"type":"ThemeFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":false,"isList":false}},{"name":"themeSettings","args":[{"name":"where","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"ThemeSettingOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":false,"isList":true}},{"name":"themeSetting","args":[{"name":"where","inputType":[{"type":"ThemeSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":false,"isList":false}},{"name":"topTopics","args":[{"name":"where","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopTopicOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":false,"isList":true}},{"name":"topTopic","args":[{"name":"where","inputType":[{"type":"TopTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":false,"isList":false}},{"name":"topics","args":[{"name":"where","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":false,"isList":true}},{"name":"topic","args":[{"name":"where","inputType":[{"type":"TopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":false,"isList":false}},{"name":"topicAllowedGroups","args":[{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicAllowedGroupOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":false,"isList":true}},{"name":"topicAllowedGroup","args":[{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"topicAllowedUsers","args":[{"name":"where","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicAllowedUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":false,"isList":true}},{"name":"topicAllowedUser","args":[{"name":"where","inputType":[{"type":"TopicAllowedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":false,"isList":false}},{"name":"topicCustomFields","args":[{"name":"where","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicCustomFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":false,"isList":true}},{"name":"topicCustomField","args":[{"name":"where","inputType":[{"type":"TopicCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"topicEmbeds","args":[{"name":"where","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicEmbedOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":false,"isList":true}},{"name":"topicEmbed","args":[{"name":"where","inputType":[{"type":"TopicEmbedWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":false,"isList":false}},{"name":"topicInvites","args":[{"name":"where","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicInviteOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":false,"isList":true}},{"name":"topicInvite","args":[{"name":"where","inputType":[{"type":"TopicInviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":false,"isList":false}},{"name":"topicLinks","args":[{"name":"where","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicLinkOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":false,"isList":true}},{"name":"topicLink","args":[{"name":"where","inputType":[{"type":"TopicLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":false,"isList":false}},{"name":"topicLinkClicks","args":[{"name":"where","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicLinkClickOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":false,"isList":true}},{"name":"topicLinkClick","args":[{"name":"where","inputType":[{"type":"TopicLinkClickWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":false,"isList":false}},{"name":"topicSearchData","args":[{"name":"where","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicSearchDatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicSearchDatum","kind":"object","isRequired":false,"isList":true}},{"name":"topicTags","args":[{"name":"where","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicTagOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":false,"isList":true}},{"name":"topicTag","args":[{"name":"where","inputType":[{"type":"TopicTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":false,"isList":false}},{"name":"topicTimers","args":[{"name":"where","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicTimerOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":false,"isList":true}},{"name":"topicTimer","args":[{"name":"where","inputType":[{"type":"TopicTimerWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":false,"isList":false}},{"name":"topicUsers","args":[{"name":"where","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TopicUserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":false,"isList":true}},{"name":"topicUser","args":[{"name":"where","inputType":[{"type":"TopicUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":false,"isList":false}},{"name":"translationOverrides","args":[{"name":"where","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TranslationOverrideOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":false,"isList":true}},{"name":"translationOverride","args":[{"name":"where","inputType":[{"type":"TranslationOverrideWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":false,"isList":false}},{"name":"twitterUserInfoes","args":[{"name":"where","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"TwitterUserInfoOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":false,"isList":true}},{"name":"twitterUserInfo","args":[{"name":"where","inputType":[{"type":"TwitterUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"unsubscribeKeys","args":[{"name":"where","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UnsubscribeKeyOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UnsubscribeKey","kind":"object","isRequired":false,"isList":true}},{"name":"uploads","args":[{"name":"where","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UploadOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":false,"isList":true}},{"name":"upload","args":[{"name":"where","inputType":[{"type":"UploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":false,"isList":false}},{"name":"users","args":[{"name":"where","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":false,"isList":true}},{"name":"user","args":[{"name":"where","inputType":[{"type":"UserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":false,"isList":false}},{"name":"userActions","args":[{"name":"where","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserActionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":false,"isList":true}},{"name":"userAction","args":[{"name":"where","inputType":[{"type":"UserActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":false,"isList":false}},{"name":"userApiKeys","args":[{"name":"where","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserApiKeyOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":false,"isList":true}},{"name":"userApiKey","args":[{"name":"where","inputType":[{"type":"UserApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"userArchivedMessages","args":[{"name":"where","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserArchivedMessageOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":false,"isList":true}},{"name":"userArchivedMessage","args":[{"name":"where","inputType":[{"type":"UserArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"userAuthTokens","args":[{"name":"where","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserAuthTokenOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":false,"isList":true}},{"name":"userAuthToken","args":[{"name":"where","inputType":[{"type":"UserAuthTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":false,"isList":false}},{"name":"userAuthTokenLogs","args":[{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserAuthTokenLogOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":false,"isList":true}},{"name":"userAuthTokenLog","args":[{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":false,"isList":false}},{"name":"userAvatars","args":[{"name":"where","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserAvatarOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":false,"isList":true}},{"name":"userAvatar","args":[{"name":"where","inputType":[{"type":"UserAvatarWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":false,"isList":false}},{"name":"userBadges","args":[{"name":"where","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserBadgeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":false,"isList":true}},{"name":"userBadge","args":[{"name":"where","inputType":[{"type":"UserBadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":false,"isList":false}},{"name":"userCustomFields","args":[{"name":"where","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserCustomFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":false,"isList":true}},{"name":"userCustomField","args":[{"name":"where","inputType":[{"type":"UserCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"userEmails","args":[{"name":"where","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserEmailOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":false,"isList":true}},{"name":"userEmail","args":[{"name":"where","inputType":[{"type":"UserEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":false,"isList":false}},{"name":"userExports","args":[{"name":"where","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserExportOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":false,"isList":true}},{"name":"userExport","args":[{"name":"where","inputType":[{"type":"UserExportWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":false,"isList":false}},{"name":"userFields","args":[{"name":"where","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserFieldOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":false,"isList":true}},{"name":"userField","args":[{"name":"where","inputType":[{"type":"UserFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":false,"isList":false}},{"name":"userFieldOptions","args":[{"name":"where","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserFieldOptionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":false,"isList":true}},{"name":"userFieldOption","args":[{"name":"where","inputType":[{"type":"UserFieldOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":false,"isList":false}},{"name":"userHistories","args":[{"name":"where","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserHistoryOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":false,"isList":true}},{"name":"userHistory","args":[{"name":"where","inputType":[{"type":"UserHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":false,"isList":false}},{"name":"userOpenIds","args":[{"name":"where","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserOpenIdOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":false,"isList":true}},{"name":"userOpenId","args":[{"name":"where","inputType":[{"type":"UserOpenIdWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":false,"isList":false}},{"name":"userOptions","args":[{"name":"where","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserOptionOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":false,"isList":true}},{"name":"userOption","args":[{"name":"where","inputType":[{"type":"UserOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":false,"isList":false}},{"name":"userProfiles","args":[{"name":"where","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserProfileOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserProfile","kind":"object","isRequired":false,"isList":true}},{"name":"userProfileViews","args":[{"name":"where","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserProfileViewOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":false,"isList":true}},{"name":"userProfileView","args":[{"name":"where","inputType":[{"type":"UserProfileViewWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":false,"isList":false}},{"name":"userSearchData","args":[{"name":"where","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserSearchDatumOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserSearchDatum","kind":"object","isRequired":false,"isList":true}},{"name":"userSecondFactors","args":[{"name":"where","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserSecondFactorOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":false,"isList":true}},{"name":"userSecondFactor","args":[{"name":"where","inputType":[{"type":"UserSecondFactorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":false,"isList":false}},{"name":"userStats","args":[{"name":"where","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserStatOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserStat","kind":"object","isRequired":false,"isList":true}},{"name":"userUploads","args":[{"name":"where","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserUploadOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":false,"isList":true}},{"name":"userUpload","args":[{"name":"where","inputType":[{"type":"UserUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":false,"isList":false}},{"name":"userVisits","args":[{"name":"where","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserVisitOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":false,"isList":true}},{"name":"userVisit","args":[{"name":"where","inputType":[{"type":"UserVisitWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":false,"isList":false}},{"name":"userWarnings","args":[{"name":"where","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"UserWarningOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":false,"isList":true}},{"name":"userWarning","args":[{"name":"where","inputType":[{"type":"UserWarningWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":false,"isList":false}},{"name":"watchedWords","args":[{"name":"where","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"WatchedWordOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":false,"isList":true}},{"name":"watchedWord","args":[{"name":"where","inputType":[{"type":"WatchedWordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":false,"isList":false}},{"name":"webCrawlerRequests","args":[{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"WebCrawlerRequestOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":false,"isList":true}},{"name":"webCrawlerRequest","args":[{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":false,"isList":false}},{"name":"webHooks","args":[{"name":"where","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"WebHookOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":false,"isList":true}},{"name":"webHook","args":[{"name":"where","inputType":[{"type":"WebHookWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":false,"isList":false}},{"name":"webHookEvents","args":[{"name":"where","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"WebHookEventOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":false,"isList":true}},{"name":"webHookEvent","args":[{"name":"where","inputType":[{"type":"WebHookEventWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":false,"isList":false}},{"name":"webHookEventTypes","args":[{"name":"where","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":false}]},{"name":"orderBy","inputType":[{"type":"WebHookEventTypeOrderByInput","kind":"enum","isRequired":false,"isList":false}]},{"name":"skip","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"after","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"before","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"first","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"last","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":false,"isList":true}},{"name":"webHookEventType","args":[{"name":"where","inputType":[{"type":"WebHookEventTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":false,"isList":false}}]},{"name":"BatchPayload","fields":[]},{"name":"Mutation","fields":[{"name":"createApiKey","args":[{"name":"data","inputType":[{"type":"ApiKeyCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":true,"isList":false}},{"name":"deleteApiKey","args":[{"name":"where","inputType":[{"type":"ApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"updateApiKey","args":[{"name":"data","inputType":[{"type":"ApiKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"upsertApiKey","args":[{"name":"where","inputType":[{"type":"ApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ApiKeyCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ApiKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApiKey","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyApiKeys","args":[{"name":"data","inputType":[{"type":"ApiKeyUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyApiKeys","args":[{"name":"where","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createApplicationRequest","args":[{"name":"data","inputType":[{"type":"ApplicationRequestCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":true,"isList":false}},{"name":"deleteApplicationRequest","args":[{"name":"where","inputType":[{"type":"ApplicationRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":false,"isList":false}},{"name":"updateApplicationRequest","args":[{"name":"data","inputType":[{"type":"ApplicationRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ApplicationRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":false,"isList":false}},{"name":"upsertApplicationRequest","args":[{"name":"where","inputType":[{"type":"ApplicationRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ApplicationRequestCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ApplicationRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ApplicationRequest","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyApplicationRequests","args":[{"name":"data","inputType":[{"type":"ApplicationRequestUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyApplicationRequests","args":[{"name":"where","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createArInternalMetadatum","args":[{"name":"data","inputType":[{"type":"ArInternalMetadatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ArInternalMetadatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyArInternalMetadata","args":[{"name":"data","inputType":[{"type":"ArInternalMetadatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyArInternalMetadata","args":[{"name":"where","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createBadge","args":[{"name":"data","inputType":[{"type":"BadgeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":true,"isList":false}},{"name":"deleteBadge","args":[{"name":"where","inputType":[{"type":"BadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":false,"isList":false}},{"name":"updateBadge","args":[{"name":"data","inputType":[{"type":"BadgeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":false,"isList":false}},{"name":"upsertBadge","args":[{"name":"where","inputType":[{"type":"BadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"BadgeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"BadgeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Badge","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyBadges","args":[{"name":"data","inputType":[{"type":"BadgeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyBadges","args":[{"name":"where","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createBadgeGrouping","args":[{"name":"data","inputType":[{"type":"BadgeGroupingCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":true,"isList":false}},{"name":"deleteBadgeGrouping","args":[{"name":"where","inputType":[{"type":"BadgeGroupingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":false,"isList":false}},{"name":"updateBadgeGrouping","args":[{"name":"data","inputType":[{"type":"BadgeGroupingUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeGroupingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":false,"isList":false}},{"name":"upsertBadgeGrouping","args":[{"name":"where","inputType":[{"type":"BadgeGroupingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"BadgeGroupingCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"BadgeGroupingUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeGrouping","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyBadgeGroupings","args":[{"name":"data","inputType":[{"type":"BadgeGroupingUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyBadgeGroupings","args":[{"name":"where","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createBadgeType","args":[{"name":"data","inputType":[{"type":"BadgeTypeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":true,"isList":false}},{"name":"deleteBadgeType","args":[{"name":"where","inputType":[{"type":"BadgeTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":false,"isList":false}},{"name":"updateBadgeType","args":[{"name":"data","inputType":[{"type":"BadgeTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":false,"isList":false}},{"name":"upsertBadgeType","args":[{"name":"where","inputType":[{"type":"BadgeTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"BadgeTypeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"BadgeTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"BadgeType","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyBadgeTypes","args":[{"name":"data","inputType":[{"type":"BadgeTypeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyBadgeTypes","args":[{"name":"where","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategory","args":[{"name":"data","inputType":[{"type":"CategoryCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategory","args":[{"name":"where","inputType":[{"type":"CategoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategory","args":[{"name":"data","inputType":[{"type":"CategoryUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategory","args":[{"name":"where","inputType":[{"type":"CategoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Category","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategories","args":[{"name":"data","inputType":[{"type":"CategoryUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategories","args":[{"name":"where","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryCustomField","args":[{"name":"data","inputType":[{"type":"CategoryCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryCustomField","args":[{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryCustomField","args":[{"name":"data","inputType":[{"type":"CategoryCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryCustomField","args":[{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryCustomFields","args":[{"name":"data","inputType":[{"type":"CategoryCustomFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryCustomFields","args":[{"name":"where","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryFeaturedTopic","args":[{"name":"data","inputType":[{"type":"CategoryFeaturedTopicCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryFeaturedTopic","args":[{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryFeaturedTopic","args":[{"name":"data","inputType":[{"type":"CategoryFeaturedTopicUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryFeaturedTopic","args":[{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryFeaturedTopicCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryFeaturedTopicUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryFeaturedTopic","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryFeaturedTopics","args":[{"name":"data","inputType":[{"type":"CategoryFeaturedTopicUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryFeaturedTopics","args":[{"name":"where","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryGroup","args":[{"name":"data","inputType":[{"type":"CategoryGroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryGroup","args":[{"name":"where","inputType":[{"type":"CategoryGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryGroup","args":[{"name":"data","inputType":[{"type":"CategoryGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryGroup","args":[{"name":"where","inputType":[{"type":"CategoryGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryGroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryGroup","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryGroups","args":[{"name":"data","inputType":[{"type":"CategoryGroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryGroups","args":[{"name":"where","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategorySearchDatum","args":[{"name":"data","inputType":[{"type":"CategorySearchDatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategorySearchDatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategorySearchData","args":[{"name":"data","inputType":[{"type":"CategorySearchDatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategorySearchData","args":[{"name":"where","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryTag","args":[{"name":"data","inputType":[{"type":"CategoryTagCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryTag","args":[{"name":"where","inputType":[{"type":"CategoryTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryTag","args":[{"name":"data","inputType":[{"type":"CategoryTagUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryTag","args":[{"name":"where","inputType":[{"type":"CategoryTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryTagCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryTagUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTag","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryTags","args":[{"name":"data","inputType":[{"type":"CategoryTagUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryTags","args":[{"name":"where","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryTagGroup","args":[{"name":"data","inputType":[{"type":"CategoryTagGroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryTagGroup","args":[{"name":"where","inputType":[{"type":"CategoryTagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryTagGroup","args":[{"name":"data","inputType":[{"type":"CategoryTagGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryTagGroup","args":[{"name":"where","inputType":[{"type":"CategoryTagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryTagGroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryTagGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagGroup","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryTagGroups","args":[{"name":"data","inputType":[{"type":"CategoryTagGroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryTagGroups","args":[{"name":"where","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryTagStat","args":[{"name":"data","inputType":[{"type":"CategoryTagStatCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryTagStat","args":[{"name":"where","inputType":[{"type":"CategoryTagStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryTagStat","args":[{"name":"data","inputType":[{"type":"CategoryTagStatUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryTagStat","args":[{"name":"where","inputType":[{"type":"CategoryTagStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryTagStatCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryTagStatUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryTagStat","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryTagStats","args":[{"name":"data","inputType":[{"type":"CategoryTagStatUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryTagStats","args":[{"name":"where","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCategoryUser","args":[{"name":"data","inputType":[{"type":"CategoryUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCategoryUser","args":[{"name":"where","inputType":[{"type":"CategoryUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateCategoryUser","args":[{"name":"data","inputType":[{"type":"CategoryUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCategoryUser","args":[{"name":"where","inputType":[{"type":"CategoryUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CategoryUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CategoryUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CategoryUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCategoryUsers","args":[{"name":"data","inputType":[{"type":"CategoryUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCategoryUsers","args":[{"name":"where","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createChildTheme","args":[{"name":"data","inputType":[{"type":"ChildThemeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":true,"isList":false}},{"name":"deleteChildTheme","args":[{"name":"where","inputType":[{"type":"ChildThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":false,"isList":false}},{"name":"updateChildTheme","args":[{"name":"data","inputType":[{"type":"ChildThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ChildThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":false,"isList":false}},{"name":"upsertChildTheme","args":[{"name":"where","inputType":[{"type":"ChildThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ChildThemeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ChildThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ChildTheme","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyChildThemes","args":[{"name":"data","inputType":[{"type":"ChildThemeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyChildThemes","args":[{"name":"where","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createColorScheme","args":[{"name":"data","inputType":[{"type":"ColorSchemeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":true,"isList":false}},{"name":"deleteColorScheme","args":[{"name":"where","inputType":[{"type":"ColorSchemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":false,"isList":false}},{"name":"updateColorScheme","args":[{"name":"data","inputType":[{"type":"ColorSchemeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ColorSchemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":false,"isList":false}},{"name":"upsertColorScheme","args":[{"name":"where","inputType":[{"type":"ColorSchemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ColorSchemeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ColorSchemeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorScheme","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyColorSchemes","args":[{"name":"data","inputType":[{"type":"ColorSchemeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyColorSchemes","args":[{"name":"where","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createColorSchemeColor","args":[{"name":"data","inputType":[{"type":"ColorSchemeColorCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":true,"isList":false}},{"name":"deleteColorSchemeColor","args":[{"name":"where","inputType":[{"type":"ColorSchemeColorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":false,"isList":false}},{"name":"updateColorSchemeColor","args":[{"name":"data","inputType":[{"type":"ColorSchemeColorUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ColorSchemeColorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":false,"isList":false}},{"name":"upsertColorSchemeColor","args":[{"name":"where","inputType":[{"type":"ColorSchemeColorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ColorSchemeColorCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ColorSchemeColorUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ColorSchemeColor","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyColorSchemeColors","args":[{"name":"data","inputType":[{"type":"ColorSchemeColorUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyColorSchemeColors","args":[{"name":"where","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createCustomEmoji","args":[{"name":"data","inputType":[{"type":"CustomEmojiCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":true,"isList":false}},{"name":"deleteCustomEmoji","args":[{"name":"where","inputType":[{"type":"CustomEmojiWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":false,"isList":false}},{"name":"updateCustomEmoji","args":[{"name":"data","inputType":[{"type":"CustomEmojiUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CustomEmojiWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":false,"isList":false}},{"name":"upsertCustomEmoji","args":[{"name":"where","inputType":[{"type":"CustomEmojiWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"CustomEmojiCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"CustomEmojiUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"CustomEmoji","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyCustomEmojis","args":[{"name":"data","inputType":[{"type":"CustomEmojiUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyCustomEmojis","args":[{"name":"where","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createDeveloper","args":[{"name":"data","inputType":[{"type":"DeveloperCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":true,"isList":false}},{"name":"deleteDeveloper","args":[{"name":"where","inputType":[{"type":"DeveloperWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":false,"isList":false}},{"name":"updateDeveloper","args":[{"name":"data","inputType":[{"type":"DeveloperUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DeveloperWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":false,"isList":false}},{"name":"upsertDeveloper","args":[{"name":"where","inputType":[{"type":"DeveloperWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"DeveloperCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"DeveloperUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Developer","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyDevelopers","args":[{"name":"data","inputType":[{"type":"DeveloperUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyDevelopers","args":[{"name":"where","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createDirectoryItem","args":[{"name":"data","inputType":[{"type":"DirectoryItemCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":true,"isList":false}},{"name":"deleteDirectoryItem","args":[{"name":"where","inputType":[{"type":"DirectoryItemWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":false,"isList":false}},{"name":"updateDirectoryItem","args":[{"name":"data","inputType":[{"type":"DirectoryItemUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DirectoryItemWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":false,"isList":false}},{"name":"upsertDirectoryItem","args":[{"name":"where","inputType":[{"type":"DirectoryItemWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"DirectoryItemCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"DirectoryItemUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DirectoryItem","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyDirectoryItems","args":[{"name":"data","inputType":[{"type":"DirectoryItemUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyDirectoryItems","args":[{"name":"where","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createDraft","args":[{"name":"data","inputType":[{"type":"DraftCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":true,"isList":false}},{"name":"deleteDraft","args":[{"name":"where","inputType":[{"type":"DraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":false,"isList":false}},{"name":"updateDraft","args":[{"name":"data","inputType":[{"type":"DraftUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":false,"isList":false}},{"name":"upsertDraft","args":[{"name":"where","inputType":[{"type":"DraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"DraftCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"DraftUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Draft","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyDrafts","args":[{"name":"data","inputType":[{"type":"DraftUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyDrafts","args":[{"name":"where","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createDraftSequence","args":[{"name":"data","inputType":[{"type":"DraftSequenceCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":true,"isList":false}},{"name":"deleteDraftSequence","args":[{"name":"where","inputType":[{"type":"DraftSequenceWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":false,"isList":false}},{"name":"updateDraftSequence","args":[{"name":"data","inputType":[{"type":"DraftSequenceUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DraftSequenceWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":false,"isList":false}},{"name":"upsertDraftSequence","args":[{"name":"where","inputType":[{"type":"DraftSequenceWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"DraftSequenceCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"DraftSequenceUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"DraftSequence","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyDraftSequences","args":[{"name":"data","inputType":[{"type":"DraftSequenceUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyDraftSequences","args":[{"name":"where","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createEmailChangeRequest","args":[{"name":"data","inputType":[{"type":"EmailChangeRequestCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":true,"isList":false}},{"name":"deleteEmailChangeRequest","args":[{"name":"where","inputType":[{"type":"EmailChangeRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":false,"isList":false}},{"name":"updateEmailChangeRequest","args":[{"name":"data","inputType":[{"type":"EmailChangeRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailChangeRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":false,"isList":false}},{"name":"upsertEmailChangeRequest","args":[{"name":"where","inputType":[{"type":"EmailChangeRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"EmailChangeRequestCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"EmailChangeRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailChangeRequest","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyEmailChangeRequests","args":[{"name":"data","inputType":[{"type":"EmailChangeRequestUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyEmailChangeRequests","args":[{"name":"where","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createEmailLog","args":[{"name":"data","inputType":[{"type":"EmailLogCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":true,"isList":false}},{"name":"deleteEmailLog","args":[{"name":"where","inputType":[{"type":"EmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"updateEmailLog","args":[{"name":"data","inputType":[{"type":"EmailLogUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"upsertEmailLog","args":[{"name":"where","inputType":[{"type":"EmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"EmailLogCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"EmailLogUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailLog","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyEmailLogs","args":[{"name":"data","inputType":[{"type":"EmailLogUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyEmailLogs","args":[{"name":"where","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createEmailToken","args":[{"name":"data","inputType":[{"type":"EmailTokenCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":true,"isList":false}},{"name":"deleteEmailToken","args":[{"name":"where","inputType":[{"type":"EmailTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":false,"isList":false}},{"name":"updateEmailToken","args":[{"name":"data","inputType":[{"type":"EmailTokenUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":false,"isList":false}},{"name":"upsertEmailToken","args":[{"name":"where","inputType":[{"type":"EmailTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"EmailTokenCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"EmailTokenUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmailToken","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyEmailTokens","args":[{"name":"data","inputType":[{"type":"EmailTokenUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyEmailTokens","args":[{"name":"where","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createEmbeddableHost","args":[{"name":"data","inputType":[{"type":"EmbeddableHostCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":true,"isList":false}},{"name":"deleteEmbeddableHost","args":[{"name":"where","inputType":[{"type":"EmbeddableHostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":false,"isList":false}},{"name":"updateEmbeddableHost","args":[{"name":"data","inputType":[{"type":"EmbeddableHostUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmbeddableHostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":false,"isList":false}},{"name":"upsertEmbeddableHost","args":[{"name":"where","inputType":[{"type":"EmbeddableHostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"EmbeddableHostCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"EmbeddableHostUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"EmbeddableHost","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyEmbeddableHosts","args":[{"name":"data","inputType":[{"type":"EmbeddableHostUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyEmbeddableHosts","args":[{"name":"where","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createFacebookUserInfo","args":[{"name":"data","inputType":[{"type":"FacebookUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteFacebookUserInfo","args":[{"name":"where","inputType":[{"type":"FacebookUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateFacebookUserInfo","args":[{"name":"data","inputType":[{"type":"FacebookUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"FacebookUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertFacebookUserInfo","args":[{"name":"where","inputType":[{"type":"FacebookUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"FacebookUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"FacebookUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"FacebookUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyFacebookUserInfoes","args":[{"name":"data","inputType":[{"type":"FacebookUserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyFacebookUserInfoes","args":[{"name":"where","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGithubUserInfo","args":[{"name":"data","inputType":[{"type":"GithubUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGithubUserInfo","args":[{"name":"where","inputType":[{"type":"GithubUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateGithubUserInfo","args":[{"name":"data","inputType":[{"type":"GithubUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GithubUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGithubUserInfo","args":[{"name":"where","inputType":[{"type":"GithubUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GithubUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GithubUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GithubUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGithubUserInfoes","args":[{"name":"data","inputType":[{"type":"GithubUserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGithubUserInfoes","args":[{"name":"where","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGoogleUserInfo","args":[{"name":"data","inputType":[{"type":"GoogleUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGoogleUserInfo","args":[{"name":"where","inputType":[{"type":"GoogleUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateGoogleUserInfo","args":[{"name":"data","inputType":[{"type":"GoogleUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GoogleUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGoogleUserInfo","args":[{"name":"where","inputType":[{"type":"GoogleUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GoogleUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GoogleUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GoogleUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGoogleUserInfoes","args":[{"name":"data","inputType":[{"type":"GoogleUserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGoogleUserInfoes","args":[{"name":"where","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroup","args":[{"name":"data","inputType":[{"type":"GroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroup","args":[{"name":"where","inputType":[{"type":"GroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroup","args":[{"name":"data","inputType":[{"type":"GroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroup","args":[{"name":"where","inputType":[{"type":"GroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Group","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroups","args":[{"name":"data","inputType":[{"type":"GroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroups","args":[{"name":"where","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroupArchivedMessage","args":[{"name":"data","inputType":[{"type":"GroupArchivedMessageCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroupArchivedMessage","args":[{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroupArchivedMessage","args":[{"name":"data","inputType":[{"type":"GroupArchivedMessageUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroupArchivedMessage","args":[{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupArchivedMessageCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupArchivedMessageUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupArchivedMessage","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroupArchivedMessages","args":[{"name":"data","inputType":[{"type":"GroupArchivedMessageUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroupArchivedMessages","args":[{"name":"where","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroupCustomField","args":[{"name":"data","inputType":[{"type":"GroupCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroupCustomField","args":[{"name":"where","inputType":[{"type":"GroupCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroupCustomField","args":[{"name":"data","inputType":[{"type":"GroupCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroupCustomField","args":[{"name":"where","inputType":[{"type":"GroupCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroupCustomFields","args":[{"name":"data","inputType":[{"type":"GroupCustomFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroupCustomFields","args":[{"name":"where","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroupHistory","args":[{"name":"data","inputType":[{"type":"GroupHistoryCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroupHistory","args":[{"name":"where","inputType":[{"type":"GroupHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroupHistory","args":[{"name":"data","inputType":[{"type":"GroupHistoryUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroupHistory","args":[{"name":"where","inputType":[{"type":"GroupHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupHistoryCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupHistoryUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupHistory","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroupHistories","args":[{"name":"data","inputType":[{"type":"GroupHistoryUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroupHistories","args":[{"name":"where","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroupMention","args":[{"name":"data","inputType":[{"type":"GroupMentionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroupMention","args":[{"name":"where","inputType":[{"type":"GroupMentionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroupMention","args":[{"name":"data","inputType":[{"type":"GroupMentionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupMentionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroupMention","args":[{"name":"where","inputType":[{"type":"GroupMentionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupMentionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupMentionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupMention","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroupMentions","args":[{"name":"data","inputType":[{"type":"GroupMentionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroupMentions","args":[{"name":"where","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createGroupUser","args":[{"name":"data","inputType":[{"type":"GroupUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteGroupUser","args":[{"name":"where","inputType":[{"type":"GroupUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateGroupUser","args":[{"name":"data","inputType":[{"type":"GroupUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertGroupUser","args":[{"name":"where","inputType":[{"type":"GroupUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"GroupUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"GroupUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"GroupUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyGroupUsers","args":[{"name":"data","inputType":[{"type":"GroupUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyGroupUsers","args":[{"name":"where","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createIncomingDomain","args":[{"name":"data","inputType":[{"type":"IncomingDomainCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":true,"isList":false}},{"name":"deleteIncomingDomain","args":[{"name":"where","inputType":[{"type":"IncomingDomainWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":false,"isList":false}},{"name":"updateIncomingDomain","args":[{"name":"data","inputType":[{"type":"IncomingDomainUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingDomainWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":false,"isList":false}},{"name":"upsertIncomingDomain","args":[{"name":"where","inputType":[{"type":"IncomingDomainWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"IncomingDomainCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"IncomingDomainUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingDomain","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyIncomingDomains","args":[{"name":"data","inputType":[{"type":"IncomingDomainUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyIncomingDomains","args":[{"name":"where","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createIncomingEmail","args":[{"name":"data","inputType":[{"type":"IncomingEmailCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":true,"isList":false}},{"name":"deleteIncomingEmail","args":[{"name":"where","inputType":[{"type":"IncomingEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":false,"isList":false}},{"name":"updateIncomingEmail","args":[{"name":"data","inputType":[{"type":"IncomingEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":false,"isList":false}},{"name":"upsertIncomingEmail","args":[{"name":"where","inputType":[{"type":"IncomingEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"IncomingEmailCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"IncomingEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingEmail","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyIncomingEmails","args":[{"name":"data","inputType":[{"type":"IncomingEmailUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyIncomingEmails","args":[{"name":"where","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createIncomingLink","args":[{"name":"data","inputType":[{"type":"IncomingLinkCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":true,"isList":false}},{"name":"deleteIncomingLink","args":[{"name":"where","inputType":[{"type":"IncomingLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":false,"isList":false}},{"name":"updateIncomingLink","args":[{"name":"data","inputType":[{"type":"IncomingLinkUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":false,"isList":false}},{"name":"upsertIncomingLink","args":[{"name":"where","inputType":[{"type":"IncomingLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"IncomingLinkCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"IncomingLinkUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingLink","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyIncomingLinks","args":[{"name":"data","inputType":[{"type":"IncomingLinkUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyIncomingLinks","args":[{"name":"where","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createIncomingReferer","args":[{"name":"data","inputType":[{"type":"IncomingRefererCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":true,"isList":false}},{"name":"deleteIncomingReferer","args":[{"name":"where","inputType":[{"type":"IncomingRefererWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":false,"isList":false}},{"name":"updateIncomingReferer","args":[{"name":"data","inputType":[{"type":"IncomingRefererUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingRefererWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":false,"isList":false}},{"name":"upsertIncomingReferer","args":[{"name":"where","inputType":[{"type":"IncomingRefererWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"IncomingRefererCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"IncomingRefererUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"IncomingReferer","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyIncomingReferers","args":[{"name":"data","inputType":[{"type":"IncomingRefererUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyIncomingReferers","args":[{"name":"where","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createInstagramUserInfo","args":[{"name":"data","inputType":[{"type":"InstagramUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteInstagramUserInfo","args":[{"name":"where","inputType":[{"type":"InstagramUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateInstagramUserInfo","args":[{"name":"data","inputType":[{"type":"InstagramUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InstagramUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertInstagramUserInfo","args":[{"name":"where","inputType":[{"type":"InstagramUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"InstagramUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"InstagramUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InstagramUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyInstagramUserInfoes","args":[{"name":"data","inputType":[{"type":"InstagramUserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyInstagramUserInfoes","args":[{"name":"where","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createInvite","args":[{"name":"data","inputType":[{"type":"InviteCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":true,"isList":false}},{"name":"deleteInvite","args":[{"name":"where","inputType":[{"type":"InviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":false,"isList":false}},{"name":"updateInvite","args":[{"name":"data","inputType":[{"type":"InviteUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":false,"isList":false}},{"name":"upsertInvite","args":[{"name":"where","inputType":[{"type":"InviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"InviteCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"InviteUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Invite","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyInvites","args":[{"name":"data","inputType":[{"type":"InviteUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyInvites","args":[{"name":"where","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createInvitedGroup","args":[{"name":"data","inputType":[{"type":"InvitedGroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":true,"isList":false}},{"name":"deleteInvitedGroup","args":[{"name":"where","inputType":[{"type":"InvitedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"updateInvitedGroup","args":[{"name":"data","inputType":[{"type":"InvitedGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InvitedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"upsertInvitedGroup","args":[{"name":"where","inputType":[{"type":"InvitedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"InvitedGroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"InvitedGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"InvitedGroup","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyInvitedGroups","args":[{"name":"data","inputType":[{"type":"InvitedGroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyInvitedGroups","args":[{"name":"where","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createJavascriptCach","args":[{"name":"data","inputType":[{"type":"JavascriptCachCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":true,"isList":false}},{"name":"deleteJavascriptCach","args":[{"name":"where","inputType":[{"type":"JavascriptCachWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":false,"isList":false}},{"name":"updateJavascriptCach","args":[{"name":"data","inputType":[{"type":"JavascriptCachUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"JavascriptCachWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":false,"isList":false}},{"name":"upsertJavascriptCach","args":[{"name":"where","inputType":[{"type":"JavascriptCachWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"JavascriptCachCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"JavascriptCachUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"JavascriptCach","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyJavascriptCaches","args":[{"name":"data","inputType":[{"type":"JavascriptCachUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyJavascriptCaches","args":[{"name":"where","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createMessageBus","args":[{"name":"data","inputType":[{"type":"MessageBusCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":true,"isList":false}},{"name":"deleteMessageBus","args":[{"name":"where","inputType":[{"type":"MessageBusWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":false,"isList":false}},{"name":"updateMessageBus","args":[{"name":"data","inputType":[{"type":"MessageBusUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"MessageBusWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":false,"isList":false}},{"name":"upsertMessageBus","args":[{"name":"where","inputType":[{"type":"MessageBusWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"MessageBusCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"MessageBusUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MessageBus","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyMessageBuses","args":[{"name":"data","inputType":[{"type":"MessageBusUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyMessageBuses","args":[{"name":"where","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createMutedUser","args":[{"name":"data","inputType":[{"type":"MutedUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteMutedUser","args":[{"name":"where","inputType":[{"type":"MutedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateMutedUser","args":[{"name":"data","inputType":[{"type":"MutedUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"MutedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertMutedUser","args":[{"name":"where","inputType":[{"type":"MutedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"MutedUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"MutedUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"MutedUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyMutedUsers","args":[{"name":"data","inputType":[{"type":"MutedUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyMutedUsers","args":[{"name":"where","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createNotification","args":[{"name":"data","inputType":[{"type":"NotificationCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":true,"isList":false}},{"name":"deleteNotification","args":[{"name":"where","inputType":[{"type":"NotificationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":false,"isList":false}},{"name":"updateNotification","args":[{"name":"data","inputType":[{"type":"NotificationUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"NotificationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":false,"isList":false}},{"name":"upsertNotification","args":[{"name":"where","inputType":[{"type":"NotificationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"NotificationCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"NotificationUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Notification","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyNotifications","args":[{"name":"data","inputType":[{"type":"NotificationUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyNotifications","args":[{"name":"where","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createOauth2UserInfo","args":[{"name":"data","inputType":[{"type":"Oauth2UserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteOauth2UserInfo","args":[{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateOauth2UserInfo","args":[{"name":"data","inputType":[{"type":"Oauth2UserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertOauth2UserInfo","args":[{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"Oauth2UserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"Oauth2UserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Oauth2UserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyOauth2UserInfoes","args":[{"name":"data","inputType":[{"type":"Oauth2UserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyOauth2UserInfoes","args":[{"name":"where","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createOnceoffLog","args":[{"name":"data","inputType":[{"type":"OnceoffLogCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":true,"isList":false}},{"name":"deleteOnceoffLog","args":[{"name":"where","inputType":[{"type":"OnceoffLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":false,"isList":false}},{"name":"updateOnceoffLog","args":[{"name":"data","inputType":[{"type":"OnceoffLogUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"OnceoffLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":false,"isList":false}},{"name":"upsertOnceoffLog","args":[{"name":"where","inputType":[{"type":"OnceoffLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"OnceoffLogCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"OnceoffLogUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OnceoffLog","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyOnceoffLogs","args":[{"name":"data","inputType":[{"type":"OnceoffLogUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyOnceoffLogs","args":[{"name":"where","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createOptimizedImage","args":[{"name":"data","inputType":[{"type":"OptimizedImageCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":true,"isList":false}},{"name":"deleteOptimizedImage","args":[{"name":"where","inputType":[{"type":"OptimizedImageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":false,"isList":false}},{"name":"updateOptimizedImage","args":[{"name":"data","inputType":[{"type":"OptimizedImageUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"OptimizedImageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":false,"isList":false}},{"name":"upsertOptimizedImage","args":[{"name":"where","inputType":[{"type":"OptimizedImageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"OptimizedImageCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"OptimizedImageUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"OptimizedImage","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyOptimizedImages","args":[{"name":"data","inputType":[{"type":"OptimizedImageUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyOptimizedImages","args":[{"name":"where","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPermalink","args":[{"name":"data","inputType":[{"type":"PermalinkCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":true,"isList":false}},{"name":"deletePermalink","args":[{"name":"where","inputType":[{"type":"PermalinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":false,"isList":false}},{"name":"updatePermalink","args":[{"name":"data","inputType":[{"type":"PermalinkUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PermalinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPermalink","args":[{"name":"where","inputType":[{"type":"PermalinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PermalinkCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PermalinkUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Permalink","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPermalinks","args":[{"name":"data","inputType":[{"type":"PermalinkUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPermalinks","args":[{"name":"where","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPluginStoreRow","args":[{"name":"data","inputType":[{"type":"PluginStoreRowCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":true,"isList":false}},{"name":"deletePluginStoreRow","args":[{"name":"where","inputType":[{"type":"PluginStoreRowWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":false,"isList":false}},{"name":"updatePluginStoreRow","args":[{"name":"data","inputType":[{"type":"PluginStoreRowUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PluginStoreRowWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPluginStoreRow","args":[{"name":"where","inputType":[{"type":"PluginStoreRowWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PluginStoreRowCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PluginStoreRowUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PluginStoreRow","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPluginStoreRows","args":[{"name":"data","inputType":[{"type":"PluginStoreRowUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPluginStoreRows","args":[{"name":"where","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPost","args":[{"name":"data","inputType":[{"type":"PostCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":true,"isList":false}},{"name":"deletePost","args":[{"name":"where","inputType":[{"type":"PostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":false,"isList":false}},{"name":"updatePost","args":[{"name":"data","inputType":[{"type":"PostUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPost","args":[{"name":"where","inputType":[{"type":"PostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Post","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPosts","args":[{"name":"data","inputType":[{"type":"PostUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPosts","args":[{"name":"where","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostAction","args":[{"name":"data","inputType":[{"type":"PostActionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostAction","args":[{"name":"where","inputType":[{"type":"PostActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostAction","args":[{"name":"data","inputType":[{"type":"PostActionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostAction","args":[{"name":"where","inputType":[{"type":"PostActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostActionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostActionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostAction","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostActions","args":[{"name":"data","inputType":[{"type":"PostActionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostActions","args":[{"name":"where","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostActionType","args":[{"name":"data","inputType":[{"type":"PostActionTypeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostActionType","args":[{"name":"where","inputType":[{"type":"PostActionTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostActionType","args":[{"name":"data","inputType":[{"type":"PostActionTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostActionTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostActionType","args":[{"name":"where","inputType":[{"type":"PostActionTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostActionTypeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostActionTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostActionType","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostActionTypes","args":[{"name":"data","inputType":[{"type":"PostActionTypeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostActionTypes","args":[{"name":"where","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostCustomField","args":[{"name":"data","inputType":[{"type":"PostCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostCustomField","args":[{"name":"where","inputType":[{"type":"PostCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostCustomField","args":[{"name":"data","inputType":[{"type":"PostCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostCustomField","args":[{"name":"where","inputType":[{"type":"PostCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostCustomFields","args":[{"name":"data","inputType":[{"type":"PostCustomFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostCustomFields","args":[{"name":"where","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostDetail","args":[{"name":"data","inputType":[{"type":"PostDetailCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostDetail","args":[{"name":"where","inputType":[{"type":"PostDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostDetail","args":[{"name":"data","inputType":[{"type":"PostDetailUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostDetail","args":[{"name":"where","inputType":[{"type":"PostDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostDetailCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostDetailUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostDetail","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostDetails","args":[{"name":"data","inputType":[{"type":"PostDetailUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostDetails","args":[{"name":"where","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostReplyKey","args":[{"name":"data","inputType":[{"type":"PostReplyKeyCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostReplyKey","args":[{"name":"where","inputType":[{"type":"PostReplyKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostReplyKey","args":[{"name":"data","inputType":[{"type":"PostReplyKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostReplyKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostReplyKey","args":[{"name":"where","inputType":[{"type":"PostReplyKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostReplyKeyCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostReplyKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostReplyKey","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostReplyKeys","args":[{"name":"data","inputType":[{"type":"PostReplyKeyUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostReplyKeys","args":[{"name":"where","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostRevision","args":[{"name":"data","inputType":[{"type":"PostRevisionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostRevision","args":[{"name":"where","inputType":[{"type":"PostRevisionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostRevision","args":[{"name":"data","inputType":[{"type":"PostRevisionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostRevisionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostRevision","args":[{"name":"where","inputType":[{"type":"PostRevisionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostRevisionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostRevisionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostRevision","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostRevisions","args":[{"name":"data","inputType":[{"type":"PostRevisionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostRevisions","args":[{"name":"where","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostSearchDatum","args":[{"name":"data","inputType":[{"type":"PostSearchDatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostSearchDatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostSearchData","args":[{"name":"data","inputType":[{"type":"PostSearchDatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostSearchData","args":[{"name":"where","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostStat","args":[{"name":"data","inputType":[{"type":"PostStatCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostStat","args":[{"name":"where","inputType":[{"type":"PostStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostStat","args":[{"name":"data","inputType":[{"type":"PostStatUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostStat","args":[{"name":"where","inputType":[{"type":"PostStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostStatCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostStatUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostStat","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostStats","args":[{"name":"data","inputType":[{"type":"PostStatUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostStats","args":[{"name":"where","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPostUpload","args":[{"name":"data","inputType":[{"type":"PostUploadCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":true,"isList":false}},{"name":"deletePostUpload","args":[{"name":"where","inputType":[{"type":"PostUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":false,"isList":false}},{"name":"updatePostUpload","args":[{"name":"data","inputType":[{"type":"PostUploadUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPostUpload","args":[{"name":"where","inputType":[{"type":"PostUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PostUploadCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PostUploadUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PostUpload","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPostUploads","args":[{"name":"data","inputType":[{"type":"PostUploadUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPostUploads","args":[{"name":"where","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createPushSubscription","args":[{"name":"data","inputType":[{"type":"PushSubscriptionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":true,"isList":false}},{"name":"deletePushSubscription","args":[{"name":"where","inputType":[{"type":"PushSubscriptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":false,"isList":false}},{"name":"updatePushSubscription","args":[{"name":"data","inputType":[{"type":"PushSubscriptionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PushSubscriptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":false,"isList":false}},{"name":"upsertPushSubscription","args":[{"name":"where","inputType":[{"type":"PushSubscriptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"PushSubscriptionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"PushSubscriptionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"PushSubscription","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyPushSubscriptions","args":[{"name":"data","inputType":[{"type":"PushSubscriptionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyPushSubscriptions","args":[{"name":"where","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createQueuedPost","args":[{"name":"data","inputType":[{"type":"QueuedPostCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":true,"isList":false}},{"name":"deleteQueuedPost","args":[{"name":"where","inputType":[{"type":"QueuedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":false,"isList":false}},{"name":"updateQueuedPost","args":[{"name":"data","inputType":[{"type":"QueuedPostUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"QueuedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":false,"isList":false}},{"name":"upsertQueuedPost","args":[{"name":"where","inputType":[{"type":"QueuedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"QueuedPostCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"QueuedPostUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QueuedPost","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyQueuedPosts","args":[{"name":"data","inputType":[{"type":"QueuedPostUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyQueuedPosts","args":[{"name":"where","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createQuotedPost","args":[{"name":"data","inputType":[{"type":"QuotedPostCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":true,"isList":false}},{"name":"deleteQuotedPost","args":[{"name":"where","inputType":[{"type":"QuotedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":false,"isList":false}},{"name":"updateQuotedPost","args":[{"name":"data","inputType":[{"type":"QuotedPostUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"QuotedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":false,"isList":false}},{"name":"upsertQuotedPost","args":[{"name":"where","inputType":[{"type":"QuotedPostWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"QuotedPostCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"QuotedPostUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"QuotedPost","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyQuotedPosts","args":[{"name":"data","inputType":[{"type":"QuotedPostUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyQuotedPosts","args":[{"name":"where","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createRemoteTheme","args":[{"name":"data","inputType":[{"type":"RemoteThemeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":true,"isList":false}},{"name":"deleteRemoteTheme","args":[{"name":"where","inputType":[{"type":"RemoteThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":false,"isList":false}},{"name":"updateRemoteTheme","args":[{"name":"data","inputType":[{"type":"RemoteThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"RemoteThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":false,"isList":false}},{"name":"upsertRemoteTheme","args":[{"name":"where","inputType":[{"type":"RemoteThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"RemoteThemeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"RemoteThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"RemoteTheme","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyRemoteThemes","args":[{"name":"data","inputType":[{"type":"RemoteThemeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyRemoteThemes","args":[{"name":"where","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSchedulerStat","args":[{"name":"data","inputType":[{"type":"SchedulerStatCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSchedulerStat","args":[{"name":"where","inputType":[{"type":"SchedulerStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":false,"isList":false}},{"name":"updateSchedulerStat","args":[{"name":"data","inputType":[{"type":"SchedulerStatUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchedulerStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSchedulerStat","args":[{"name":"where","inputType":[{"type":"SchedulerStatWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SchedulerStatCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SchedulerStatUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchedulerStat","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySchedulerStats","args":[{"name":"data","inputType":[{"type":"SchedulerStatUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySchedulerStats","args":[{"name":"where","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSchemaMigration","args":[{"name":"data","inputType":[{"type":"SchemaMigrationCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSchemaMigration","args":[{"name":"where","inputType":[{"type":"SchemaMigrationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":false,"isList":false}},{"name":"updateSchemaMigration","args":[{"name":"data","inputType":[{"type":"SchemaMigrationUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchemaMigrationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSchemaMigration","args":[{"name":"where","inputType":[{"type":"SchemaMigrationWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SchemaMigrationCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SchemaMigrationUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigration","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySchemaMigrations","args":[{"name":"data","inputType":[{"type":"SchemaMigrationUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySchemaMigrations","args":[{"name":"where","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSchemaMigrationDetail","args":[{"name":"data","inputType":[{"type":"SchemaMigrationDetailCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSchemaMigrationDetail","args":[{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":false,"isList":false}},{"name":"updateSchemaMigrationDetail","args":[{"name":"data","inputType":[{"type":"SchemaMigrationDetailUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSchemaMigrationDetail","args":[{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SchemaMigrationDetailCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SchemaMigrationDetailUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SchemaMigrationDetail","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySchemaMigrationDetails","args":[{"name":"data","inputType":[{"type":"SchemaMigrationDetailUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySchemaMigrationDetails","args":[{"name":"where","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createScreenedEmail","args":[{"name":"data","inputType":[{"type":"ScreenedEmailCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":true,"isList":false}},{"name":"deleteScreenedEmail","args":[{"name":"where","inputType":[{"type":"ScreenedEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":false,"isList":false}},{"name":"updateScreenedEmail","args":[{"name":"data","inputType":[{"type":"ScreenedEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":false,"isList":false}},{"name":"upsertScreenedEmail","args":[{"name":"where","inputType":[{"type":"ScreenedEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ScreenedEmailCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ScreenedEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedEmail","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyScreenedEmails","args":[{"name":"data","inputType":[{"type":"ScreenedEmailUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyScreenedEmails","args":[{"name":"where","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createScreenedIpAddress","args":[{"name":"data","inputType":[{"type":"ScreenedIpAddressCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":true,"isList":false}},{"name":"deleteScreenedIpAddress","args":[{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":false,"isList":false}},{"name":"updateScreenedIpAddress","args":[{"name":"data","inputType":[{"type":"ScreenedIpAddressUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":false,"isList":false}},{"name":"upsertScreenedIpAddress","args":[{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ScreenedIpAddressCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ScreenedIpAddressUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedIpAddress","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyScreenedIpAddresses","args":[{"name":"data","inputType":[{"type":"ScreenedIpAddressUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyScreenedIpAddresses","args":[{"name":"where","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createScreenedUrl","args":[{"name":"data","inputType":[{"type":"ScreenedUrlCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":true,"isList":false}},{"name":"deleteScreenedUrl","args":[{"name":"where","inputType":[{"type":"ScreenedUrlWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":false,"isList":false}},{"name":"updateScreenedUrl","args":[{"name":"data","inputType":[{"type":"ScreenedUrlUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedUrlWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":false,"isList":false}},{"name":"upsertScreenedUrl","args":[{"name":"where","inputType":[{"type":"ScreenedUrlWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ScreenedUrlCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ScreenedUrlUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ScreenedUrl","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyScreenedUrls","args":[{"name":"data","inputType":[{"type":"ScreenedUrlUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyScreenedUrls","args":[{"name":"where","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSearchLog","args":[{"name":"data","inputType":[{"type":"SearchLogCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSearchLog","args":[{"name":"where","inputType":[{"type":"SearchLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":false,"isList":false}},{"name":"updateSearchLog","args":[{"name":"data","inputType":[{"type":"SearchLogUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SearchLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSearchLog","args":[{"name":"where","inputType":[{"type":"SearchLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SearchLogCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SearchLogUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SearchLog","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySearchLogs","args":[{"name":"data","inputType":[{"type":"SearchLogUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySearchLogs","args":[{"name":"where","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSharedDraft","args":[{"name":"data","inputType":[{"type":"SharedDraftCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSharedDraft","args":[{"name":"where","inputType":[{"type":"SharedDraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":false,"isList":false}},{"name":"updateSharedDraft","args":[{"name":"data","inputType":[{"type":"SharedDraftUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SharedDraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSharedDraft","args":[{"name":"where","inputType":[{"type":"SharedDraftWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SharedDraftCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SharedDraftUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SharedDraft","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySharedDrafts","args":[{"name":"data","inputType":[{"type":"SharedDraftUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySharedDrafts","args":[{"name":"where","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSingleSignOnRecord","args":[{"name":"data","inputType":[{"type":"SingleSignOnRecordCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSingleSignOnRecord","args":[{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":false,"isList":false}},{"name":"updateSingleSignOnRecord","args":[{"name":"data","inputType":[{"type":"SingleSignOnRecordUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSingleSignOnRecord","args":[{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SingleSignOnRecordCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SingleSignOnRecordUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SingleSignOnRecord","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySingleSignOnRecords","args":[{"name":"data","inputType":[{"type":"SingleSignOnRecordUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySingleSignOnRecords","args":[{"name":"where","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSiteSetting","args":[{"name":"data","inputType":[{"type":"SiteSettingCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSiteSetting","args":[{"name":"where","inputType":[{"type":"SiteSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":false,"isList":false}},{"name":"updateSiteSetting","args":[{"name":"data","inputType":[{"type":"SiteSettingUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SiteSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSiteSetting","args":[{"name":"where","inputType":[{"type":"SiteSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SiteSettingCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SiteSettingUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SiteSetting","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySiteSettings","args":[{"name":"data","inputType":[{"type":"SiteSettingUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySiteSettings","args":[{"name":"where","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createSkippedEmailLog","args":[{"name":"data","inputType":[{"type":"SkippedEmailLogCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":true,"isList":false}},{"name":"deleteSkippedEmailLog","args":[{"name":"where","inputType":[{"type":"SkippedEmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"updateSkippedEmailLog","args":[{"name":"data","inputType":[{"type":"SkippedEmailLogUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SkippedEmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":false,"isList":false}},{"name":"upsertSkippedEmailLog","args":[{"name":"where","inputType":[{"type":"SkippedEmailLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"SkippedEmailLogCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"SkippedEmailLogUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"SkippedEmailLog","kind":"object","isRequired":true,"isList":false}},{"name":"updateManySkippedEmailLogs","args":[{"name":"data","inputType":[{"type":"SkippedEmailLogUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManySkippedEmailLogs","args":[{"name":"where","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createStylesheetCache","args":[{"name":"data","inputType":[{"type":"StylesheetCacheCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":true,"isList":false}},{"name":"deleteStylesheetCache","args":[{"name":"where","inputType":[{"type":"StylesheetCacheWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":false,"isList":false}},{"name":"updateStylesheetCache","args":[{"name":"data","inputType":[{"type":"StylesheetCacheUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"StylesheetCacheWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":false,"isList":false}},{"name":"upsertStylesheetCache","args":[{"name":"where","inputType":[{"type":"StylesheetCacheWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"StylesheetCacheCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"StylesheetCacheUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"StylesheetCache","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyStylesheetCaches","args":[{"name":"data","inputType":[{"type":"StylesheetCacheUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyStylesheetCaches","args":[{"name":"where","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTag","args":[{"name":"data","inputType":[{"type":"TagCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTag","args":[{"name":"where","inputType":[{"type":"TagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":false,"isList":false}},{"name":"updateTag","args":[{"name":"data","inputType":[{"type":"TagUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTag","args":[{"name":"where","inputType":[{"type":"TagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TagCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TagUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Tag","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTags","args":[{"name":"data","inputType":[{"type":"TagUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTags","args":[{"name":"where","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTagGroup","args":[{"name":"data","inputType":[{"type":"TagGroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTagGroup","args":[{"name":"where","inputType":[{"type":"TagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"updateTagGroup","args":[{"name":"data","inputType":[{"type":"TagGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTagGroup","args":[{"name":"where","inputType":[{"type":"TagGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TagGroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TagGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroup","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTagGroups","args":[{"name":"data","inputType":[{"type":"TagGroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTagGroups","args":[{"name":"where","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTagGroupMembership","args":[{"name":"data","inputType":[{"type":"TagGroupMembershipCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTagGroupMembership","args":[{"name":"where","inputType":[{"type":"TagGroupMembershipWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":false,"isList":false}},{"name":"updateTagGroupMembership","args":[{"name":"data","inputType":[{"type":"TagGroupMembershipUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupMembershipWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTagGroupMembership","args":[{"name":"where","inputType":[{"type":"TagGroupMembershipWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TagGroupMembershipCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TagGroupMembershipUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupMembership","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTagGroupMemberships","args":[{"name":"data","inputType":[{"type":"TagGroupMembershipUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTagGroupMemberships","args":[{"name":"where","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTagGroupPermission","args":[{"name":"data","inputType":[{"type":"TagGroupPermissionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTagGroupPermission","args":[{"name":"where","inputType":[{"type":"TagGroupPermissionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":false,"isList":false}},{"name":"updateTagGroupPermission","args":[{"name":"data","inputType":[{"type":"TagGroupPermissionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupPermissionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTagGroupPermission","args":[{"name":"where","inputType":[{"type":"TagGroupPermissionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TagGroupPermissionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TagGroupPermissionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagGroupPermission","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTagGroupPermissions","args":[{"name":"data","inputType":[{"type":"TagGroupPermissionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTagGroupPermissions","args":[{"name":"where","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTagSearchDatum","args":[{"name":"data","inputType":[{"type":"TagSearchDatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagSearchDatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTagSearchData","args":[{"name":"data","inputType":[{"type":"TagSearchDatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTagSearchData","args":[{"name":"where","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTagUser","args":[{"name":"data","inputType":[{"type":"TagUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTagUser","args":[{"name":"where","inputType":[{"type":"TagUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateTagUser","args":[{"name":"data","inputType":[{"type":"TagUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTagUser","args":[{"name":"where","inputType":[{"type":"TagUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TagUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TagUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TagUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTagUsers","args":[{"name":"data","inputType":[{"type":"TagUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTagUsers","args":[{"name":"where","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTheme","args":[{"name":"data","inputType":[{"type":"ThemeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTheme","args":[{"name":"where","inputType":[{"type":"ThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":false,"isList":false}},{"name":"updateTheme","args":[{"name":"data","inputType":[{"type":"ThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTheme","args":[{"name":"where","inputType":[{"type":"ThemeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ThemeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ThemeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Theme","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyThemes","args":[{"name":"data","inputType":[{"type":"ThemeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyThemes","args":[{"name":"where","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createThemeField","args":[{"name":"data","inputType":[{"type":"ThemeFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteThemeField","args":[{"name":"where","inputType":[{"type":"ThemeFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":false,"isList":false}},{"name":"updateThemeField","args":[{"name":"data","inputType":[{"type":"ThemeFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertThemeField","args":[{"name":"where","inputType":[{"type":"ThemeFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ThemeFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ThemeFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyThemeFields","args":[{"name":"data","inputType":[{"type":"ThemeFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyThemeFields","args":[{"name":"where","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createThemeSetting","args":[{"name":"data","inputType":[{"type":"ThemeSettingCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":true,"isList":false}},{"name":"deleteThemeSetting","args":[{"name":"where","inputType":[{"type":"ThemeSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":false,"isList":false}},{"name":"updateThemeSetting","args":[{"name":"data","inputType":[{"type":"ThemeSettingUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":false,"isList":false}},{"name":"upsertThemeSetting","args":[{"name":"where","inputType":[{"type":"ThemeSettingWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"ThemeSettingCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"ThemeSettingUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"ThemeSetting","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyThemeSettings","args":[{"name":"data","inputType":[{"type":"ThemeSettingUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyThemeSettings","args":[{"name":"where","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopTopic","args":[{"name":"data","inputType":[{"type":"TopTopicCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopTopic","args":[{"name":"where","inputType":[{"type":"TopTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopTopic","args":[{"name":"data","inputType":[{"type":"TopTopicUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopTopic","args":[{"name":"where","inputType":[{"type":"TopTopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopTopicCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopTopicUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopTopic","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopTopics","args":[{"name":"data","inputType":[{"type":"TopTopicUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopTopics","args":[{"name":"where","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopic","args":[{"name":"data","inputType":[{"type":"TopicCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopic","args":[{"name":"where","inputType":[{"type":"TopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopic","args":[{"name":"data","inputType":[{"type":"TopicUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopic","args":[{"name":"where","inputType":[{"type":"TopicWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Topic","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopics","args":[{"name":"data","inputType":[{"type":"TopicUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopics","args":[{"name":"where","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicAllowedGroup","args":[{"name":"data","inputType":[{"type":"TopicAllowedGroupCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicAllowedGroup","args":[{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicAllowedGroup","args":[{"name":"data","inputType":[{"type":"TopicAllowedGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicAllowedGroup","args":[{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicAllowedGroupCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicAllowedGroupUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedGroup","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicAllowedGroups","args":[{"name":"data","inputType":[{"type":"TopicAllowedGroupUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicAllowedGroups","args":[{"name":"where","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicAllowedUser","args":[{"name":"data","inputType":[{"type":"TopicAllowedUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicAllowedUser","args":[{"name":"where","inputType":[{"type":"TopicAllowedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicAllowedUser","args":[{"name":"data","inputType":[{"type":"TopicAllowedUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicAllowedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicAllowedUser","args":[{"name":"where","inputType":[{"type":"TopicAllowedUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicAllowedUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicAllowedUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicAllowedUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicAllowedUsers","args":[{"name":"data","inputType":[{"type":"TopicAllowedUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicAllowedUsers","args":[{"name":"where","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicCustomField","args":[{"name":"data","inputType":[{"type":"TopicCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicCustomField","args":[{"name":"where","inputType":[{"type":"TopicCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicCustomField","args":[{"name":"data","inputType":[{"type":"TopicCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicCustomField","args":[{"name":"where","inputType":[{"type":"TopicCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicCustomFields","args":[{"name":"data","inputType":[{"type":"TopicCustomFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicCustomFields","args":[{"name":"where","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicEmbed","args":[{"name":"data","inputType":[{"type":"TopicEmbedCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicEmbed","args":[{"name":"where","inputType":[{"type":"TopicEmbedWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicEmbed","args":[{"name":"data","inputType":[{"type":"TopicEmbedUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicEmbedWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicEmbed","args":[{"name":"where","inputType":[{"type":"TopicEmbedWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicEmbedCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicEmbedUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicEmbed","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicEmbeds","args":[{"name":"data","inputType":[{"type":"TopicEmbedUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicEmbeds","args":[{"name":"where","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicInvite","args":[{"name":"data","inputType":[{"type":"TopicInviteCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicInvite","args":[{"name":"where","inputType":[{"type":"TopicInviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicInvite","args":[{"name":"data","inputType":[{"type":"TopicInviteUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicInviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicInvite","args":[{"name":"where","inputType":[{"type":"TopicInviteWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicInviteCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicInviteUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicInvite","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicInvites","args":[{"name":"data","inputType":[{"type":"TopicInviteUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicInvites","args":[{"name":"where","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicLink","args":[{"name":"data","inputType":[{"type":"TopicLinkCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicLink","args":[{"name":"where","inputType":[{"type":"TopicLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicLink","args":[{"name":"data","inputType":[{"type":"TopicLinkUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicLink","args":[{"name":"where","inputType":[{"type":"TopicLinkWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicLinkCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicLinkUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLink","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicLinks","args":[{"name":"data","inputType":[{"type":"TopicLinkUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicLinks","args":[{"name":"where","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicLinkClick","args":[{"name":"data","inputType":[{"type":"TopicLinkClickCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicLinkClick","args":[{"name":"where","inputType":[{"type":"TopicLinkClickWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicLinkClick","args":[{"name":"data","inputType":[{"type":"TopicLinkClickUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicLinkClickWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicLinkClick","args":[{"name":"where","inputType":[{"type":"TopicLinkClickWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicLinkClickCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicLinkClickUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicLinkClick","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicLinkClicks","args":[{"name":"data","inputType":[{"type":"TopicLinkClickUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicLinkClicks","args":[{"name":"where","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicSearchDatum","args":[{"name":"data","inputType":[{"type":"TopicSearchDatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicSearchDatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicSearchData","args":[{"name":"data","inputType":[{"type":"TopicSearchDatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicSearchData","args":[{"name":"where","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicTag","args":[{"name":"data","inputType":[{"type":"TopicTagCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicTag","args":[{"name":"where","inputType":[{"type":"TopicTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicTag","args":[{"name":"data","inputType":[{"type":"TopicTagUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicTag","args":[{"name":"where","inputType":[{"type":"TopicTagWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicTagCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicTagUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTag","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicTags","args":[{"name":"data","inputType":[{"type":"TopicTagUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicTags","args":[{"name":"where","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicTimer","args":[{"name":"data","inputType":[{"type":"TopicTimerCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicTimer","args":[{"name":"where","inputType":[{"type":"TopicTimerWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicTimer","args":[{"name":"data","inputType":[{"type":"TopicTimerUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicTimerWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicTimer","args":[{"name":"where","inputType":[{"type":"TopicTimerWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicTimerCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicTimerUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicTimer","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicTimers","args":[{"name":"data","inputType":[{"type":"TopicTimerUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicTimers","args":[{"name":"where","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTopicUser","args":[{"name":"data","inputType":[{"type":"TopicUserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTopicUser","args":[{"name":"where","inputType":[{"type":"TopicUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":false,"isList":false}},{"name":"updateTopicUser","args":[{"name":"data","inputType":[{"type":"TopicUserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTopicUser","args":[{"name":"where","inputType":[{"type":"TopicUserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TopicUserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TopicUserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TopicUser","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTopicUsers","args":[{"name":"data","inputType":[{"type":"TopicUserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTopicUsers","args":[{"name":"where","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTranslationOverride","args":[{"name":"data","inputType":[{"type":"TranslationOverrideCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTranslationOverride","args":[{"name":"where","inputType":[{"type":"TranslationOverrideWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":false,"isList":false}},{"name":"updateTranslationOverride","args":[{"name":"data","inputType":[{"type":"TranslationOverrideUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TranslationOverrideWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTranslationOverride","args":[{"name":"where","inputType":[{"type":"TranslationOverrideWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TranslationOverrideCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TranslationOverrideUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TranslationOverride","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTranslationOverrides","args":[{"name":"data","inputType":[{"type":"TranslationOverrideUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTranslationOverrides","args":[{"name":"where","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createTwitterUserInfo","args":[{"name":"data","inputType":[{"type":"TwitterUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"deleteTwitterUserInfo","args":[{"name":"where","inputType":[{"type":"TwitterUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"updateTwitterUserInfo","args":[{"name":"data","inputType":[{"type":"TwitterUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TwitterUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":false,"isList":false}},{"name":"upsertTwitterUserInfo","args":[{"name":"where","inputType":[{"type":"TwitterUserInfoWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"TwitterUserInfoCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"TwitterUserInfoUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"TwitterUserInfo","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyTwitterUserInfoes","args":[{"name":"data","inputType":[{"type":"TwitterUserInfoUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyTwitterUserInfoes","args":[{"name":"where","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUnsubscribeKey","args":[{"name":"data","inputType":[{"type":"UnsubscribeKeyCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UnsubscribeKey","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUnsubscribeKeys","args":[{"name":"data","inputType":[{"type":"UnsubscribeKeyUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUnsubscribeKeys","args":[{"name":"where","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUpload","args":[{"name":"data","inputType":[{"type":"UploadCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUpload","args":[{"name":"where","inputType":[{"type":"UploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":false,"isList":false}},{"name":"updateUpload","args":[{"name":"data","inputType":[{"type":"UploadUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUpload","args":[{"name":"where","inputType":[{"type":"UploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UploadCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UploadUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"Upload","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUploads","args":[{"name":"data","inputType":[{"type":"UploadUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUploads","args":[{"name":"where","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUser","args":[{"name":"data","inputType":[{"type":"UserCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUser","args":[{"name":"where","inputType":[{"type":"UserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":false,"isList":false}},{"name":"updateUser","args":[{"name":"data","inputType":[{"type":"UserUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUser","args":[{"name":"where","inputType":[{"type":"UserWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"User","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUsers","args":[{"name":"data","inputType":[{"type":"UserUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUsers","args":[{"name":"where","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserAction","args":[{"name":"data","inputType":[{"type":"UserActionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserAction","args":[{"name":"where","inputType":[{"type":"UserActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserAction","args":[{"name":"data","inputType":[{"type":"UserActionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserAction","args":[{"name":"where","inputType":[{"type":"UserActionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserActionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserActionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAction","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserActions","args":[{"name":"data","inputType":[{"type":"UserActionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserActions","args":[{"name":"where","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserApiKey","args":[{"name":"data","inputType":[{"type":"UserApiKeyCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserApiKey","args":[{"name":"where","inputType":[{"type":"UserApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserApiKey","args":[{"name":"data","inputType":[{"type":"UserApiKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserApiKey","args":[{"name":"where","inputType":[{"type":"UserApiKeyWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserApiKeyCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserApiKeyUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserApiKey","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserApiKeys","args":[{"name":"data","inputType":[{"type":"UserApiKeyUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserApiKeys","args":[{"name":"where","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserArchivedMessage","args":[{"name":"data","inputType":[{"type":"UserArchivedMessageCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserArchivedMessage","args":[{"name":"where","inputType":[{"type":"UserArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserArchivedMessage","args":[{"name":"data","inputType":[{"type":"UserArchivedMessageUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserArchivedMessage","args":[{"name":"where","inputType":[{"type":"UserArchivedMessageWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserArchivedMessageCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserArchivedMessageUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserArchivedMessage","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserArchivedMessages","args":[{"name":"data","inputType":[{"type":"UserArchivedMessageUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserArchivedMessages","args":[{"name":"where","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserAuthToken","args":[{"name":"data","inputType":[{"type":"UserAuthTokenCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserAuthToken","args":[{"name":"where","inputType":[{"type":"UserAuthTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserAuthToken","args":[{"name":"data","inputType":[{"type":"UserAuthTokenUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAuthTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserAuthToken","args":[{"name":"where","inputType":[{"type":"UserAuthTokenWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserAuthTokenCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserAuthTokenUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthToken","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserAuthTokens","args":[{"name":"data","inputType":[{"type":"UserAuthTokenUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserAuthTokens","args":[{"name":"where","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserAuthTokenLog","args":[{"name":"data","inputType":[{"type":"UserAuthTokenLogCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserAuthTokenLog","args":[{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserAuthTokenLog","args":[{"name":"data","inputType":[{"type":"UserAuthTokenLogUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserAuthTokenLog","args":[{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserAuthTokenLogCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserAuthTokenLogUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAuthTokenLog","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserAuthTokenLogs","args":[{"name":"data","inputType":[{"type":"UserAuthTokenLogUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserAuthTokenLogs","args":[{"name":"where","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserAvatar","args":[{"name":"data","inputType":[{"type":"UserAvatarCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserAvatar","args":[{"name":"where","inputType":[{"type":"UserAvatarWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserAvatar","args":[{"name":"data","inputType":[{"type":"UserAvatarUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAvatarWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserAvatar","args":[{"name":"where","inputType":[{"type":"UserAvatarWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserAvatarCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserAvatarUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserAvatar","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserAvatars","args":[{"name":"data","inputType":[{"type":"UserAvatarUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserAvatars","args":[{"name":"where","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserBadge","args":[{"name":"data","inputType":[{"type":"UserBadgeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserBadge","args":[{"name":"where","inputType":[{"type":"UserBadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserBadge","args":[{"name":"data","inputType":[{"type":"UserBadgeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserBadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserBadge","args":[{"name":"where","inputType":[{"type":"UserBadgeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserBadgeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserBadgeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserBadge","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserBadges","args":[{"name":"data","inputType":[{"type":"UserBadgeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserBadges","args":[{"name":"where","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserCustomField","args":[{"name":"data","inputType":[{"type":"UserCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserCustomField","args":[{"name":"where","inputType":[{"type":"UserCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserCustomField","args":[{"name":"data","inputType":[{"type":"UserCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserCustomField","args":[{"name":"where","inputType":[{"type":"UserCustomFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserCustomFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserCustomFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserCustomField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserCustomFields","args":[{"name":"data","inputType":[{"type":"UserCustomFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserCustomFields","args":[{"name":"where","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserEmail","args":[{"name":"data","inputType":[{"type":"UserEmailCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserEmail","args":[{"name":"where","inputType":[{"type":"UserEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserEmail","args":[{"name":"data","inputType":[{"type":"UserEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserEmail","args":[{"name":"where","inputType":[{"type":"UserEmailWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserEmailCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserEmailUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserEmail","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserEmails","args":[{"name":"data","inputType":[{"type":"UserEmailUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserEmails","args":[{"name":"where","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserExport","args":[{"name":"data","inputType":[{"type":"UserExportCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserExport","args":[{"name":"where","inputType":[{"type":"UserExportWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserExport","args":[{"name":"data","inputType":[{"type":"UserExportUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserExportWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserExport","args":[{"name":"where","inputType":[{"type":"UserExportWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserExportCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserExportUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserExport","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserExports","args":[{"name":"data","inputType":[{"type":"UserExportUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserExports","args":[{"name":"where","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserField","args":[{"name":"data","inputType":[{"type":"UserFieldCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserField","args":[{"name":"where","inputType":[{"type":"UserFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserField","args":[{"name":"data","inputType":[{"type":"UserFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserField","args":[{"name":"where","inputType":[{"type":"UserFieldWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserFieldCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserFieldUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserField","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserFields","args":[{"name":"data","inputType":[{"type":"UserFieldUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserFields","args":[{"name":"where","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserFieldOption","args":[{"name":"data","inputType":[{"type":"UserFieldOptionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserFieldOption","args":[{"name":"where","inputType":[{"type":"UserFieldOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserFieldOption","args":[{"name":"data","inputType":[{"type":"UserFieldOptionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserFieldOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserFieldOption","args":[{"name":"where","inputType":[{"type":"UserFieldOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserFieldOptionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserFieldOptionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserFieldOption","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserFieldOptions","args":[{"name":"data","inputType":[{"type":"UserFieldOptionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserFieldOptions","args":[{"name":"where","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserHistory","args":[{"name":"data","inputType":[{"type":"UserHistoryCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserHistory","args":[{"name":"where","inputType":[{"type":"UserHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserHistory","args":[{"name":"data","inputType":[{"type":"UserHistoryUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserHistory","args":[{"name":"where","inputType":[{"type":"UserHistoryWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserHistoryCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserHistoryUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserHistory","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserHistories","args":[{"name":"data","inputType":[{"type":"UserHistoryUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserHistories","args":[{"name":"where","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserOpenId","args":[{"name":"data","inputType":[{"type":"UserOpenIdCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserOpenId","args":[{"name":"where","inputType":[{"type":"UserOpenIdWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserOpenId","args":[{"name":"data","inputType":[{"type":"UserOpenIdUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserOpenIdWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserOpenId","args":[{"name":"where","inputType":[{"type":"UserOpenIdWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserOpenIdCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserOpenIdUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOpenId","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserOpenIds","args":[{"name":"data","inputType":[{"type":"UserOpenIdUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserOpenIds","args":[{"name":"where","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserOption","args":[{"name":"data","inputType":[{"type":"UserOptionCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserOption","args":[{"name":"where","inputType":[{"type":"UserOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserOption","args":[{"name":"data","inputType":[{"type":"UserOptionUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserOption","args":[{"name":"where","inputType":[{"type":"UserOptionWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserOptionCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserOptionUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserOption","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserOptions","args":[{"name":"data","inputType":[{"type":"UserOptionUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserOptions","args":[{"name":"where","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserProfile","args":[{"name":"data","inputType":[{"type":"UserProfileCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfile","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserProfiles","args":[{"name":"data","inputType":[{"type":"UserProfileUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserProfiles","args":[{"name":"where","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserProfileView","args":[{"name":"data","inputType":[{"type":"UserProfileViewCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserProfileView","args":[{"name":"where","inputType":[{"type":"UserProfileViewWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserProfileView","args":[{"name":"data","inputType":[{"type":"UserProfileViewUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserProfileViewWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserProfileView","args":[{"name":"where","inputType":[{"type":"UserProfileViewWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserProfileViewCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserProfileViewUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserProfileView","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserProfileViews","args":[{"name":"data","inputType":[{"type":"UserProfileViewUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserProfileViews","args":[{"name":"where","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserSearchDatum","args":[{"name":"data","inputType":[{"type":"UserSearchDatumCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSearchDatum","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserSearchData","args":[{"name":"data","inputType":[{"type":"UserSearchDatumUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserSearchData","args":[{"name":"where","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserSecondFactor","args":[{"name":"data","inputType":[{"type":"UserSecondFactorCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserSecondFactor","args":[{"name":"where","inputType":[{"type":"UserSecondFactorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserSecondFactor","args":[{"name":"data","inputType":[{"type":"UserSecondFactorUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserSecondFactorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserSecondFactor","args":[{"name":"where","inputType":[{"type":"UserSecondFactorWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserSecondFactorCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserSecondFactorUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserSecondFactor","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserSecondFactors","args":[{"name":"data","inputType":[{"type":"UserSecondFactorUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserSecondFactors","args":[{"name":"where","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserStat","args":[{"name":"data","inputType":[{"type":"UserStatCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserStat","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserStats","args":[{"name":"data","inputType":[{"type":"UserStatUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserStats","args":[{"name":"where","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserUpload","args":[{"name":"data","inputType":[{"type":"UserUploadCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserUpload","args":[{"name":"where","inputType":[{"type":"UserUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserUpload","args":[{"name":"data","inputType":[{"type":"UserUploadUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserUpload","args":[{"name":"where","inputType":[{"type":"UserUploadWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserUploadCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserUploadUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserUpload","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserUploads","args":[{"name":"data","inputType":[{"type":"UserUploadUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserUploads","args":[{"name":"where","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserVisit","args":[{"name":"data","inputType":[{"type":"UserVisitCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserVisit","args":[{"name":"where","inputType":[{"type":"UserVisitWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserVisit","args":[{"name":"data","inputType":[{"type":"UserVisitUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserVisitWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserVisit","args":[{"name":"where","inputType":[{"type":"UserVisitWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserVisitCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserVisitUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserVisit","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserVisits","args":[{"name":"data","inputType":[{"type":"UserVisitUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserVisits","args":[{"name":"where","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createUserWarning","args":[{"name":"data","inputType":[{"type":"UserWarningCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":true,"isList":false}},{"name":"deleteUserWarning","args":[{"name":"where","inputType":[{"type":"UserWarningWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":false,"isList":false}},{"name":"updateUserWarning","args":[{"name":"data","inputType":[{"type":"UserWarningUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserWarningWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":false,"isList":false}},{"name":"upsertUserWarning","args":[{"name":"where","inputType":[{"type":"UserWarningWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"UserWarningCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"UserWarningUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"UserWarning","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyUserWarnings","args":[{"name":"data","inputType":[{"type":"UserWarningUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyUserWarnings","args":[{"name":"where","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createWatchedWord","args":[{"name":"data","inputType":[{"type":"WatchedWordCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":true,"isList":false}},{"name":"deleteWatchedWord","args":[{"name":"where","inputType":[{"type":"WatchedWordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":false,"isList":false}},{"name":"updateWatchedWord","args":[{"name":"data","inputType":[{"type":"WatchedWordUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WatchedWordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":false,"isList":false}},{"name":"upsertWatchedWord","args":[{"name":"where","inputType":[{"type":"WatchedWordWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"WatchedWordCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"WatchedWordUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WatchedWord","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyWatchedWords","args":[{"name":"data","inputType":[{"type":"WatchedWordUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyWatchedWords","args":[{"name":"where","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createWebCrawlerRequest","args":[{"name":"data","inputType":[{"type":"WebCrawlerRequestCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":true,"isList":false}},{"name":"deleteWebCrawlerRequest","args":[{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":false,"isList":false}},{"name":"updateWebCrawlerRequest","args":[{"name":"data","inputType":[{"type":"WebCrawlerRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":false,"isList":false}},{"name":"upsertWebCrawlerRequest","args":[{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"WebCrawlerRequestCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"WebCrawlerRequestUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebCrawlerRequest","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyWebCrawlerRequests","args":[{"name":"data","inputType":[{"type":"WebCrawlerRequestUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyWebCrawlerRequests","args":[{"name":"where","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createWebHook","args":[{"name":"data","inputType":[{"type":"WebHookCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":true,"isList":false}},{"name":"deleteWebHook","args":[{"name":"where","inputType":[{"type":"WebHookWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":false,"isList":false}},{"name":"updateWebHook","args":[{"name":"data","inputType":[{"type":"WebHookUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":false,"isList":false}},{"name":"upsertWebHook","args":[{"name":"where","inputType":[{"type":"WebHookWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"WebHookCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"WebHookUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHook","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyWebHooks","args":[{"name":"data","inputType":[{"type":"WebHookUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyWebHooks","args":[{"name":"where","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createWebHookEvent","args":[{"name":"data","inputType":[{"type":"WebHookEventCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":true,"isList":false}},{"name":"deleteWebHookEvent","args":[{"name":"where","inputType":[{"type":"WebHookEventWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":false,"isList":false}},{"name":"updateWebHookEvent","args":[{"name":"data","inputType":[{"type":"WebHookEventUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookEventWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":false,"isList":false}},{"name":"upsertWebHookEvent","args":[{"name":"where","inputType":[{"type":"WebHookEventWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"WebHookEventCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"WebHookEventUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEvent","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyWebHookEvents","args":[{"name":"data","inputType":[{"type":"WebHookEventUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyWebHookEvents","args":[{"name":"where","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"createWebHookEventType","args":[{"name":"data","inputType":[{"type":"WebHookEventTypeCreateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":true,"isList":false}},{"name":"deleteWebHookEventType","args":[{"name":"where","inputType":[{"type":"WebHookEventTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":false,"isList":false}},{"name":"updateWebHookEventType","args":[{"name":"data","inputType":[{"type":"WebHookEventTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookEventTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":false,"isList":false}},{"name":"upsertWebHookEventType","args":[{"name":"where","inputType":[{"type":"WebHookEventTypeWhereUniqueInput","kind":"object","isRequired":true,"isList":false}]},{"name":"create","inputType":[{"type":"WebHookEventTypeCreateInput","kind":"object","isRequired":true,"isList":false}]},{"name":"update","inputType":[{"type":"WebHookEventTypeUpdateInput","kind":"object","isRequired":true,"isList":false}]}],"outputType":{"type":"WebHookEventType","kind":"object","isRequired":true,"isList":false}},{"name":"updateManyWebHookEventTypes","args":[{"name":"data","inputType":[{"type":"WebHookEventTypeUpdateManyMutationInput","kind":"object","isRequired":true,"isList":false}]},{"name":"where","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}},{"name":"deleteManyWebHookEventTypes","args":[{"name":"where","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":false}]}],"outputType":{"type":"BatchPayload","kind":"object","isRequired":true,"isList":false}}]}],"inputTypes":[{"name":"ApiKeyWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ApiKeyWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApplicationRequestWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"count","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"date","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"reqType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ApplicationRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ApplicationRequestWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ArInternalMetadatumWhereInput","fields":[{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ArInternalMetadatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"BadgeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allowTitle","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"autoRevoke","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"badgeGroupingId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"badgeTypeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"description","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"enabled","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"grantCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"icon","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"image","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"listable","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"longDescription","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"multipleGrant","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"query","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"showPosts","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"system","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"targetPosts","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"trigger","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"BadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"BadgeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeGroupingWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"description","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"position","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"BadgeGroupingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"BadgeGroupingWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeTypeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"BadgeTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"BadgeTypeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allowBadges","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allTopicsWiki","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"autoCloseBasedOnLastPost","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"autoCloseHours","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"color","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"containsMessages","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"defaultTopPeriod","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"defaultView","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailIn","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailInAllowStrangers","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"latestPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"latestTopicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mailinglistMirror","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"minimumRequiredTags","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"nameLower","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"navigateToFirstPostAfterRead","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"numFeaturedTopics","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentCategoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"position","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postsDay","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsMonth","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsWeek","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsYear","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"readRestricted","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"showSubcategoryList","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"slug","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sortAscending","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sortOrder","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subcategoryListStyle","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"suppressFromLatest","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"textColor","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicFeaturedLinkAllowed","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsDay","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsMonth","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsWeek","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsYear","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicTemplate","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadedBackgroundId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadedLogoId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailIn","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryCustomFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryCustomFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryFeaturedTopicWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"rank","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryFeaturedTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryFeaturedTopicWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryGroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"permissionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryGroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategorySearchDatumWhereInput","fields":[{"name":"category_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategorySearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryTagWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryTagWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagGroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryTagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryTagGroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagStatWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryTagStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryTagStatWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CategoryUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CategoryUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ChildThemeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"childThemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentThemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ChildThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ChildThemeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"baseSchemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"viaWizard","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ColorSchemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ColorSchemeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeColorWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"colorSchemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"hex","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ColorSchemeColorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ColorSchemeColorWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CustomEmojiWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"CustomEmojiWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"CustomEmojiWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DeveloperWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"DeveloperWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"DeveloperWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DirectoryItemWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"daysVisited","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likesGiven","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likesReceived","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"periodType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postsRead","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicsEntered","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"DirectoryItemWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"DirectoryItemWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"data","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"draftKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"revisions","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sequence","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"DraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"DraftWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftSequenceWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"draftKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sequence","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"DraftSequenceWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"DraftSequenceWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailChangeRequestWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"changeState","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"newEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"newEmailTokenId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"oldEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"oldEmailTokenId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"EmailChangeRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"EmailChangeRequestWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailLogWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"bounced","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"bounceKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"messageId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"toAddress","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"EmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"EmailLogWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailTokenWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"confirmed","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"expired","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"token","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"EmailTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"EmailTokenWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"token","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmbeddableHostWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"className","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"host","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pathWhitelist","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"EmbeddableHostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"EmbeddableHostWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"FacebookUserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"aboutMe","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"avatarUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"facebookUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"firstName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gender","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"link","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"location","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"username","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"website","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"FacebookUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"FacebookUserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"facebookUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GithubUserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"githubUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GithubUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GithubUserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"githubUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GoogleUserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gender","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"googleUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"link","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"picture","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"profileLink","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GoogleUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GoogleUserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"googleUserId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allowMembershipRequests","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"automatic","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"automaticMembershipEmailDomains","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"automaticMembershipRetroactive","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCooked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioRaw","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"defaultNotificationLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"flairBgColor","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flairColor","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flairUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fullName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"grantTrustLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hasMessages","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"incomingEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"membershipRequestTemplate","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mentionableLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"messageableLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"primaryGroup","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"publicAdmission","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"publicExit","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"title","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"visibilityLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupArchivedMessageWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupArchivedMessageWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupCustomFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupCustomFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupHistoryWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"action","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"newValue","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"prevValue","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupHistoryWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupMentionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupMentionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupMentionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"owner","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"GroupUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"GroupUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingDomainWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"https","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"port","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"IncomingDomainWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"IncomingDomainWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingEmailWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"ccAddresses","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"error","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fromAddress","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isAutoGenerated","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isBounce","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"messageId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"raw","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rejectionMessage","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"toAddresses","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"IncomingEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"IncomingEmailWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingLinkWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"currentUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingRefererId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"IncomingLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"IncomingLinkWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingRefererWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"incomingDomainId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"path","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"IncomingRefererWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"IncomingRefererWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InstagramUserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"instagramUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"InstagramUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"InstagramUserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InviteWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"customMessage","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"invalidatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"invitedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"inviteKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"moderator","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"redeemedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"InviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"InviteWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InvitedGroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inviteId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"InvitedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"InvitedGroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"JavascriptCachWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"content","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"digest","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeFieldId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"JavascriptCachWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"JavascriptCachWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MessageBusWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"context","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"data","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"MessageBusWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"MessageBusWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MutedUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mutedUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"MutedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"MutedUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"NotificationWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"data","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notificationType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postActionId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"read","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"NotificationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"NotificationWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"Oauth2UserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"provider","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uid","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"Oauth2UserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"Oauth2UserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OnceoffLogWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"jobName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"OnceoffLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"OnceoffLogWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OptimizedImageWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"extension","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"filesize","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"height","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sha1","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"width","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"OptimizedImageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"OptimizedImageWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PermalinkWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PermalinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PermalinkWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PluginStoreRowWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pluginName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"typeName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PluginStoreRowWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PluginStoreRowWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actionCode","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"avgTime","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bakedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bakedVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bookmarkCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"cooked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"cookMethod","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"editReason","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"hiddenAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hiddenReasonId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"illegalCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"imageUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inappropriateCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"incomingLinkCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastEditorId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastVersionAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likeCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likeScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lockedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notifyModeratorsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notifyUserCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"offTopicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"percentRank","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"publicVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quoteCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"raw","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"rawEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reads","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"replyCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"replyQuoted","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"replyToPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyToUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"score","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"selfEdits","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sortOrder","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"spamCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userDeleted","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"viaEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"wiki","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"wordCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"agreedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"agreedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"deferredAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deferredById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disagreedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disagreedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postActionTypeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"relatedPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"staffTookAction","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"targetsTopic","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostActionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionTypeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"icon","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isFlag","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"nameKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"position","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostActionTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostActionTypeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostCustomFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostCustomFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostDetailWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"extra","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostDetailWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostReplyKeyWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"replyKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostReplyKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostReplyKeyWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostRevisionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"modifications","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"number","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostRevisionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostRevisionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostSearchDatumWhereInput","fields":[{"name":"post_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostStatWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"composerOpenDurationMsecs","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"draftsSaved","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"typingDurationMsecs","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostStatWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostUploadWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PostUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PostUploadWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PushSubscriptionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"data","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"PushSubscriptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"PushSubscriptionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QueuedPostWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"approvedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"queue","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"raw","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"rejectedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rejectedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"state","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"QueuedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"QueuedPostWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QuotedPostWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quotedPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"QuotedPostWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"QuotedPostWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"RemoteThemeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"aboutUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"branch","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"commitsBehind","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastErrorText","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"licenseUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"localVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"privateKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteUpdatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"remoteVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"RemoteThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"RemoteThemeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchedulerStatWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"durationMs","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"error","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hostname","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"liveSlotsFinish","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"liveSlotsStart","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pid","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"startedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"success","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SchedulerStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SchedulerStatWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationWhereInput","fields":[{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SchemaMigrationWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SchemaMigrationWhereUniqueInput","fields":[{"name":"version","inputType":[{"type":"ID","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationDetailWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"direction","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"duration","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gitVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hostname","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"railsVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SchemaMigrationDetailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SchemaMigrationDetailWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedEmailWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ScreenedEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ScreenedEmailWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedIpAddressWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ScreenedIpAddressWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ScreenedIpAddressWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedUrlWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"domain","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ScreenedUrlWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ScreenedUrlWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SearchLogWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"searchResultId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"searchResultType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"searchType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"term","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SearchLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SearchLogWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SharedDraftWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SharedDraftWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SharedDraftWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SingleSignOnRecordWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"externalAvatarUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalCardBackgroundUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalEmail","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"externalName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalProfileBackgroundUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalUsername","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPayload","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SingleSignOnRecordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SingleSignOnRecordWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SiteSettingWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dataType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SiteSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SiteSettingWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SkippedEmailLogWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"customReason","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reasonType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"toAddress","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"SkippedEmailLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"SkippedEmailLogWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"StylesheetCacheWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"content","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"digest","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"sourceMap","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"target","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"StylesheetCacheWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"StylesheetCacheWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pmTopicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"onePerTopic","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentTagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagGroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupMembershipWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagGroupMembershipWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagGroupMembershipWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupPermissionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"permissionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagGroupPermissionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagGroupPermissionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagSearchDatumWhereInput","fields":[{"name":"tag_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TagUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TagUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"colorSchemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"compilerVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"component","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"remoteThemeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userSelectable","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ThemeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ThemeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"compilerVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"error","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"targetId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"typeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"valueBaked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ThemeFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ThemeFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeSettingWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dataType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"ThemeSettingWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"ThemeSettingWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopTopicWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dailyOpLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dailyPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dailyScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyViewsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"monthlyLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"monthlyOpLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"monthlyPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"monthlyScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyViewsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quarterlyLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quarterlyOpLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quarterlyPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"quarterlyScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyViewsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"weeklyOpLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"weeklyPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"weeklyScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyViewsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"yearlyLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"yearlyOpLikesCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"yearlyPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"yearlyScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyViewsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopTopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopTopicWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"archetype","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"archived","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"avgTime","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bumpedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"closed","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"excerpt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fancyTitle","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredLink","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser1Id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser2Id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser3Id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser4Id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hasSummary","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"highestPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"highestStaffPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"imageUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingLinkCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastPostedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPostUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likeCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"moderatorPostsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notifyModeratorsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"participantCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"percentRank","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"FloatFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pinnedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pinnedGlobally","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pinnedUntil","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"replyCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"score","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"NullableFloatFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"slug","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"spamCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"subtype","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"views","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"visible","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"wordCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedGroupWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicAllowedGroupWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicAllowedGroupWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicAllowedUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicAllowedUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicCustomFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicCustomFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicEmbedWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"contentSha1","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"embedUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicEmbedWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicEmbedWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"embedUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicInviteWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"inviteId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicInviteWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicInviteWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"clicks","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"crawledAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"domain","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"extension","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"internal","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"linkPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"linkTopicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quote","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"reflection","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicLinkWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicLinkWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkClickWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicLinkId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicLinkClickWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicLinkClickWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicSearchDatumWhereInput","fields":[{"name":"topic_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicTagWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicTagWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicTagWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicTimerWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"basedOnLastPost","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"executeAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"publicType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"statusType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicTimerWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicTimerWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicUserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"bookmarked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"clearedPinnedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstVisitedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"highestSeenPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastEmailedPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastReadPostNumber","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastVisitedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"liked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notificationsChangedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationsReasonId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"posted","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"totalMsecsViewed","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TopicUserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TopicUserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TranslationOverrideWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"compiledJs","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"translationKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TranslationOverrideWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TranslationOverrideWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TwitterUserInfoWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"twitterUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"TwitterUserInfoWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"TwitterUserInfoWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"twitterUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UnsubscribeKeyWhereInput","fields":[{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"unsubscribeKeyType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UnsubscribeKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UploadWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"extension","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"filesize","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"height","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"origin","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"originalFilename","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"retainHours","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sha1","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"thumbnailHeight","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"thumbnailWidth","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"width","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UploadWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"active","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"admin","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"approved","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"approvedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dateOfBirth","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstSeenAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flagLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"groupLockedTrustLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastEmailedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPostedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastSeenAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"manualLockedTrustLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"moderator","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"passwordHash","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"previousVisitAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"primaryGroupId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"salt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"seenNotificationId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"silencedTill","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"staged","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"suspendedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"suspendedTill","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"trustLevel","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadedAvatarId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"username","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"usernameLower","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"views","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"usernameLower","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserActionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"queuedPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetPostId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetTopicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserActionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserActionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserApiKeyWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"applicationName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"clientId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastUsedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"pushUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"revokedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"scopes","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserApiKeyWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserApiKeyWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clientId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserArchivedMessageWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserArchivedMessageWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserArchivedMessageWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"authToken","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"authTokenSeen","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"prevAuthToken","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"rotatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"seenAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserAuthTokenWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserAuthTokenWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevAuthToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenLogWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"action","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"authToken","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"path","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAuthTokenId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserAuthTokenLogWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserAuthTokenLogWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAvatarWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"customUploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gravatarUploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastGravatarDownloadAttempt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserAvatarWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserAvatarWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserBadgeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"badgeId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"grantedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"grantedById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"notificationId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"seq","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserBadgeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserBadgeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserCustomFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserCustomFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserCustomFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserEmailWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"primary","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserEmailWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserEmailWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserExportWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fileName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserExportWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserExportWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"editable","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"externalName","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fieldType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"position","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"required","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"showOnProfile","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"showOnUserCard","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserFieldWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserFieldWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldOptionWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userFieldId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"value","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserFieldOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserFieldOptionWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserHistoryWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"action","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"adminOnly","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"context","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"customType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"details","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"ipAddress","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newValue","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"previousValue","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserHistoryWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserHistoryWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOpenIdWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"active","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"email","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"url","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserOpenIdWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserOpenIdWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOptionWhereInput","fields":[{"name":"user_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"allowPrivateMessages","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"automaticallyUnpinTopics","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"autoTrackTopicsAfterMsecs","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"digestAfterMinutes","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disableJumpReply","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"dynamicFavicon","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailAlways","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailDigests","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailDirect","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailInReplyTo","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailPreviousReplies","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"emailPrivateMessages","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"enableQuoting","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"externalLinksInNewTab","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"hideProfileAndPresence","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"homepageId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"includeTl0InDigests","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastRedirectedToTopAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likeNotificationFrequency","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"mailingListMode","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"mailingListModeFrequency","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"newTopicDurationMinutes","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevelWhenReplying","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeIds","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"themeKeySeq","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserOptionWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserOptionWhereUniqueInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserProfileWhereInput","fields":[{"name":"user_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"badgeGrantedTitle","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCooked","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCookedVersion","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioRaw","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"cardBackground","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dismissedBannerKey","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"location","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"profileBackground","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"views","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"website","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserProfileWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserProfileViewWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userProfileId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"viewedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserProfileViewWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserProfileViewWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserSearchDatumWhereInput","fields":[{"name":"user_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"locale","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserSearchDatumWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserSecondFactorWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"data","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"enabled","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"lastUsed","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"method","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserSecondFactorWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserSecondFactorWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserStatWhereInput","fields":[{"name":"user_id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"bounceScore","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"type":"FloatFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"daysVisited","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"firstPostCreatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likesGiven","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"likesReceived","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"newSince","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"postsReadCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"readFaq","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"resetBounceScoreAfter","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"timeRead","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicReplyCount","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicsEntered","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserStatWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserUploadWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserUploadWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserUploadWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserVisitWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"mobile","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"NullableBooleanFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsRead","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"timeRead","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"visitedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserVisitWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserVisitWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserWarningWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdById","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"UserWarningWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"UserWarningWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WatchedWordWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"action","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"word","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"WatchedWordWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"WatchedWordWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebCrawlerRequestWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"count","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"date","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"DateTimeFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"WebCrawlerRequestWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"WebCrawlerRequestWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"active","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"contentType","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastDeliveryStatus","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"payloadUrl","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"secret","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"status","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"verifyCertificate","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"wildcardWebHook","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"type":"BooleanFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"WebHookWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"WebHookWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"duration","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"headers","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"payload","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"responseBody","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"responseHeaders","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"NullableStringFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"status","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"NullableIntFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"type":"NullableDateTimeFilter","isList":false,"isRequired":false,"kind":"object"},{"type":"null","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"webHookId","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"WebHookEventWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"WebHookEventWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventTypeWhereInput","fields":[{"name":"id","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"type":"IntFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"name","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"type":"StringFilter","isList":false,"isRequired":false,"kind":"object"}],"isRelationFilter":false},{"name":"AND","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"OR","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true},{"name":"NOT","inputType":[{"type":"WebHookEventTypeWhereInput","kind":"object","isRequired":false,"isList":true}],"isRelationFilter":true}],"isWhereType":true,"atLeastOne":true},{"name":"WebHookEventTypeWhereUniqueInput","fields":[{"name":"id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApiKeyCreateInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApiKeyUpdateInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApiKeyUpdateManyMutationInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApplicationRequestCreateInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"reqType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ApplicationRequestUpdateInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reqType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ApplicationRequestUpdateManyMutationInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reqType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ArInternalMetadatumCreateInput","fields":[{"name":"key","inputType":[{"type":"ID","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ArInternalMetadatumUpdateManyMutationInput","fields":[{"name":"key","inputType":[{"type":"ID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeCreateInput","fields":[{"name":"allowTitle","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"autoRevoke","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"badgeGroupingId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"badgeTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"grantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"image","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"listable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"longDescription","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"multipleGrant","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"query","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"system","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"targetPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trigger","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeUpdateInput","fields":[{"name":"allowTitle","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoRevoke","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"badgeGroupingId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"badgeTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"image","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"listable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"longDescription","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"multipleGrant","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"query","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"system","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trigger","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeUpdateManyMutationInput","fields":[{"name":"allowTitle","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoRevoke","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"badgeGroupingId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"badgeTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"image","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"listable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"longDescription","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"multipleGrant","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"query","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"system","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetPosts","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trigger","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeGroupingCreateInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"BadgeGroupingUpdateInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeGroupingUpdateManyMutationInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeTypeCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"BadgeTypeUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"BadgeTypeUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryCreateInput","fields":[{"name":"allowBadges","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"allTopicsWiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"autoCloseBasedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoCloseHours","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"color","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"containsMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultTopPeriod","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultView","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailIn","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailInAllowStrangers","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailinglistMirror","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"minimumRequiredTags","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"nameLower","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"navigateToFirstPostAfterRead","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"numFeaturedTopics","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentCategoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"readRestricted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"showSubcategoryList","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sortAscending","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subcategoryListStyle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suppressFromLatest","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"textColor","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicFeaturedLinkAllowed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedBackgroundId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedLogoId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryUpdateInput","fields":[{"name":"allowBadges","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"allTopicsWiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoCloseBasedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoCloseHours","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"color","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"containsMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultTopPeriod","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultView","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailIn","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailInAllowStrangers","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailinglistMirror","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"minimumRequiredTags","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"nameLower","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"navigateToFirstPostAfterRead","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"numFeaturedTopics","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentCategoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"readRestricted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showSubcategoryList","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortAscending","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subcategoryListStyle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suppressFromLatest","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"textColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicFeaturedLinkAllowed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedBackgroundId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedLogoId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryUpdateManyMutationInput","fields":[{"name":"allowBadges","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"allTopicsWiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoCloseBasedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoCloseHours","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"color","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"containsMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultTopPeriod","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultView","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailIn","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailInAllowStrangers","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"latestTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailinglistMirror","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"minimumRequiredTags","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"nameLower","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"navigateToFirstPostAfterRead","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"numFeaturedTopics","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentCategoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"readRestricted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showSubcategoryList","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortAscending","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subcategoryListStyle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suppressFromLatest","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"textColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicFeaturedLinkAllowed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsDay","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsMonth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsWeek","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsYear","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedBackgroundId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedLogoId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryCustomFieldCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryCustomFieldUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryCustomFieldUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryFeaturedTopicCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"rank","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryFeaturedTopicUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rank","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryFeaturedTopicUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rank","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryGroupCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryGroupUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryGroupUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategorySearchDatumCreateInput","fields":[{"name":"category_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategorySearchDatumUpdateManyMutationInput","fields":[{"name":"category_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryTagUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagGroupCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryTagGroupUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagGroupUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagStatCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryTagStatUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryTagStatUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryUserCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CategoryUserUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CategoryUserUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ChildThemeCreateInput","fields":[{"name":"childThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ChildThemeUpdateInput","fields":[{"name":"childThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ChildThemeUpdateManyMutationInput","fields":[{"name":"childThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeCreateInput","fields":[{"name":"baseSchemeId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"viaWizard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ColorSchemeUpdateInput","fields":[{"name":"baseSchemeId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viaWizard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeUpdateManyMutationInput","fields":[{"name":"baseSchemeId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viaWizard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeColorCreateInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"hex","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ColorSchemeColorUpdateInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hex","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ColorSchemeColorUpdateManyMutationInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hex","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CustomEmojiCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"CustomEmojiUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"CustomEmojiUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DeveloperCreateInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"DeveloperUpdateInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DeveloperUpdateManyMutationInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DirectoryItemCreateInput","fields":[{"name":"daysVisited","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likesGiven","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likesReceived","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"periodType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicsEntered","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"DirectoryItemUpdateInput","fields":[{"name":"daysVisited","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesGiven","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesReceived","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"periodType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsEntered","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DirectoryItemUpdateManyMutationInput","fields":[{"name":"daysVisited","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesGiven","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesReceived","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"periodType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsEntered","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftCreateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"revisions","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"DraftUpdateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"revisions","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftUpdateManyMutationInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"revisions","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftSequenceCreateInput","fields":[{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"DraftSequenceUpdateInput","fields":[{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"DraftSequenceUpdateManyMutationInput","fields":[{"name":"draftKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sequence","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailChangeRequestCreateInput","fields":[{"name":"changeState","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"newEmail","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"newEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"oldEmail","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"oldEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"EmailChangeRequestUpdateInput","fields":[{"name":"changeState","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"oldEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"oldEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailChangeRequestUpdateManyMutationInput","fields":[{"name":"changeState","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"oldEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"oldEmailTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailLogCreateInput","fields":[{"name":"bounced","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"bounceKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailLogUpdateInput","fields":[{"name":"bounced","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bounceKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailLogUpdateManyMutationInput","fields":[{"name":"bounced","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bounceKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailTokenCreateInput","fields":[{"name":"confirmed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"expired","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"token","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"EmailTokenUpdateInput","fields":[{"name":"confirmed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"expired","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"token","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmailTokenUpdateManyMutationInput","fields":[{"name":"confirmed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"expired","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"token","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmbeddableHostCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"className","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"host","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pathWhitelist","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmbeddableHostUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"className","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"host","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pathWhitelist","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"EmbeddableHostUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"className","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"host","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pathWhitelist","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"FacebookUserInfoCreateInput","fields":[{"name":"aboutMe","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"facebookUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"location","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"website","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"FacebookUserInfoUpdateInput","fields":[{"name":"aboutMe","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"facebookUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"location","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"website","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"FacebookUserInfoUpdateManyMutationInput","fields":[{"name":"aboutMe","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"facebookUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"location","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"website","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GithubUserInfoCreateInput","fields":[{"name":"githubUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"GithubUserInfoUpdateInput","fields":[{"name":"githubUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GithubUserInfoUpdateManyMutationInput","fields":[{"name":"githubUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GoogleUserInfoCreateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"googleUserId","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"picture","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"profileLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"GoogleUserInfoUpdateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"googleUserId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"picture","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"profileLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GoogleUserInfoUpdateManyMutationInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gender","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"googleUserId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"link","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"picture","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"profileLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupCreateInput","fields":[{"name":"allowMembershipRequests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"automatic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"automaticMembershipEmailDomains","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticMembershipRetroactive","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioRaw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultNotificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"flairBgColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fullName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"incomingEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"membershipRequestTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mentionableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"primaryGroup","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"publicAdmission","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"publicExit","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"visibilityLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"GroupUpdateInput","fields":[{"name":"allowMembershipRequests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automatic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticMembershipEmailDomains","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticMembershipRetroactive","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioRaw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultNotificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairBgColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fullName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"membershipRequestTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mentionableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primaryGroup","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicAdmission","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicExit","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visibilityLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupUpdateManyMutationInput","fields":[{"name":"allowMembershipRequests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automatic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticMembershipEmailDomains","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticMembershipRetroactive","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioRaw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"defaultNotificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairBgColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairColor","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flairUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fullName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"membershipRequestTemplate","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mentionableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageableLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primaryGroup","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicAdmission","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicExit","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visibilityLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupArchivedMessageCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"GroupArchivedMessageUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupArchivedMessageUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupCustomFieldCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupCustomFieldUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupCustomFieldUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupHistoryCreateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupHistoryUpdateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupHistoryUpdateManyMutationInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupMentionCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupMentionUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupMentionUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupUserCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"owner","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"GroupUserUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"owner","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"GroupUserUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"owner","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingDomainCreateInput","fields":[{"name":"https","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"port","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"IncomingDomainUpdateInput","fields":[{"name":"https","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"port","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingDomainUpdateManyMutationInput","fields":[{"name":"https","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"port","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingEmailCreateInput","fields":[{"name":"ccAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fromAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isAutoGenerated","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isBounce","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectionMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingEmailUpdateInput","fields":[{"name":"ccAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fromAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isAutoGenerated","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isBounce","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectionMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingEmailUpdateManyMutationInput","fields":[{"name":"ccAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fromAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isAutoGenerated","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isBounce","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"messageId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectionMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddresses","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingLinkCreateInput","fields":[{"name":"currentUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingRefererId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingLinkUpdateInput","fields":[{"name":"currentUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingRefererId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingLinkUpdateManyMutationInput","fields":[{"name":"currentUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingRefererId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingRefererCreateInput","fields":[{"name":"incomingDomainId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"IncomingRefererUpdateInput","fields":[{"name":"incomingDomainId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IncomingRefererUpdateManyMutationInput","fields":[{"name":"incomingDomainId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InstagramUserInfoCreateInput","fields":[{"name":"instagramUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InstagramUserInfoUpdateInput","fields":[{"name":"instagramUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InstagramUserInfoUpdateManyMutationInput","fields":[{"name":"instagramUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InviteCreateInput","fields":[{"name":"customMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invalidatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invitedById","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"inviteKey","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"redeemedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InviteUpdateInput","fields":[{"name":"customMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invalidatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invitedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"redeemedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InviteUpdateManyMutationInput","fields":[{"name":"customMessage","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invalidatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"invitedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"redeemedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InvitedGroupCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InvitedGroupUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"InvitedGroupUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"JavascriptCachCreateInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"JavascriptCachUpdateInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"JavascriptCachUpdateManyMutationInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MessageBusCreateInput","fields":[{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MessageBusUpdateInput","fields":[{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MessageBusUpdateManyMutationInput","fields":[{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MutedUserCreateInput","fields":[{"name":"mutedUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"MutedUserUpdateInput","fields":[{"name":"mutedUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"MutedUserUpdateManyMutationInput","fields":[{"name":"mutedUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"NotificationCreateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notificationType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postActionId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"read","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"NotificationUpdateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postActionId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"read","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"NotificationUpdateManyMutationInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postActionId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"read","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"Oauth2UserInfoCreateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"provider","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uid","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"Oauth2UserInfoUpdateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"provider","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uid","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"Oauth2UserInfoUpdateManyMutationInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"provider","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uid","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OnceoffLogCreateInput","fields":[{"name":"jobName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OnceoffLogUpdateInput","fields":[{"name":"jobName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OnceoffLogUpdateManyMutationInput","fields":[{"name":"jobName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OptimizedImageCreateInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"OptimizedImageUpdateInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"OptimizedImageUpdateManyMutationInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PermalinkCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PermalinkUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PermalinkUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PluginStoreRowCreateInput","fields":[{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pluginName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"typeName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PluginStoreRowUpdateInput","fields":[{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pluginName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typeName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PluginStoreRowUpdateManyMutationInput","fields":[{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pluginName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typeName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostCreateInput","fields":[{"name":"actionCode","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bookmarkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"cooked","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"cookMethod","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"editReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"hiddenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hiddenReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"illegalCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inappropriateCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastEditorId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVersionAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likeScore","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lockedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notifyUserCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"offTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"publicVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quoteCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"rawEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reads","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"replyQuoted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"replyToPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyToUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"selfEdits","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userDeleted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"viaEmail","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"wiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostUpdateInput","fields":[{"name":"actionCode","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bookmarkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cookMethod","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"editReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hiddenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hiddenReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"illegalCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inappropriateCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEditorId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVersionAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeScore","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lockedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyUserCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"offTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quoteCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reads","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyQuoted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyToPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyToUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"selfEdits","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userDeleted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viaEmail","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostUpdateManyMutationInput","fields":[{"name":"actionCode","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bakedVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bookmarkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cookMethod","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"editReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hiddenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hiddenReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"illegalCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"inappropriateCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEditorId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVersionAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeScore","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lockedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyUserCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"offTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quoteCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reads","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyQuoted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyToPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyToUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"selfEdits","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sortOrder","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userDeleted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viaEmail","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wiki","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionCreateInput","fields":[{"name":"agreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"agreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postActionTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"relatedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staffTookAction","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"targetsTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PostActionUpdateInput","fields":[{"name":"agreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"agreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postActionTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"relatedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staffTookAction","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetsTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionUpdateManyMutationInput","fields":[{"name":"agreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"agreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deferredById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disagreedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postActionTypeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"relatedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staffTookAction","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetsTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionTypeCreateInput","fields":[{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isFlag","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"nameKey","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PostActionTypeUpdateInput","fields":[{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isFlag","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"nameKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostActionTypeUpdateManyMutationInput","fields":[{"name":"icon","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"isFlag","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"nameKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostCustomFieldCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostCustomFieldUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostCustomFieldUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostDetailCreateInput","fields":[{"name":"extra","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostDetailUpdateInput","fields":[{"name":"extra","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostDetailUpdateManyMutationInput","fields":[{"name":"extra","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostReplyKeyCreateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"replyKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PostReplyKeyUpdateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostReplyKeyUpdateManyMutationInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyKey","inputType":[{"type":"UUID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostRevisionCreateInput","fields":[{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"modifications","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"number","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostRevisionUpdateInput","fields":[{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"modifications","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"number","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostRevisionUpdateManyMutationInput","fields":[{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"modifications","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"number","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostSearchDatumCreateInput","fields":[{"name":"post_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostSearchDatumUpdateManyMutationInput","fields":[{"name":"post_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostStatCreateInput","fields":[{"name":"composerOpenDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"draftsSaved","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typingDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostStatUpdateInput","fields":[{"name":"composerOpenDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"draftsSaved","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typingDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostStatUpdateManyMutationInput","fields":[{"name":"composerOpenDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"draftsSaved","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typingDurationMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostUploadCreateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PostUploadUpdateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PostUploadUpdateManyMutationInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PushSubscriptionCreateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"PushSubscriptionUpdateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"PushSubscriptionUpdateManyMutationInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QueuedPostCreateInput","fields":[{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"queue","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"rejectedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"state","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"QueuedPostUpdateInput","fields":[{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"queue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"state","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QueuedPostUpdateManyMutationInput","fields":[{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"queue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"raw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rejectedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"state","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QuotedPostCreateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quotedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"QuotedPostUpdateInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quotedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"QuotedPostUpdateManyMutationInput","fields":[{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quotedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"RemoteThemeCreateInput","fields":[{"name":"aboutUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"branch","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"commitsBehind","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastErrorText","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"licenseUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"localVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"privateKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUpdatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUrl","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"remoteVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"RemoteThemeUpdateInput","fields":[{"name":"aboutUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"branch","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"commitsBehind","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastErrorText","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"licenseUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"localVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"privateKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUpdatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"RemoteThemeUpdateManyMutationInput","fields":[{"name":"aboutUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"branch","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"commitsBehind","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastErrorText","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"licenseUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"localVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"privateKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUpdatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchedulerStatCreateInput","fields":[{"name":"durationMs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"liveSlotsFinish","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liveSlotsStart","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pid","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"startedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"success","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchedulerStatUpdateInput","fields":[{"name":"durationMs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liveSlotsFinish","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liveSlotsStart","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pid","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"startedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"success","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchedulerStatUpdateManyMutationInput","fields":[{"name":"durationMs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liveSlotsFinish","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liveSlotsStart","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pid","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"startedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"success","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationCreateInput","fields":[{"name":"version","inputType":[{"type":"ID","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"SchemaMigrationUpdateInput","fields":[{"name":"version","inputType":[{"type":"ID","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationUpdateManyMutationInput","fields":[{"name":"version","inputType":[{"type":"ID","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationDetailCreateInput","fields":[{"name":"direction","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gitVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"railsVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"SchemaMigrationDetailUpdateInput","fields":[{"name":"direction","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gitVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"railsVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SchemaMigrationDetailUpdateManyMutationInput","fields":[{"name":"direction","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gitVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hostname","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"railsVersion","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedEmailCreateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ScreenedEmailUpdateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedEmailUpdateManyMutationInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedIpAddressCreateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ScreenedIpAddressUpdateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedIpAddressUpdateManyMutationInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedUrlCreateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ScreenedUrlUpdateInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ScreenedUrlUpdateManyMutationInput","fields":[{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastMatchAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"matchCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SearchLogCreateInput","fields":[{"name":"searchResultId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchResultType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"term","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SearchLogUpdateInput","fields":[{"name":"searchResultId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchResultType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"term","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SearchLogUpdateManyMutationInput","fields":[{"name":"searchResultId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchResultType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"searchType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"term","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SharedDraftCreateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"SharedDraftUpdateInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SharedDraftUpdateManyMutationInput","fields":[{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SingleSignOnRecordCreateInput","fields":[{"name":"externalAvatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalCardBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalId","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalProfileBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUsername","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPayload","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"SingleSignOnRecordUpdateInput","fields":[{"name":"externalAvatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalCardBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalProfileBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUsername","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPayload","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SingleSignOnRecordUpdateManyMutationInput","fields":[{"name":"externalAvatarUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalCardBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalEmail","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalProfileBackgroundUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalUsername","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPayload","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SiteSettingCreateInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SiteSettingUpdateInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SiteSettingUpdateManyMutationInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SkippedEmailLogCreateInput","fields":[{"name":"customReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reasonType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SkippedEmailLogUpdateInput","fields":[{"name":"customReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reasonType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"SkippedEmailLogUpdateManyMutationInput","fields":[{"name":"customReason","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reasonType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"toAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"StylesheetCacheCreateInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"sourceMap","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"target","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"StylesheetCacheUpdateInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sourceMap","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"target","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"StylesheetCacheUpdateManyMutationInput","fields":[{"name":"content","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digest","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sourceMap","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"target","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pmTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TagUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pmTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pmTopicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"onePerTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentTagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"onePerTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentTagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"onePerTopic","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"parentTagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupMembershipCreateInput","fields":[{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TagGroupMembershipUpdateInput","fields":[{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupMembershipUpdateManyMutationInput","fields":[{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupPermissionCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TagGroupPermissionUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagGroupPermissionUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"permissionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagSearchDatumCreateInput","fields":[{"name":"tag_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagSearchDatumUpdateManyMutationInput","fields":[{"name":"tag_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagUserCreateInput","fields":[{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TagUserUpdateInput","fields":[{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TagUserUpdateManyMutationInput","fields":[{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeCreateInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"component","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"remoteThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userSelectable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"ThemeUpdateInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"component","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userSelectable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeUpdateManyMutationInput","fields":[{"name":"colorSchemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"component","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hidden","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"remoteThemeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userSelectable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeFieldCreateInput","fields":[{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"targetId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"typeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"valueBaked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeFieldUpdateInput","fields":[{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"valueBaked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeFieldUpdateManyMutationInput","fields":[{"name":"compilerVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"error","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"typeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"valueBaked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeSettingCreateInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeSettingUpdateInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"ThemeSettingUpdateManyMutationInput","fields":[{"name":"dataType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopTopicCreateInput","fields":[{"name":"allScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"dailyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"dailyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"dailyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"monthlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"monthlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"monthlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"monthlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quarterlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quarterlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quarterlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"quarterlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"weeklyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"weeklyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"weeklyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"yearlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"yearlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"yearlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"yearlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopTopicUpdateInput","fields":[{"name":"allScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopTopicUpdateManyMutationInput","fields":[{"name":"allScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dailyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"monthlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quarterlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"weeklyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyOpLikesCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"yearlyViewsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicCreateInput","fields":[{"name":"archetype","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"archived","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bumpedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"closed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"excerpt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fancyTitle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser1Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser2Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser3Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser4Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasSummary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"highestPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"highestStaffPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"moderatorPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"participantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedGlobally","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pinnedUntil","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"subtype","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"visible","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicUpdateInput","fields":[{"name":"archetype","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"archived","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bumpedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"closed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"excerpt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fancyTitle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser1Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser2Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser3Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser4Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasSummary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestStaffPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderatorPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"participantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedGlobally","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedUntil","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subtype","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visible","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicUpdateManyMutationInput","fields":[{"name":"archetype","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"archived","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"avgTime","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bumpedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"closed","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"excerpt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fancyTitle","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredLink","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser1Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser2Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser3Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"featuredUser4Id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hasSummary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestStaffPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"imageUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"incomingLinkCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderatorPostsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notifyModeratorsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"participantCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"percentRank","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedGlobally","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pinnedUntil","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"replyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"score","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"slug","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"spamCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subtype","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visible","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wordCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedGroupCreateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicAllowedGroupUpdateInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedGroupUpdateManyMutationInput","fields":[{"name":"groupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedUserCreateInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicAllowedUserUpdateInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicAllowedUserUpdateManyMutationInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicCustomFieldCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicCustomFieldUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicCustomFieldUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicEmbedCreateInput","fields":[{"name":"contentSha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"embedUrl","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicEmbedUpdateInput","fields":[{"name":"contentSha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"embedUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicEmbedUpdateManyMutationInput","fields":[{"name":"contentSha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"embedUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicInviteCreateInput","fields":[{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicInviteUpdateInput","fields":[{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicInviteUpdateManyMutationInput","fields":[{"name":"inviteId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkCreateInput","fields":[{"name":"clicks","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"crawledAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"internal","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"linkPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"linkTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quote","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"reflection","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicLinkUpdateInput","fields":[{"name":"clicks","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"crawledAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"internal","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"linkPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"linkTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quote","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reflection","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkUpdateManyMutationInput","fields":[{"name":"clicks","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"crawledAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"domain","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"internal","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"linkPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"linkTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"quote","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"reflection","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkClickCreateInput","fields":[{"name":"topicLinkId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkClickUpdateInput","fields":[{"name":"topicLinkId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicLinkClickUpdateManyMutationInput","fields":[{"name":"topicLinkId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicSearchDatumCreateInput","fields":[{"name":"topic_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicSearchDatumUpdateManyMutationInput","fields":[{"name":"topic_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicTagCreateInput","fields":[{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicTagUpdateInput","fields":[{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicTagUpdateManyMutationInput","fields":[{"name":"tagId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicTimerCreateInput","fields":[{"name":"basedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"executeAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"publicType","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"statusType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicTimerUpdateInput","fields":[{"name":"basedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"executeAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicType","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"statusType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicTimerUpdateManyMutationInput","fields":[{"name":"basedOnLastPost","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"deletedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"executeAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"publicType","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"statusType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicUserCreateInput","fields":[{"name":"bookmarked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clearedPinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestSeenPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastReadPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notificationsChangedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationsReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"posted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"totalMsecsViewed","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TopicUserUpdateInput","fields":[{"name":"bookmarked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clearedPinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestSeenPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastReadPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationsChangedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationsReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"posted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"totalMsecsViewed","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TopicUserUpdateManyMutationInput","fields":[{"name":"bookmarked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clearedPinnedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"highestSeenPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastReadPostNumber","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastVisitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"liked","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationsChangedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationsReasonId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"posted","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"totalMsecsViewed","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TranslationOverrideCreateInput","fields":[{"name":"compiledJs","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"translationKey","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TranslationOverrideUpdateInput","fields":[{"name":"compiledJs","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"translationKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TranslationOverrideUpdateManyMutationInput","fields":[{"name":"compiledJs","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"translationKey","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TwitterUserInfoCreateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"twitterUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"TwitterUserInfoUpdateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"twitterUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"TwitterUserInfoUpdateManyMutationInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"screenName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"twitterUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UnsubscribeKeyCreateInput","fields":[{"name":"key","inputType":[{"type":"ID","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"unsubscribeKeyType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UnsubscribeKeyUpdateManyMutationInput","fields":[{"name":"key","inputType":[{"type":"ID","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"unsubscribeKeyType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UploadCreateInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"origin","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"originalFilename","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"retainHours","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailHeight","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailWidth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UploadUpdateInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"origin","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"originalFilename","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"retainHours","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailHeight","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailWidth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UploadUpdateManyMutationInput","fields":[{"name":"extension","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"filesize","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"height","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"origin","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"originalFilename","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"retainHours","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"sha1","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailHeight","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"thumbnailWidth","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"width","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserCreateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"admin","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"approved","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dateOfBirth","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flagLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"groupLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"manualLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"passwordHash","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousVisitAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primaryGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"salt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seenNotificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"silencedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staged","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"suspendedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suspendedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadedAvatarId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"usernameLower","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserUpdateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"admin","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approved","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dateOfBirth","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flagLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"manualLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"passwordHash","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousVisitAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primaryGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"salt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seenNotificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"silencedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staged","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suspendedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suspendedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedAvatarId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"usernameLower","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserUpdateManyMutationInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"admin","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approved","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"approvedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dateOfBirth","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"flagLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"groupLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastEmailedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastPostedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastSeenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"manualLockedTrustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"moderator","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"passwordHash","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousVisitAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primaryGroupId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"salt","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seenNotificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"silencedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"staged","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suspendedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"suspendedTill","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"title","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"trustLevel","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadedAvatarId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"username","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"usernameLower","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserActionCreateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"queuedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserActionUpdateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"queuedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserActionUpdateManyMutationInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"actionType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"queuedPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetPostId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetTopicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserApiKeyCreateInput","fields":[{"name":"applicationName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"clientId","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastUsedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"pushUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"revokedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"scopes","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserApiKeyUpdateInput","fields":[{"name":"applicationName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clientId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastUsedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pushUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"revokedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"scopes","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserApiKeyUpdateManyMutationInput","fields":[{"name":"applicationName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"clientId","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"key","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastUsedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"pushUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"revokedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"scopes","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserArchivedMessageCreateInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserArchivedMessageUpdateInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserArchivedMessageUpdateManyMutationInput","fields":[{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenCreateInput","fields":[{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"authTokenSeen","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"prevAuthToken","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"rotatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"seenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserAuthTokenUpdateInput","fields":[{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"authTokenSeen","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevAuthToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rotatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenUpdateManyMutationInput","fields":[{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"authTokenSeen","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"prevAuthToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rotatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seenAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenLogCreateInput","fields":[{"name":"action","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAuthTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenLogUpdateInput","fields":[{"name":"action","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAuthTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAuthTokenLogUpdateManyMutationInput","fields":[{"name":"action","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"authToken","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"path","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAuthTokenId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAvatarCreateInput","fields":[{"name":"customUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gravatarUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastGravatarDownloadAttempt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserAvatarUpdateInput","fields":[{"name":"customUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gravatarUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastGravatarDownloadAttempt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserAvatarUpdateManyMutationInput","fields":[{"name":"customUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"gravatarUploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastGravatarDownloadAttempt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserBadgeCreateInput","fields":[{"name":"badgeId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"grantedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"grantedById","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"notificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seq","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserBadgeUpdateInput","fields":[{"name":"badgeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seq","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserBadgeUpdateManyMutationInput","fields":[{"name":"badgeId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"grantedById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"seq","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserCustomFieldCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserCustomFieldUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserCustomFieldUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserEmailCreateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"primary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserEmailUpdateInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserEmailUpdateManyMutationInput","fields":[{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"primary","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserExportCreateInput","fields":[{"name":"fileName","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserExportUpdateInput","fields":[{"name":"fileName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserExportUpdateManyMutationInput","fields":[{"name":"fileName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldCreateInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"editable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fieldType","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"required","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"showOnProfile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"showOnUserCard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserFieldUpdateInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"editable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fieldType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"required","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showOnProfile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showOnUserCard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldUpdateManyMutationInput","fields":[{"name":"description","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"editable","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalName","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"fieldType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"position","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"required","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showOnProfile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"showOnUserCard","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldOptionCreateInput","fields":[{"name":"userFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserFieldOptionUpdateInput","fields":[{"name":"userFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserFieldOptionUpdateManyMutationInput","fields":[{"name":"userFieldId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"value","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserHistoryCreateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"adminOnly","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"customType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"details","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"ipAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserHistoryUpdateInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"adminOnly","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"customType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"details","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"ipAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserHistoryUpdateManyMutationInput","fields":[{"name":"actingUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"adminOnly","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"categoryId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"context","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"customType","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"details","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"ipAddress","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"previousValue","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"subject","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"targetUserId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOpenIdCreateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserOpenIdUpdateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOpenIdUpdateManyMutationInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"email","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"url","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOptionCreateInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"allowPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"automaticallyUnpinTopics","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"autoTrackTopicsAfterMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digestAfterMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disableJumpReply","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"dynamicFavicon","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"emailAlways","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"emailDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailDirect","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"emailInReplyTo","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"emailPreviousReplies","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"emailPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"enableQuoting","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"externalLinksInNewTab","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"hideProfileAndPresence","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"homepageId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"includeTl0InDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastRedirectedToTopAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeNotificationFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"mailingListMode","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"mailingListModeFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"newTopicDurationMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevelWhenReplying","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeIds","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"themeKeySeq","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserOptionUpdateInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"allowPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticallyUnpinTopics","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoTrackTopicsAfterMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digestAfterMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disableJumpReply","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dynamicFavicon","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailAlways","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailDirect","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailInReplyTo","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailPreviousReplies","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enableQuoting","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalLinksInNewTab","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hideProfileAndPresence","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"homepageId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"includeTl0InDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastRedirectedToTopAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeNotificationFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailingListMode","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailingListModeFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newTopicDurationMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevelWhenReplying","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeIds","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeKeySeq","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserOptionUpdateManyMutationInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"allowPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"automaticallyUnpinTopics","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"autoTrackTopicsAfterMsecs","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"digestAfterMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"disableJumpReply","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dynamicFavicon","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailAlways","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailDirect","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailInReplyTo","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailPreviousReplies","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"emailPrivateMessages","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enableQuoting","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"externalLinksInNewTab","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"hideProfileAndPresence","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"homepageId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"includeTl0InDigests","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastRedirectedToTopAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likeNotificationFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailingListMode","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"mailingListModeFrequency","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newTopicDurationMinutes","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"notificationLevelWhenReplying","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeIds","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"themeKeySeq","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserProfileCreateInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"badgeGrantedTitle","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCookedVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioRaw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cardBackground","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dismissedBannerKey","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"location","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"profileBackground","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"website","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserProfileUpdateManyMutationInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"badgeGrantedTitle","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCooked","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioCookedVersion","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bioRaw","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"cardBackground","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"dismissedBannerKey","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"location","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"profileBackground","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"views","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"website","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserProfileViewCreateInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userProfileId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"viewedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserProfileViewUpdateInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userProfileId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viewedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserProfileViewUpdateManyMutationInput","fields":[{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userProfileId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"viewedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserSearchDatumCreateInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserSearchDatumUpdateManyMutationInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"locale","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"rawData","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"version","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserSecondFactorCreateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastUsed","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"method","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserSecondFactorUpdateInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastUsed","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"method","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserSecondFactorUpdateManyMutationInput","fields":[{"name":"data","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"enabled","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastUsed","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"method","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserStatCreateInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"bounceScore","inputType":[{"type":"Float","kind":"scalar","isRequired":true,"isList":false}]},{"name":"daysVisited","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"firstPostCreatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesGiven","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"likesReceived","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"newSince","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"postsReadCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"readFaq","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"resetBounceScoreAfter","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"timeRead","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicReplyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicsEntered","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserStatUpdateManyMutationInput","fields":[{"name":"user_id","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"bounceScore","inputType":[{"type":"Float","kind":"scalar","isRequired":false,"isList":false}]},{"name":"daysVisited","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"firstPostCreatedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesGiven","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"likesReceived","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"newSince","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsReadCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"readFaq","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"resetBounceScoreAfter","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"timeRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicReplyCount","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicsEntered","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserUploadCreateInput","fields":[{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserUploadUpdateInput","fields":[{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserUploadUpdateManyMutationInput","fields":[{"name":"uploadId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserVisitCreateInput","fields":[{"name":"mobile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"timeRead","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"visitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserVisitUpdateInput","fields":[{"name":"mobile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"timeRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserVisitUpdateManyMutationInput","fields":[{"name":"mobile","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"postsRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"timeRead","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"visitedAt","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserWarningCreateInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"UserWarningUpdateInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"UserWarningUpdateManyMutationInput","fields":[{"name":"createdById","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"topicId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WatchedWordCreateInput","fields":[{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"word","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"WatchedWordUpdateInput","fields":[{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"word","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WatchedWordUpdateManyMutationInput","fields":[{"name":"action","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"word","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebCrawlerRequestCreateInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":true,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"WebCrawlerRequestUpdateInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebCrawlerRequestUpdateManyMutationInput","fields":[{"name":"count","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"date","inputType":[{"type":"DateTime","kind":"scalar","isRequired":false,"isList":false}]},{"name":"userAgent","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookCreateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"contentType","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"lastDeliveryStatus","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"payloadUrl","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]},{"name":"secret","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]},{"name":"verifyCertificate","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]},{"name":"wildcardWebHook","inputType":[{"type":"Boolean","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"WebHookUpdateInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"contentType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastDeliveryStatus","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"payloadUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"secret","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"verifyCertificate","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wildcardWebHook","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookUpdateManyMutationInput","fields":[{"name":"active","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"contentType","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"lastDeliveryStatus","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"payloadUrl","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"secret","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"verifyCertificate","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]},{"name":"wildcardWebHook","inputType":[{"type":"Boolean","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventCreateInput","fields":[{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"headers","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"payload","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseBody","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseHeaders","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"webHookId","inputType":[{"type":"Int","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"WebHookEventUpdateInput","fields":[{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"headers","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"payload","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseBody","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseHeaders","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"webHookId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventUpdateManyMutationInput","fields":[{"name":"duration","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"headers","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"payload","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseBody","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"responseHeaders","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]},{"name":"status","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]},{"name":"webHookId","inputType":[{"type":"Int","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventTypeCreateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":true,"isList":false}]}]},{"name":"WebHookEventTypeUpdateInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"WebHookEventTypeUpdateManyMutationInput","fields":[{"name":"name","inputType":[{"type":"String","kind":"scalar","isRequired":false,"isList":false}]}]},{"name":"IntFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"isList":false,"isRequired":false,"kind":"scalar","type":"IntFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]}],"atLeastOne":true},{"name":"DateTimeFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTimeFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]}],"atLeastOne":true},{"name":"NullableIntFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"},{"isList":false,"isRequired":false,"kind":"scalar","type":"NullableIntFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Int"}]}],"atLeastOne":true},{"name":"BooleanFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"isList":false,"isRequired":false,"kind":"scalar","type":"BooleanFilter"}]}],"atLeastOne":true},{"name":"StringFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"isList":false,"isRequired":false,"kind":"scalar","type":"StringFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"contains","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"startsWith","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"endsWith","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]}],"atLeastOne":true},{"name":"NullableStringFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"},{"isList":false,"isRequired":false,"kind":"scalar","type":"NullableStringFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"contains","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"startsWith","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]},{"name":"endsWith","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"String"}]}],"atLeastOne":true},{"name":"NullableBooleanFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Boolean"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"},{"isList":false,"isRequired":false,"kind":"scalar","type":"NullableBooleanFilter"}]}],"atLeastOne":true},{"name":"NullableFloatFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"},{"isList":false,"isRequired":false,"kind":"scalar","type":"NullableFloatFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]}],"atLeastOne":true},{"name":"NullableDateTimeFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"},{"isList":false,"isRequired":false,"kind":"scalar","type":"null"},{"isList":false,"isRequired":false,"kind":"scalar","type":"NullableDateTimeFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"DateTime"}]}],"atLeastOne":true},{"name":"FloatFilter","fields":[{"name":"equals","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"not","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"},{"isList":false,"isRequired":false,"kind":"scalar","type":"FloatFilter"}]},{"name":"in","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"notIn","inputType":[{"isList":true,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"lt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"lte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"gt","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]},{"name":"gte","inputType":[{"isList":false,"isRequired":false,"kind":"scalar","type":"Float"}]}],"atLeastOne":true},{"name":"ApiKeyOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ApplicationRequestOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"count","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"date","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reqType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ArInternalMetadatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"BadgeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allowTitle","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"autoRevoke","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"badgeGroupingId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"badgeTypeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"enabled","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"grantCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"icon","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"image","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"listable","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"longDescription","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"multipleGrant","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"query","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"showPosts","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"system","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetPosts","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"trigger","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"BadgeGroupingOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"position","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"BadgeTypeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allowBadges","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allTopicsWiki","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"autoCloseBasedOnLastPost","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"autoCloseHours","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"color","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"containsMessages","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"defaultTopPeriod","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"defaultView","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailIn","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailInAllowStrangers","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"latestPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"latestTopicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mailinglistMirror","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"minimumRequiredTags","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"nameLower","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"navigateToFirstPostAfterRead","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"numFeaturedTopics","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentCategoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"position","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsDay","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsMonth","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsWeek","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsYear","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"readRestricted","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"showSubcategoryList","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"slug","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sortAscending","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sortOrder","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subcategoryListStyle","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"suppressFromLatest","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"textColor","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicFeaturedLinkAllowed","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsDay","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsMonth","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsWeek","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsYear","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicTemplate","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadedBackgroundId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadedLogoId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryCustomFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryFeaturedTopicOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rank","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryGroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"permissionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategorySearchDatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"category_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryTagOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryTagGroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryTagStatOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CategoryUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ChildThemeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"childThemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentThemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ColorSchemeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"baseSchemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"viaWizard","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ColorSchemeColorOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"colorSchemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hex","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"CustomEmojiOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"DeveloperOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"DirectoryItemOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"daysVisited","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likesGiven","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likesReceived","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"periodType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsRead","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsEntered","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"DraftOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"data","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"draftKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"revisions","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sequence","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"DraftSequenceOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"draftKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sequence","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"EmailChangeRequestOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"changeState","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newEmailTokenId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"oldEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"oldEmailTokenId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"EmailLogOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bounced","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bounceKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"messageId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"toAddress","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"EmailTokenOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"confirmed","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"expired","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"token","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"EmbeddableHostOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"className","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"host","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pathWhitelist","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"FacebookUserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"aboutMe","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"avatarUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"facebookUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gender","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"link","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"location","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"username","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"website","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GithubUserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"githubUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GoogleUserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gender","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"googleUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"link","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"picture","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"profileLink","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allowMembershipRequests","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"automatic","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"automaticMembershipEmailDomains","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"automaticMembershipRetroactive","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCooked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioRaw","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"defaultNotificationLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flairBgColor","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flairColor","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flairUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fullName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"grantTrustLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hasMessages","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"membershipRequestTemplate","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mentionableLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"messageableLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"primaryGroup","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"publicAdmission","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"publicExit","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"visibilityLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupArchivedMessageOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupCustomFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupHistoryOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"action","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newValue","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"prevValue","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupMentionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"GroupUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"owner","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"IncomingDomainOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"https","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"port","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"IncomingEmailOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"ccAddresses","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"error","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fromAddress","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isAutoGenerated","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isBounce","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"messageId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"raw","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rejectionMessage","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"toAddresses","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"IncomingLinkOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"currentUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingRefererId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"IncomingRefererOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingDomainId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"path","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"InstagramUserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"instagramUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"InviteOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"customMessage","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"invalidatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"invitedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inviteKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"moderator","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"redeemedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"InvitedGroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inviteId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"JavascriptCachOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"content","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"digest","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeFieldId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"MessageBusOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"context","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"data","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"MutedUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mutedUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"NotificationOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"data","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postActionId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"read","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"Oauth2UserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"provider","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uid","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"OnceoffLogOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"jobName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"OptimizedImageOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"extension","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"filesize","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"height","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sha1","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"width","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PermalinkOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PluginStoreRowOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pluginName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"typeName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionCode","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"avgTime","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bakedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bakedVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bookmarkCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"cooked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"cookMethod","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"editReason","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hiddenAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hiddenReasonId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"illegalCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"imageUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inappropriateCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingLinkCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastEditorId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastVersionAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likeCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likeScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lockedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notifyModeratorsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notifyUserCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"offTopicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"percentRank","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"publicVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quoteCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"raw","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reads","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyQuoted","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyToPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyToUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"score","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"selfEdits","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sortOrder","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"spamCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userDeleted","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"viaEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"wiki","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"wordCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostActionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"agreedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"agreedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deferredAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deferredById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disagreedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disagreedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postActionTypeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"relatedPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"staffTookAction","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetsTopic","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostActionTypeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"icon","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"isFlag","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"nameKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"position","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostCustomFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostDetailOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"extra","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostReplyKeyOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostRevisionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"modifications","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"number","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostSearchDatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"post_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostStatOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"composerOpenDurationMsecs","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"draftsSaved","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"typingDurationMsecs","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PostUploadOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"PushSubscriptionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"data","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"QueuedPostOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"queue","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"raw","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rejectedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rejectedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"state","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"QuotedPostOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quotedPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"RemoteThemeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"aboutUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"branch","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"commitsBehind","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastErrorText","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"licenseUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"localVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"privateKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteUpdatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SchedulerStatOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"durationMs","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"error","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hostname","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"liveSlotsFinish","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"liveSlotsStart","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pid","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"startedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"success","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SchemaMigrationOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SchemaMigrationDetailOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"direction","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"duration","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gitVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hostname","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"railsVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ScreenedEmailOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ScreenedIpAddressOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ScreenedUrlOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"domain","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastMatchAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"matchCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SearchLogOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"searchResultId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"searchResultType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"searchType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"term","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SharedDraftOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SingleSignOnRecordOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalAvatarUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalCardBackgroundUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalEmail","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalProfileBackgroundUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalUsername","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPayload","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SiteSettingOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dataType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"SkippedEmailLogOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"customReason","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reasonType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"toAddress","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"StylesheetCacheOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"content","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"digest","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sourceMap","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"target","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pmTopicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagGroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"onePerTopic","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"parentTagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagGroupMembershipOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagGroupPermissionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"permissionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagGroupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagSearchDatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"tag_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TagUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ThemeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"colorSchemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"compilerVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"component","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hidden","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"remoteThemeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userSelectable","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ThemeFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"compilerVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"error","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"typeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"valueBaked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"ThemeSettingOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dataType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopTopicOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyOpLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dailyViewsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyOpLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"monthlyViewsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyOpLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quarterlyViewsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyOpLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"weeklyViewsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyOpLikesCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"yearlyViewsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"archetype","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"archived","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"avgTime","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bumpedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"closed","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"excerpt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fancyTitle","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredLink","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser1Id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser2Id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser3Id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"featuredUser4Id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hasSummary","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"highestPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"highestStaffPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"imageUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"incomingLinkCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPostedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPostUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likeCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"moderatorPostsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notifyModeratorsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"participantCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"percentRank","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pinnedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pinnedGlobally","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pinnedUntil","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"replyCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"score","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"slug","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"spamCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subtype","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"views","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"visible","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"wordCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicAllowedGroupOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicAllowedUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicCustomFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicEmbedOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"contentSha1","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"embedUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicInviteOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"inviteId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicLinkOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"clicks","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"crawledAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"domain","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"extension","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"internal","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"linkPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"linkTopicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"quote","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"reflection","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicLinkClickOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicLinkId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicSearchDatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"topic_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicTagOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"tagId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicTimerOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"basedOnLastPost","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"deletedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"executeAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"publicType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"statusType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TopicUserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bookmarked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"clearedPinnedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstVisitedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"highestSeenPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastEmailedPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastReadPostNumber","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastVisitedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"liked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationsChangedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationsReasonId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"posted","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"totalMsecsViewed","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TranslationOverrideOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"compiledJs","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"translationKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"TwitterUserInfoOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"screenName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"twitterUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UnsubscribeKeyOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"unsubscribeKeyType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UploadOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"extension","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"filesize","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"height","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"origin","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"originalFilename","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"retainHours","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"sha1","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"thumbnailHeight","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"thumbnailWidth","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"width","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"active","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"admin","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approved","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"approvedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dateOfBirth","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstSeenAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"flagLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"groupLockedTrustLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastEmailedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastPostedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastSeenAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"manualLockedTrustLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"moderator","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"passwordHash","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"previousVisitAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"primaryGroupId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"salt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"seenNotificationId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"silencedTill","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"staged","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"suspendedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"suspendedTill","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"title","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"trustLevel","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadedAvatarId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"username","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"usernameLower","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"views","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserActionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actionType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"queuedPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetPostId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetTopicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserApiKeyOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"applicationName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"clientId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"key","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastUsedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"pushUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"revokedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"scopes","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserArchivedMessageOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserAuthTokenOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"authToken","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"authTokenSeen","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"prevAuthToken","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rotatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"seenAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserAuthTokenLogOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"action","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"authToken","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"path","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAuthTokenId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserAvatarOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"customUploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"gravatarUploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastGravatarDownloadAttempt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserBadgeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"badgeId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"grantedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"grantedById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"seq","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserCustomFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserEmailOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"primary","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserExportOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fileName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserFieldOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"description","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"editable","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalName","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"fieldType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"position","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"required","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"showOnProfile","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"showOnUserCard","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserFieldOptionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userFieldId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"value","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserHistoryOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"actingUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"action","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"adminOnly","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"categoryId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"context","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"customType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"details","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"ipAddress","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newValue","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"previousValue","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"subject","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"targetUserId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserOpenIdOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"active","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"email","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"url","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserOptionOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"user_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"allowPrivateMessages","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"automaticallyUnpinTopics","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"autoTrackTopicsAfterMsecs","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"digestAfterMinutes","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"disableJumpReply","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dynamicFavicon","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailAlways","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailDigests","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailDirect","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailInReplyTo","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailPreviousReplies","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"emailPrivateMessages","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"enableQuoting","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"externalLinksInNewTab","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"hideProfileAndPresence","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"homepageId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"includeTl0InDigests","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastRedirectedToTopAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likeNotificationFrequency","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mailingListMode","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mailingListModeFrequency","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newTopicDurationMinutes","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"notificationLevelWhenReplying","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeIds","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"themeKeySeq","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserProfileOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"user_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"badgeGrantedTitle","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCooked","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioCookedVersion","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bioRaw","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"cardBackground","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"dismissedBannerKey","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"location","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"profileBackground","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"views","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"website","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserProfileViewOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userProfileId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"viewedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserSearchDatumOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"user_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"locale","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"rawData","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"version","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserSecondFactorOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"data","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"enabled","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastUsed","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"method","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserStatOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"user_id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"bounceScore","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"daysVisited","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"firstPostCreatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likesGiven","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"likesReceived","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"newSince","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsReadCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"readFaq","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"resetBounceScoreAfter","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"timeRead","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicReplyCount","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicsEntered","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserUploadOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"uploadId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserVisitOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"mobile","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"postsRead","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"timeRead","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"visitedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"UserWarningOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdById","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"topicId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"WatchedWordOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"action","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"word","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"WebCrawlerRequestOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"count","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"date","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"userAgent","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"WebHookOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"active","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"contentType","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"lastDeliveryStatus","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"payloadUrl","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"secret","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"status","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"verifyCertificate","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"wildcardWebHook","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"WebHookEventOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"createdAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"duration","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"headers","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"payload","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"responseBody","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"responseHeaders","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"status","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"updatedAt","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"webHookId","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]},{"name":"WebHookEventTypeOrderByInput","atLeastOne":true,"atMostOne":true,"isOrderType":true,"fields":[{"name":"id","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false},{"name":"name","inputType":[{"type":"OrderByArg","isList":false,"isRequired":false,"kind":"scalar"}],"isRelationFilter":false}]}]}}
